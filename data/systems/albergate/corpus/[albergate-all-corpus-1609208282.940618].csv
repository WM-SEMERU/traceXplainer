~ids~filenames~text~type~bpe8k~bpe32k~bpe128k~conv
0~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-PRE-03.txt~F-PRE-03.txt~"
Requisito numero: 
F-PRE-03
Tipo:
Funzionale
 
Requisito:
Gestione delle camere bloccate.
Descrizione:
Se al momento della prenotazione una stanza viene bloccata, tale stanza 
rimarrà in quello stato per un certo periodo di tempo fissato (vedi F-GES-04) 
dalla gestione dell'albergo. Trascorso tale periodo verrà inviato un messaggio 
che faccia comprendere che la stanza è bloccata da troppo tempo in modo che 
ci si possa informare se il ritardo è dovuto a un contrattempo del cliente 
oppure se egli non intende più soggiornare nell'albergo. Nel primo caso si 
provvederà a rinnovare il bloccaggio della stanza, mentre nel secondo a 
cancellare la prenotazione. Una volta arrivata la caparra del cliente deve 
essere possibile passare la stanza da bloccata ad assegnata.
Input richiesto:
Situazione delle stanze.
Output desiderato:
Situazione aggiornata delle stanze.
Criterio di 
accettazione:
Trascorso il numero di giorni fissati dall'albergatore a partire dal giorno della 
prenotazione il sistema dovrà garantire che:
  una stanza bloccata sia passata a stato di assegnata;
  venga visualizzato un messaggio che avvisi della situazione di ritardo 
di pagamento della caparra.
Aspettative collegate:
Lalbergatore si aspetta di poter tenere sotto controllo la situazione delle 
stanze bloccate in modo tale che una camera non rimanga troppo a lungo in 
tale stato rischiando di far perdere altri potenziali clienti allalbergo.
Requisiti collegati:
F-PRE-02, F-GES-04.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena Comprensione
Software
Versione: 2.0

Data: 30/03/1998

Compilato da: Danzi Francesca  

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-0', '3', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'gest', 'ion', 'e', '▁del', 'le', '▁cam', 'ere', '▁bl', 'oc', 'c', 'ate', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'se', '▁al', '▁moment', 'o', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁un', 'a', '▁stan', 'za', '▁vi', 'ene', '▁bl', 'oc', 'c', 'ata', ',', '▁t', 'ale', '▁stan', 'za', '▁', '\n', 'rim', 'ar', 'r', 'à', '▁in', '▁qu', 'ello', '▁stat', 'o', '▁per', '▁un', '▁cert', 'o', '▁period', 'o', '▁di', '▁tem', 'po', '▁f', 'iss', 'ato', '▁(', 'ved', 'i', '▁f', '-', 'ges', '-0', '4)', '▁', '\n', 'd', 'all', 'a', '▁g', 'est', 'ion', 'e', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '.', '▁tr', 'asc', 'or', 'so', '▁t', 'ale', '▁period', 'o', '▁ver', 'r', 'à', '▁inv', 'i', 'ato', '▁un', '▁mess', 'ag', 'gio', '▁', '\n', 'che', '▁fac', 'cia', '▁comp', 'ren', 'd', 'ere', '▁che', '▁la', '▁stan', 'za', '▁', 'è', '▁bl', 'oc', 'c', 'ata', '▁da', '▁t', 'rop', 'po', '▁tem', 'po', '▁in', '▁mod', 'o', '▁che', '▁', '\n', 'ci', '▁si', '▁poss', 'a', '▁inform', 'are', '▁se', '▁il', '▁rit', 'ardo', '▁', 'è', '▁d', 'ov', 'ut', 'o', '▁a', '▁un', '▁cont', 'r', 'att', 'em', 'po', '▁del', '▁cl', 'ient', 'e', '▁', '\n', 'op', 'p', 'ure', '▁se', '▁eg', 'li', '▁non', '▁int', 'end', 'e', '▁p', 'i', 'ù', '▁s', 'og', 'gi', 'orn', 'are', '▁n', 'ell', ""'"", 'al', 'ber', 'go', '.', '▁nel', '▁prim', 'o', '▁cas', 'o', '▁si', '▁', '\n', 'pro', 'v', 'ved', 'er', 'à', '▁a', '▁r', 'inn', 'ov', 'are', '▁il', '▁bl', 'oc', 'c', 'ag', 'gio', '▁d', 'ella', '▁stan', 'za', ',', '▁ment', 're', '▁nel', '▁second', 'o', '▁a', '▁', '\n', 'c', 'anc', 'ell', 'are', '▁la', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', '▁un', 'a', '▁vol', 'ta', '▁arr', 'iv', 'ata', '▁la', '▁cap', 'ar', 'ra', '▁del', '▁cl', 'ient', 'e', '▁de', 've', '▁', '\n', 'ess', 'ere', '▁poss', 'ib', 'ile', '▁pass', 'are', '▁la', '▁stan', 'za', '▁da', '▁bl', 'oc', 'c', 'ata', '▁ad', '▁as', 'se', 'gn', 'ata', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 's', 'it', 'u', 'az', 'ion', 'e', '▁del', 'le', '▁stan', 'ze', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 's', 'it', 'u', 'az', 'ion', 'e', '▁ag', 'gi', 'orn', 'ata', '▁del', 'le', '▁stan', 'ze', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'tr', 'asc', 'or', 'so', '▁il', '▁num', 'ero', '▁di', '▁gi', 'orn', 'i', '▁f', 'iss', 'ati', '▁dall', ""'"", 'al', 'berg', 'at', 'ore', '▁a', '▁part', 'ire', '▁dal', '▁gi', 'orn', 'o', '▁d', 'ella', '▁', '\n', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁il', '▁s', 'ist', 'em', 'a', '▁d', 'ov', 'r', 'à', '▁gar', 'ant', 'ire', '▁che', ':', '\n', '▁un', 'a', '▁stan', 'za', '▁bl', 'oc', 'c', 'ata', '▁s', 'ia', '▁pass', 'ata', '▁a', '▁stat', 'o', '▁di', '▁as', 'se', 'gn', 'ata', ';', '\n', '▁v', 'eng', 'a', '▁visual', 'iz', 'z', 'ato', '▁un', '▁mess', 'ag', 'gio', '▁che', '▁av', 'vis', 'i', '▁d', 'ella', '▁sit', 'u', 'az', 'ion', 'e', '▁di', '▁rit', 'ardo', '▁', '\n', 'di', '▁p', 'ag', 'ament', 'o', '▁d', 'ella', '▁cap', 'ar', 'ra', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', '\x92', 'al', 'berg', 'at', 'ore', '▁si', '▁asp', 'ett', 'a', '▁di', '▁pot', 'er', '▁ten', 'ere', '▁s', 'ott', 'o', '▁controll', 'o', '▁la', '▁sit', 'u', 'az', 'ion', 'e', '▁del', 'le', '▁', '\n', 'stan', 'ze', '▁bl', 'oc', 'c', 'ate', '▁in', '▁mod', 'o', '▁t', 'ale', '▁che', '▁un', 'a', '▁camer', 'a', '▁non', '▁r', 'im', 'ang', 'a', '▁t', 'rop', 'po', '▁a', '▁l', 'ung', 'o', '▁in', '▁', '\n', 't', 'ale', '▁stat', 'o', '▁r', 'is', 'chi', 'ando', '▁di', '▁far', '▁per', 'd', 'ere', '▁alt', 'ri', '▁pot', 'enz', 'ial', 'i', '▁cl', 'ient', 'i', '▁all', '\x92', 'al', 'ber', 'go', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'ges', '-0', '4.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '0', '\n\n', 'd', 'ata', ':', '▁30', '/', '03', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁frances', 'ca', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-03', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁delle', '▁cam', 'ere', '▁bl', 'occ', 'ate', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'se', '▁al', '▁moment', 'o', '▁della', '▁pren', 'ot', 'azione', '▁una', '▁stan', 'za', '▁vi', 'ene', '▁bl', 'occ', 'ata', ',', '▁tale', '▁stan', 'za', '▁', '\n', 'rim', 'arr', 'à', '▁in', '▁qu', 'ello', '▁stat', 'o', '▁per', '▁un', '▁cert', 'o', '▁period', 'o', '▁di', '▁tempo', '▁fiss', 'ato', '▁(', 'ved', 'i', '▁f', '-', 'ges', '-0', '4)', '▁', '\n', 'd', 'alla', '▁gest', 'ione', '▁dell', ""'"", 'al', 'ber', 'go', '.', '▁tr', 'asc', 'or', 'so', '▁tale', '▁period', 'o', '▁ver', 'r', 'à', '▁inv', 'i', 'ato', '▁un', '▁mess', 'aggio', '▁', '\n', 'che', '▁fac', 'cia', '▁comp', 'ren', 'd', 'ere', '▁che', '▁la', '▁stan', 'za', '▁', 'è', '▁bl', 'occ', 'ata', '▁da', '▁trop', 'po', '▁tempo', '▁in', '▁mod', 'o', '▁che', '▁', '\n', 'ci', '▁si', '▁poss', 'a', '▁inform', 'are', '▁se', '▁il', '▁rit', 'ardo', '▁', 'è', '▁dov', 'uto', '▁a', '▁un', '▁cont', 'r', 'att', 'em', 'po', '▁del', '▁client', 'e', '▁', '\n', 'op', 'pure', '▁se', '▁eg', 'li', '▁non', '▁int', 'ende', '▁pi', 'ù', '▁s', 'og', 'gi', 'orn', 'are', '▁nell', ""'"", 'al', 'ber', 'go', '.', '▁nel', '▁prim', 'o', '▁cas', 'o', '▁si', '▁', '\n', 'prov', 'ved', 'er', 'à', '▁a', '▁r', 'inn', 'ov', 'are', '▁il', '▁bl', 'occ', 'aggio', '▁della', '▁stan', 'za', ',', '▁ment', 're', '▁nel', '▁second', 'o', '▁a', '▁', '\n', 'canc', 'ell', 'are', '▁la', '▁pren', 'ot', 'azione', '.', '▁una', '▁volta', '▁arr', 'iv', 'ata', '▁la', '▁cap', 'arra', '▁del', '▁client', 'e', '▁de', 've', '▁', '\n', 'ess', 'ere', '▁poss', 'ib', 'ile', '▁pass', 'are', '▁la', '▁stan', 'za', '▁da', '▁bl', 'occ', 'ata', '▁ad', '▁as', 'se', 'gn', 'ata', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 's', 'itu', 'azione', '▁delle', '▁stan', 'ze', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 's', 'itu', 'azione', '▁ag', 'gi', 'orn', 'ata', '▁delle', '▁stan', 'ze', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'tr', 'asc', 'or', 'so', '▁il', '▁num', 'ero', '▁di', '▁gi', 'orn', 'i', '▁fiss', 'ati', '▁dall', ""'"", 'al', 'berg', 'atore', '▁a', '▁part', 'ire', '▁dal', '▁gi', 'orno', '▁della', '▁', '\n', 'p', 'ren', 'ot', 'azione', '▁il', '▁sist', 'ema', '▁dov', 'r', 'à', '▁gar', 'ant', 'ire', '▁che', ':', '\n', '▁una', '▁stan', 'za', '▁bl', 'occ', 'ata', '▁s', 'ia', '▁pass', 'ata', '▁a', '▁stat', 'o', '▁di', '▁as', 'se', 'gn', 'ata', ';', '\n', '▁v', 'eng', 'a', '▁visual', 'izz', 'ato', '▁un', '▁mess', 'aggio', '▁che', '▁av', 'vis', 'i', '▁della', '▁situ', 'azione', '▁di', '▁rit', 'ardo', '▁', '\n', 'di', '▁pag', 'amento', '▁della', '▁cap', 'arra', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', '\x92', 'al', 'berg', 'atore', '▁si', '▁asp', 'etta', '▁di', '▁pot', 'er', '▁ten', 'ere', '▁s', 'otto', '▁controll', 'o', '▁la', '▁situ', 'azione', '▁delle', '▁', '\n', 'stan', 'ze', '▁bl', 'occ', 'ate', '▁in', '▁mod', 'o', '▁tale', '▁che', '▁una', '▁camera', '▁non', '▁rim', 'anga', '▁trop', 'po', '▁a', '▁lung', 'o', '▁in', '▁', '\n', 't', 'ale', '▁stat', 'o', '▁ris', 'chi', 'ando', '▁di', '▁far', '▁perd', 'ere', '▁alt', 'ri', '▁pot', 'enz', 'ial', 'i', '▁client', 'i', '▁all', '\x92', 'al', 'ber', 'go', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'ges', '-0', '4.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.0', '\n\n', 'data', ':', '▁30', '/', '03', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁francesca', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'pre', '-03', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁delle', '▁cam', 'ere', '▁bl', 'occ', 'ate', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'se', '▁al', '▁moment', 'o', '▁della', '▁pren', 'ot', 'azione', '▁una', '▁stanza', '▁vi', 'ene', '▁bl', 'occ', 'ata', ',', '▁tale', '▁stanza', '▁', '\n', 'rim', 'arr', 'à', '▁in', '▁qu', 'ello', '▁stato', '▁per', '▁un', '▁cert', 'o', '▁period', 'o', '▁di', '▁tempo', '▁fiss', 'ato', '▁(', 'vedi', '▁f', '-', 'ges', '-04)', '▁', '\n', 'd', 'alla', '▁gest', 'ione', '▁dell', ""'"", 'al', 'ber', 'go', '.', '▁tr', 'asc', 'orso', '▁tale', '▁period', 'o', '▁ver', 'rà', '▁inv', 'iato', '▁un', '▁mess', 'aggio', '▁', '\n', 'che', '▁fac', 'cia', '▁comp', 'rend', 'ere', '▁che', '▁la', '▁stanza', '▁è', '▁bl', 'occ', 'ata', '▁da', '▁trop', 'po', '▁tempo', '▁in', '▁modo', '▁che', '▁', '\n', 'ci', '▁si', '▁poss', 'a', '▁inform', 'are', '▁se', '▁il', '▁rit', 'ardo', '▁è', '▁dov', 'uto', '▁a', '▁un', '▁contr', 'att', 'em', 'po', '▁del', '▁client', 'e', '▁', '\n', 'op', 'pure', '▁se', '▁eg', 'li', '▁non', '▁int', 'ende', '▁pi', 'ù', '▁sog', 'gi', 'orn', 'are', '▁nell', ""'"", 'al', 'ber', 'go', '.', '▁nel', '▁primo', '▁cas', 'o', '▁si', '▁', '\n', 'prov', 'ved', 'er', 'à', '▁a', '▁r', 'innov', 'are', '▁il', '▁bl', 'occ', 'aggio', '▁della', '▁stanza', ',', '▁ment', 're', '▁nel', '▁secondo', '▁a', '▁', '\n', 'canc', 'ell', 'are', '▁la', '▁pren', 'ot', 'azione', '.', '▁una', '▁volta', '▁arr', 'iv', 'ata', '▁la', '▁cap', 'arra', '▁del', '▁client', 'e', '▁de', 've', '▁', '\n', 'ess', 'ere', '▁poss', 'ib', 'ile', '▁pass', 'are', '▁la', '▁stanza', '▁da', '▁bl', 'occ', 'ata', '▁ad', '▁as', 'se', 'gn', 'ata', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'situ', 'azione', '▁delle', '▁stan', 'ze', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'situ', 'azione', '▁ag', 'gi', 'orn', 'ata', '▁delle', '▁stan', 'ze', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'tr', 'asc', 'orso', '▁il', '▁numero', '▁di', '▁giorn', 'i', '▁fiss', 'ati', '▁dall', ""'"", 'al', 'berg', 'atore', '▁a', '▁part', 'ire', '▁dal', '▁giorno', '▁della', '▁', '\n', 'p', 'ren', 'ot', 'azione', '▁il', '▁sistema', '▁dov', 'rà', '▁gar', 'ant', 'ire', '▁che', ':', '\n', '▁una', '▁stanza', '▁bl', 'occ', 'ata', '▁sia', '▁pass', 'ata', '▁a', '▁stato', '▁di', '▁as', 'se', 'gn', 'ata', ';', '\n', '▁v', 'enga', '▁visual', 'izz', 'ato', '▁un', '▁mess', 'aggio', '▁che', '▁av', 'vis', 'i', '▁della', '▁situ', 'azione', '▁di', '▁rit', 'ardo', '▁', '\n', 'di', '▁pag', 'amento', '▁della', '▁cap', 'arra', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', '\x92', 'al', 'berg', 'atore', '▁si', '▁asp', 'etta', '▁di', '▁pot', 'er', '▁ten', 'ere', '▁sotto', '▁controll', 'o', '▁la', '▁situ', 'azione', '▁delle', '▁', '\n', 'stan', 'ze', '▁bl', 'occ', 'ate', '▁in', '▁modo', '▁tale', '▁che', '▁una', '▁camera', '▁non', '▁rim', 'anga', '▁trop', 'po', '▁a', '▁lung', 'o', '▁in', '▁', '\n', 'tale', '▁stato', '▁ris', 'chi', 'ando', '▁di', '▁far', '▁perd', 'ere', '▁alt', 'ri', '▁pot', 'enz', 'iali', '▁client', 'i', '▁all', '\x92', 'al', 'ber', 'go', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'ges', '-04.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.0', '\n\n', 'data', ':', '▁30', '/03', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁francesca', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero pre tipo funzional requisito gestion dell camer bloccat descrizion momento della prenotazion una stanza vien bloccata tale stanza rimarr quello stato per certo periodo tempo fissato vedi ges dalla gestion dell albergo trascorso tale periodo verr inviato messaggio che faccia comprender che stanza bloccata troppo tempo modo che possa informar ritardo dovuto contrattempo del client oppur non intend soggiornar nell albergo nel primo caso provved rinnovar bloccaggio della stanza mentr nel secondo cancellar prenotazion una volta arrivata caparra del client deve esser possibil passar stanza bloccata assegnata input richiesto situazion dell stanz output desiderato situazion aggiornata dell stanz criterio accettazion trascorso numero giorni fissati dall albergator partir dal giorno della prenotazion sistema dovr garantir che una stanza bloccata sia passata stato assegnata venga visualizzato messaggio che avvisi della situazion ritardo pagamento della caparra aspett colleg albergator aspetta poter tener sotto controllo situazion dell stanz bloccat modo tale che una camera non rimanga troppo lungo tale stato rischiando far perder altri potenziali clienti albergo requis collegati pre ges stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato danzi francesca note
1~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-GES-01.txt~F-GES-01.txt~"
Requisito numero: 
F-GES-01
Tipo:
Funzionale
 
Requisito:
Gestione dei prezzi delle camere.
Descrizione:
Per ogni camera deve essere possibile stabilire il suo prezzo base. Questo 
prezzo deve essere impostabile dal gestore dell'albergo ogni qual volta egli lo 
ritenga opportuno. Se si desidera modificare il prezzo base di una stanza che 
in quel momento risulta occupata, il sistema dovrà avvisare l'operatore con un 
messaggio per evitare che il cliente si lamenti di non aver pagato quanto 
pattuito.
Input richiesto:
Si dovrà inserire l'identificatore di stanza e il prezzo ad essa relativo.
Output desiderato:
Conferma a video della modifica avvenuta, o eventuali messaggi di errore.
Criterio di accettazione:
Si deve poter accedere alla modifica del listino delle camere in ogni momento, 
richiamare ogni stanza attraverso un opportuno identificatore (es. numero di 
stanza); se la stanza richiesta non esiste dovrà essere visualizzato un 
messaggio d'errore. Se la stanza risulta occupata, dovrà essere avvisato 
l'operatore che sta facendo un'operazione rischiosa. 
Aspettative collegate:
Supervisione e gestione dei prezzi delle stanze.
Requisiti collegati:
F-SOG-04, F-GES-05.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Software
Versione: 2.1

Data: 04/04/1998

Compilato da: Martini Roberto 

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ges', '-0', '1', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'gest', 'ion', 'e', '▁de', 'i', '▁pre', 'zz', 'i', '▁del', 'le', '▁cam', 'ere', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'per', '▁og', 'ni', '▁camer', 'a', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁st', 'abil', 'ire', '▁il', '▁su', 'o', '▁pre', 'z', 'zo', '▁base', '.', '▁quest', 'o', '▁', '\n', 'pre', 'z', 'zo', '▁de', 've', '▁ess', 'ere', '▁imp', 'ost', 'ab', 'ile', '▁dal', '▁g', 'est', 'ore', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '▁og', 'ni', '▁qual', '▁vol', 'ta', '▁eg', 'li', '▁lo', '▁', '\n', 'rit', 'eng', 'a', '▁opportun', 'o', '.', '▁se', '▁si', '▁des', 'ider', 'a', '▁mod', 'ific', 'are', '▁il', '▁pre', 'z', 'zo', '▁base', '▁di', '▁un', 'a', '▁stan', 'za', '▁che', '▁', '\n', 'in', '▁qu', 'el', '▁moment', 'o', '▁r', 'is', 'ult', 'a', '▁occup', 'ata', ',', '▁il', '▁s', 'ist', 'em', 'a', '▁d', 'ov', 'r', 'à', '▁av', 'vis', 'are', '▁l', ""'"", 'oper', 'at', 'ore', '▁con', '▁un', '▁', '\n', 'm', 'ess', 'ag', 'gio', '▁per', '▁ev', 'it', 'are', '▁che', '▁il', '▁cl', 'ient', 'e', '▁si', '▁l', 'ament', 'i', '▁di', '▁non', '▁aver', '▁p', 'ag', 'ato', '▁quant', 'o', '▁', '\n', 'p', 'att', 'uit', 'o', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'si', '▁d', 'ov', 'r', 'à', '▁ins', 'er', 'ire', '▁l', ""'"", 'ident', 'ific', 'at', 'ore', '▁di', '▁stan', 'za', '▁e', '▁il', '▁pre', 'z', 'zo', '▁ad', '▁ess', 'a', '▁rel', 'at', 'iv', 'o', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'con', 'fer', 'ma', '▁a', '▁video', '▁d', 'ella', '▁mod', 'ific', 'a', '▁av', 'ven', 'ut', 'a', ',', '▁o', '▁event', 'ual', 'i', '▁mess', 'ag', 'gi', '▁di', '▁er', 'r', 'ore', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁acc', 'ett', 'az', 'ion', 'e', ':', '\n', 'si', '▁de', 've', '▁pot', 'er', '▁acc', 'ed', 'ere', '▁all', 'a', '▁mod', 'ific', 'a', '▁del', '▁list', 'ino', '▁del', 'le', '▁cam', 'ere', '▁in', '▁og', 'ni', '▁moment', 'o', ',', '▁', '\n', 'rich', 'iam', 'are', '▁og', 'ni', '▁stan', 'za', '▁att', 'rav', 'ers', 'o', '▁un', '▁opportun', 'o', '▁ident', 'ific', 'at', 'ore', '▁(', 'es', '.', '▁num', 'ero', '▁di', '▁', '\n', 'stan', 'za', ');', '▁se', '▁la', '▁stan', 'za', '▁rich', 'i', 'est', 'a', '▁non', '▁es', 'ist', 'e', '▁d', 'ov', 'r', 'à', '▁ess', 'ere', '▁visual', 'iz', 'z', 'ato', '▁un', '▁', '\n', 'm', 'ess', 'ag', 'gio', '▁d', ""'"", 'er', 'r', 'ore', '.', '▁se', '▁la', '▁stan', 'za', '▁r', 'is', 'ult', 'a', '▁occup', 'ata', ',', '▁d', 'ov', 'r', 'à', '▁ess', 'ere', '▁av', 'vis', 'ato', '▁', '\n', 'l', ""'"", 'oper', 'at', 'ore', '▁che', '▁st', 'a', '▁fac', 'end', 'o', '▁un', ""'"", 'oper', 'az', 'ion', 'e', '▁r', 'is', 'ch', 'ios', 'a', '.', '▁', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'sup', 'erv', 'ision', 'e', '▁e', '▁g', 'est', 'ion', 'e', '▁de', 'i', '▁pre', 'zz', 'i', '▁del', 'le', '▁stan', 'ze', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-0', '5.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '1', '\n\n', 'd', 'ata', ':', '▁0', '4', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁mart', 'ini', '▁robert', 'o', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ges', '-01', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁dei', '▁pre', 'zzi', '▁delle', '▁cam', 'ere', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'per', '▁og', 'ni', '▁camera', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁stabil', 'ire', '▁il', '▁su', 'o', '▁pre', 'z', 'zo', '▁base', '.', '▁quest', 'o', '▁', '\n', 'pre', 'z', 'zo', '▁de', 've', '▁ess', 'ere', '▁imp', 'ost', 'ab', 'ile', '▁dal', '▁gest', 'ore', '▁dell', ""'"", 'al', 'ber', 'go', '▁og', 'ni', '▁qual', '▁volta', '▁eg', 'li', '▁lo', '▁', '\n', 'rit', 'eng', 'a', '▁opportun', 'o', '.', '▁se', '▁si', '▁des', 'ider', 'a', '▁mod', 'ific', 'are', '▁il', '▁pre', 'z', 'zo', '▁base', '▁di', '▁una', '▁stan', 'za', '▁che', '▁', '\n', 'in', '▁qu', 'el', '▁moment', 'o', '▁ris', 'ult', 'a', '▁occup', 'ata', ',', '▁il', '▁sist', 'ema', '▁dov', 'r', 'à', '▁av', 'vis', 'are', '▁l', ""'"", 'oper', 'atore', '▁con', '▁un', '▁', '\n', 'mess', 'aggio', '▁per', '▁ev', 'it', 'are', '▁che', '▁il', '▁client', 'e', '▁si', '▁lament', 'i', '▁di', '▁non', '▁aver', '▁pag', 'ato', '▁quant', 'o', '▁', '\n', 'p', 'att', 'uit', 'o', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'si', '▁dov', 'r', 'à', '▁ins', 'er', 'ire', '▁l', ""'"", 'ident', 'ific', 'atore', '▁di', '▁stan', 'za', '▁e', '▁il', '▁pre', 'z', 'zo', '▁ad', '▁ess', 'a', '▁rel', 'at', 'ivo', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'con', 'fer', 'ma', '▁a', '▁video', '▁della', '▁mod', 'ific', 'a', '▁av', 'ven', 'uta', ',', '▁o', '▁eventual', 'i', '▁mess', 'aggi', '▁di', '▁err', 'ore', '.', '\n', 'crit', 'er', 'io', '▁di', '▁acc', 'ett', 'azione', ':', '\n', 'si', '▁de', 've', '▁pot', 'er', '▁acc', 'ed', 'ere', '▁alla', '▁mod', 'ific', 'a', '▁del', '▁list', 'ino', '▁delle', '▁cam', 'ere', '▁in', '▁og', 'ni', '▁moment', 'o', ',', '▁', '\n', 'rich', 'iam', 'are', '▁og', 'ni', '▁stan', 'za', '▁att', 'rav', 'ers', 'o', '▁un', '▁opportun', 'o', '▁ident', 'ific', 'atore', '▁(', 'es', '.', '▁num', 'ero', '▁di', '▁', '\n', 'stan', 'za', ');', '▁se', '▁la', '▁stan', 'za', '▁rich', 'iest', 'a', '▁non', '▁es', 'iste', '▁dov', 'r', 'à', '▁ess', 'ere', '▁visual', 'izz', 'ato', '▁un', '▁', '\n', 'mess', 'aggio', '▁d', ""'"", 'er', 'r', 'ore', '.', '▁se', '▁la', '▁stan', 'za', '▁ris', 'ult', 'a', '▁occup', 'ata', ',', '▁dov', 'r', 'à', '▁ess', 'ere', '▁av', 'vis', 'ato', '▁', '\n', 'l', ""'"", 'oper', 'atore', '▁che', '▁sta', '▁fac', 'endo', '▁un', ""'"", 'oper', 'azione', '▁ris', 'ch', 'iosa', '.', '▁', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'sup', 'erv', 'ision', 'e', '▁e', '▁gest', 'ione', '▁dei', '▁pre', 'zzi', '▁delle', '▁stan', 'ze', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-0', '5.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁0', '4/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'ges', '-01', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁dei', '▁pre', 'zzi', '▁delle', '▁cam', 'ere', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'per', '▁og', 'ni', '▁camera', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁stabil', 'ire', '▁il', '▁suo', '▁pre', 'zzo', '▁base', '.', '▁quest', 'o', '▁', '\n', 'pre', 'zzo', '▁de', 've', '▁ess', 'ere', '▁impost', 'abile', '▁dal', '▁gest', 'ore', '▁dell', ""'"", 'al', 'ber', 'go', '▁og', 'ni', '▁qual', '▁volta', '▁eg', 'li', '▁lo', '▁', '\n', 'rit', 'enga', '▁opportun', 'o', '.', '▁se', '▁si', '▁desider', 'a', '▁mod', 'ific', 'are', '▁il', '▁pre', 'zzo', '▁base', '▁di', '▁una', '▁stanza', '▁che', '▁', '\n', 'in', '▁quel', '▁moment', 'o', '▁ris', 'ult', 'a', '▁occup', 'ata', ',', '▁il', '▁sistema', '▁dov', 'rà', '▁av', 'vis', 'are', '▁l', ""'"", 'oper', 'atore', '▁con', '▁un', '▁', '\n', 'mess', 'aggio', '▁per', '▁ev', 'it', 'are', '▁che', '▁il', '▁client', 'e', '▁si', '▁lament', 'i', '▁di', '▁non', '▁aver', '▁pag', 'ato', '▁quant', 'o', '▁', '\n', 'patt', 'uito', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'si', '▁dov', 'rà', '▁ins', 'er', 'ire', '▁l', ""'"", 'ident', 'ific', 'atore', '▁di', '▁stanza', '▁e', '▁il', '▁pre', 'zzo', '▁ad', '▁essa', '▁rel', 'ativo', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'con', 'fer', 'ma', '▁a', '▁video', '▁della', '▁mod', 'ific', 'a', '▁av', 'ven', 'uta', ',', '▁o', '▁eventual', 'i', '▁mess', 'aggi', '▁di', '▁err', 'ore', '.', '\n', 'crit', 'erio', '▁di', '▁acc', 'ett', 'azione', ':', '\n', 'si', '▁de', 've', '▁pot', 'er', '▁acc', 'ed', 'ere', '▁alla', '▁mod', 'ific', 'a', '▁del', '▁list', 'ino', '▁delle', '▁cam', 'ere', '▁in', '▁og', 'ni', '▁moment', 'o', ',', '▁', '\n', 'rich', 'iam', 'are', '▁og', 'ni', '▁stanza', '▁att', 'rav', 'ers', 'o', '▁un', '▁opportun', 'o', '▁ident', 'ific', 'atore', '▁(', 'es', '.', '▁numero', '▁di', '▁', '\n', 'stan', 'za', ');', '▁se', '▁la', '▁stanza', '▁rich', 'iest', 'a', '▁non', '▁es', 'iste', '▁dov', 'rà', '▁ess', 'ere', '▁visual', 'izz', 'ato', '▁un', '▁', '\n', 'mess', 'aggio', '▁d', ""'"", 'er', 'r', 'ore', '.', '▁se', '▁la', '▁stanza', '▁ris', 'ult', 'a', '▁occup', 'ata', ',', '▁dov', 'rà', '▁ess', 'ere', '▁av', 'vis', 'ato', '▁', '\n', 'l', ""'"", 'oper', 'atore', '▁che', '▁sta', '▁fac', 'endo', '▁un', ""'"", 'oper', 'azione', '▁ris', 'ch', 'iosa', '.', '▁', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'sup', 'erv', 'ision', 'e', '▁e', '▁gest', 'ione', '▁dei', '▁pre', 'zzi', '▁delle', '▁stan', 'ze', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-05.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁0', '4/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero ges tipo funzional requisito gestion dei prezzi dell camer descrizion per ogni camera deve esser possibil stabilir suo prezzo base questo prezzo deve esser impostabil dal gestor dell albergo ogni qual volta ritenga opportuno desidera modificar prezzo base una stanza che quel momento risulta occupata sistema dovr avvisar operator con messaggio per evitar che client lamenti non aver pagato quanto pattuito input richiesto dovr inserir identificator stanza prezzo essa relativo output desiderato conferma video della modifica avvenuta eventuali messaggi error criterio accettazion deve poter acceder alla modifica del listino dell camer ogni momento richiamar ogni stanza attraverso opportuno identificator numero stanza stanza richiesta non esist dovr esser visualizzato messaggio error stanza risulta occupata dovr esser avvisato operator che sta facendo operazion rischiosa aspett colleg supervision gestion dei prezzi dell stanz requis collegati sog ges stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato martini roberto note
2~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-PRE-01.txt~F-PRE-01.txt~"Requisito numero: 
F-PRE-01
Tipo:
Funzionale
 
Requisito:
Ricerca di camere disponibili.
Descrizione:
Permette di elencare tutte le stanze disponibili nel periodo richiesto dal 
cliente. Nel caso non vi siano stanze disponibili esattamente in quel periodo 
verrà mostrata la disponibilità di stanze in modo che l'operatore sia in grado 
di fornire un suggerimento al cliente su come spostare o ridimensionare il 
periodo di permanenza. Tale periodo è un intervallo di tempo espresso come 
giorni che intercorrono tra due date. Ad esempio il periodo dal 05/07/1998 al 
11/07/1998 implica 7 giorni di permanenza con liberazione della stanza il 
giorno 12/07/1998 mattina, quindi già a partire da quel giorno la stanza deve 
essere resa disponibile per eventuali altre prenotazioni. La fase di ricerca delle 
camere disponibili, dovrà tenere conto dei vincoli imposti come stanze 
bloccate, assegnate o commissionate ad agenzie viaggi.
Le prenotazioni fornite da un'agenzia dovranno prima di tutto coprire i 
commissionamenti. Quando le stanze commissionate non permettono più 
alcuna prenotazione,  si potrà ricercare stanze disponibili tra quelle non 
commissionate.
Input richiesto:
Periodo scelto per la permanenza.
Output desiderato:
Output a video delle disponibilità dell'albergo o di una tabella che riassuma la 
disponibilità dell'albergo.
Criterio di 
accettazione:
Dato un intervallo di tempo espresso da due date, il sistema dovrà ritornare 
l'elenco di tutte le camere disponibili in quel periodo. Nel caso di nessuna 
disponibilità esatta verrà mostrata a video una tabella che metterà in evidenza 
le disponibilità dell'albergo.
Nel caso di prenotazione tramite agenzia, dovranno essere visualizzate le 
stanze commissionate, ed eventualmente tutte le altre stanze. 
Aspettative collegate:
Pronta verifica delle disponibilità dell'albergo.
Requisiti collegati:
F-PRE-02, F-PRE-03, F-PRE-04.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Software
Versione: 4.0

Data: 16/04/1998

Compilato da: Martini Roberto 

Note:


"~req~"['▁requ', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-0', '1', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'ric', 'er', 'ca', '▁di', '▁cam', 'ere', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'per', 'met', 'te', '▁di', '▁el', 'enc', 'are', '▁t', 'ut', 'te', '▁le', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁nel', '▁period', 'o', '▁rich', 'i', 'est', 'o', '▁dal', '▁', '\n', 'cl', 'ient', 'e', '.', '▁nel', '▁cas', 'o', '▁non', '▁vi', '▁s', 'iano', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁es', 'att', 'ament', 'e', '▁in', '▁qu', 'el', '▁period', 'o', '▁', '\n', 'ver', 'r', 'à', '▁most', 'r', 'ata', '▁la', '▁dis', 'pon', 'ib', 'il', 'it', 'à', '▁di', '▁stan', 'ze', '▁in', '▁mod', 'o', '▁che', '▁l', ""'"", 'oper', 'at', 'ore', '▁s', 'ia', '▁in', '▁grad', 'o', '▁', '\n', 'di', '▁for', 'n', 'ire', '▁un', '▁sug', 'ger', 'iment', 'o', '▁al', '▁cl', 'ient', 'e', '▁su', '▁come', '▁sp', 'ost', 'are', '▁o', '▁rid', 'im', 'ension', 'are', '▁il', '▁', '\n', 'per', 'iod', 'o', '▁di', '▁perman', 'en', 'za', '.', '▁t', 'ale', '▁period', 'o', '▁', 'è', '▁un', '▁inter', 'v', 'all', 'o', '▁di', '▁tem', 'po', '▁esp', 'res', 'so', '▁come', '▁', '\n', 'gi', 'orn', 'i', '▁che', '▁inter', 'cor', 'ron', 'o', '▁tra', '▁due', '▁date', '.', '▁ad', '▁es', 'em', 'p', 'io', '▁il', '▁period', 'o', '▁dal', '▁0', '5', '/', '0', '7', '/', '19', '98', '▁al', '▁', '\n', '11', '/', '0', '7', '/', '19', '98', '▁impl', 'ica', '▁7', '▁gi', 'orn', 'i', '▁di', '▁perman', 'en', 'za', '▁con', '▁liber', 'az', 'ion', 'e', '▁d', 'ella', '▁stan', 'za', '▁il', '▁', '\n', 'gi', 'orn', 'o', '▁12', '/', '0', '7', '/', '19', '98', '▁matt', 'ina', ',', '▁qu', 'ind', 'i', '▁gi', 'à', '▁a', '▁part', 'ire', '▁da', '▁qu', 'el', '▁gi', 'orn', 'o', '▁la', '▁stan', 'za', '▁de', 've', '▁', '\n', 'ess', 'ere', '▁res', 'a', '▁dis', 'pon', 'ib', 'ile', '▁per', '▁event', 'ual', 'i', '▁alt', 're', '▁p', 'ren', 'ot', 'az', 'ion', 'i', '.', '▁la', '▁f', 'ase', '▁di', '▁ric', 'er', 'ca', '▁del', 'le', '▁', '\n', 'c', 'am', 'ere', '▁dis', 'pon', 'ib', 'ili', ',', '▁d', 'ov', 'r', 'à', '▁ten', 'ere', '▁cont', 'o', '▁de', 'i', '▁v', 'inc', 'oli', '▁imp', 'ost', 'i', '▁come', '▁stan', 'ze', '▁', '\n', 'bl', 'oc', 'c', 'ate', ',', '▁as', 'se', 'gn', 'ate', '▁o', '▁commission', 'ate', '▁ad', '▁ag', 'enz', 'ie', '▁vi', 'ag', 'gi', '.', '\n', 'le', '▁p', 'ren', 'ot', 'az', 'ion', 'i', '▁for', 'n', 'ite', '▁da', '▁un', ""'"", 'agen', 'z', 'ia', '▁d', 'ov', 'r', 'ann', 'o', '▁prim', 'a', '▁di', '▁t', 'ut', 'to', '▁cop', 'ri', 're', '▁i', '▁', '\n', 'com', 'mission', 'ament', 'i', '.', '▁qu', 'ando', '▁le', '▁stan', 'ze', '▁commission', 'ate', '▁non', '▁per', 'met', 'ton', 'o', '▁p', 'i', 'ù', '▁', '\n', 'al', 'c', 'una', '▁p', 'ren', 'ot', 'az', 'ion', 'e', ',', '▁si', '▁pot', 'r', 'à', '▁ric', 'erc', 'are', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁tra', '▁qu', 'elle', '▁non', '▁', '\n', 'com', 'mission', 'ate', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'per', 'iod', 'o', '▁sc', 'el', 'to', '▁per', '▁la', '▁perman', 'en', 'za', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'out', 'put', '▁a', '▁video', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'it', 'à', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '▁o', '▁di', '▁un', 'a', '▁tab', 'ella', '▁che', '▁ri', 'ass', 'uma', '▁la', '▁', '\n', 'dis', 'pon', 'ib', 'il', 'it', 'à', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'd', 'ato', '▁un', '▁inter', 'v', 'all', 'o', '▁di', '▁tem', 'po', '▁esp', 'res', 'so', '▁da', '▁due', '▁date', ',', '▁il', '▁s', 'ist', 'em', 'a', '▁d', 'ov', 'r', 'à', '▁rit', 'orn', 'are', '▁', '\n', 'l', ""'"", 'el', 'en', 'co', '▁di', '▁t', 'ut', 'te', '▁le', '▁cam', 'ere', '▁dis', 'pon', 'ib', 'ili', '▁in', '▁qu', 'el', '▁period', 'o', '.', '▁nel', '▁cas', 'o', '▁di', '▁n', 'ess', 'una', '▁', '\n', 'dis', 'pon', 'ib', 'il', 'it', 'à', '▁es', 'att', 'a', '▁ver', 'r', 'à', '▁most', 'r', 'ata', '▁a', '▁video', '▁un', 'a', '▁tab', 'ella', '▁che', '▁met', 'ter', 'à', '▁in', '▁ev', 'iden', 'za', '▁', '\n', 'le', '▁dis', 'pon', 'ib', 'il', 'it', 'à', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '.', '\n', 'nel', '▁cas', 'o', '▁di', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁tr', 'am', 'ite', '▁ag', 'enz', 'ia', ',', '▁d', 'ov', 'r', 'ann', 'o', '▁ess', 'ere', '▁visual', 'iz', 'z', 'ate', '▁le', '▁', '\n', 'stan', 'ze', '▁commission', 'ate', ',', '▁ed', '▁event', 'ual', 'ment', 'e', '▁t', 'ut', 'te', '▁le', '▁alt', 're', '▁stan', 'ze', '.', '▁', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'pr', 'ont', 'a', '▁ver', 'ific', 'a', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'it', 'à', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'pre', '-0', '3,', '▁f', '-', 'pre', '-0', '4.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁4.', '0', '\n\n', 'd', 'ata', ':', '▁16', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁mart', 'ini', '▁robert', 'o', '▁', '\n\n', 'note', ':', '\n\n\n']"~"['▁requ', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-01', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'ric', 'er', 'ca', '▁di', '▁cam', 'ere', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'per', 'met', 'te', '▁di', '▁el', 'enc', 'are', '▁tut', 'te', '▁le', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁nel', '▁period', 'o', '▁rich', 'iest', 'o', '▁dal', '▁', '\n', 'cl', 'iente', '.', '▁nel', '▁cas', 'o', '▁non', '▁vi', '▁s', 'iano', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁es', 'att', 'ament', 'e', '▁in', '▁qu', 'el', '▁period', 'o', '▁', '\n', 'ver', 'r', 'à', '▁most', 'r', 'ata', '▁la', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁di', '▁stan', 'ze', '▁in', '▁mod', 'o', '▁che', '▁l', ""'"", 'oper', 'atore', '▁s', 'ia', '▁in', '▁grad', 'o', '▁', '\n', 'di', '▁for', 'n', 'ire', '▁un', '▁sug', 'ger', 'iment', 'o', '▁al', '▁client', 'e', '▁su', '▁come', '▁sp', 'ost', 'are', '▁o', '▁rid', 'im', 'ension', 'are', '▁il', '▁', '\n', 'per', 'iod', 'o', '▁di', '▁perman', 'enza', '.', '▁tale', '▁period', 'o', '▁', 'è', '▁un', '▁interv', 'allo', '▁di', '▁tempo', '▁esp', 'res', 'so', '▁come', '▁', '\n', 'gi', 'orn', 'i', '▁che', '▁inter', 'cor', 'ron', 'o', '▁tra', '▁due', '▁date', '.', '▁ad', '▁es', 'emp', 'io', '▁il', '▁period', 'o', '▁dal', '▁0', '5/', '07', '/19', '98', '▁al', '▁', '\n', '11', '/', '07', '/19', '98', '▁impl', 'ica', '▁7', '▁gi', 'orn', 'i', '▁di', '▁perman', 'enza', '▁con', '▁liber', 'azione', '▁della', '▁stan', 'za', '▁il', '▁', '\n', 'gi', 'orno', '▁12', '/', '07', '/19', '98', '▁matt', 'ina', ',', '▁qu', 'indi', '▁gi', 'à', '▁a', '▁part', 'ire', '▁da', '▁qu', 'el', '▁gi', 'orno', '▁la', '▁stan', 'za', '▁de', 've', '▁', '\n', 'ess', 'ere', '▁res', 'a', '▁dis', 'pon', 'ib', 'ile', '▁per', '▁eventual', 'i', '▁alt', 're', '▁pren', 'ot', 'az', 'ioni', '.', '▁la', '▁f', 'ase', '▁di', '▁ric', 'er', 'ca', '▁delle', '▁', '\n', 'cam', 'ere', '▁dis', 'pon', 'ib', 'ili', ',', '▁dov', 'r', 'à', '▁ten', 'ere', '▁cont', 'o', '▁dei', '▁vinc', 'oli', '▁imp', 'ost', 'i', '▁come', '▁stan', 'ze', '▁', '\n', 'bl', 'occ', 'ate', ',', '▁as', 'se', 'gn', 'ate', '▁o', '▁commission', 'ate', '▁ad', '▁ag', 'enzie', '▁vi', 'aggi', '.', '\n', 'le', '▁pren', 'ot', 'az', 'ioni', '▁for', 'n', 'ite', '▁da', '▁un', ""'"", 'agen', 'zia', '▁dov', 'r', 'ann', 'o', '▁prima', '▁di', '▁tut', 'to', '▁cop', 'ri', 're', '▁i', '▁', '\n', 'com', 'mission', 'ament', 'i', '.', '▁qu', 'ando', '▁le', '▁stan', 'ze', '▁commission', 'ate', '▁non', '▁per', 'met', 'ton', 'o', '▁pi', 'ù', '▁', '\n', 'al', 'c', 'una', '▁pren', 'ot', 'azione', ',', '▁si', '▁pot', 'r', 'à', '▁ric', 'erc', 'are', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁tra', '▁qu', 'elle', '▁non', '▁', '\n', 'com', 'mission', 'ate', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'per', 'iod', 'o', '▁sc', 'el', 'to', '▁per', '▁la', '▁perman', 'enza', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'out', 'put', '▁a', '▁video', '▁delle', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '▁o', '▁di', '▁una', '▁tab', 'ella', '▁che', '▁ri', 'ass', 'uma', '▁la', '▁', '\n', 'dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'd', 'ato', '▁un', '▁interv', 'allo', '▁di', '▁tempo', '▁esp', 'res', 'so', '▁da', '▁due', '▁date', ',', '▁il', '▁sist', 'ema', '▁dov', 'r', 'à', '▁rit', 'orn', 'are', '▁', '\n', 'l', ""'"", 'el', 'en', 'co', '▁di', '▁tut', 'te', '▁le', '▁cam', 'ere', '▁dis', 'pon', 'ib', 'ili', '▁in', '▁qu', 'el', '▁period', 'o', '.', '▁nel', '▁cas', 'o', '▁di', '▁ness', 'una', '▁', '\n', 'dis', 'pon', 'ib', 'ilit', 'à', '▁es', 'atta', '▁ver', 'r', 'à', '▁most', 'r', 'ata', '▁a', '▁video', '▁una', '▁tab', 'ella', '▁che', '▁met', 'ter', 'à', '▁in', '▁ev', 'iden', 'za', '▁', '\n', 'le', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '.', '\n', 'nel', '▁cas', 'o', '▁di', '▁pren', 'ot', 'azione', '▁tram', 'ite', '▁ag', 'enz', 'ia', ',', '▁dov', 'r', 'ann', 'o', '▁ess', 'ere', '▁visual', 'izz', 'ate', '▁le', '▁', '\n', 'stan', 'ze', '▁commission', 'ate', ',', '▁ed', '▁eventual', 'ment', 'e', '▁tut', 'te', '▁le', '▁alt', 're', '▁stan', 'ze', '.', '▁', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'pr', 'ont', 'a', '▁ver', 'ific', 'a', '▁delle', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'pre', '-0', '3,', '▁f', '-', 'pre', '-0', '4.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁4.0', '\n\n', 'data', ':', '▁16', '/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '▁', '\n\n', 'note', ':', '\n\n\n']"~"['▁requis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'pre', '-01', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'ric', 'er', 'ca', '▁di', '▁cam', 'ere', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'per', 'mette', '▁di', '▁el', 'enc', 'are', '▁tutte', '▁le', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁nel', '▁period', 'o', '▁rich', 'iest', 'o', '▁dal', '▁', '\n', 'cl', 'iente', '.', '▁nel', '▁cas', 'o', '▁non', '▁vi', '▁s', 'iano', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁es', 'att', 'amente', '▁in', '▁quel', '▁period', 'o', '▁', '\n', 'ver', 'rà', '▁most', 'rata', '▁la', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁di', '▁stan', 'ze', '▁in', '▁modo', '▁che', '▁l', ""'"", 'oper', 'atore', '▁sia', '▁in', '▁grad', 'o', '▁', '\n', 'di', '▁forn', 'ire', '▁un', '▁sug', 'ger', 'imento', '▁al', '▁client', 'e', '▁su', '▁come', '▁sp', 'ost', 'are', '▁o', '▁rid', 'im', 'ension', 'are', '▁il', '▁', '\n', 'period', 'o', '▁di', '▁perman', 'enza', '.', '▁tale', '▁period', 'o', '▁è', '▁un', '▁interv', 'allo', '▁di', '▁tempo', '▁esp', 'resso', '▁come', '▁', '\n', 'gi', 'orn', 'i', '▁che', '▁inter', 'cor', 'ron', 'o', '▁tra', '▁due', '▁date', '.', '▁ad', '▁es', 'emp', 'io', '▁il', '▁period', 'o', '▁dal', '▁0', '5/', '07', '/19', '98', '▁al', '▁', '\n', '11', '/07', '/19', '98', '▁impl', 'ica', '▁7', '▁giorn', 'i', '▁di', '▁perman', 'enza', '▁con', '▁liber', 'azione', '▁della', '▁stanza', '▁il', '▁', '\n', 'gi', 'orno', '▁12', '/07', '/19', '98', '▁matt', 'ina', ',', '▁qu', 'indi', '▁gi', 'à', '▁a', '▁part', 'ire', '▁da', '▁quel', '▁giorno', '▁la', '▁stanza', '▁de', 've', '▁', '\n', 'ess', 'ere', '▁res', 'a', '▁dis', 'pon', 'ib', 'ile', '▁per', '▁eventual', 'i', '▁alt', 're', '▁pren', 'ot', 'azioni', '.', '▁la', '▁f', 'ase', '▁di', '▁ricer', 'ca', '▁delle', '▁', '\n', 'cam', 'ere', '▁dis', 'pon', 'ib', 'ili', ',', '▁dov', 'rà', '▁ten', 'ere', '▁cont', 'o', '▁dei', '▁vincoli', '▁imp', 'osti', '▁come', '▁stan', 'ze', '▁', '\n', 'bl', 'occ', 'ate', ',', '▁as', 'se', 'gn', 'ate', '▁o', '▁commission', 'ate', '▁ad', '▁ag', 'enzie', '▁vi', 'aggi', '.', '\n', 'le', '▁pren', 'ot', 'azioni', '▁forn', 'ite', '▁da', '▁un', ""'"", 'agen', 'zia', '▁dov', 'r', 'anno', '▁prima', '▁di', '▁tutto', '▁cop', 'ri', 're', '▁i', '▁', '\n', 'commission', 'amenti', '.', '▁qu', 'ando', '▁le', '▁stan', 'ze', '▁commission', 'ate', '▁non', '▁per', 'met', 'ton', 'o', '▁pi', 'ù', '▁', '\n', 'alc', 'una', '▁pren', 'ot', 'azione', ',', '▁si', '▁pot', 'rà', '▁ric', 'erc', 'are', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁tra', '▁qu', 'elle', '▁non', '▁', '\n', 'commission', 'ate', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'period', 'o', '▁scel', 'to', '▁per', '▁la', '▁perman', 'enza', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'output', '▁a', '▁video', '▁delle', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '▁o', '▁di', '▁una', '▁tab', 'ella', '▁che', '▁ri', 'ass', 'uma', '▁la', '▁', '\n', 'dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'd', 'ato', '▁un', '▁interv', 'allo', '▁di', '▁tempo', '▁esp', 'resso', '▁da', '▁due', '▁date', ',', '▁il', '▁sistema', '▁dov', 'rà', '▁rit', 'orn', 'are', '▁', '\n', 'l', ""'"", 'elen', 'co', '▁di', '▁tutte', '▁le', '▁cam', 'ere', '▁dis', 'pon', 'ib', 'ili', '▁in', '▁quel', '▁period', 'o', '.', '▁nel', '▁cas', 'o', '▁di', '▁ness', 'una', '▁', '\n', 'dis', 'pon', 'ib', 'ilit', 'à', '▁es', 'atta', '▁ver', 'rà', '▁most', 'rata', '▁a', '▁video', '▁una', '▁tab', 'ella', '▁che', '▁met', 'ter', 'à', '▁in', '▁ev', 'iden', 'za', '▁', '\n', 'le', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '.', '\n', 'nel', '▁cas', 'o', '▁di', '▁pren', 'ot', 'azione', '▁tram', 'ite', '▁ag', 'enzia', ',', '▁dov', 'r', 'anno', '▁ess', 'ere', '▁visual', 'izz', 'ate', '▁le', '▁', '\n', 'stan', 'ze', '▁commission', 'ate', ',', '▁ed', '▁eventual', 'mente', '▁tutte', '▁le', '▁alt', 're', '▁stan', 'ze', '.', '▁', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'pr', 'onta', '▁ver', 'ific', 'a', '▁delle', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'pre', '-0', '3,', '▁f', '-', 'pre', '-04.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁4.0', '\n\n', 'data', ':', '▁16', '/04/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '▁', '\n\n', 'note', ':', '\n\n\n']"~requisito numero pre tipo funzional requisito ricerca camer disponibili descrizion permett elencar tutt stanz disponibili nel periodo richiesto dal client nel caso non siano stanz disponibili esattament quel periodo verr mostrata disponibilit stanz modo che operator sia grado fornir suggerimento client come spostar ridimensionar periodo permanenza tale periodo intervallo tempo espresso come giorni che intercorrono tra due date esempio periodo dal implica giorni permanenza con liberazion della stanza giorno mattina quindi partir quel giorno stanza deve esser resa disponibil per eventuali altr prenotazioni fase ricerca dell camer disponibili dovr tener conto dei vincoli imposti come stanz bloccat assegn commission agenzi viaggi prenotazioni fornit agenzia dovranno prima tutto coprir commissionamenti quando stanz commission non permettono alcuna prenotazion potr ricercar stanz disponibili tra quell non commission input richiesto periodo scelto per permanenza output desiderato output video dell disponibilit dell albergo una tabella che riassuma disponibilit dell albergo criterio accettazion dato intervallo tempo espresso due date sistema dovr ritornar elenco tutt camer disponibili quel periodo nel caso nessuna disponibilit esatta verr mostrata video una tabella che metter evidenza disponibilit dell albergo nel caso prenotazion tramit agenzia dovranno esser visualizz stanz commission eventualment tutt altr stanz aspett colleg pronta verifica dell disponibilit dell albergo requis collegati pre pre pre stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato martini roberto note
3~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-PRE-06.txt~F-PRE-06.txt~"
Requisito numero: 
F-PRE-06
Tipo:
Funzionale
 
Requisito:
Modifica di una prenotazione.
Descrizione:
Deve essere possibile apportare delle modifiche ad una prenotazione già 
registrata nel sistema. Tali modifiche dovranno naturalmente aggiornare la 
prenotazione del cliente nonché le disponibilità dell'albergo nel caso in cui sia 
stato ritoccato il periodo di soggiorno.
Input richiesto:
Sarà richiesto il nominativo del cliente fornito al momento della prenotazione 
e il tipo di modifica che vuole apportare.
Output desiderato:
Modifica della prenotazione esistente ed eventualmente delle disponibilità 
dell'albergo.
Criterio di 
accettazione:
Quando si cerca un prenotazione da modificare, se essa non esiste deve essere 
mostrato un messaggio d'errore altrimenti devono essere mostrati i dati della 
prenotazione precedente. Effettuate tutte le modifiche verrà richiesta la loro 
conferma.
Aspettative collegate:
Modifica della prenotazione esistente.
Requisiti collegati:
F-PRE-02, F-PRE-05.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
1
Opzionale
Stabile
Piena comprensione
Software
Versione: 1.2

Data: 09/04/1998

Compilato da: Martini Roberto

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-0', '6', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'mod', 'ific', 'a', '▁di', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁ap', 'port', 'are', '▁del', 'le', '▁mod', 'ific', 'he', '▁ad', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁gi', 'à', '▁', '\n', 'reg', 'istr', 'ata', '▁nel', '▁s', 'ist', 'em', 'a', '.', '▁tal', 'i', '▁mod', 'ific', 'he', '▁d', 'ov', 'r', 'ann', 'o', '▁natural', 'ment', 'e', '▁ag', 'gi', 'orn', 'are', '▁la', '▁', '\n', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁del', '▁cl', 'ient', 'e', '▁non', 'ch', 'é', '▁le', '▁dis', 'pon', 'ib', 'il', 'it', 'à', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁s', 'ia', '▁', '\n', 'st', 'ato', '▁rit', 'oc', 'c', 'ato', '▁il', '▁period', 'o', '▁di', '▁s', 'og', 'gi', 'orn', 'o', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 's', 'ar', 'à', '▁rich', 'i', 'est', 'o', '▁il', '▁nomin', 'at', 'iv', 'o', '▁del', '▁cl', 'ient', 'e', '▁for', 'n', 'ito', '▁al', '▁moment', 'o', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁', '\n', 'e', '▁il', '▁tip', 'o', '▁di', '▁mod', 'ific', 'a', '▁che', '▁v', 'u', 'ole', '▁ap', 'port', 'are', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁es', 'ist', 'ent', 'e', '▁ed', '▁event', 'ual', 'ment', 'e', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'it', 'à', '▁', '\n', 'd', 'ell', ""'"", 'al', 'ber', 'go', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'qu', 'ando', '▁si', '▁cer', 'ca', '▁un', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁da', '▁mod', 'ific', 'are', ',', '▁se', '▁ess', 'a', '▁non', '▁es', 'ist', 'e', '▁de', 've', '▁ess', 'ere', '▁', '\n', 'most', 'r', 'ato', '▁un', '▁mess', 'ag', 'gio', '▁d', ""'"", 'er', 'r', 'ore', '▁al', 'tr', 'iment', 'i', '▁dev', 'on', 'o', '▁ess', 'ere', '▁most', 'r', 'ati', '▁i', '▁d', 'ati', '▁d', 'ella', '▁', '\n', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁preced', 'ent', 'e', '.', '▁eff', 'ett', 'u', 'ate', '▁t', 'ut', 'te', '▁le', '▁mod', 'ific', 'he', '▁ver', 'r', 'à', '▁rich', 'i', 'est', 'a', '▁la', '▁lor', 'o', '▁', '\n', 'con', 'fer', 'ma', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'mod', 'ific', 'a', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁es', 'ist', 'ent', 'e', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'pre', '-0', '5.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'op', 'z', 'ion', 'ale', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁1.', '2', '\n\n', 'd', 'ata', ':', '▁0', '9', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁mart', 'ini', '▁robert', 'o', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-06', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'mod', 'ific', 'a', '▁di', '▁una', '▁pren', 'ot', 'azione', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁ap', 'port', 'are', '▁delle', '▁mod', 'ific', 'he', '▁ad', '▁una', '▁pren', 'ot', 'azione', '▁gi', 'à', '▁', '\n', 'reg', 'istr', 'ata', '▁nel', '▁sist', 'ema', '.', '▁tal', 'i', '▁mod', 'ific', 'he', '▁dov', 'r', 'ann', 'o', '▁natural', 'ment', 'e', '▁ag', 'gi', 'orn', 'are', '▁la', '▁', '\n', 'p', 'ren', 'ot', 'azione', '▁del', '▁client', 'e', '▁non', 'ch', 'é', '▁le', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁s', 'ia', '▁', '\n', 'st', 'ato', '▁rit', 'occ', 'ato', '▁il', '▁period', 'o', '▁di', '▁s', 'og', 'gi', 'orno', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'sar', 'à', '▁rich', 'iest', 'o', '▁il', '▁nomin', 'at', 'ivo', '▁del', '▁client', 'e', '▁for', 'n', 'ito', '▁al', '▁moment', 'o', '▁della', '▁pren', 'ot', 'azione', '▁', '\n', 'e', '▁il', '▁tip', 'o', '▁di', '▁mod', 'ific', 'a', '▁che', '▁vu', 'ole', '▁ap', 'port', 'are', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁della', '▁pren', 'ot', 'azione', '▁es', 'ist', 'ente', '▁ed', '▁eventual', 'ment', 'e', '▁delle', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁', '\n', 'dell', ""'"", 'al', 'ber', 'go', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'qu', 'ando', '▁si', '▁cer', 'ca', '▁un', '▁pren', 'ot', 'azione', '▁da', '▁mod', 'ific', 'are', ',', '▁se', '▁ess', 'a', '▁non', '▁es', 'iste', '▁de', 've', '▁ess', 'ere', '▁', '\n', 'most', 'r', 'ato', '▁un', '▁mess', 'aggio', '▁d', ""'"", 'er', 'r', 'ore', '▁al', 'tr', 'iment', 'i', '▁devon', 'o', '▁ess', 'ere', '▁most', 'r', 'ati', '▁i', '▁d', 'ati', '▁della', '▁', '\n', 'p', 'ren', 'ot', 'azione', '▁preced', 'ente', '.', '▁eff', 'ett', 'uate', '▁tut', 'te', '▁le', '▁mod', 'ific', 'he', '▁ver', 'r', 'à', '▁rich', 'iest', 'a', '▁la', '▁lor', 'o', '▁', '\n', 'con', 'fer', 'ma', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'mod', 'ific', 'a', '▁della', '▁pren', 'ot', 'azione', '▁es', 'ist', 'ente', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'pre', '-0', '5.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'op', 'z', 'ionale', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁1.2', '\n\n', 'data', ':', '▁0', '9/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'pre', '-06', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'mod', 'ific', 'a', '▁di', '▁una', '▁pren', 'ot', 'azione', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁ap', 'port', 'are', '▁delle', '▁mod', 'ific', 'he', '▁ad', '▁una', '▁pren', 'ot', 'azione', '▁gi', 'à', '▁', '\n', 'registr', 'ata', '▁nel', '▁sistema', '.', '▁tal', 'i', '▁mod', 'ific', 'he', '▁dov', 'r', 'anno', '▁natural', 'mente', '▁ag', 'gi', 'orn', 'are', '▁la', '▁', '\n', 'p', 'ren', 'ot', 'azione', '▁del', '▁client', 'e', '▁non', 'ché', '▁le', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '▁nel', '▁cas', 'o', '▁in', '▁cui', '▁sia', '▁', '\n', 'st', 'ato', '▁rit', 'occ', 'ato', '▁il', '▁period', 'o', '▁di', '▁sog', 'gi', 'orno', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'sar', 'à', '▁rich', 'iest', 'o', '▁il', '▁nomin', 'ativo', '▁del', '▁client', 'e', '▁forn', 'ito', '▁al', '▁moment', 'o', '▁della', '▁pren', 'ot', 'azione', '▁', '\n', 'e', '▁il', '▁tipo', '▁di', '▁mod', 'ific', 'a', '▁che', '▁vu', 'ole', '▁ap', 'port', 'are', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁della', '▁pren', 'ot', 'azione', '▁es', 'ist', 'ente', '▁ed', '▁eventual', 'mente', '▁delle', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁', '\n', 'dell', ""'"", 'al', 'ber', 'go', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'qu', 'ando', '▁si', '▁cer', 'ca', '▁un', '▁pren', 'ot', 'azione', '▁da', '▁mod', 'ific', 'are', ',', '▁se', '▁essa', '▁non', '▁es', 'iste', '▁de', 've', '▁ess', 'ere', '▁', '\n', 'most', 'rato', '▁un', '▁mess', 'aggio', '▁d', ""'"", 'er', 'r', 'ore', '▁altr', 'iment', 'i', '▁devon', 'o', '▁ess', 'ere', '▁most', 'rati', '▁i', '▁d', 'ati', '▁della', '▁', '\n', 'p', 'ren', 'ot', 'azione', '▁preced', 'ente', '.', '▁eff', 'ett', 'uate', '▁tutte', '▁le', '▁mod', 'ific', 'he', '▁ver', 'rà', '▁rich', 'iest', 'a', '▁la', '▁lor', 'o', '▁', '\n', 'con', 'fer', 'ma', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'mod', 'ific', 'a', '▁della', '▁pren', 'ot', 'azione', '▁es', 'ist', 'ente', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2,', '▁f', '-', 'pre', '-05.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'op', 'z', 'ionale', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁1.2', '\n\n', 'data', ':', '▁0', '9/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero pre tipo funzional requisito modifica una prenotazion descrizion deve esser possibil apportar dell modifich una prenotazion registrata nel sistema tali modifich dovranno naturalment aggiornar prenotazion del client nonch disponibilit dell albergo nel caso cui sia stato ritoccato periodo soggiorno input richiesto sar richiesto nominativo del client fornito momento della prenotazion tipo modifica che vuol apportar output desiderato modifica della prenotazion esistent eventualment dell disponibilit dell albergo criterio accettazion quando cerca prenotazion modificar essa non esist deve esser mostrato messaggio error altrimenti devono esser mostrati dati della prenotazion precedent effettu tutt modifich verr richiesta loro conferma aspett colleg modifica della prenotazion esistent requis collegati pre pre stato releas priorit stabilit livello comprension categoria final opzional stabil piena comprension softwar version data compilato martini roberto note
4~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-GES-03.txt~F-GES-03.txt~"
Requisito numero: 
F-GES-03
Tipo:
Funzionale
 
Requisito:
Gestione archivio storico dei clienti.
Descrizione:
Il sistema deve tenere alcuni dati del cliente per tutto l'anno successivo a 
quello di soggiorno. Se un cliente è già presente nell'elenco, dovranno essere 
aggiornati i suoi dati. Nellarchivio saranno inseriti: nome, cognome e 
indirizzo del cliente e il numero dellultima stanza da lui occupata 
nellalbergo. Deve inoltre essere possibile recuperare e visualizzare i dati 
contenuti nellarchivio storico perché lalbergatore possa avere informazioni a 
lui utili in qualsiasi momento ne abbia necessità.
Input richiesto:
I dati del cliente che si ritiene utile salvare verranno presi dall'archivio clienti.
Output desiderato:
Aggiornamento archivio storico clienti.
Criterio di 
accettazione:
I dati devono durare nellarchivio almeno fino alla fine dell'anno seguente a 
quello di inserimento. Se un cliente è già presente nell'archivio i suoi dati 
verranno aggiornati in base all'ultimo soggiorno.
Aspettative collegate:
Poter mantenere il contatto con i clienti più recenti al fine di promuovere e 
pubblicizzare le offerte dell'albergo per la stagione seguente.
Requisiti collegati:
nn.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Software
Versione: 2.1

Data: 10/04/1998

Compilato da: Meneghini Matteo 

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ges', '-0', '3', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'gest', 'ion', 'e', '▁arch', 'iv', 'io', '▁stor', 'ico', '▁de', 'i', '▁cl', 'ient', 'i', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'il', '▁s', 'ist', 'em', 'a', '▁de', 've', '▁ten', 'ere', '▁al', 'c', 'un', 'i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '▁per', '▁t', 'ut', 'to', '▁l', ""'"", 'ann', 'o', '▁success', 'iv', 'o', '▁a', '▁', '\n', 'qu', 'ello', '▁di', '▁s', 'og', 'gi', 'orn', 'o', '.', '▁se', '▁un', '▁cl', 'ient', 'e', '▁', 'è', '▁gi', 'à', '▁present', 'e', '▁n', 'ell', ""'"", 'el', 'en', 'co', ',', '▁d', 'ov', 'r', 'ann', 'o', '▁ess', 'ere', '▁', '\n', 'ag', 'gi', 'orn', 'ati', '▁i', '▁su', 'o', 'i', '▁d', 'ati', '.', '▁n', 'ell', '\x92', 'arch', 'iv', 'io', '▁sar', 'ann', 'o', '▁ins', 'er', 'iti', ':', '▁n', 'ome', ',', '▁co', 'gn', 'ome', '▁e', '▁', '\n', 'ind', 'ir', 'iz', 'zo', '▁del', '▁cl', 'ient', 'e', '▁e', '▁il', '▁num', 'ero', '▁d', 'ell', '\x92', 'ult', 'ima', '▁stan', 'za', '▁da', '▁lu', 'i', '▁occup', 'ata', '▁', '\n', 'nell', '\x92', 'al', 'ber', 'go', '.', '▁de', 've', '▁in', 'ol', 't', 're', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁rec', 'up', 'er', 'are', '▁e', '▁visual', 'iz', 'z', 'are', '▁i', '▁d', 'ati', '▁', '\n', 'con', 'ten', 'ut', 'i', '▁n', 'ell', '\x92', 'arch', 'iv', 'io', '▁stor', 'ico', '▁per', 'ch', 'é', '▁l', '\x92', 'al', 'berg', 'at', 'ore', '▁poss', 'a', '▁aver', 'e', '▁inform', 'az', 'ion', 'i', '▁a', '▁', '\n', 'l', 'ui', '▁ut', 'ili', '▁in', '▁qu', 'als', 'ias', 'i', '▁moment', 'o', '▁ne', '▁abb', 'ia', '▁necess', 'it', 'à', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '▁che', '▁si', '▁r', 'iti', 'ene', '▁ut', 'ile', '▁salv', 'are', '▁ver', 'r', 'ann', 'o', '▁pres', 'i', '▁dall', ""'"", 'arch', 'iv', 'io', '▁cl', 'ient', 'i', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'ag', 'gi', 'orn', 'ament', 'o', '▁arch', 'iv', 'io', '▁stor', 'ico', '▁cl', 'ient', 'i', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'i', '▁d', 'ati', '▁dev', 'on', 'o', '▁dur', 'are', '▁n', 'ell', '\x92', 'arch', 'iv', 'io', '▁al', 'men', 'o', '▁fin', 'o', '▁all', 'a', '▁fine', '▁d', 'ell', ""'"", 'ann', 'o', '▁se', 'gu', 'ent', 'e', '▁a', '▁', '\n', 'qu', 'ello', '▁di', '▁ins', 'er', 'iment', 'o', '.', '▁se', '▁un', '▁cl', 'ient', 'e', '▁', 'è', '▁gi', 'à', '▁present', 'e', '▁n', 'ell', ""'"", 'arch', 'iv', 'io', '▁i', '▁su', 'o', 'i', '▁d', 'ati', '▁', '\n', 'ver', 'r', 'ann', 'o', '▁ag', 'gi', 'orn', 'ati', '▁in', '▁base', '▁all', ""'"", 'ult', 'im', 'o', '▁s', 'og', 'gi', 'orn', 'o', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'p', 'ot', 'er', '▁m', 'ant', 'en', 'ere', '▁il', '▁cont', 'att', 'o', '▁con', '▁i', '▁cl', 'ient', 'i', '▁p', 'i', 'ù', '▁recent', 'i', '▁al', '▁fine', '▁di', '▁prom', 'u', 'over', 'e', '▁e', '▁', '\n', 'p', 'ub', 'bl', 'ic', 'iz', 'z', 'are', '▁le', '▁offer', 'te', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '▁per', '▁la', '▁st', 'ag', 'ion', 'e', '▁se', 'gu', 'ent', 'e', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'n', 'n', '.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '1', '\n\n', 'd', 'ata', ':', '▁10', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁men', 'eg', 'h', 'ini', '▁mat', 'te', 'o', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ges', '-03', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁archiv', 'io', '▁stor', 'ico', '▁dei', '▁client', 'i', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'il', '▁sist', 'ema', '▁de', 've', '▁ten', 'ere', '▁alc', 'uni', '▁d', 'ati', '▁del', '▁client', 'e', '▁per', '▁tut', 'to', '▁l', ""'"", 'ann', 'o', '▁success', 'ivo', '▁a', '▁', '\n', 'qu', 'ello', '▁di', '▁s', 'og', 'gi', 'orno', '.', '▁se', '▁un', '▁client', 'e', '▁', 'è', '▁gi', 'à', '▁present', 'e', '▁nell', ""'"", 'el', 'en', 'co', ',', '▁dov', 'r', 'ann', 'o', '▁ess', 'ere', '▁', '\n', 'aggi', 'orn', 'ati', '▁i', '▁su', 'oi', '▁d', 'ati', '.', '▁nell', '\x92', 'arch', 'iv', 'io', '▁sar', 'ann', 'o', '▁ins', 'er', 'iti', ':', '▁n', 'ome', ',', '▁cogn', 'ome', '▁e', '▁', '\n', 'ind', 'ir', 'iz', 'zo', '▁del', '▁client', 'e', '▁e', '▁il', '▁num', 'ero', '▁dell', '\x92', 'ult', 'ima', '▁stan', 'za', '▁da', '▁lu', 'i', '▁occup', 'ata', '▁', '\n', 'nell', '\x92', 'al', 'ber', 'go', '.', '▁de', 've', '▁in', 'ol', 'tre', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁rec', 'uper', 'are', '▁e', '▁visual', 'izz', 'are', '▁i', '▁d', 'ati', '▁', '\n', 'con', 'ten', 'uti', '▁nell', '\x92', 'arch', 'iv', 'io', '▁stor', 'ico', '▁per', 'ch', 'é', '▁l', '\x92', 'al', 'berg', 'atore', '▁poss', 'a', '▁aver', 'e', '▁inform', 'az', 'ioni', '▁a', '▁', '\n', 'l', 'ui', '▁ut', 'ili', '▁in', '▁qu', 'als', 'ias', 'i', '▁moment', 'o', '▁ne', '▁abb', 'ia', '▁necess', 'it', 'à', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'i', '▁d', 'ati', '▁del', '▁client', 'e', '▁che', '▁si', '▁r', 'iti', 'ene', '▁ut', 'ile', '▁salv', 'are', '▁ver', 'r', 'ann', 'o', '▁pres', 'i', '▁dall', ""'"", 'arch', 'iv', 'io', '▁client', 'i', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'aggi', 'orn', 'amento', '▁archiv', 'io', '▁stor', 'ico', '▁client', 'i', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'i', '▁d', 'ati', '▁devon', 'o', '▁dur', 'are', '▁nell', '\x92', 'arch', 'iv', 'io', '▁al', 'men', 'o', '▁fin', 'o', '▁alla', '▁fine', '▁dell', ""'"", 'ann', 'o', '▁se', 'gu', 'ente', '▁a', '▁', '\n', 'qu', 'ello', '▁di', '▁ins', 'er', 'iment', 'o', '.', '▁se', '▁un', '▁client', 'e', '▁', 'è', '▁gi', 'à', '▁present', 'e', '▁nell', ""'"", 'arch', 'iv', 'io', '▁i', '▁su', 'oi', '▁d', 'ati', '▁', '\n', 'ver', 'r', 'ann', 'o', '▁ag', 'gi', 'orn', 'ati', '▁in', '▁base', '▁all', ""'"", 'ult', 'imo', '▁s', 'og', 'gi', 'orno', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'pot', 'er', '▁mant', 'en', 'ere', '▁il', '▁cont', 'att', 'o', '▁con', '▁i', '▁client', 'i', '▁pi', 'ù', '▁recent', 'i', '▁al', '▁fine', '▁di', '▁prom', 'u', 'over', 'e', '▁e', '▁', '\n', 'p', 'ub', 'bl', 'ic', 'izz', 'are', '▁le', '▁offer', 'te', '▁dell', ""'"", 'al', 'ber', 'go', '▁per', '▁la', '▁stag', 'ione', '▁se', 'gu', 'ente', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'nn', '.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁10', '/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁men', 'eg', 'h', 'ini', '▁matteo', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'ges', '-03', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁archiv', 'io', '▁stor', 'ico', '▁dei', '▁client', 'i', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'il', '▁sistema', '▁de', 've', '▁ten', 'ere', '▁alc', 'uni', '▁d', 'ati', '▁del', '▁client', 'e', '▁per', '▁tutto', '▁l', ""'"", 'anno', '▁success', 'ivo', '▁a', '▁', '\n', 'qu', 'ello', '▁di', '▁sog', 'gi', 'orno', '.', '▁se', '▁un', '▁client', 'e', '▁è', '▁gi', 'à', '▁present', 'e', '▁nell', ""'"", 'elen', 'co', ',', '▁dov', 'r', 'anno', '▁ess', 'ere', '▁', '\n', 'aggi', 'orn', 'ati', '▁i', '▁su', 'oi', '▁d', 'ati', '.', '▁nell', '\x92', 'archiv', 'io', '▁sar', 'anno', '▁ins', 'er', 'iti', ':', '▁nome', ',', '▁cogn', 'ome', '▁e', '▁', '\n', 'ind', 'ir', 'iz', 'zo', '▁del', '▁client', 'e', '▁e', '▁il', '▁numero', '▁dell', '\x92', 'ult', 'ima', '▁stanza', '▁da', '▁lui', '▁occup', 'ata', '▁', '\n', 'nell', '\x92', 'al', 'ber', 'go', '.', '▁de', 've', '▁in', 'ol', 'tre', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁recuper', 'are', '▁e', '▁visual', 'izz', 'are', '▁i', '▁d', 'ati', '▁', '\n', 'con', 'ten', 'uti', '▁nell', '\x92', 'archiv', 'io', '▁stor', 'ico', '▁perch', 'é', '▁l', '\x92', 'al', 'berg', 'atore', '▁poss', 'a', '▁aver', 'e', '▁inform', 'azioni', '▁a', '▁', '\n', 'lui', '▁ut', 'ili', '▁in', '▁qu', 'als', 'ias', 'i', '▁moment', 'o', '▁ne', '▁abb', 'ia', '▁necess', 'ità', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'i', '▁d', 'ati', '▁del', '▁client', 'e', '▁che', '▁si', '▁r', 'iti', 'ene', '▁ut', 'ile', '▁salv', 'are', '▁ver', 'r', 'anno', '▁pres', 'i', '▁dall', ""'"", 'archiv', 'io', '▁client', 'i', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'aggi', 'orn', 'amento', '▁archiv', 'io', '▁stor', 'ico', '▁client', 'i', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'i', '▁d', 'ati', '▁devon', 'o', '▁dur', 'are', '▁nell', '\x92', 'archiv', 'io', '▁al', 'men', 'o', '▁fino', '▁alla', '▁fine', '▁dell', ""'"", 'anno', '▁segu', 'ente', '▁a', '▁', '\n', 'qu', 'ello', '▁di', '▁ins', 'er', 'imento', '.', '▁se', '▁un', '▁client', 'e', '▁è', '▁gi', 'à', '▁present', 'e', '▁nell', ""'"", 'archiv', 'io', '▁i', '▁su', 'oi', '▁d', 'ati', '▁', '\n', 'ver', 'r', 'anno', '▁ag', 'gi', 'orn', 'ati', '▁in', '▁base', '▁all', ""'"", 'ult', 'imo', '▁sog', 'gi', 'orno', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'pot', 'er', '▁mant', 'en', 'ere', '▁il', '▁cont', 'atto', '▁con', '▁i', '▁client', 'i', '▁pi', 'ù', '▁recent', 'i', '▁al', '▁fine', '▁di', '▁prom', 'u', 'over', 'e', '▁e', '▁', '\n', 'pub', 'bl', 'ic', 'izz', 'are', '▁le', '▁offer', 'te', '▁dell', ""'"", 'al', 'ber', 'go', '▁per', '▁la', '▁stag', 'ione', '▁segu', 'ente', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'nn', '.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁10', '/04/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁meneg', 'hini', '▁matteo', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero ges tipo funzional requisito gestion archivio storico dei clienti descrizion sistema deve tener alcuni dati del client per tutto anno successivo quello soggiorno client present nell elenco dovranno esser aggiornati suoi dati nell archivio saranno inser nome cognom indirizzo del client numero dell ultima stanza lui occupata nell albergo deve inoltr esser possibil recuperar visualizzar dati contenuti nell archivio storico perch albergator possa aver informazioni lui utili qualsiasi momento abbia necessit input richiesto dati del client che ritien util salvar verranno presi dall archivio clienti output desiderato aggiornamento archivio storico clienti criterio accettazion dati devono durar nell archivio almeno fino alla fine dell anno seguent quello inserimento client present nell archivio suoi dati verranno aggiornati base ultimo soggiorno aspett colleg poter mantener contatto con clienti recenti fine promuover pubblicizzar offert dell albergo per stagion seguent requis collegati stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato meneghini matteo note
5~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-SOG-05.txt~F-SOG-05.txt~"
Requisito numero: 
F-SOG-05
Tipo:
Funzionale
 
Requisito:
Stampa dell'ammontare conto.
Descrizione:
Al momento in cui il cliente sta per lasciare l'albergo si deve recuperare il 
conto finale e provvedere alla sua stampa con questa forma:
VOCE                  NUM.                             AMM. L.
Persone                    #
Notti                         #                                        ###
Scatti tel.                  #                                        ###
PARZIALE1                                                  #####
Desc. extra                #                                       ###
  ...                             ...                                        ...
PARZIALE2                                                 #####
-----------------------------------------------------------------------
TOTALE                                                   #######
Input richiesto:
Dati relativi al pernottamento presi dall'archivio dei clienti e delle stanze.
Output desiderato:
Stampa del conto.
Criterio di 
accettazione:
La stampa deve riportare i dati visualizzati a video.
Aspettative collegate:
Chiara rappresentazione delle spese del cliente.
Requisiti collegati:
F-SOG-04.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
1
Richiesto
Volatile
Piena comprensione
Software
Versione: 1

Data: 02/04/1998

Compilato da: Meneghini Matteo 

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-0', '5', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'st', 'amp', 'a', '▁d', 'ell', ""'"", 'am', 'mont', 'are', '▁cont', 'o', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'al', '▁moment', 'o', '▁in', '▁cu', 'i', '▁il', '▁cl', 'ient', 'e', '▁st', 'a', '▁per', '▁l', 'asc', 'ia', 're', '▁l', ""'"", 'al', 'ber', 'go', '▁si', '▁de', 've', '▁rec', 'up', 'er', 'are', '▁il', '▁', '\n', 'c', 'onto', '▁final', 'e', '▁e', '▁prov', 'ved', 'ere', '▁all', 'a', '▁su', 'a', '▁stamp', 'a', '▁con', '▁quest', 'a', '▁form', 'a', ':', '\n', 'vo', 'ce', '▁num', '.', '▁am', 'm', '.', '▁l', '.', '\n', 'pers', 'one', '▁#', '\n', 'n', 'ott', 'i', '▁#', '▁#', '#', '#', '\n', 'sc', 'att', 'i', '▁tel', '.', '▁#', '▁#', '#', '#', '\n', 'par', 'z', 'ial', 'e', '1', '▁#', '#', '#', '#', '#', '\n', 'des', 'c', '.', '▁extra', '▁#', '▁#', '#', '#', '\n', '▁...', '▁...', '▁...', '\n', 'par', 'z', 'ial', 'e', '2', '▁#', '#', '#', '#', '#', '\n', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '\n', 't', 'ot', 'ale', '▁#', '#', '#', '#', '#', '#', '#', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'd', 'ati', '▁rel', 'at', 'iv', 'i', '▁al', '▁per', 'n', 'ott', 'ament', 'o', '▁pres', 'i', '▁dall', ""'"", 'arch', 'iv', 'io', '▁de', 'i', '▁cl', 'ient', 'i', '▁e', '▁del', 'le', '▁stan', 'ze', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'st', 'amp', 'a', '▁del', '▁cont', 'o', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'la', '▁stamp', 'a', '▁de', 've', '▁r', 'ip', 'ort', 'are', '▁i', '▁d', 'ati', '▁visual', 'iz', 'z', 'ati', '▁a', '▁video', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'chi', 'ara', '▁r', 'app', 'resent', 'az', 'ion', 'e', '▁del', 'le', '▁sp', 'ese', '▁del', '▁cl', 'ient', 'e', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'i', 'est', 'o', '\n', 'vol', 'at', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁1', '\n\n', 'd', 'ata', ':', '▁0', '2', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁men', 'eg', 'h', 'ini', '▁mat', 'te', 'o', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-0', '5', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'st', 'ampa', '▁dell', ""'"", 'am', 'mont', 'are', '▁cont', 'o', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'al', '▁moment', 'o', '▁in', '▁cu', 'i', '▁il', '▁client', 'e', '▁sta', '▁per', '▁l', 'asc', 'ia', 're', '▁l', ""'"", 'al', 'ber', 'go', '▁si', '▁de', 've', '▁rec', 'uper', 'are', '▁il', '▁', '\n', 'c', 'onto', '▁finale', '▁e', '▁prov', 'ved', 'ere', '▁alla', '▁su', 'a', '▁stamp', 'a', '▁con', '▁quest', 'a', '▁form', 'a', ':', '\n', 'vo', 'ce', '▁num', '.', '▁am', 'm', '.', '▁l', '.', '\n', 'pers', 'one', '▁#', '\n', 'n', 'otti', '▁#', '▁#', '#', '#', '\n', 'sc', 'atti', '▁tel', '.', '▁#', '▁#', '#', '#', '\n', 'par', 'z', 'ial', 'e', '1', '▁#', '#', '#', '#', '#', '\n', 'desc', '.', '▁extra', '▁#', '▁#', '#', '#', '\n', '▁...', '▁...', '▁...', '\n', 'par', 'z', 'ial', 'e', '2', '▁#', '#', '#', '#', '#', '\n', '--------', '--------', '--------', '--------', '--------', '--------', '--------', '--------', '----', '--', '-', '\n', 'tot', 'ale', '▁#', '#', '#', '#', '#', '#', '#', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁rel', 'ativ', 'i', '▁al', '▁pern', 'ott', 'amento', '▁pres', 'i', '▁dall', ""'"", 'arch', 'iv', 'io', '▁dei', '▁client', 'i', '▁e', '▁delle', '▁stan', 'ze', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'st', 'ampa', '▁del', '▁cont', 'o', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'la', '▁stamp', 'a', '▁de', 've', '▁rip', 'ort', 'are', '▁i', '▁d', 'ati', '▁visual', 'izz', 'ati', '▁a', '▁video', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'chi', 'ara', '▁rapp', 'resent', 'azione', '▁delle', '▁sp', 'ese', '▁del', '▁client', 'e', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'iest', 'o', '\n', 'vol', 'atile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁1', '\n\n', 'data', ':', '▁0', '2/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁men', 'eg', 'h', 'ini', '▁matteo', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-05', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'st', 'ampa', '▁dell', ""'"", 'am', 'mont', 'are', '▁cont', 'o', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'al', '▁moment', 'o', '▁in', '▁cui', '▁il', '▁client', 'e', '▁sta', '▁per', '▁lasc', 'ia', 're', '▁l', ""'"", 'al', 'ber', 'go', '▁si', '▁de', 've', '▁recuper', 'are', '▁il', '▁', '\n', 'c', 'onto', '▁finale', '▁e', '▁prov', 'vedere', '▁alla', '▁sua', '▁stampa', '▁con', '▁quest', 'a', '▁forma', ':', '\n', 'vo', 'ce', '▁num', '.', '▁amm', '.', '▁l', '.', '\n', 'pers', 'one', '▁#', '\n', 'n', 'otti', '▁#', '▁#', '##', '\n', 'sc', 'atti', '▁tel', '.', '▁#', '▁#', '##', '\n', 'par', 'z', 'iale', '1', '▁#', '####', '\n', 'desc', '.', '▁extra', '▁#', '▁#', '##', '\n', '▁...', '▁...', '▁...', '\n', 'par', 'z', 'iale', '2', '▁#', '####', '\n', '----------------', '----------------', '----------------', '----------------', '----', '---', '\n', 'tot', 'ale', '▁#', '####', '##', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁relativ', 'i', '▁al', '▁pern', 'ott', 'amento', '▁pres', 'i', '▁dall', ""'"", 'archiv', 'io', '▁dei', '▁client', 'i', '▁e', '▁delle', '▁stan', 'ze', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'st', 'ampa', '▁del', '▁cont', 'o', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'la', '▁stampa', '▁de', 've', '▁rip', 'ort', 'are', '▁i', '▁d', 'ati', '▁visual', 'izz', 'ati', '▁a', '▁video', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'chi', 'ara', '▁rapp', 'resent', 'azione', '▁delle', '▁sp', 'ese', '▁del', '▁client', 'e', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-04.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'iest', 'o', '\n', 'vol', 'atile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁1', '\n\n', 'data', ':', '▁0', '2/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁meneg', 'hini', '▁matteo', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero sog tipo funzional requisito stampa dell ammontar conto descrizion momento cui client sta per lasciar albergo deve recuperar conto final provveder alla sua stampa con questa forma voce num amm person notti scatti tel parzial desc extra parzial total input richiesto dati relativi pernottamento presi dall archivio dei clienti dell stanz output desiderato stampa del conto criterio accettazion stampa deve riportar dati visualizzati video aspett colleg chiara rappresentazion dell spese del client requis collegati sog stato releas priorit stabilit livello comprension categoria final richiesto volatil piena comprension softwar version data compilato meneghini matteo note
6~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-SOG-01.txt~F-SOG-01.txt~"
Requisito numero: 
F-SOG-01
Tipo:
Funzionale
 
Requisito:
Gestione dell'arrivo di un cliente.
Descrizione:
All'arrivo di un cliente possono verificarsi le seguenti eventualità:
1. se il cliente ha precedentemente prenotato allora dalla prenotazione si 
risale al numero delle camere che andrà ad occupare e la prenotazione verrà 
cancellata dall'elenco delle prenotazioni;
2. se il cliente non ha precedentemente prenotato si procederà come se fosse 
in atto una prenotazione, cioè:
a) si ricerca una camera disponibile;
b) nel caso l'esito sia favorevole, la si assegna al cliente per il periodo 
specificato.
1. Il nuovo cliente richiede di aggiungersi a coloro che già occupano una 
certa stanza.
A questo punto a partire dalle stanze assegnate (o tramite prenotazione o al 
momento), si inseriscono nell'archivio degli ospiti, camera per camera, i dati 
delle persone che vi soggiorneranno. Tali dati comprenderanno, oltre ai dati 
personali (facoltativi per neonati, bambini e ragazzi che soggiornano con 
adulti), il tipo di pensionamento (questo permette di avere persone con tipo di 
pensionamento diverso in una stessa stanza). Deve essere anche possibile 
distinguere i clienti che rientrano nelle categorie di neonati e bambini per 
rendere possibile l'applicazione di eventuali sconti. Alle varie stanze che 
vengono così ad essere utilizzate verrà dato l'appellativo di occupate.
Input richiesto:
Dati personali dei vari occupanti.
Output desiderato:
Aggiornamento archivio dei clienti e modifica dello stato delle stanze.
Criterio di 
accettazione:
Se dai dati forniti dal cliente non si riesce a risalire alla prenotazione verrà 
visualizzato un messaggio di errore e verrà chiesto di ripetere l'operazione o 
annullarla. Se si tenta di inserire in una stanza piena un'ulteriore persona 
apparirà un messaggio di avvertimento.
Aspettative collegate:
Conoscere per ogni stanza i dati di coloro che vi alloggiano.
Requisiti collegati:
F-PRE-01, F-PRE-02.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Software
Versione: 2.1

Data: 04/04/1998

Compilato da: Colombari Andrea

Note:


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-0', '1', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'gest', 'ion', 'e', '▁d', 'ell', ""'"", 'ar', 'r', 'iv', 'o', '▁di', '▁un', '▁cl', 'ient', 'e', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'all', ""'"", 'ar', 'r', 'iv', 'o', '▁di', '▁un', '▁cl', 'ient', 'e', '▁pos', 'son', 'o', '▁ver', 'ific', 'ars', 'i', '▁le', '▁se', 'gu', 'ent', 'i', '▁event', 'ual', 'it', 'à', ':', '\n', '1.', '▁se', '▁il', '▁cl', 'ient', 'e', '▁ha', '▁preced', 'ent', 'ement', 'e', '▁p', 'ren', 'ot', 'ato', '▁all', 'ora', '▁dall', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁si', '▁', '\n', 'ris', 'ale', '▁al', '▁num', 'ero', '▁del', 'le', '▁cam', 'ere', '▁che', '▁and', 'r', 'à', '▁ad', '▁occup', 'are', '▁e', '▁la', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁ver', 'r', 'à', '▁', '\n', 'c', 'anc', 'ell', 'ata', '▁dall', ""'"", 'el', 'en', 'co', '▁del', 'le', '▁p', 'ren', 'ot', 'az', 'ion', 'i', ';', '\n', '2.', '▁se', '▁il', '▁cl', 'ient', 'e', '▁non', '▁ha', '▁preced', 'ent', 'ement', 'e', '▁p', 'ren', 'ot', 'ato', '▁si', '▁proced', 'er', 'à', '▁come', '▁se', '▁f', 'os', 'se', '▁', '\n', 'in', '▁att', 'o', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', ',', '▁c', 'io', 'è', ':', '\n', 'a', ')', '▁si', '▁ric', 'er', 'ca', '▁un', 'a', '▁camer', 'a', '▁dis', 'pon', 'ib', 'ile', ';', '\n', 'b', ')', '▁nel', '▁cas', 'o', '▁l', ""'"", 'es', 'ito', '▁s', 'ia', '▁fav', 'ore', 'v', 'ole', ',', '▁la', '▁si', '▁as', 'se', 'g', 'na', '▁al', '▁cl', 'ient', 'e', '▁per', '▁il', '▁period', 'o', '▁', '\n', 'spec', 'ific', 'ato', '.', '\n', '1.', '▁il', '▁n', 'u', 'ovo', '▁cl', 'ient', 'e', '▁rich', 'ied', 'e', '▁di', '▁ag', 'gi', 'ung', 'ers', 'i', '▁a', '▁color', 'o', '▁che', '▁gi', 'à', '▁occup', 'ano', '▁un', 'a', '▁', '\n', 'c', 'ert', 'a', '▁stan', 'za', '.', '\n', 'a', '▁quest', 'o', '▁p', 'unt', 'o', '▁a', '▁part', 'ire', '▁d', 'alle', '▁stan', 'ze', '▁as', 'se', 'gn', 'ate', '▁(', 'o', '▁tr', 'am', 'ite', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁o', '▁al', '▁', '\n', 'm', 'om', 'ent', 'o', '),', '▁si', '▁ins', 'er', 'is', 'con', 'o', '▁n', 'ell', ""'"", 'arch', 'iv', 'io', '▁deg', 'li', '▁o', 'sp', 'iti', ',', '▁camer', 'a', '▁per', '▁camer', 'a', ',', '▁i', '▁d', 'ati', '▁', '\n', 'd', 'elle', '▁pers', 'one', '▁che', '▁vi', '▁s', 'og', 'gi', 'orn', 'er', 'ann', 'o', '.', '▁tal', 'i', '▁d', 'ati', '▁comp', 'render', 'ann', 'o', ',', '▁ol', 't', 're', '▁a', 'i', '▁d', 'ati', '▁', '\n', 'p', 'erson', 'ali', '▁(', 'f', 'ac', 'ol', 't', 'at', 'iv', 'i', '▁per', '▁ne', 'on', 'ati', ',', '▁b', 'amb', 'ini', '▁e', '▁r', 'ag', 'azz', 'i', '▁che', '▁s', 'og', 'gi', 'orn', 'ano', '▁con', '▁', '\n', 'ad', 'ult', 'i', '),', '▁il', '▁tip', 'o', '▁di', '▁p', 'ension', 'ament', 'o', '▁(', 'qu', 'est', 'o', '▁per', 'met', 'te', '▁di', '▁aver', 'e', '▁pers', 'one', '▁con', '▁tip', 'o', '▁di', '▁', '\n', 'p', 'ension', 'ament', 'o', '▁divers', 'o', '▁in', '▁un', 'a', '▁st', 'ess', 'a', '▁stan', 'za', ').', '▁de', 've', '▁ess', 'ere', '▁an', 'che', '▁poss', 'ib', 'ile', '▁', '\n', 'dist', 'ingu', 'ere', '▁i', '▁cl', 'ient', 'i', '▁che', '▁r', 'ient', 'r', 'ano', '▁n', 'elle', '▁categ', 'or', 'ie', '▁di', '▁ne', 'on', 'ati', '▁e', '▁b', 'amb', 'ini', '▁per', '▁', '\n', 'ren', 'd', 'ere', '▁poss', 'ib', 'ile', '▁l', ""'"", 'ap', 'pl', 'ic', 'az', 'ion', 'e', '▁di', '▁event', 'ual', 'i', '▁sc', 'ont', 'i', '.', '▁alle', '▁var', 'ie', '▁stan', 'ze', '▁che', '▁', '\n', 'v', 'eng', 'on', 'o', '▁cos', 'ì', '▁ad', '▁ess', 'ere', '▁util', 'iz', 'z', 'ate', '▁ver', 'r', 'à', '▁d', 'ato', '▁l', ""'"", 'app', 'ell', 'at', 'iv', 'o', '▁di', '▁occup', 'ate', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'd', 'ati', '▁personal', 'i', '▁de', 'i', '▁vari', '▁occup', 'ant', 'i', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'ag', 'gi', 'orn', 'ament', 'o', '▁arch', 'iv', 'io', '▁de', 'i', '▁cl', 'ient', 'i', '▁e', '▁mod', 'ific', 'a', '▁d', 'ello', '▁stat', 'o', '▁del', 'le', '▁stan', 'ze', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'se', '▁d', 'ai', '▁d', 'ati', '▁for', 'n', 'iti', '▁dal', '▁cl', 'ient', 'e', '▁non', '▁si', '▁r', 'ies', 'ce', '▁a', '▁r', 'is', 'al', 'ire', '▁all', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁ver', 'r', 'à', '▁', '\n', 'vis', 'ual', 'iz', 'z', 'ato', '▁un', '▁mess', 'ag', 'gio', '▁di', '▁er', 'r', 'ore', '▁e', '▁ver', 'r', 'à', '▁chi', 'est', 'o', '▁di', '▁r', 'ip', 'et', 'ere', '▁l', ""'"", 'oper', 'az', 'ion', 'e', '▁o', '▁', '\n', 'ann', 'ull', 'ar', 'la', '.', '▁se', '▁si', '▁t', 'ent', 'a', '▁di', '▁ins', 'er', 'ire', '▁in', '▁un', 'a', '▁stan', 'za', '▁p', 'ien', 'a', '▁un', ""'"", 'ul', 'ter', 'i', 'ore', '▁person', 'a', '▁', '\n', 'app', 'ar', 'ir', 'à', '▁un', '▁mess', 'ag', 'gio', '▁di', '▁av', 'vert', 'iment', 'o', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'con', 'os', 'c', 'ere', '▁per', '▁og', 'ni', '▁stan', 'za', '▁i', '▁d', 'ati', '▁di', '▁color', 'o', '▁che', '▁vi', '▁all', 'og', 'gian', 'o', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '1,', '▁f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '1', '\n\n', 'd', 'ata', ':', '▁0', '4', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁colomb', 'ari', '▁andre', 'a', '\n\n', 'note', ':', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-01', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁dell', ""'"", 'arr', 'ivo', '▁di', '▁un', '▁client', 'e', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'all', ""'"", 'arr', 'ivo', '▁di', '▁un', '▁client', 'e', '▁pos', 'son', 'o', '▁ver', 'ific', 'ars', 'i', '▁le', '▁se', 'gu', 'ent', 'i', '▁eventual', 'it', 'à', ':', '\n', '1.', '▁se', '▁il', '▁client', 'e', '▁ha', '▁precedent', 'ement', 'e', '▁pren', 'ot', 'ato', '▁all', 'ora', '▁dall', 'a', '▁pren', 'ot', 'azione', '▁si', '▁', '\n', 'ris', 'ale', '▁al', '▁num', 'ero', '▁delle', '▁cam', 'ere', '▁che', '▁andr', 'à', '▁ad', '▁occup', 'are', '▁e', '▁la', '▁pren', 'ot', 'azione', '▁ver', 'r', 'à', '▁', '\n', 'canc', 'ell', 'ata', '▁dall', ""'"", 'el', 'en', 'co', '▁delle', '▁pren', 'ot', 'az', 'ioni', ';', '\n', '2.', '▁se', '▁il', '▁client', 'e', '▁non', '▁ha', '▁precedent', 'ement', 'e', '▁pren', 'ot', 'ato', '▁si', '▁proced', 'er', 'à', '▁come', '▁se', '▁f', 'osse', '▁', '\n', 'in', '▁att', 'o', '▁una', '▁pren', 'ot', 'azione', ',', '▁c', 'io', 'è', ':', '\n', 'a', ')', '▁si', '▁ric', 'er', 'ca', '▁una', '▁camera', '▁dis', 'pon', 'ib', 'ile', ';', '\n', 'b', ')', '▁nel', '▁cas', 'o', '▁l', ""'"", 'es', 'ito', '▁s', 'ia', '▁fav', 'ore', 'v', 'ole', ',', '▁la', '▁si', '▁as', 'seg', 'na', '▁al', '▁client', 'e', '▁per', '▁il', '▁period', 'o', '▁', '\n', 'specific', 'ato', '.', '\n', '1.', '▁il', '▁nu', 'ovo', '▁client', 'e', '▁rich', 'ied', 'e', '▁di', '▁ag', 'gi', 'ung', 'ers', 'i', '▁a', '▁color', 'o', '▁che', '▁gi', 'à', '▁occup', 'ano', '▁una', '▁', '\n', 'c', 'erta', '▁stan', 'za', '.', '\n', 'a', '▁quest', 'o', '▁punt', 'o', '▁a', '▁part', 'ire', '▁d', 'alle', '▁stan', 'ze', '▁as', 'se', 'gn', 'ate', '▁(', 'o', '▁tram', 'ite', '▁pren', 'ot', 'azione', '▁o', '▁al', '▁', '\n', 'm', 'om', 'ento', '),', '▁si', '▁ins', 'er', 'is', 'con', 'o', '▁nell', ""'"", 'arch', 'iv', 'io', '▁deg', 'li', '▁osp', 'iti', ',', '▁camera', '▁per', '▁camera', ',', '▁i', '▁d', 'ati', '▁', '\n', 'd', 'elle', '▁pers', 'one', '▁che', '▁vi', '▁s', 'og', 'gi', 'orn', 'er', 'ann', 'o', '.', '▁tal', 'i', '▁d', 'ati', '▁comp', 'render', 'ann', 'o', ',', '▁ol', 'tre', '▁ai', '▁d', 'ati', '▁', '\n', 'person', 'ali', '▁(', 'fac', 'olt', 'ativ', 'i', '▁per', '▁neon', 'ati', ',', '▁bamb', 'ini', '▁e', '▁rag', 'azzi', '▁che', '▁s', 'og', 'gi', 'orn', 'ano', '▁con', '▁', '\n', 'ad', 'ult', 'i', '),', '▁il', '▁tip', 'o', '▁di', '▁pension', 'amento', '▁(', 'quest', 'o', '▁per', 'met', 'te', '▁di', '▁aver', 'e', '▁pers', 'one', '▁con', '▁tip', 'o', '▁di', '▁', '\n', 'p', 'ension', 'amento', '▁divers', 'o', '▁in', '▁una', '▁st', 'essa', '▁stan', 'za', ').', '▁de', 've', '▁ess', 'ere', '▁an', 'che', '▁poss', 'ib', 'ile', '▁', '\n', 'dist', 'ingu', 'ere', '▁i', '▁client', 'i', '▁che', '▁r', 'ient', 'rano', '▁n', 'elle', '▁categor', 'ie', '▁di', '▁neon', 'ati', '▁e', '▁bamb', 'ini', '▁per', '▁', '\n', 'ren', 'd', 'ere', '▁poss', 'ib', 'ile', '▁l', ""'"", 'appl', 'ic', 'azione', '▁di', '▁eventual', 'i', '▁sc', 'ont', 'i', '.', '▁alle', '▁var', 'ie', '▁stan', 'ze', '▁che', '▁', '\n', 'v', 'eng', 'ono', '▁cos', 'ì', '▁ad', '▁ess', 'ere', '▁util', 'izz', 'ate', '▁ver', 'r', 'à', '▁d', 'ato', '▁l', ""'"", 'app', 'ell', 'at', 'ivo', '▁di', '▁occup', 'ate', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁personal', 'i', '▁dei', '▁vari', '▁occup', 'anti', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'aggi', 'orn', 'amento', '▁archiv', 'io', '▁dei', '▁client', 'i', '▁e', '▁mod', 'ific', 'a', '▁d', 'ello', '▁stat', 'o', '▁delle', '▁stan', 'ze', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'se', '▁dai', '▁d', 'ati', '▁for', 'n', 'iti', '▁dal', '▁client', 'e', '▁non', '▁si', '▁ries', 'ce', '▁a', '▁ris', 'al', 'ire', '▁alla', '▁pren', 'ot', 'azione', '▁ver', 'r', 'à', '▁', '\n', 'vis', 'ual', 'izz', 'ato', '▁un', '▁mess', 'aggio', '▁di', '▁err', 'ore', '▁e', '▁ver', 'r', 'à', '▁chi', 'est', 'o', '▁di', '▁rip', 'et', 'ere', '▁l', ""'"", 'oper', 'azione', '▁o', '▁', '\n', 'ann', 'ull', 'ar', 'la', '.', '▁se', '▁si', '▁tent', 'a', '▁di', '▁ins', 'er', 'ire', '▁in', '▁una', '▁stan', 'za', '▁p', 'iena', '▁un', ""'"", 'ul', 'ter', 'i', 'ore', '▁persona', '▁', '\n', 'app', 'ar', 'ir', 'à', '▁un', '▁mess', 'aggio', '▁di', '▁av', 'vert', 'iment', 'o', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'con', 'osc', 'ere', '▁per', '▁og', 'ni', '▁stan', 'za', '▁i', '▁d', 'ati', '▁di', '▁color', 'o', '▁che', '▁vi', '▁all', 'og', 'gian', 'o', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '1,', '▁f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁0', '4/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁colomb', 'ari', '▁andrea', '\n\n', 'note', ':', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-01', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁dell', ""'"", 'arr', 'ivo', '▁di', '▁un', '▁client', 'e', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'all', ""'"", 'arr', 'ivo', '▁di', '▁un', '▁client', 'e', '▁pos', 'son', 'o', '▁ver', 'ific', 'arsi', '▁le', '▁segu', 'enti', '▁eventual', 'ità', ':', '\n', '1.', '▁se', '▁il', '▁client', 'e', '▁ha', '▁precedent', 'ement', 'e', '▁pren', 'ot', 'ato', '▁all', 'ora', '▁dalla', '▁pren', 'ot', 'azione', '▁si', '▁', '\n', 'ris', 'ale', '▁al', '▁numero', '▁delle', '▁cam', 'ere', '▁che', '▁andr', 'à', '▁ad', '▁occup', 'are', '▁e', '▁la', '▁pren', 'ot', 'azione', '▁ver', 'rà', '▁', '\n', 'canc', 'ellata', '▁dall', ""'"", 'elen', 'co', '▁delle', '▁pren', 'ot', 'azioni', ';', '\n', '2.', '▁se', '▁il', '▁client', 'e', '▁non', '▁ha', '▁precedent', 'ement', 'e', '▁pren', 'ot', 'ato', '▁si', '▁proced', 'er', 'à', '▁come', '▁se', '▁fosse', '▁', '\n', 'in', '▁att', 'o', '▁una', '▁pren', 'ot', 'azione', ',', '▁cio', 'è', ':', '\n', 'a', ')', '▁si', '▁ricer', 'ca', '▁una', '▁camera', '▁dis', 'pon', 'ib', 'ile', ';', '\n', 'b', ')', '▁nel', '▁cas', 'o', '▁l', ""'"", 'es', 'ito', '▁sia', '▁fav', 'ore', 'v', 'ole', ',', '▁la', '▁si', '▁as', 'segna', '▁al', '▁client', 'e', '▁per', '▁il', '▁period', 'o', '▁', '\n', 'specific', 'ato', '.', '\n', '1.', '▁il', '▁nuovo', '▁client', 'e', '▁rich', 'ied', 'e', '▁di', '▁ag', 'gi', 'ung', 'ers', 'i', '▁a', '▁color', 'o', '▁che', '▁gi', 'à', '▁occup', 'ano', '▁una', '▁', '\n', 'c', 'erta', '▁stanza', '.', '\n', 'a', '▁quest', 'o', '▁punto', '▁a', '▁part', 'ire', '▁dalle', '▁stan', 'ze', '▁as', 'se', 'gn', 'ate', '▁(', 'o', '▁tram', 'ite', '▁pren', 'ot', 'azione', '▁o', '▁al', '▁', '\n', 'mom', 'ento', '),', '▁si', '▁ins', 'eris', 'con', 'o', '▁nell', ""'"", 'archiv', 'io', '▁degli', '▁osp', 'iti', ',', '▁camera', '▁per', '▁camera', ',', '▁i', '▁d', 'ati', '▁', '\n', 'd', 'elle', '▁pers', 'one', '▁che', '▁vi', '▁sog', 'gi', 'orn', 'er', 'anno', '.', '▁tal', 'i', '▁d', 'ati', '▁comp', 'render', 'anno', ',', '▁ol', 'tre', '▁ai', '▁d', 'ati', '▁', '\n', 'person', 'ali', '▁(', 'fac', 'olt', 'ativ', 'i', '▁per', '▁neon', 'ati', ',', '▁bamb', 'ini', '▁e', '▁rag', 'azzi', '▁che', '▁sog', 'gi', 'orn', 'ano', '▁con', '▁', '\n', 'adult', 'i', '),', '▁il', '▁tipo', '▁di', '▁pension', 'amento', '▁(', 'quest', 'o', '▁per', 'mette', '▁di', '▁aver', 'e', '▁pers', 'one', '▁con', '▁tipo', '▁di', '▁', '\n', 'pension', 'amento', '▁divers', 'o', '▁in', '▁una', '▁st', 'essa', '▁stanza', ').', '▁de', 've', '▁ess', 'ere', '▁anche', '▁poss', 'ib', 'ile', '▁', '\n', 'dist', 'ingu', 'ere', '▁i', '▁client', 'i', '▁che', '▁r', 'ient', 'rano', '▁nelle', '▁categor', 'ie', '▁di', '▁neon', 'ati', '▁e', '▁bamb', 'ini', '▁per', '▁', '\n', 'rend', 'ere', '▁poss', 'ib', 'ile', '▁l', ""'"", 'appl', 'ic', 'azione', '▁di', '▁eventual', 'i', '▁sc', 'onti', '.', '▁alle', '▁varie', '▁stan', 'ze', '▁che', '▁', '\n', 'v', 'eng', 'ono', '▁cos', 'ì', '▁ad', '▁ess', 'ere', '▁util', 'izz', 'ate', '▁ver', 'rà', '▁dato', '▁l', ""'"", 'app', 'ell', 'ativo', '▁di', '▁occup', 'ate', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁personal', 'i', '▁dei', '▁vari', '▁occup', 'anti', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'aggi', 'orn', 'amento', '▁archiv', 'io', '▁dei', '▁client', 'i', '▁e', '▁mod', 'ific', 'a', '▁dello', '▁stato', '▁delle', '▁stan', 'ze', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'se', '▁dai', '▁d', 'ati', '▁forn', 'iti', '▁dal', '▁client', 'e', '▁non', '▁si', '▁ries', 'ce', '▁a', '▁ris', 'al', 'ire', '▁alla', '▁pren', 'ot', 'azione', '▁ver', 'rà', '▁', '\n', 'visual', 'izz', 'ato', '▁un', '▁mess', 'aggio', '▁di', '▁err', 'ore', '▁e', '▁ver', 'rà', '▁chi', 'esto', '▁di', '▁rip', 'et', 'ere', '▁l', ""'"", 'oper', 'azione', '▁o', '▁', '\n', 'ann', 'ullar', 'la', '.', '▁se', '▁si', '▁tent', 'a', '▁di', '▁ins', 'er', 'ire', '▁in', '▁una', '▁stanza', '▁piena', '▁un', ""'"", 'ul', 'teri', 'ore', '▁persona', '▁', '\n', 'appar', 'ir', 'à', '▁un', '▁mess', 'aggio', '▁di', '▁av', 'vert', 'imento', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'con', 'osc', 'ere', '▁per', '▁og', 'ni', '▁stanza', '▁i', '▁d', 'ati', '▁di', '▁color', 'o', '▁che', '▁vi', '▁all', 'og', 'gian', 'o', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-01,', '▁f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁0', '4/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁colomb', 'ari', '▁andrea', '\n\n', 'note', ':', '\n\n\n']"~requisito numero sog tipo funzional requisito gestion dell arrivo client descrizion arrivo client possono verificarsi seguenti eventualit client precedentement prenotato allora dalla prenotazion risal numero dell camer che andr occupar prenotazion verr cancellata dall elenco dell prenotazioni client non precedentement prenotato proced come foss atto una prenotazion cio ricerca una camera disponibil nel caso esito sia favorevol assegna client per periodo specificato nuovo client richied aggiungersi coloro che occupano una certa stanza questo punto partir dall stanz assegn tramit prenotazion momento inseriscono nell archivio deg ospiti camera per camera dati dell person che soggiorneranno tali dati comprenderanno oltr dati personali facoltativi per neonati bambini ragazzi che soggiornano con adulti tipo pensionamento questo permett aver person con tipo pensionamento diverso una stessa stanza deve esser anch possibil distinguer clienti che rientrano nell categori neonati bambini per render possibil applicazion eventuali sconti all vari stanz che vengono cos esser utilizz verr dato appellativo occup input richiesto dati personali dei vari occupanti output desiderato aggiornamento archivio dei clienti modifica dello stato dell stanz criterio accettazion dai dati forniti dal client non riesc risalir alla prenotazion verr visualizzato messaggio error verr chiesto ripeter operazion annullarla tenta inserir una stanza piena ulterior persona apparir messaggio avvertimento aspett colleg conoscer per ogni stanza dati coloro che alloggiano requis collegati pre pre stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato colombari andrea note
7~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-PRE-04.txt~F-PRE-04.txt~"
Requisito numero: 
F-PRE-04
Tipo:
Funzionale
 
Requisito:
Gestione delle stanze commissionate ad agenzia.
Descrizione:
Alcune delle stanze dellalbergo per determinati periodi potrebbero essere date 
in gestione ad una agenzia viaggi, in questo caso tali stanze risulteranno per 
quei periodi commissionate, quindi non  disponibili. Quando lagenzia invia 
delle prenotazioni deve essere possibile passare le stanze da commissionate ad 
assegnate, ovviamente solo per il periodo della prenotazione. Le stanze 
commissionate diventeranno disponibili, nel caso in cui nessuna prenotazione 
giunga dall'agenzia entro la data concordata al momento della stipulazione del 
contratto di commissionamento. 
Input richiesto:
Informazioni sugli accordi presi con le agenzie ovvero numero di stanza 
commissionata, periodo di commissionamento (data di inizio e di fine), data 
dopo la quale la stanza, se non occupata, può essere considerata disponibile.
Output desiderato:
Situazione aggiornata delle stanze.
Criterio di 
accettazione:
Lalbergatore dovrà poter inserire informazioni relative agli accordi con 
lagenzia (data di inizio e fine commissione delle stanze) e verificare il loro 
effettivo commissionamento. Inoltre si deve poter verificare che, se dopo la 
data concordata con lagenzia le stanze non sono ancora state occupate, esse  
risultino allora disponibili.
Aspettative collegate:
Si desidera poter dare in gestione alcune stanze ad una agenzia e poter tenere 
sotto controllo la situazione in modo tale che se lagenzia non riesce ad 
occuparle, entro la data concordata possano essere considerate disponibili.
Requisiti collegati:
F-PRE-01, F-PRE-02.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Software
Versione: 2.1

Data: 15/04/1998

Compilato da: Danzi Francesca 

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-0', '4', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'gest', 'ion', 'e', '▁del', 'le', '▁stan', 'ze', '▁commission', 'ate', '▁ad', '▁ag', 'enz', 'ia', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'al', 'c', 'une', '▁del', 'le', '▁stan', 'ze', '▁d', 'ell', '\x92', 'al', 'ber', 'go', '▁per', '▁determin', 'ati', '▁period', 'i', '▁pot', 're', 'b', 'ber', 'o', '▁ess', 'ere', '▁date', '▁', '\n', 'in', '▁g', 'est', 'ion', 'e', '▁ad', '▁un', 'a', '▁ag', 'enz', 'ia', '▁vi', 'ag', 'gi', ',', '▁in', '▁quest', 'o', '▁cas', 'o', '▁tal', 'i', '▁stan', 'ze', '▁r', 'is', 'ul', 'ter', 'ann', 'o', '▁per', '▁', '\n', 'que', 'i', '▁period', 'i', '▁commission', 'ate', ',', '▁qu', 'ind', 'i', '▁non', '▁dis', 'pon', 'ib', 'ili', '.', '▁qu', 'ando', '▁l', '\x92', 'agen', 'z', 'ia', '▁inv', 'ia', '▁', '\n', 'd', 'elle', '▁p', 'ren', 'ot', 'az', 'ion', 'i', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁pass', 'are', '▁le', '▁stan', 'ze', '▁da', '▁commission', 'ate', '▁ad', '▁', '\n', 'as', 'se', 'gn', 'ate', ',', '▁o', 'v', 'v', 'iament', 'e', '▁solo', '▁per', '▁il', '▁period', 'o', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', '▁le', '▁stan', 'ze', '▁', '\n', 'com', 'mission', 'ate', '▁div', 'ent', 'er', 'ann', 'o', '▁dis', 'pon', 'ib', 'ili', ',', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁n', 'ess', 'una', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁', '\n', 'gi', 'ung', 'a', '▁dall', ""'"", 'agen', 'z', 'ia', '▁ent', 'ro', '▁la', '▁data', '▁conc', 'ord', 'ata', '▁al', '▁moment', 'o', '▁d', 'ella', '▁st', 'ip', 'ul', 'az', 'ion', 'e', '▁del', '▁', '\n', 'cont', 'r', 'att', 'o', '▁di', '▁commission', 'ament', 'o', '.', '▁', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'in', 'form', 'az', 'ion', 'i', '▁sug', 'li', '▁accord', 'i', '▁pres', 'i', '▁con', '▁le', '▁ag', 'enz', 'ie', '▁o', 'v', 'ver', 'o', '▁num', 'ero', '▁di', '▁stan', 'za', '▁', '\n', 'com', 'mission', 'ata', ',', '▁period', 'o', '▁di', '▁commission', 'ament', 'o', '▁(', 'd', 'ata', '▁di', '▁in', 'iz', 'io', '▁e', '▁di', '▁fine', '),', '▁data', '▁', '\n', 'd', 'op', 'o', '▁la', '▁qu', 'ale', '▁la', '▁stan', 'za', ',', '▁se', '▁non', '▁occup', 'ata', ',', '▁pu', 'ò', '▁ess', 'ere', '▁consider', 'ata', '▁dis', 'pon', 'ib', 'ile', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 's', 'it', 'u', 'az', 'ion', 'e', '▁ag', 'gi', 'orn', 'ata', '▁del', 'le', '▁stan', 'ze', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'l', '\x92', 'al', 'berg', 'at', 'ore', '▁d', 'ov', 'r', 'à', '▁pot', 'er', '▁ins', 'er', 'ire', '▁inform', 'az', 'ion', 'i', '▁relative', '▁ag', 'li', '▁accord', 'i', '▁con', '▁', '\n', 'l', '\x92', 'agen', 'z', 'ia', '▁(', 'd', 'ata', '▁di', '▁in', 'iz', 'io', '▁e', '▁fine', '▁commission', 'e', '▁del', 'le', '▁stan', 'ze', ')', '▁e', '▁ver', 'ific', 'are', '▁il', '▁lor', 'o', '▁', '\n', 'eff', 'ett', 'iv', 'o', '▁commission', 'ament', 'o', '.', '▁in', 'ol', 't', 're', '▁si', '▁de', 've', '▁pot', 'er', '▁ver', 'ific', 'are', '▁che', ',', '▁se', '▁d', 'op', 'o', '▁la', '▁', '\n', 'd', 'ata', '▁conc', 'ord', 'ata', '▁con', '▁l', '\x92', 'agen', 'z', 'ia', '▁le', '▁stan', 'ze', '▁non', '▁son', 'o', '▁anc', 'ora', '▁state', '▁occup', 'ate', ',', '▁ess', 'e', '▁', '\n', 'ris', 'ult', 'ino', '▁all', 'ora', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'si', '▁des', 'ider', 'a', '▁pot', 'er', '▁d', 'are', '▁in', '▁g', 'est', 'ion', 'e', '▁al', 'c', 'une', '▁stan', 'ze', '▁ad', '▁un', 'a', '▁ag', 'enz', 'ia', '▁e', '▁pot', 'er', '▁ten', 'ere', '▁', '\n', 's', 'ott', 'o', '▁controll', 'o', '▁la', '▁sit', 'u', 'az', 'ion', 'e', '▁in', '▁mod', 'o', '▁t', 'ale', '▁che', '▁se', '▁l', '\x92', 'agen', 'z', 'ia', '▁non', '▁r', 'ies', 'ce', '▁ad', '▁', '\n', 'oc', 'c', 'up', 'ar', 'le', ',', '▁ent', 'ro', '▁la', '▁data', '▁conc', 'ord', 'ata', '▁poss', 'ano', '▁ess', 'ere', '▁consider', 'ate', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '1,', '▁f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '1', '\n\n', 'd', 'ata', ':', '▁15', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁frances', 'ca', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-04', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁delle', '▁stan', 'ze', '▁commission', 'ate', '▁ad', '▁ag', 'enz', 'ia', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'al', 'c', 'une', '▁delle', '▁stan', 'ze', '▁dell', '\x92', 'al', 'ber', 'go', '▁per', '▁determin', 'ati', '▁period', 'i', '▁pot', 're', 'b', 'ber', 'o', '▁ess', 'ere', '▁date', '▁', '\n', 'in', '▁gest', 'ione', '▁ad', '▁una', '▁ag', 'enz', 'ia', '▁vi', 'aggi', ',', '▁in', '▁quest', 'o', '▁cas', 'o', '▁tal', 'i', '▁stan', 'ze', '▁ris', 'ul', 'ter', 'ann', 'o', '▁per', '▁', '\n', 'que', 'i', '▁period', 'i', '▁commission', 'ate', ',', '▁qu', 'indi', '▁non', '▁dis', 'pon', 'ib', 'ili', '.', '▁qu', 'ando', '▁l', '\x92', 'agen', 'zia', '▁inv', 'ia', '▁', '\n', 'd', 'elle', '▁pren', 'ot', 'az', 'ioni', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁pass', 'are', '▁le', '▁stan', 'ze', '▁da', '▁commission', 'ate', '▁ad', '▁', '\n', 'asse', 'gn', 'ate', ',', '▁ov', 'v', 'iament', 'e', '▁solo', '▁per', '▁il', '▁period', 'o', '▁della', '▁pren', 'ot', 'azione', '.', '▁le', '▁stan', 'ze', '▁', '\n', 'com', 'mission', 'ate', '▁div', 'enter', 'ann', 'o', '▁dis', 'pon', 'ib', 'ili', ',', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁ness', 'una', '▁pren', 'ot', 'azione', '▁', '\n', 'gi', 'unga', '▁dall', ""'"", 'agen', 'zia', '▁ent', 'ro', '▁la', '▁data', '▁concord', 'ata', '▁al', '▁moment', 'o', '▁della', '▁stip', 'ul', 'azione', '▁del', '▁', '\n', 'cont', 'r', 'att', 'o', '▁di', '▁commission', 'amento', '.', '▁', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'inform', 'az', 'ioni', '▁sug', 'li', '▁accord', 'i', '▁pres', 'i', '▁con', '▁le', '▁ag', 'enzie', '▁ov', 'ver', 'o', '▁num', 'ero', '▁di', '▁stan', 'za', '▁', '\n', 'com', 'mission', 'ata', ',', '▁period', 'o', '▁di', '▁commission', 'amento', '▁(', 'data', '▁di', '▁in', 'izio', '▁e', '▁di', '▁fine', '),', '▁data', '▁', '\n', 'd', 'opo', '▁la', '▁qu', 'ale', '▁la', '▁stan', 'za', ',', '▁se', '▁non', '▁occup', 'ata', ',', '▁pu', 'ò', '▁ess', 'ere', '▁consider', 'ata', '▁dis', 'pon', 'ib', 'ile', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 's', 'itu', 'azione', '▁ag', 'gi', 'orn', 'ata', '▁delle', '▁stan', 'ze', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'l', '\x92', 'al', 'berg', 'atore', '▁dov', 'r', 'à', '▁pot', 'er', '▁ins', 'er', 'ire', '▁inform', 'az', 'ioni', '▁relative', '▁ag', 'li', '▁accord', 'i', '▁con', '▁', '\n', 'l', '\x92', 'agen', 'zia', '▁(', 'data', '▁di', '▁in', 'izio', '▁e', '▁fine', '▁commission', 'e', '▁delle', '▁stan', 'ze', ')', '▁e', '▁ver', 'ific', 'are', '▁il', '▁lor', 'o', '▁', '\n', 'eff', 'ett', 'ivo', '▁commission', 'amento', '.', '▁in', 'ol', 'tre', '▁si', '▁de', 've', '▁pot', 'er', '▁ver', 'ific', 'are', '▁che', ',', '▁se', '▁dop', 'o', '▁la', '▁', '\n', 'data', '▁concord', 'ata', '▁con', '▁l', '\x92', 'agen', 'zia', '▁le', '▁stan', 'ze', '▁non', '▁son', 'o', '▁anc', 'ora', '▁state', '▁occup', 'ate', ',', '▁ess', 'e', '▁', '\n', 'ris', 'ult', 'ino', '▁all', 'ora', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'si', '▁des', 'ider', 'a', '▁pot', 'er', '▁dare', '▁in', '▁gest', 'ione', '▁alc', 'une', '▁stan', 'ze', '▁ad', '▁una', '▁ag', 'enz', 'ia', '▁e', '▁pot', 'er', '▁ten', 'ere', '▁', '\n', 's', 'otto', '▁controll', 'o', '▁la', '▁situ', 'azione', '▁in', '▁mod', 'o', '▁tale', '▁che', '▁se', '▁l', '\x92', 'agen', 'zia', '▁non', '▁ries', 'ce', '▁ad', '▁', '\n', 'occup', 'ar', 'le', ',', '▁ent', 'ro', '▁la', '▁data', '▁concord', 'ata', '▁poss', 'ano', '▁ess', 'ere', '▁consider', 'ate', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '1,', '▁f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁15', '/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁francesca', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'pre', '-04', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁delle', '▁stan', 'ze', '▁commission', 'ate', '▁ad', '▁ag', 'enzia', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'alc', 'une', '▁delle', '▁stan', 'ze', '▁dell', '\x92', 'al', 'ber', 'go', '▁per', '▁determin', 'ati', '▁period', 'i', '▁pot', 'reb', 'bero', '▁ess', 'ere', '▁date', '▁', '\n', 'in', '▁gest', 'ione', '▁ad', '▁una', '▁ag', 'enzia', '▁vi', 'aggi', ',', '▁in', '▁quest', 'o', '▁cas', 'o', '▁tal', 'i', '▁stan', 'ze', '▁ris', 'ulter', 'anno', '▁per', '▁', '\n', 'que', 'i', '▁period', 'i', '▁commission', 'ate', ',', '▁qu', 'indi', '▁non', '▁dis', 'pon', 'ib', 'ili', '.', '▁qu', 'ando', '▁l', '\x92', 'agen', 'zia', '▁inv', 'ia', '▁', '\n', 'd', 'elle', '▁pren', 'ot', 'azioni', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁pass', 'are', '▁le', '▁stan', 'ze', '▁da', '▁commission', 'ate', '▁ad', '▁', '\n', 'asse', 'gn', 'ate', ',', '▁ov', 'v', 'iament', 'e', '▁solo', '▁per', '▁il', '▁period', 'o', '▁della', '▁pren', 'ot', 'azione', '.', '▁le', '▁stan', 'ze', '▁', '\n', 'commission', 'ate', '▁div', 'enter', 'anno', '▁dis', 'pon', 'ib', 'ili', ',', '▁nel', '▁cas', 'o', '▁in', '▁cui', '▁ness', 'una', '▁pren', 'ot', 'azione', '▁', '\n', 'gi', 'unga', '▁dall', ""'"", 'agen', 'zia', '▁ent', 'ro', '▁la', '▁data', '▁concord', 'ata', '▁al', '▁moment', 'o', '▁della', '▁stip', 'ul', 'azione', '▁del', '▁', '\n', 'cont', 'r', 'atto', '▁di', '▁commission', 'amento', '.', '▁', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'inform', 'azioni', '▁sug', 'li', '▁accord', 'i', '▁pres', 'i', '▁con', '▁le', '▁ag', 'enzie', '▁ov', 'ver', 'o', '▁numero', '▁di', '▁stanza', '▁', '\n', 'commission', 'ata', ',', '▁period', 'o', '▁di', '▁commission', 'amento', '▁(', 'data', '▁di', '▁in', 'izio', '▁e', '▁di', '▁fine', '),', '▁data', '▁', '\n', 'd', 'opo', '▁la', '▁qu', 'ale', '▁la', '▁stanza', ',', '▁se', '▁non', '▁occup', 'ata', ',', '▁pu', 'ò', '▁ess', 'ere', '▁consider', 'ata', '▁dis', 'pon', 'ib', 'ile', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'situ', 'azione', '▁ag', 'gi', 'orn', 'ata', '▁delle', '▁stan', 'ze', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'l', '\x92', 'al', 'berg', 'atore', '▁dov', 'rà', '▁pot', 'er', '▁ins', 'er', 'ire', '▁inform', 'azioni', '▁relative', '▁ag', 'li', '▁accord', 'i', '▁con', '▁', '\n', 'l', '\x92', 'agen', 'zia', '▁(', 'data', '▁di', '▁in', 'izio', '▁e', '▁fine', '▁commission', 'e', '▁delle', '▁stan', 'ze', ')', '▁e', '▁ver', 'ific', 'are', '▁il', '▁lor', 'o', '▁', '\n', 'eff', 'ett', 'ivo', '▁commission', 'amento', '.', '▁in', 'ol', 'tre', '▁si', '▁de', 've', '▁pot', 'er', '▁ver', 'ific', 'are', '▁che', ',', '▁se', '▁dop', 'o', '▁la', '▁', '\n', 'data', '▁concord', 'ata', '▁con', '▁l', '\x92', 'agen', 'zia', '▁le', '▁stan', 'ze', '▁non', '▁sono', '▁anc', 'ora', '▁state', '▁occup', 'ate', ',', '▁ess', 'e', '▁', '\n', 'ris', 'ult', 'ino', '▁all', 'ora', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'si', '▁desider', 'a', '▁pot', 'er', '▁dare', '▁in', '▁gest', 'ione', '▁alc', 'une', '▁stan', 'ze', '▁ad', '▁una', '▁ag', 'enzia', '▁e', '▁pot', 'er', '▁ten', 'ere', '▁', '\n', 's', 'otto', '▁controll', 'o', '▁la', '▁situ', 'azione', '▁in', '▁modo', '▁tale', '▁che', '▁se', '▁l', '\x92', 'agen', 'zia', '▁non', '▁ries', 'ce', '▁ad', '▁', '\n', 'occup', 'ar', 'le', ',', '▁ent', 'ro', '▁la', '▁data', '▁concord', 'ata', '▁poss', 'ano', '▁ess', 'ere', '▁consider', 'ate', '▁dis', 'pon', 'ib', 'ili', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-01,', '▁f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁15', '/04/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁francesca', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero pre tipo funzional requisito gestion dell stanz commission agenzia descrizion alcun dell stanz dell albergo per determinati periodi potrebbero esser date gestion una agenzia viaggi questo caso tali stanz risulteranno per quei periodi commission quindi non disponibili quando agenzia invia dell prenotazioni deve esser possibil passar stanz commission assegn ovviament solo per periodo della prenotazion stanz commission diventeranno disponibili nel caso cui nessuna prenotazion giunga dall agenzia entro data concordata momento della stipulazion del contratto commissionamento input richiesto informazioni sug accordi presi con agenzi ovvero numero stanza commissionata periodo commissionamento data inizio fine data dopo qual stanza non occupata esser considerata disponibil output desiderato situazion aggiornata dell stanz criterio accettazion albergator dovr poter inserir informazioni relat accordi con agenzia data inizio fine commission dell stanz verificar loro effettivo commissionamento inoltr deve poter verificar che dopo data concordata con agenzia stanz non sono ancora state occup ess risultino allora disponibili aspett colleg desidera poter dare gestion alcun stanz una agenzia poter tener sotto controllo situazion modo tale che agenzia non riesc occuparl entro data concordata possano esser consider disponibili requis collegati pre pre stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato danzi francesca note
8~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-GES-02.txt~F-GES-02.txt~"
Requisito numero: 
F-GES-02
Tipo:
Funzionale
 
Requisito:
Gestione dei prezzi dei servizi e spese extra.
Descrizione:
Il sistema metterà a disposizione dell'utente le funzionalità necessarie alla 
gestione del listino prezzi dei servizi extra. Dovrà quindi essere possibile 
visualizzare il listino, apportare delle modifiche ai prezzi e inserire nuove 
voci. Verrà anche prevista un campo ""jolly"" per gestire eventuali voci rare per 
le quali non è conveniente prevedere una gestione specifica.
Input richiesto:
Dati del bene o servizio che si intende modificare.
Output desiderato:
Conferma della modifica effettuata e listino completo.
Criterio di 
accettazione:
Si deve poter inserire il codice del servizio di cui si intende modificare il 
prezzo. Il sistema ritornerà errore nel caso in cui nessuna corrispondenza sia 
verificata, altrimenti restituirà i dati relativi al servizio e la possibilità di 
modificarne il prezzo.
Aspettative collegate:
Supervisione e gestione dei prezzi dei servizi offerti.
Requisiti collegati:
F-SOG-02.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Software
Versione: 2.2

Data: 01/04/1998

Compilato da: Vincenti Paola 

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ges', '-0', '2', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'gest', 'ion', 'e', '▁de', 'i', '▁pre', 'zz', 'i', '▁de', 'i', '▁serv', 'iz', 'i', '▁e', '▁sp', 'ese', '▁extra', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'il', '▁s', 'ist', 'em', 'a', '▁met', 'ter', 'à', '▁a', '▁dis', 'pos', 'iz', 'ion', 'e', '▁d', 'ell', ""'"", 'ut', 'ent', 'e', '▁le', '▁fun', 'z', 'ional', 'it', 'à', '▁necess', 'ar', 'ie', '▁all', 'a', '▁', '\n', 'gest', 'ion', 'e', '▁del', '▁list', 'ino', '▁pre', 'zz', 'i', '▁de', 'i', '▁serv', 'iz', 'i', '▁extra', '.', '▁d', 'ov', 'r', 'à', '▁qu', 'ind', 'i', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁', '\n', 'vis', 'ual', 'iz', 'z', 'are', '▁il', '▁list', 'ino', ',', '▁ap', 'port', 'are', '▁del', 'le', '▁mod', 'ific', 'he', '▁a', 'i', '▁pre', 'zz', 'i', '▁e', '▁ins', 'er', 'ire', '▁n', 'u', 'ove', '▁', '\n', 'v', 'oci', '.', '▁ver', 'r', 'à', '▁an', 'che', '▁prev', 'ista', '▁un', '▁camp', 'o', '▁""', 'j', 'ol', 'ly', '""', '▁per', '▁g', 'est', 'ire', '▁event', 'ual', 'i', '▁v', 'oci', '▁rare', '▁per', '▁', '\n', 'le', '▁qual', 'i', '▁non', '▁', 'è', '▁con', 'ven', 'ient', 'e', '▁pre', 'ved', 'ere', '▁un', 'a', '▁g', 'est', 'ion', 'e', '▁specific', 'a', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'd', 'ati', '▁del', '▁bene', '▁o', '▁serv', 'iz', 'io', '▁che', '▁si', '▁int', 'end', 'e', '▁mod', 'ific', 'are', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'con', 'fer', 'ma', '▁d', 'ella', '▁mod', 'ific', 'a', '▁eff', 'ett', 'u', 'ata', '▁e', '▁list', 'ino', '▁complet', 'o', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'si', '▁de', 've', '▁pot', 'er', '▁ins', 'er', 'ire', '▁il', '▁co', 'd', 'ice', '▁del', '▁serv', 'iz', 'io', '▁di', '▁cu', 'i', '▁si', '▁int', 'end', 'e', '▁mod', 'ific', 'are', '▁il', '▁', '\n', 'pre', 'z', 'zo', '.', '▁il', '▁s', 'ist', 'em', 'a', '▁rit', 'orn', 'er', 'à', '▁er', 'r', 'ore', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁n', 'ess', 'una', '▁cor', 'ris', 'p', 'ond', 'en', 'za', '▁s', 'ia', '▁', '\n', 'ver', 'ific', 'ata', ',', '▁al', 'tr', 'iment', 'i', '▁rest', 'it', 'u', 'ir', 'à', '▁i', '▁d', 'ati', '▁rel', 'at', 'iv', 'i', '▁al', '▁serv', 'iz', 'io', '▁e', '▁la', '▁poss', 'ib', 'il', 'it', 'à', '▁di', '▁', '\n', 'mod', 'ific', 'ar', 'ne', '▁il', '▁pre', 'z', 'zo', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'sup', 'erv', 'ision', 'e', '▁e', '▁g', 'est', 'ion', 'e', '▁de', 'i', '▁pre', 'zz', 'i', '▁de', 'i', '▁serv', 'iz', 'i', '▁offer', 'ti', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '2.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '2', '\n\n', 'd', 'ata', ':', '▁0', '1', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁vin', 'cent', 'i', '▁pa', 'ola', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ges', '-0', '2', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁dei', '▁pre', 'zzi', '▁dei', '▁serv', 'iz', 'i', '▁e', '▁sp', 'ese', '▁extra', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'il', '▁sist', 'ema', '▁met', 'ter', 'à', '▁a', '▁dispos', 'iz', 'ione', '▁dell', ""'"", 'ut', 'ente', '▁le', '▁fun', 'z', 'ional', 'it', 'à', '▁necess', 'arie', '▁alla', '▁', '\n', 'gest', 'ione', '▁del', '▁list', 'ino', '▁pre', 'zzi', '▁dei', '▁serv', 'iz', 'i', '▁extra', '.', '▁dov', 'r', 'à', '▁qu', 'indi', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁', '\n', 'vis', 'ual', 'izz', 'are', '▁il', '▁list', 'ino', ',', '▁ap', 'port', 'are', '▁delle', '▁mod', 'ific', 'he', '▁ai', '▁pre', 'zzi', '▁e', '▁ins', 'er', 'ire', '▁nu', 'ove', '▁', '\n', 'v', 'oci', '.', '▁ver', 'r', 'à', '▁an', 'che', '▁prev', 'ista', '▁un', '▁campo', '▁""', 'j', 'olly', '""', '▁per', '▁gest', 'ire', '▁eventual', 'i', '▁v', 'oci', '▁rare', '▁per', '▁', '\n', 'le', '▁qual', 'i', '▁non', '▁', 'è', '▁convenient', 'e', '▁pre', 'ved', 'ere', '▁una', '▁gest', 'ione', '▁specific', 'a', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁del', '▁bene', '▁o', '▁serv', 'izio', '▁che', '▁si', '▁int', 'ende', '▁mod', 'ific', 'are', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'con', 'fer', 'ma', '▁della', '▁mod', 'ific', 'a', '▁eff', 'ett', 'u', 'ata', '▁e', '▁list', 'ino', '▁complet', 'o', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'si', '▁de', 've', '▁pot', 'er', '▁ins', 'er', 'ire', '▁il', '▁cod', 'ice', '▁del', '▁serv', 'izio', '▁di', '▁cu', 'i', '▁si', '▁int', 'ende', '▁mod', 'ific', 'are', '▁il', '▁', '\n', 'pre', 'z', 'zo', '.', '▁il', '▁sist', 'ema', '▁rit', 'orn', 'er', 'à', '▁err', 'ore', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁ness', 'una', '▁cor', 'ris', 'p', 'ond', 'enza', '▁s', 'ia', '▁', '\n', 'ver', 'ific', 'ata', ',', '▁al', 'tr', 'iment', 'i', '▁rest', 'itu', 'ir', 'à', '▁i', '▁d', 'ati', '▁rel', 'ativ', 'i', '▁al', '▁serv', 'izio', '▁e', '▁la', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁', '\n', 'mod', 'ific', 'ar', 'ne', '▁il', '▁pre', 'z', 'zo', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'sup', 'erv', 'ision', 'e', '▁e', '▁gest', 'ione', '▁dei', '▁pre', 'zzi', '▁dei', '▁serv', 'iz', 'i', '▁offer', 'ti', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '2.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.2', '\n\n', 'data', ':', '▁01', '/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁vincent', 'i', '▁pa', 'ola', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'ges', '-02', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁dei', '▁pre', 'zzi', '▁dei', '▁serv', 'izi', '▁e', '▁sp', 'ese', '▁extra', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'il', '▁sistema', '▁met', 'ter', 'à', '▁a', '▁dispos', 'izione', '▁dell', ""'"", 'ut', 'ente', '▁le', '▁fun', 'z', 'ional', 'ità', '▁necess', 'arie', '▁alla', '▁', '\n', 'gest', 'ione', '▁del', '▁list', 'ino', '▁pre', 'zzi', '▁dei', '▁serv', 'izi', '▁extra', '.', '▁dov', 'rà', '▁qu', 'indi', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁', '\n', 'visual', 'izz', 'are', '▁il', '▁list', 'ino', ',', '▁ap', 'port', 'are', '▁delle', '▁mod', 'ific', 'he', '▁ai', '▁pre', 'zzi', '▁e', '▁ins', 'er', 'ire', '▁nu', 'ove', '▁', '\n', 'v', 'oci', '.', '▁ver', 'rà', '▁anche', '▁prev', 'ista', '▁un', '▁campo', '▁""', 'j', 'olly', '""', '▁per', '▁gest', 'ire', '▁eventual', 'i', '▁voci', '▁rare', '▁per', '▁', '\n', 'le', '▁qual', 'i', '▁non', '▁è', '▁convenient', 'e', '▁pre', 'vedere', '▁una', '▁gest', 'ione', '▁specific', 'a', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁del', '▁bene', '▁o', '▁serv', 'izio', '▁che', '▁si', '▁int', 'ende', '▁mod', 'ific', 'are', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'con', 'fer', 'ma', '▁della', '▁mod', 'ific', 'a', '▁eff', 'ett', 'uata', '▁e', '▁list', 'ino', '▁complet', 'o', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'si', '▁de', 've', '▁pot', 'er', '▁ins', 'er', 'ire', '▁il', '▁codice', '▁del', '▁serv', 'izio', '▁di', '▁cui', '▁si', '▁int', 'ende', '▁mod', 'ific', 'are', '▁il', '▁', '\n', 'pre', 'zzo', '.', '▁il', '▁sistema', '▁rit', 'orn', 'er', 'à', '▁err', 'ore', '▁nel', '▁cas', 'o', '▁in', '▁cui', '▁ness', 'una', '▁cor', 'ris', 'pond', 'enza', '▁sia', '▁', '\n', 'ver', 'ific', 'ata', ',', '▁altr', 'iment', 'i', '▁rest', 'itu', 'ir', 'à', '▁i', '▁d', 'ati', '▁relativ', 'i', '▁al', '▁serv', 'izio', '▁e', '▁la', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁', '\n', 'mod', 'ific', 'arne', '▁il', '▁pre', 'zzo', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'sup', 'erv', 'ision', 'e', '▁e', '▁gest', 'ione', '▁dei', '▁pre', 'zzi', '▁dei', '▁serv', 'izi', '▁offer', 'ti', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '2.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.2', '\n\n', 'data', ':', '▁01', '/04/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁vincent', 'i', '▁paola', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero ges tipo funzional requisito gestion dei prezzi dei servizi spese extra descrizion sistema metter disposizion dell utent funzionalit necessari alla gestion del listino prezzi dei servizi extra dovr quindi esser possibil visualizzar listino apportar dell modifich prezzi inserir nuov voci verr anch prevista campo jolli per gestir eventuali voci rare per quali non convenient preveder una gestion specifica input richiesto dati del bene servizio che intend modificar output desiderato conferma della modifica effettuata listino completo criterio accettazion deve poter inserir codic del servizio cui intend modificar prezzo sistema ritorn error nel caso cui nessuna corrispondenza sia verificata altrimenti restituir dati relativi servizio possibilit modificarn prezzo aspett colleg supervision gestion dei prezzi dei servizi offerti requis collegati sog stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato vincenti paola note
9~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-SOG-04.txt~F-SOG-04.txt~"
Requisito numero: 
F-SOG-04
Tipo:
Funzionale
 
Requisito:
Calcolo del conto complessivo.
Descrizione:
Al momento in cui lo si richiede si devono recuperare:
1.	ammontare spese di soggiorno
2.	ammontare spese telefoniche
3.	ammontare spese per servizi extra
Successivamente si deve fornire a video lammontare parziale per ogni voce 
sopraindicata e l'ammontare totale. Si deve inoltre poter facilmente 
distinguere i tre totali parziali in modo da fornire al cliente linformazione che 
desidera. Allinterno delle spese dei pernottamenti sono compresi i pasti 
concordati in base al tipo di soggiorno.
Si distinguono 4 diversi casi:
- Calcolo totale del conto su ununica stanza.
- Calcolo del conto separato nel caso in cui uno (o alcuni) tra gli 
occupanti una certa stanza debba, per qualche motivo, lasciare l'albergo 
in anticipo rispetto alla data prevista. In questo caso deve poter essere 
applicato un supplemento per stanze parzialmente utilizzate. Nel conto 
saranno escluse le spese extra che verranno poi riversate nel conto finale.
- Calcolo totale del conto su più stanze.
- Calcolo del conto per clienti mandati da un'agenzia. In questo caso il 
conto consisterà solamente delle spese telefoniche e delle spese per 
servizi e spese extra. 
Input richiesto:
Dati di uno o più clienti, o numeri di una o più stanze.
Output desiderato:
Stampa a video del conto richiesto.
Criterio di 
accettazione:
Si richiede la visualizzazione delle spese accumulate da parte dei clienti 
dellalbergo quando se ne necessita.
Aspettative collegate:
Immediato resoconto del debito accumulato dal cliente fino al momento della 
richiesta del conto.
Requisiti collegati:
F-SOG-02, F-SOG-03, F-SOG-05, F-GES-01.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
1
Richiesto
Stabile
Piena comprensione
Software
Versione: 2.0

Data: 02/04/1998

Compilato da: Meneghini Matteo 

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-0', '4', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'cal', 'col', 'o', '▁del', '▁cont', 'o', '▁comp', 'less', 'iv', 'o', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'al', '▁moment', 'o', '▁in', '▁cu', 'i', '▁lo', '▁si', '▁rich', 'ied', 'e', '▁si', '▁dev', 'on', 'o', '▁rec', 'up', 'er', 'are', ':', '\n', '1.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁di', '▁s', 'og', 'gi', 'orn', 'o', '\n', '2.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁tele', 'f', 'onic', 'he', '\n', '3.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁per', '▁serv', 'iz', 'i', '▁extra', '\n', 's', 'uccess', 'iv', 'ament', 'e', '▁si', '▁de', 've', '▁for', 'n', 'ire', '▁a', '▁video', '▁l', '\x92', 'am', 'mont', 'are', '▁par', 'z', 'ial', 'e', '▁per', '▁og', 'ni', '▁vo', 'ce', '▁', '\n', 's', 'op', 'rain', 'd', 'ic', 'ata', '▁e', '▁l', ""'"", 'am', 'mont', 'are', '▁to', 't', 'ale', '.', '▁si', '▁de', 've', '▁in', 'ol', 't', 're', '▁pot', 'er', '▁fac', 'il', 'ment', 'e', '▁', '\n', 'dist', 'ingu', 'ere', '▁i', '▁tre', '▁total', 'i', '▁par', 'z', 'ial', 'i', '▁in', '▁mod', 'o', '▁da', '▁for', 'n', 'ire', '▁al', '▁cl', 'ient', 'e', '▁l', '\x92', 'in', 'form', 'az', 'ion', 'e', '▁che', '▁', '\n', 'des', 'ider', 'a', '.', '▁all', '\x92', 'intern', 'o', '▁del', 'le', '▁sp', 'ese', '▁de', 'i', '▁per', 'n', 'ott', 'ament', 'i', '▁son', 'o', '▁comp', 'res', 'i', '▁i', '▁past', 'i', '▁', '\n', 'con', 'c', 'ord', 'ati', '▁in', '▁base', '▁al', '▁tip', 'o', '▁di', '▁s', 'og', 'gi', 'orn', 'o', '.', '\n', 'si', '▁distingu', 'on', 'o', '▁4', '▁divers', 'i', '▁cas', 'i', ':', '\n', '-', '▁cal', 'col', 'o', '▁to', 't', 'ale', '▁del', '▁cont', 'o', '▁su', '▁un', '\x92', 'un', 'ica', '▁stan', 'za', '.', '\n', '-', '▁cal', 'col', 'o', '▁del', '▁cont', 'o', '▁separ', 'ato', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁un', 'o', '▁(', 'o', '▁al', 'c', 'un', 'i', ')', '▁tra', '▁gl', 'i', '▁', '\n', 'oc', 'c', 'up', 'ant', 'i', '▁un', 'a', '▁cert', 'a', '▁stan', 'za', '▁deb', 'ba', ',', '▁per', '▁qual', 'che', '▁mot', 'iv', 'o', ',', '▁l', 'asc', 'ia', 're', '▁l', ""'"", 'al', 'ber', 'go', '▁', '\n', 'in', '▁ant', 'icip', 'o', '▁r', 'is', 'pet', 'to', '▁all', 'a', '▁data', '▁prev', 'ista', '.', '▁in', '▁quest', 'o', '▁cas', 'o', '▁de', 've', '▁pot', 'er', '▁ess', 'ere', '▁', '\n', 'ap', 'pl', 'ic', 'ato', '▁un', '▁supp', 'lement', 'o', '▁per', '▁stan', 'ze', '▁par', 'z', 'ial', 'ment', 'e', '▁util', 'iz', 'z', 'ate', '.', '▁nel', '▁cont', 'o', '▁', '\n', 's', 'ar', 'ann', 'o', '▁es', 'cl', 'use', '▁le', '▁sp', 'ese', '▁extra', '▁che', '▁ver', 'r', 'ann', 'o', '▁po', 'i', '▁rivers', 'ate', '▁nel', '▁cont', 'o', '▁final', 'e', '.', '\n', '-', '▁cal', 'col', 'o', '▁to', 't', 'ale', '▁del', '▁cont', 'o', '▁su', '▁p', 'i', 'ù', '▁stan', 'ze', '.', '\n', '-', '▁cal', 'col', 'o', '▁del', '▁cont', 'o', '▁per', '▁cl', 'ient', 'i', '▁mand', 'ati', '▁da', '▁un', ""'"", 'agen', 'z', 'ia', '.', '▁in', '▁quest', 'o', '▁cas', 'o', '▁il', '▁', '\n', 'c', 'onto', '▁cons', 'ister', 'à', '▁sol', 'ament', 'e', '▁del', 'le', '▁sp', 'ese', '▁tele', 'f', 'onic', 'he', '▁e', '▁del', 'le', '▁sp', 'ese', '▁per', '▁', '\n', 's', 'erv', 'iz', 'i', '▁e', '▁sp', 'ese', '▁extra', '.', '▁', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'd', 'ati', '▁di', '▁un', 'o', '▁o', '▁p', 'i', 'ù', '▁cl', 'ient', 'i', ',', '▁o', '▁num', 'er', 'i', '▁di', '▁un', 'a', '▁o', '▁p', 'i', 'ù', '▁stan', 'ze', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'st', 'amp', 'a', '▁a', '▁video', '▁del', '▁cont', 'o', '▁rich', 'i', 'est', 'o', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'si', '▁rich', 'ied', 'e', '▁la', '▁visual', 'iz', 'z', 'az', 'ion', 'e', '▁del', 'le', '▁sp', 'ese', '▁acc', 'um', 'ulate', '▁da', '▁part', 'e', '▁de', 'i', '▁cl', 'ient', 'i', '▁', '\n', 'd', 'ell', '\x92', 'al', 'ber', 'go', '▁qu', 'ando', '▁se', '▁ne', '▁necess', 'ita', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'im', 'medi', 'ato', '▁res', 'oc', 'onto', '▁del', '▁deb', 'ito', '▁acc', 'um', 'ul', 'ato', '▁dal', '▁cl', 'ient', 'e', '▁fin', 'o', '▁al', '▁moment', 'o', '▁d', 'ella', '▁', '\n', 'rich', 'i', 'est', 'a', '▁del', '▁cont', 'o', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '2,', '▁f', '-', 'so', 'g', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '5,', '▁f', '-', 'ges', '-0', '1.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '0', '\n\n', 'd', 'ata', ':', '▁0', '2', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁men', 'eg', 'h', 'ini', '▁mat', 'te', 'o', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-04', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'cal', 'colo', '▁del', '▁cont', 'o', '▁comp', 'less', 'ivo', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'al', '▁moment', 'o', '▁in', '▁cu', 'i', '▁lo', '▁si', '▁rich', 'ied', 'e', '▁si', '▁devon', 'o', '▁rec', 'uper', 'are', ':', '\n', '1.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁di', '▁s', 'og', 'gi', 'orno', '\n', '2.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁tele', 'f', 'onic', 'he', '\n', '3.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁per', '▁serv', 'iz', 'i', '▁extra', '\n', 's', 'uccess', 'iv', 'ament', 'e', '▁si', '▁de', 've', '▁for', 'n', 'ire', '▁a', '▁video', '▁l', '\x92', 'am', 'mont', 'are', '▁par', 'z', 'ial', 'e', '▁per', '▁og', 'ni', '▁vo', 'ce', '▁', '\n', 'sop', 'rain', 'd', 'ic', 'ata', '▁e', '▁l', ""'"", 'am', 'mont', 'are', '▁tot', 'ale', '.', '▁si', '▁de', 've', '▁in', 'ol', 'tre', '▁pot', 'er', '▁fac', 'il', 'ment', 'e', '▁', '\n', 'dist', 'ingu', 'ere', '▁i', '▁tre', '▁total', 'i', '▁par', 'z', 'ial', 'i', '▁in', '▁mod', 'o', '▁da', '▁for', 'n', 'ire', '▁al', '▁client', 'e', '▁l', '\x92', 'inform', 'azione', '▁che', '▁', '\n', 'des', 'ider', 'a', '.', '▁all', '\x92', 'intern', 'o', '▁delle', '▁sp', 'ese', '▁dei', '▁pern', 'ott', 'ament', 'i', '▁son', 'o', '▁comp', 'res', 'i', '▁i', '▁past', 'i', '▁', '\n', 'conc', 'ord', 'ati', '▁in', '▁base', '▁al', '▁tip', 'o', '▁di', '▁s', 'og', 'gi', 'orno', '.', '\n', 'si', '▁distingu', 'ono', '▁4', '▁divers', 'i', '▁cas', 'i', ':', '\n', '-', '▁cal', 'colo', '▁tot', 'ale', '▁del', '▁cont', 'o', '▁su', '▁un', '\x92', 'un', 'ica', '▁stan', 'za', '.', '\n', '-', '▁cal', 'colo', '▁del', '▁cont', 'o', '▁separ', 'ato', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁un', 'o', '▁(', 'o', '▁alc', 'uni', ')', '▁tra', '▁gl', 'i', '▁', '\n', 'occup', 'anti', '▁una', '▁cert', 'a', '▁stan', 'za', '▁deb', 'ba', ',', '▁per', '▁qual', 'che', '▁mot', 'ivo', ',', '▁l', 'asc', 'ia', 're', '▁l', ""'"", 'al', 'ber', 'go', '▁', '\n', 'in', '▁anticip', 'o', '▁ris', 'pet', 'to', '▁alla', '▁data', '▁prev', 'ista', '.', '▁in', '▁quest', 'o', '▁cas', 'o', '▁de', 've', '▁pot', 'er', '▁ess', 'ere', '▁', '\n', 'appl', 'ic', 'ato', '▁un', '▁supplement', 'o', '▁per', '▁stan', 'ze', '▁par', 'z', 'ial', 'ment', 'e', '▁util', 'izz', 'ate', '.', '▁nel', '▁cont', 'o', '▁', '\n', 'sar', 'ann', 'o', '▁es', 'cl', 'use', '▁le', '▁sp', 'ese', '▁extra', '▁che', '▁ver', 'r', 'ann', 'o', '▁po', 'i', '▁rivers', 'ate', '▁nel', '▁cont', 'o', '▁finale', '.', '\n', '-', '▁cal', 'colo', '▁tot', 'ale', '▁del', '▁cont', 'o', '▁su', '▁pi', 'ù', '▁stan', 'ze', '.', '\n', '-', '▁cal', 'colo', '▁del', '▁cont', 'o', '▁per', '▁client', 'i', '▁mand', 'ati', '▁da', '▁un', ""'"", 'agen', 'zia', '.', '▁in', '▁quest', 'o', '▁cas', 'o', '▁il', '▁', '\n', 'c', 'onto', '▁cons', 'ister', 'à', '▁sol', 'ament', 'e', '▁delle', '▁sp', 'ese', '▁tele', 'f', 'onic', 'he', '▁e', '▁delle', '▁sp', 'ese', '▁per', '▁', '\n', 'serv', 'iz', 'i', '▁e', '▁sp', 'ese', '▁extra', '.', '▁', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁di', '▁un', 'o', '▁o', '▁pi', 'ù', '▁client', 'i', ',', '▁o', '▁num', 'eri', '▁di', '▁una', '▁o', '▁pi', 'ù', '▁stan', 'ze', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'st', 'ampa', '▁a', '▁video', '▁del', '▁cont', 'o', '▁rich', 'iest', 'o', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'si', '▁rich', 'ied', 'e', '▁la', '▁visual', 'izz', 'azione', '▁delle', '▁sp', 'ese', '▁accum', 'ulate', '▁da', '▁part', 'e', '▁dei', '▁client', 'i', '▁', '\n', 'dell', '\x92', 'al', 'ber', 'go', '▁qu', 'ando', '▁se', '▁ne', '▁necess', 'ita', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'im', 'medi', 'ato', '▁res', 'oc', 'onto', '▁del', '▁deb', 'ito', '▁accum', 'ul', 'ato', '▁dal', '▁client', 'e', '▁fin', 'o', '▁al', '▁moment', 'o', '▁della', '▁', '\n', 'rich', 'iest', 'a', '▁del', '▁cont', 'o', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '2,', '▁f', '-', 'so', 'g', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '5,', '▁f', '-', 'ges', '-0', '1.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.0', '\n\n', 'data', ':', '▁0', '2/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁men', 'eg', 'h', 'ini', '▁matteo', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-04', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'cal', 'colo', '▁del', '▁cont', 'o', '▁comp', 'less', 'ivo', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'al', '▁moment', 'o', '▁in', '▁cui', '▁lo', '▁si', '▁rich', 'ied', 'e', '▁si', '▁devon', 'o', '▁recuper', 'are', ':', '\n', '1.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁di', '▁sog', 'gi', 'orno', '\n', '2.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁telef', 'onic', 'he', '\n', '3.', '\t', 'am', 'mont', 'are', '▁sp', 'ese', '▁per', '▁serv', 'izi', '▁extra', '\n', 'success', 'iv', 'amente', '▁si', '▁de', 've', '▁forn', 'ire', '▁a', '▁video', '▁l', '\x92', 'am', 'mont', 'are', '▁par', 'z', 'iale', '▁per', '▁og', 'ni', '▁voce', '▁', '\n', 'sop', 'raind', 'icata', '▁e', '▁l', ""'"", 'am', 'mont', 'are', '▁tot', 'ale', '.', '▁si', '▁de', 've', '▁in', 'ol', 'tre', '▁pot', 'er', '▁facil', 'mente', '▁', '\n', 'dist', 'ingu', 'ere', '▁i', '▁tre', '▁total', 'i', '▁par', 'z', 'iali', '▁in', '▁modo', '▁da', '▁forn', 'ire', '▁al', '▁client', 'e', '▁l', '\x92', 'inform', 'azione', '▁che', '▁', '\n', 'des', 'ider', 'a', '.', '▁all', '\x92', 'intern', 'o', '▁delle', '▁sp', 'ese', '▁dei', '▁pern', 'ott', 'amenti', '▁sono', '▁comp', 'resi', '▁i', '▁past', 'i', '▁', '\n', 'concord', 'ati', '▁in', '▁base', '▁al', '▁tipo', '▁di', '▁sog', 'gi', 'orno', '.', '\n', 'si', '▁distingu', 'ono', '▁4', '▁divers', 'i', '▁cas', 'i', ':', '\n', '-', '▁cal', 'colo', '▁tot', 'ale', '▁del', '▁cont', 'o', '▁su', '▁un', '\x92', 'un', 'ica', '▁stanza', '.', '\n', '-', '▁cal', 'colo', '▁del', '▁cont', 'o', '▁separ', 'ato', '▁nel', '▁cas', 'o', '▁in', '▁cui', '▁uno', '▁(', 'o', '▁alc', 'uni', ')', '▁tra', '▁gli', '▁', '\n', 'occup', 'anti', '▁una', '▁cert', 'a', '▁stanza', '▁deb', 'ba', ',', '▁per', '▁qual', 'che', '▁mot', 'ivo', ',', '▁lasc', 'ia', 're', '▁l', ""'"", 'al', 'ber', 'go', '▁', '\n', 'in', '▁anticip', 'o', '▁ris', 'petto', '▁alla', '▁data', '▁prev', 'ista', '.', '▁in', '▁quest', 'o', '▁cas', 'o', '▁de', 've', '▁pot', 'er', '▁ess', 'ere', '▁', '\n', 'appl', 'icato', '▁un', '▁supplement', 'o', '▁per', '▁stan', 'ze', '▁par', 'z', 'ial', 'mente', '▁util', 'izz', 'ate', '.', '▁nel', '▁cont', 'o', '▁', '\n', 'sar', 'anno', '▁es', 'cl', 'use', '▁le', '▁sp', 'ese', '▁extra', '▁che', '▁ver', 'r', 'anno', '▁po', 'i', '▁rivers', 'ate', '▁nel', '▁cont', 'o', '▁finale', '.', '\n', '-', '▁cal', 'colo', '▁tot', 'ale', '▁del', '▁cont', 'o', '▁su', '▁pi', 'ù', '▁stan', 'ze', '.', '\n', '-', '▁cal', 'colo', '▁del', '▁cont', 'o', '▁per', '▁client', 'i', '▁mand', 'ati', '▁da', '▁un', ""'"", 'agen', 'zia', '.', '▁in', '▁quest', 'o', '▁cas', 'o', '▁il', '▁', '\n', 'c', 'onto', '▁cons', 'ister', 'à', '▁sol', 'amente', '▁delle', '▁sp', 'ese', '▁telef', 'onic', 'he', '▁e', '▁delle', '▁sp', 'ese', '▁per', '▁', '\n', 'serv', 'izi', '▁e', '▁sp', 'ese', '▁extra', '.', '▁', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁di', '▁uno', '▁o', '▁pi', 'ù', '▁client', 'i', ',', '▁o', '▁num', 'eri', '▁di', '▁una', '▁o', '▁pi', 'ù', '▁stan', 'ze', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'st', 'ampa', '▁a', '▁video', '▁del', '▁cont', 'o', '▁rich', 'iest', 'o', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'si', '▁rich', 'ied', 'e', '▁la', '▁visual', 'izz', 'azione', '▁delle', '▁sp', 'ese', '▁accumulate', '▁da', '▁parte', '▁dei', '▁client', 'i', '▁', '\n', 'dell', '\x92', 'al', 'ber', 'go', '▁qu', 'ando', '▁se', '▁ne', '▁necess', 'ita', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'immedi', 'ato', '▁res', 'oc', 'onto', '▁del', '▁deb', 'ito', '▁accum', 'ul', 'ato', '▁dal', '▁client', 'e', '▁fino', '▁al', '▁moment', 'o', '▁della', '▁', '\n', 'rich', 'iest', 'a', '▁del', '▁cont', 'o', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '2,', '▁f', '-', 'so', 'g', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '5,', '▁f', '-', 'ges', '-01.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.0', '\n\n', 'data', ':', '▁0', '2/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁meneg', 'hini', '▁matteo', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero sog tipo funzional requisito calcolo del conto complessivo descrizion momento cui richied devono recuperar ammontar spese soggiorno ammontar spese telefonich ammontar spese per servizi extra successivament deve fornir video ammontar parzial per ogni voce sopraindicata ammontar total deve inoltr poter facilment distinguer tre totali parziali modo fornir client informazion che desidera interno dell spese dei pernottamenti sono compresi pasti concordati base tipo soggiorno distinguono diversi casi calcolo total del conto unica stanza calcolo del conto separato nel caso cui uno alcuni tra gli occupanti una certa stanza debba per qualch motivo lasciar albergo anticipo rispetto alla data prevista questo caso deve poter esser applicato supplemento per stanz parzialment utilizz nel conto saranno esclus spese extra che verranno poi rivers nel conto final calcolo total del conto stanz calcolo del conto per clienti mandati agenzia questo caso conto consist solament dell spese telefonich dell spese per servizi spese extra input richiesto dati uno clienti numeri una stanz output desiderato stampa video del conto richiesto criterio accettazion richied visualizzazion dell spese accumul part dei clienti dell albergo quando necessita aspett colleg immediato resoconto del debito accumulato dal client fino momento della richiesta del conto requis collegati sog sog sog ges stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato meneghini matteo note
10~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-SOG-03.txt~F-SOG-03.txt~"
Requisito numero: 
F-SOG-03
Tipo:
Funzionale
 
Requisito:
Addebito della spesa telefonica.
Descrizione:
Vista la normativa interna dellhotel, che prevede il servizio telefonico in 
camera indipendentemente dal tipo di soggiorno, deve essere possibile tener 
conto del numero di scatti effettuati dal cliente a partire dallinizio del 
soggiorno. Tale numero moltiplicato al costo del singolo scatto, stabilito dal 
proprietario,  fornirà laddebito della spesa telefonica che andrà poi ad 
aggiungersi al conto totale del soggiorno.
Input richiesto:
Dati telefonate forniti dal centralino telefonica.
Output desiderato:
Addebito spesa telefonica.
Criterio di 
accettazione:
Il sistema deve essere in grado di comunicare con il centralino e tener traccia 
delle informazioni di una telefonata effettuata dal cliente durante il soggiorno 
con relativo    addebito della spesa. Tali informazioni dovranno essere 
reperibili al momento della richiesta del conto.
Aspettative collegate:
Lalbergatore si aspetta di poter controllare il sistema telefonico dellhotel 
ricavandone il vantaggio di disporre del costo telefonico da aggiungere al 
conto totale del soggiorno al termine di questultimo.
Requisiti collegati:
F-SOG-04, F-GES-05.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Software
Versione: 2.1

Data: 16/04/98

Compilato da: Girelli Daria 

Note: Non è richiesta l'interfaccia con il centralino perché questa per ordine di chi ha commissionato la 
realizzazione di questo progetto verrà simulata con una piccola routine software.


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-0', '3', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'ad', 'de', 'bit', 'o', '▁d', 'ella', '▁sp', 'es', 'a', '▁tele', 'f', 'on', 'ica', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'v', 'ista', '▁la', '▁norm', 'at', 'iva', '▁intern', 'a', '▁d', 'ell', '\x92', 'h', 'ot', 'el', ',', '▁che', '▁pre', 'ved', 'e', '▁il', '▁serv', 'iz', 'io', '▁tele', 'f', 'on', 'ico', '▁in', '▁', '\n', 'c', 'amer', 'a', '▁ind', 'ip', 'endent', 'ement', 'e', '▁dal', '▁tip', 'o', '▁di', '▁s', 'og', 'gi', 'orn', 'o', ',', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁ten', 'er', '▁', '\n', 'c', 'onto', '▁del', '▁num', 'ero', '▁di', '▁sc', 'att', 'i', '▁eff', 'ett', 'u', 'ati', '▁dal', '▁cl', 'ient', 'e', '▁a', '▁part', 'ire', '▁dall', '\x92', 'in', 'iz', 'io', '▁del', '▁', '\n', 'so', 'g', 'gi', 'orn', 'o', '.', '▁t', 'ale', '▁num', 'ero', '▁mol', 't', 'ip', 'l', 'ic', 'ato', '▁al', '▁cost', 'o', '▁del', '▁sing', 'olo', '▁sc', 'att', 'o', ',', '▁st', 'abil', 'ito', '▁dal', '▁', '\n', 'p', 'ropri', 'et', 'ario', ',', '▁for', 'n', 'ir', 'à', '▁l', '\x92', 'ad', 'de', 'bit', 'o', '▁d', 'ella', '▁sp', 'es', 'a', '▁tele', 'f', 'on', 'ica', '▁che', '▁and', 'r', 'à', '▁po', 'i', '▁ad', '▁', '\n', 'ag', 'gi', 'ung', 'ers', 'i', '▁al', '▁cont', 'o', '▁to', 't', 'ale', '▁del', '▁s', 'og', 'gi', 'orn', 'o', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'd', 'ati', '▁tele', 'f', 'on', 'ate', '▁for', 'n', 'iti', '▁dal', '▁central', 'ino', '▁tele', 'f', 'on', 'ica', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'ad', 'de', 'bit', 'o', '▁sp', 'es', 'a', '▁tele', 'f', 'on', 'ica', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'il', '▁s', 'ist', 'em', 'a', '▁de', 've', '▁ess', 'ere', '▁in', '▁grad', 'o', '▁di', '▁com', 'un', 'ic', 'are', '▁con', '▁il', '▁central', 'ino', '▁e', '▁ten', 'er', '▁tr', 'ac', 'cia', '▁', '\n', 'd', 'elle', '▁inform', 'az', 'ion', 'i', '▁di', '▁un', 'a', '▁tele', 'f', 'on', 'ata', '▁eff', 'ett', 'u', 'ata', '▁dal', '▁cl', 'ient', 'e', '▁dur', 'ante', '▁il', '▁s', 'og', 'gi', 'orn', 'o', '▁', '\n', 'con', '▁rel', 'at', 'iv', 'o', '▁add', 'e', 'bit', 'o', '▁d', 'ella', '▁sp', 'es', 'a', '.', '▁tal', 'i', '▁inform', 'az', 'ion', 'i', '▁d', 'ov', 'r', 'ann', 'o', '▁ess', 'ere', '▁', '\n', 're', 'per', 'ib', 'ili', '▁al', '▁moment', 'o', '▁d', 'ella', '▁rich', 'i', 'est', 'a', '▁del', '▁cont', 'o', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', '\x92', 'al', 'berg', 'at', 'ore', '▁si', '▁asp', 'ett', 'a', '▁di', '▁pot', 'er', '▁controll', 'are', '▁il', '▁s', 'ist', 'em', 'a', '▁tele', 'f', 'on', 'ico', '▁d', 'ell', '\x92', 'h', 'ot', 'el', '▁', '\n', 'ric', 'av', 'and', 'one', '▁il', '▁v', 'ant', 'ag', 'gio', '▁di', '▁dis', 'por', 're', '▁del', '▁cost', 'o', '▁tele', 'f', 'on', 'ico', '▁da', '▁ag', 'gi', 'ung', 'ere', '▁al', '▁', '\n', 'c', 'onto', '▁to', 't', 'ale', '▁del', '▁s', 'og', 'gi', 'orn', 'o', '▁al', '▁term', 'ine', '▁di', '▁quest', '\x92', 'ult', 'im', 'o', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-0', '5.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '1', '\n\n', 'd', 'ata', ':', '▁16', '/', '04', '/', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁g', 'ire', 'll', 'i', '▁dar', 'ia', '▁', '\n\n', 'note', ':', '▁non', '▁', 'è', '▁rich', 'i', 'est', 'a', '▁l', ""'"", 'inter', 'f', 'ac', 'cia', '▁con', '▁il', '▁central', 'ino', '▁per', 'ch', 'é', '▁quest', 'a', '▁per', '▁ord', 'ine', '▁di', '▁chi', '▁ha', '▁commission', 'ato', '▁la', '▁', '\n', 'real', 'iz', 'z', 'az', 'ion', 'e', '▁di', '▁quest', 'o', '▁pro', 'get', 'to', '▁ver', 'r', 'à', '▁sim', 'ul', 'ata', '▁con', '▁un', 'a', '▁pic', 'col', 'a', '▁ro', 'ut', 'ine', '▁software', '.', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-03', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'ad', 'de', 'bit', 'o', '▁della', '▁sp', 'esa', '▁tele', 'f', 'onica', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'v', 'ista', '▁la', '▁norm', 'at', 'iva', '▁intern', 'a', '▁dell', '\x92', 'hot', 'el', ',', '▁che', '▁pre', 'ved', 'e', '▁il', '▁serv', 'izio', '▁tele', 'f', 'on', 'ico', '▁in', '▁', '\n', 'camer', 'a', '▁ind', 'ip', 'endent', 'ement', 'e', '▁dal', '▁tip', 'o', '▁di', '▁s', 'og', 'gi', 'orno', ',', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁ten', 'er', '▁', '\n', 'c', 'onto', '▁del', '▁num', 'ero', '▁di', '▁sc', 'atti', '▁eff', 'ett', 'u', 'ati', '▁dal', '▁client', 'e', '▁a', '▁part', 'ire', '▁dall', '\x92', 'in', 'izio', '▁del', '▁', '\n', 'so', 'g', 'gi', 'orno', '.', '▁tale', '▁num', 'ero', '▁mol', 'tip', 'lic', 'ato', '▁al', '▁cost', 'o', '▁del', '▁sing', 'olo', '▁sc', 'att', 'o', ',', '▁stabil', 'ito', '▁dal', '▁', '\n', 'p', 'ropri', 'et', 'ario', ',', '▁for', 'n', 'ir', 'à', '▁l', '\x92', 'ad', 'de', 'bit', 'o', '▁della', '▁sp', 'esa', '▁tele', 'f', 'onica', '▁che', '▁andr', 'à', '▁po', 'i', '▁ad', '▁', '\n', 'aggi', 'ung', 'ers', 'i', '▁al', '▁cont', 'o', '▁tot', 'ale', '▁del', '▁s', 'og', 'gi', 'orno', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁tele', 'f', 'on', 'ate', '▁for', 'n', 'iti', '▁dal', '▁central', 'ino', '▁tele', 'f', 'onica', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'ad', 'de', 'bit', 'o', '▁sp', 'esa', '▁tele', 'f', 'onica', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'il', '▁sist', 'ema', '▁de', 've', '▁ess', 'ere', '▁in', '▁grad', 'o', '▁di', '▁comun', 'ic', 'are', '▁con', '▁il', '▁central', 'ino', '▁e', '▁ten', 'er', '▁tr', 'ac', 'cia', '▁', '\n', 'd', 'elle', '▁inform', 'az', 'ioni', '▁di', '▁una', '▁tele', 'f', 'on', 'ata', '▁eff', 'ett', 'u', 'ata', '▁dal', '▁client', 'e', '▁dur', 'ante', '▁il', '▁s', 'og', 'gi', 'orno', '▁', '\n', 'con', '▁rel', 'at', 'ivo', '▁add', 'e', 'bit', 'o', '▁della', '▁sp', 'esa', '.', '▁tal', 'i', '▁inform', 'az', 'ioni', '▁dov', 'r', 'ann', 'o', '▁ess', 'ere', '▁', '\n', 're', 'per', 'ib', 'ili', '▁al', '▁moment', 'o', '▁della', '▁rich', 'iest', 'a', '▁del', '▁cont', 'o', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', '\x92', 'al', 'berg', 'atore', '▁si', '▁asp', 'etta', '▁di', '▁pot', 'er', '▁controll', 'are', '▁il', '▁sist', 'ema', '▁tele', 'f', 'on', 'ico', '▁dell', '\x92', 'hot', 'el', '▁', '\n', 'ric', 'av', 'and', 'one', '▁il', '▁v', 'ant', 'aggio', '▁di', '▁dis', 'por', 're', '▁del', '▁cost', 'o', '▁tele', 'f', 'on', 'ico', '▁da', '▁ag', 'gi', 'ung', 'ere', '▁al', '▁', '\n', 'c', 'onto', '▁tot', 'ale', '▁del', '▁s', 'og', 'gi', 'orno', '▁al', '▁term', 'ine', '▁di', '▁quest', '\x92', 'ult', 'imo', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-0', '5.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁16', '/', '04', '/', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁g', 'ire', 'lli', '▁dar', 'ia', '▁', '\n\n', 'note', ':', '▁non', '▁', 'è', '▁rich', 'iest', 'a', '▁l', ""'"", 'inter', 'fac', 'cia', '▁con', '▁il', '▁central', 'ino', '▁per', 'ch', 'é', '▁quest', 'a', '▁per', '▁ord', 'ine', '▁di', '▁chi', '▁ha', '▁commission', 'ato', '▁la', '▁', '\n', 'real', 'izz', 'azione', '▁di', '▁quest', 'o', '▁pro', 'get', 'to', '▁ver', 'r', 'à', '▁simul', 'ata', '▁con', '▁una', '▁pic', 'cola', '▁routine', '▁software', '.', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-03', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'ad', 'de', 'bit', 'o', '▁della', '▁sp', 'esa', '▁telef', 'onica', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'vista', '▁la', '▁norm', 'ativa', '▁intern', 'a', '▁dell', '\x92', 'hotel', ',', '▁che', '▁pre', 'ved', 'e', '▁il', '▁serv', 'izio', '▁telef', 'on', 'ico', '▁in', '▁', '\n', 'camera', '▁ind', 'ip', 'endent', 'ement', 'e', '▁dal', '▁tipo', '▁di', '▁sog', 'gi', 'orno', ',', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁tener', '▁', '\n', 'c', 'onto', '▁del', '▁numero', '▁di', '▁sc', 'atti', '▁eff', 'ettu', 'ati', '▁dal', '▁client', 'e', '▁a', '▁part', 'ire', '▁dall', '\x92', 'in', 'izio', '▁del', '▁', '\n', 'so', 'ggi', 'orno', '.', '▁tale', '▁numero', '▁mol', 'tip', 'lic', 'ato', '▁al', '▁cost', 'o', '▁del', '▁sing', 'olo', '▁sc', 'atto', ',', '▁stabil', 'ito', '▁dal', '▁', '\n', 'propri', 'et', 'ario', ',', '▁forn', 'ir', 'à', '▁l', '\x92', 'ad', 'de', 'bit', 'o', '▁della', '▁sp', 'esa', '▁telef', 'onica', '▁che', '▁andr', 'à', '▁po', 'i', '▁ad', '▁', '\n', 'aggi', 'ung', 'ers', 'i', '▁al', '▁cont', 'o', '▁tot', 'ale', '▁del', '▁sog', 'gi', 'orno', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁telef', 'onate', '▁forn', 'iti', '▁dal', '▁central', 'ino', '▁telef', 'onica', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'ad', 'de', 'bit', 'o', '▁sp', 'esa', '▁telef', 'onica', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'il', '▁sistema', '▁de', 've', '▁ess', 'ere', '▁in', '▁grad', 'o', '▁di', '▁comunic', 'are', '▁con', '▁il', '▁central', 'ino', '▁e', '▁tener', '▁trac', 'cia', '▁', '\n', 'd', 'elle', '▁inform', 'azioni', '▁di', '▁una', '▁telef', 'on', 'ata', '▁eff', 'ett', 'uata', '▁dal', '▁client', 'e', '▁durante', '▁il', '▁sog', 'gi', 'orno', '▁', '\n', 'con', '▁rel', 'ativo', '▁add', 'e', 'bit', 'o', '▁della', '▁sp', 'esa', '.', '▁tal', 'i', '▁inform', 'azioni', '▁dov', 'r', 'anno', '▁ess', 'ere', '▁', '\n', 're', 'per', 'ib', 'ili', '▁al', '▁moment', 'o', '▁della', '▁rich', 'iest', 'a', '▁del', '▁cont', 'o', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', '\x92', 'al', 'berg', 'atore', '▁si', '▁asp', 'etta', '▁di', '▁pot', 'er', '▁controll', 'are', '▁il', '▁sistema', '▁telef', 'on', 'ico', '▁dell', '\x92', 'hotel', '▁', '\n', 'ric', 'avand', 'one', '▁il', '▁vant', 'aggio', '▁di', '▁dis', 'por', 're', '▁del', '▁cost', 'o', '▁telef', 'on', 'ico', '▁da', '▁ag', 'gi', 'ung', 'ere', '▁al', '▁', '\n', 'c', 'onto', '▁tot', 'ale', '▁del', '▁sog', 'gi', 'orno', '▁al', '▁term', 'ine', '▁di', '▁quest', '\x92', 'ult', 'imo', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-05.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁16', '/04', '/98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁g', 'irelli', '▁daria', '▁', '\n\n', 'note', ':', '▁non', '▁è', '▁rich', 'iest', 'a', '▁l', ""'"", 'inter', 'fac', 'cia', '▁con', '▁il', '▁central', 'ino', '▁perch', 'é', '▁quest', 'a', '▁per', '▁ord', 'ine', '▁di', '▁chi', '▁ha', '▁commission', 'ato', '▁la', '▁', '\n', 'real', 'izz', 'azione', '▁di', '▁quest', 'o', '▁pro', 'get', 'to', '▁ver', 'rà', '▁simul', 'ata', '▁con', '▁una', '▁pic', 'cola', '▁routine', '▁software', '.', '\n\n\n']"~requisito numero sog tipo funzional requisito addebito della spesa telefonica descrizion vista normativa interna dell hotel che preved servizio telefonico camera indipendentement dal tipo soggiorno deve esser possibil tener conto del numero scatti effettuati dal client partir dall inizio del soggiorno tale numero moltiplicato costo del singolo scatto stabilito dal proprietario fornir addebito della spesa telefonica che andr poi aggiungersi conto total del soggiorno input richiesto dati telefon forniti dal centralino telefonica output desiderato addebito spesa telefonica criterio accettazion sistema deve esser grado comunicar con centralino tener traccia dell informazioni una telefonata effettuata dal client durant soggiorno con relativo addebito della spesa tali informazioni dovranno esser reperibili momento della richiesta del conto aspett colleg albergator aspetta poter controllar sistema telefonico dell hotel ricavandon vantaggio disporr del costo telefonico aggiunger conto total del soggiorno termin quest ultimo requis collegati sog ges stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato girelli daria note non richiesta interfaccia con centralino perch questa per ordin chi commissionato realizzazion questo progetto verr simulata con una piccola routin softwar
11~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-PRE-02.txt~F-PRE-02.txt~"
Requisito numero: 
F-PRE-02
Tipo:
Funzionale
 
Requisito:
Prenotazione di camere da parte di un cliente.
Descrizione:
Quando un cliente effettua una prenotazione è necessario poter evidenziare 
che la camera che egli desidera e per il periodo da lui scelto venga bloccata. 
Nel caso in cui il cliente sia un habitué o un amico deve essere possibile 
assegnargli direttamente la camera e quindi accertarsi che essa è stata 
assegnata.
Input richiesto:
È necessario conoscere le stanze disponibili che possono soddisfare le richieste 
del cliente (disponibilità nel periodo da lui richiesto, possibilità di avere il 
letto aggiuntivo, vista mare/valle). Inoltre  è necessario conoscere i dati forniti 
dal cliente stesso e che permettono la sua prenotazione (vedi dati 
prenotazione).
Output desiderato:
Registrazione della prenotazione e bloccaggio (o assegnamento) della stanza 
per il periodo accordato.
Criterio di 
accettazione:
Dopo che una prenotazione viene accettata la stanza dovrà risultare bloccata o 
assegnata e perciò sottratta dalle disponibilità dell'albergo per il periodo 
relativo alla prenotazione.
Aspettative collegate:
L'albergatore si aspetta in questo modo di avere un quadro generale  della 
situazione del suo albergo, di poter visualizzare in modo semplice la 
situazione delle varie stanze ovvero di vedere se una stanza è bloccata, 
assegnata, commissionata o disponibile, di avere un minimo di informazioni 
per poter provvedere ad accogliere il cliente in modo adeguato e poter allo 
stesso tempo organizzare il suo lavoro. Es.: se il cliente al momento della 
prenotazione non ha fatto richiesta del letto aggiuntivo, ma in realtà lo 
desidera  e al momento del suo arrivo le stanze che permettono di supportare 
il letto aggiuntivo sono occupate non si potrà più soddisfare la richiesta del 
cliente.
Requisiti collegati:
F-PRE-01, F-PRE-03, F-PRE-04, F-PRE-05, F-PRE-06.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Software
Versione: 2.0

Data: 30/03/1998

Compilato da: Danzi Francesca

7Note:


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-0', '2', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁di', '▁cam', 'ere', '▁da', '▁part', 'e', '▁di', '▁un', '▁cl', 'ient', 'e', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'qu', 'ando', '▁un', '▁cl', 'ient', 'e', '▁eff', 'ett', 'ua', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁', 'è', '▁necess', 'ario', '▁pot', 'er', '▁ev', 'id', 'enz', 'ia', 're', '▁', '\n', 'che', '▁la', '▁camer', 'a', '▁che', '▁eg', 'li', '▁des', 'ider', 'a', '▁e', '▁per', '▁il', '▁period', 'o', '▁da', '▁lu', 'i', '▁sc', 'el', 'to', '▁v', 'eng', 'a', '▁bl', 'oc', 'c', 'ata', '.', '▁', '\n', 'nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁il', '▁cl', 'ient', 'e', '▁s', 'ia', '▁un', '▁habit', 'u', 'é', '▁o', '▁un', '▁am', 'ico', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁', '\n', 'as', 'se', 'gn', 'ar', 'g', 'li', '▁d', 'ire', 'tt', 'ament', 'e', '▁la', '▁camer', 'a', '▁e', '▁qu', 'ind', 'i', '▁acc', 'ert', 'ars', 'i', '▁che', '▁ess', 'a', '▁', 'è', '▁st', 'ata', '▁', '\n', 'as', 'se', 'gn', 'ata', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'è', '▁necess', 'ario', '▁con', 'os', 'c', 'ere', '▁le', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁che', '▁pos', 'son', 'o', '▁s', 'od', 'dis', 'fare', '▁le', '▁rich', 'i', 'est', 'e', '▁', '\n', 'd', 'el', '▁cl', 'ient', 'e', '▁(', 'dis', 'pon', 'ib', 'il', 'it', 'à', '▁nel', '▁period', 'o', '▁da', '▁lu', 'i', '▁rich', 'i', 'est', 'o', ',', '▁poss', 'ib', 'il', 'it', 'à', '▁di', '▁aver', 'e', '▁il', '▁', '\n', 'let', 'to', '▁ag', 'gi', 'unt', 'iv', 'o', ',', '▁v', 'ista', '▁m', 'are', '/', 'val', 'le', ').', '▁in', 'ol', 't', 're', '▁', 'è', '▁necess', 'ario', '▁con', 'os', 'c', 'ere', '▁i', '▁d', 'ati', '▁for', 'n', 'iti', '▁', '\n', 'd', 'al', '▁cl', 'ient', 'e', '▁st', 'es', 'so', '▁e', '▁che', '▁per', 'met', 'ton', 'o', '▁la', '▁su', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁(', 'ved', 'i', '▁d', 'ati', '▁', '\n', 'p', 'ren', 'ot', 'az', 'ion', 'e', ').', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'reg', 'ist', 'ra', 'z', 'ion', 'e', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁e', '▁bl', 'oc', 'c', 'ag', 'gio', '▁(', 'o', '▁as', 'se', 'gn', 'ament', 'o', ')', '▁d', 'ella', '▁stan', 'za', '▁', '\n', 'per', '▁il', '▁period', 'o', '▁accord', 'ato', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'd', 'op', 'o', '▁che', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁vi', 'ene', '▁acc', 'ett', 'ata', '▁la', '▁stan', 'za', '▁d', 'ov', 'r', 'à', '▁r', 'is', 'ult', 'are', '▁bl', 'oc', 'c', 'ata', '▁o', '▁', '\n', 'as', 'se', 'gn', 'ata', '▁e', '▁per', 'ci', 'ò', '▁s', 'ott', 'r', 'att', 'a', '▁d', 'alle', '▁dis', 'pon', 'ib', 'il', 'it', 'à', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '▁per', '▁il', '▁period', 'o', '▁', '\n', 'rel', 'at', 'iv', 'o', '▁all', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', ""'"", 'al', 'berg', 'at', 'ore', '▁si', '▁asp', 'ett', 'a', '▁in', '▁quest', 'o', '▁mod', 'o', '▁di', '▁aver', 'e', '▁un', '▁qu', 'ad', 'ro', '▁gener', 'ale', '▁d', 'ella', '▁', '\n', 's', 'it', 'u', 'az', 'ion', 'e', '▁del', '▁su', 'o', '▁al', 'ber', 'go', ',', '▁di', '▁pot', 'er', '▁visual', 'iz', 'z', 'are', '▁in', '▁mod', 'o', '▁sem', 'pl', 'ice', '▁la', '▁', '\n', 's', 'it', 'u', 'az', 'ion', 'e', '▁del', 'le', '▁var', 'ie', '▁stan', 'ze', '▁o', 'v', 'ver', 'o', '▁di', '▁v', 'ed', 'ere', '▁se', '▁un', 'a', '▁stan', 'za', '▁', 'è', '▁bl', 'oc', 'c', 'ata', ',', '▁', '\n', 'as', 'se', 'gn', 'ata', ',', '▁commission', 'ata', '▁o', '▁dis', 'pon', 'ib', 'ile', ',', '▁di', '▁aver', 'e', '▁un', '▁minim', 'o', '▁di', '▁inform', 'az', 'ion', 'i', '▁', '\n', 'per', '▁pot', 'er', '▁prov', 'ved', 'ere', '▁ad', '▁acc', 'og', 'li', 'ere', '▁il', '▁cl', 'ient', 'e', '▁in', '▁mod', 'o', '▁ad', 'eg', 'u', 'ato', '▁e', '▁pot', 'er', '▁all', 'o', '▁', '\n', 'st', 'es', 'so', '▁tem', 'po', '▁organiz', 'z', 'are', '▁il', '▁su', 'o', '▁l', 'av', 'or', 'o', '.', '▁es', '.', ':', '▁se', '▁il', '▁cl', 'ient', 'e', '▁al', '▁moment', 'o', '▁d', 'ella', '▁', '\n', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁non', '▁ha', '▁f', 'att', 'o', '▁rich', 'i', 'est', 'a', '▁del', '▁let', 'to', '▁ag', 'gi', 'unt', 'iv', 'o', ',', '▁ma', '▁in', '▁real', 't', 'à', '▁lo', '▁', '\n', 'des', 'ider', 'a', '▁e', '▁al', '▁moment', 'o', '▁del', '▁su', 'o', '▁arr', 'iv', 'o', '▁le', '▁stan', 'ze', '▁che', '▁per', 'met', 'ton', 'o', '▁di', '▁support', 'are', '▁', '\n', 'il', '▁let', 'to', '▁ag', 'gi', 'unt', 'iv', 'o', '▁son', 'o', '▁occup', 'ate', '▁non', '▁si', '▁pot', 'r', 'à', '▁p', 'i', 'ù', '▁s', 'od', 'dis', 'fare', '▁la', '▁rich', 'i', 'est', 'a', '▁del', '▁', '\n', 'cl', 'ient', 'e', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '1,', '▁f', '-', 'pre', '-0', '3,', '▁f', '-', 'pre', '-0', '4,', '▁f', '-', 'pre', '-0', '5,', '▁f', '-', 'pre', '-0', '6.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '0', '\n\n', 'd', 'ata', ':', '▁30', '/', '03', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁frances', 'ca', '\n\n', '7', 'note', ':', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-0', '2', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'p', 'ren', 'ot', 'azione', '▁di', '▁cam', 'ere', '▁da', '▁part', 'e', '▁di', '▁un', '▁client', 'e', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'qu', 'ando', '▁un', '▁client', 'e', '▁eff', 'ett', 'ua', '▁una', '▁pren', 'ot', 'azione', '▁', 'è', '▁necess', 'ario', '▁pot', 'er', '▁evid', 'enz', 'ia', 're', '▁', '\n', 'che', '▁la', '▁camera', '▁che', '▁eg', 'li', '▁des', 'ider', 'a', '▁e', '▁per', '▁il', '▁period', 'o', '▁da', '▁lu', 'i', '▁sc', 'el', 'to', '▁v', 'eng', 'a', '▁bl', 'occ', 'ata', '.', '▁', '\n', 'nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁il', '▁client', 'e', '▁s', 'ia', '▁un', '▁habit', 'u', 'é', '▁o', '▁un', '▁am', 'ico', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁', '\n', 'asse', 'gn', 'arg', 'li', '▁dire', 'tt', 'ament', 'e', '▁la', '▁camera', '▁e', '▁qu', 'indi', '▁acc', 'ert', 'ars', 'i', '▁che', '▁ess', 'a', '▁', 'è', '▁st', 'ata', '▁', '\n', 'asse', 'gn', 'ata', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'è', '▁necess', 'ario', '▁con', 'osc', 'ere', '▁le', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁che', '▁pos', 'son', 'o', '▁sod', 'dis', 'fare', '▁le', '▁rich', 'iest', 'e', '▁', '\n', 'del', '▁client', 'e', '▁(', 'dis', 'pon', 'ib', 'ilit', 'à', '▁nel', '▁period', 'o', '▁da', '▁lu', 'i', '▁rich', 'iest', 'o', ',', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁aver', 'e', '▁il', '▁', '\n', 'let', 'to', '▁ag', 'gi', 'unt', 'ivo', ',', '▁vista', '▁mare', '/', 'val', 'le', ').', '▁in', 'ol', 'tre', '▁', 'è', '▁necess', 'ario', '▁con', 'osc', 'ere', '▁i', '▁d', 'ati', '▁for', 'n', 'iti', '▁', '\n', 'dal', '▁client', 'e', '▁st', 'es', 'so', '▁e', '▁che', '▁per', 'met', 'ton', 'o', '▁la', '▁su', 'a', '▁pren', 'ot', 'azione', '▁(', 'ved', 'i', '▁d', 'ati', '▁', '\n', 'p', 'ren', 'ot', 'azione', ').', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'reg', 'ist', 'raz', 'ione', '▁della', '▁pren', 'ot', 'azione', '▁e', '▁bl', 'occ', 'aggio', '▁(', 'o', '▁as', 'se', 'gn', 'amento', ')', '▁della', '▁stan', 'za', '▁', '\n', 'per', '▁il', '▁period', 'o', '▁accord', 'ato', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'd', 'opo', '▁che', '▁una', '▁pren', 'ot', 'azione', '▁vi', 'ene', '▁acc', 'ett', 'ata', '▁la', '▁stan', 'za', '▁dov', 'r', 'à', '▁ris', 'ult', 'are', '▁bl', 'occ', 'ata', '▁o', '▁', '\n', 'asse', 'gn', 'ata', '▁e', '▁per', 'ci', 'ò', '▁s', 'ott', 'r', 'atta', '▁d', 'alle', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '▁per', '▁il', '▁period', 'o', '▁', '\n', 'rel', 'at', 'ivo', '▁alla', '▁pren', 'ot', 'azione', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', ""'"", 'al', 'berg', 'atore', '▁si', '▁asp', 'etta', '▁in', '▁quest', 'o', '▁mod', 'o', '▁di', '▁aver', 'e', '▁un', '▁quad', 'ro', '▁gener', 'ale', '▁della', '▁', '\n', 's', 'itu', 'azione', '▁del', '▁su', 'o', '▁al', 'ber', 'go', ',', '▁di', '▁pot', 'er', '▁visual', 'izz', 'are', '▁in', '▁mod', 'o', '▁sem', 'pl', 'ice', '▁la', '▁', '\n', 's', 'itu', 'azione', '▁delle', '▁var', 'ie', '▁stan', 'ze', '▁ov', 'ver', 'o', '▁di', '▁ved', 'ere', '▁se', '▁una', '▁stan', 'za', '▁', 'è', '▁bl', 'occ', 'ata', ',', '▁', '\n', 'asse', 'gn', 'ata', ',', '▁commission', 'ata', '▁o', '▁dis', 'pon', 'ib', 'ile', ',', '▁di', '▁aver', 'e', '▁un', '▁minim', 'o', '▁di', '▁inform', 'az', 'ioni', '▁', '\n', 'per', '▁pot', 'er', '▁prov', 'ved', 'ere', '▁ad', '▁acc', 'og', 'li', 'ere', '▁il', '▁client', 'e', '▁in', '▁mod', 'o', '▁ad', 'eg', 'u', 'ato', '▁e', '▁pot', 'er', '▁all', 'o', '▁', '\n', 'st', 'es', 'so', '▁tempo', '▁organiz', 'z', 'are', '▁il', '▁su', 'o', '▁lav', 'oro', '.', '▁es', '.:', '▁se', '▁il', '▁client', 'e', '▁al', '▁moment', 'o', '▁della', '▁', '\n', 'p', 'ren', 'ot', 'azione', '▁non', '▁ha', '▁f', 'att', 'o', '▁rich', 'iest', 'a', '▁del', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', ',', '▁ma', '▁in', '▁real', 't', 'à', '▁lo', '▁', '\n', 'des', 'ider', 'a', '▁e', '▁al', '▁moment', 'o', '▁del', '▁su', 'o', '▁arr', 'ivo', '▁le', '▁stan', 'ze', '▁che', '▁per', 'met', 'ton', 'o', '▁di', '▁support', 'are', '▁', '\n', 'il', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', '▁son', 'o', '▁occup', 'ate', '▁non', '▁si', '▁pot', 'r', 'à', '▁pi', 'ù', '▁sod', 'dis', 'fare', '▁la', '▁rich', 'iest', 'a', '▁del', '▁', '\n', 'cl', 'iente', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '1,', '▁f', '-', 'pre', '-0', '3,', '▁f', '-', 'pre', '-0', '4,', '▁f', '-', 'pre', '-0', '5,', '▁f', '-', 'pre', '-0', '6.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.0', '\n\n', 'data', ':', '▁30', '/', '03', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁francesca', '\n\n', '7', 'note', ':', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'pre', '-02', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'p', 'ren', 'ot', 'azione', '▁di', '▁cam', 'ere', '▁da', '▁parte', '▁di', '▁un', '▁client', 'e', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'qu', 'ando', '▁un', '▁client', 'e', '▁eff', 'ett', 'ua', '▁una', '▁pren', 'ot', 'azione', '▁è', '▁necess', 'ario', '▁pot', 'er', '▁evid', 'enzia', 're', '▁', '\n', 'che', '▁la', '▁camera', '▁che', '▁eg', 'li', '▁desider', 'a', '▁e', '▁per', '▁il', '▁period', 'o', '▁da', '▁lui', '▁scel', 'to', '▁v', 'enga', '▁bl', 'occ', 'ata', '.', '▁', '\n', 'nel', '▁cas', 'o', '▁in', '▁cui', '▁il', '▁client', 'e', '▁sia', '▁un', '▁habit', 'ué', '▁o', '▁un', '▁amico', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁', '\n', 'asse', 'gn', 'arg', 'li', '▁dirett', 'amente', '▁la', '▁camera', '▁e', '▁qu', 'indi', '▁acc', 'ert', 'arsi', '▁che', '▁essa', '▁è', '▁st', 'ata', '▁', '\n', 'asse', 'gn', 'ata', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'è', '▁necess', 'ario', '▁con', 'osc', 'ere', '▁le', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁che', '▁pos', 'son', 'o', '▁sod', 'dis', 'fare', '▁le', '▁rich', 'iest', 'e', '▁', '\n', 'del', '▁client', 'e', '▁(', 'dis', 'pon', 'ib', 'ilit', 'à', '▁nel', '▁period', 'o', '▁da', '▁lui', '▁rich', 'iest', 'o', ',', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁aver', 'e', '▁il', '▁', '\n', 'letto', '▁ag', 'gi', 'unt', 'ivo', ',', '▁vista', '▁mare', '/', 'valle', ').', '▁in', 'ol', 'tre', '▁è', '▁necess', 'ario', '▁con', 'osc', 'ere', '▁i', '▁d', 'ati', '▁forn', 'iti', '▁', '\n', 'dal', '▁client', 'e', '▁st', 'esso', '▁e', '▁che', '▁per', 'met', 'ton', 'o', '▁la', '▁sua', '▁pren', 'ot', 'azione', '▁(', 'vedi', '▁d', 'ati', '▁', '\n', 'p', 'ren', 'ot', 'azione', ').', '\n', 'output', '▁desider', 'ato', ':', '\n', 'reg', 'ist', 'raz', 'ione', '▁della', '▁pren', 'ot', 'azione', '▁e', '▁bl', 'occ', 'aggio', '▁(', 'o', '▁as', 'se', 'gn', 'amento', ')', '▁della', '▁stanza', '▁', '\n', 'per', '▁il', '▁period', 'o', '▁accord', 'ato', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'd', 'opo', '▁che', '▁una', '▁pren', 'ot', 'azione', '▁vi', 'ene', '▁acc', 'ett', 'ata', '▁la', '▁stanza', '▁dov', 'rà', '▁ris', 'ult', 'are', '▁bl', 'occ', 'ata', '▁o', '▁', '\n', 'asse', 'gn', 'ata', '▁e', '▁per', 'ci', 'ò', '▁s', 'ott', 'r', 'atta', '▁dalle', '▁dis', 'pon', 'ib', 'ilit', 'à', '▁dell', ""'"", 'al', 'ber', 'go', '▁per', '▁il', '▁period', 'o', '▁', '\n', 'rel', 'ativo', '▁alla', '▁pren', 'ot', 'azione', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'l', ""'"", 'al', 'berg', 'atore', '▁si', '▁asp', 'etta', '▁in', '▁quest', 'o', '▁modo', '▁di', '▁aver', 'e', '▁un', '▁quad', 'ro', '▁generale', '▁della', '▁', '\n', 'situ', 'azione', '▁del', '▁suo', '▁alber', 'go', ',', '▁di', '▁pot', 'er', '▁visual', 'izz', 'are', '▁in', '▁modo', '▁sem', 'pl', 'ice', '▁la', '▁', '\n', 'situ', 'azione', '▁delle', '▁varie', '▁stan', 'ze', '▁ov', 'ver', 'o', '▁di', '▁ved', 'ere', '▁se', '▁una', '▁stanza', '▁è', '▁bl', 'occ', 'ata', ',', '▁', '\n', 'asse', 'gn', 'ata', ',', '▁commission', 'ata', '▁o', '▁dis', 'pon', 'ib', 'ile', ',', '▁di', '▁aver', 'e', '▁un', '▁minim', 'o', '▁di', '▁inform', 'azioni', '▁', '\n', 'per', '▁pot', 'er', '▁prov', 'vedere', '▁ad', '▁acc', 'og', 'li', 'ere', '▁il', '▁client', 'e', '▁in', '▁modo', '▁adeg', 'u', 'ato', '▁e', '▁pot', 'er', '▁allo', '▁', '\n', 'st', 'esso', '▁tempo', '▁organiz', 'z', 'are', '▁il', '▁suo', '▁lavoro', '.', '▁es', '.:', '▁se', '▁il', '▁client', 'e', '▁al', '▁moment', 'o', '▁della', '▁', '\n', 'p', 'ren', 'ot', 'azione', '▁non', '▁ha', '▁f', 'atto', '▁rich', 'iest', 'a', '▁del', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', ',', '▁ma', '▁in', '▁real', 't', 'à', '▁lo', '▁', '\n', 'des', 'ider', 'a', '▁e', '▁al', '▁moment', 'o', '▁del', '▁suo', '▁arr', 'ivo', '▁le', '▁stan', 'ze', '▁che', '▁per', 'met', 'ton', 'o', '▁di', '▁support', 'are', '▁', '\n', 'il', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', '▁sono', '▁occup', 'ate', '▁non', '▁si', '▁pot', 'rà', '▁pi', 'ù', '▁sod', 'dis', 'fare', '▁la', '▁rich', 'iest', 'a', '▁del', '▁', '\n', 'cl', 'iente', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-01,', '▁f', '-', 'pre', '-0', '3,', '▁f', '-', 'pre', '-0', '4,', '▁f', '-', 'pre', '-0', '5,', '▁f', '-', 'pre', '-0', '6.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.0', '\n\n', 'data', ':', '▁30', '/03', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁dan', 'zi', '▁francesca', '\n\n', '7', 'note', ':', '\n\n\n']"~requisito numero pre tipo funzional requisito prenotazion camer part client descrizion quando client effettua una prenotazion necessario poter evidenziar che camera che desidera per periodo lui scelto venga bloccata nel caso cui client sia habitu amico deve esser possibil assegnarg direttament camera quindi accertarsi che essa stata assegnata input richiesto necessario conoscer stanz disponibili che possono soddisfar richiest del client disponibilit nel periodo lui richiesto possibilit aver letto aggiuntivo vista mare vall inoltr necessario conoscer dati forniti dal client stesso che permettono sua prenotazion vedi dati prenotazion output desiderato registrazion della prenotazion bloccaggio assegnamento della stanza per periodo accordato criterio accettazion dopo che una prenotazion vien accettata stanza dovr risultar bloccata assegnata perci sottratta dall disponibilit dell albergo per periodo relativo alla prenotazion aspett colleg albergator aspetta questo modo aver quadro general della situazion del suo albergo poter visualizzar modo semplic situazion dell vari stanz ovvero veder una stanza bloccata assegnata commissionata disponibil aver minimo informazioni per poter provveder accoglier client modo adeguato poter allo stesso tempo organizzar suo lavoro client momento della prenotazion non fatto richiesta del letto aggiuntivo realt desidera momento del suo arrivo stanz che permettono supportar letto aggiuntivo sono occup non potr soddisfar richiesta del client requis collegati pre pre pre pre pre stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato danzi francesca note
12~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-SOG-06.txt~F-SOG-06.txt~"
Requisito numero: 
F-SOG-06
Tipo:
Funzionale
 
Requisito:
Gestione del cambio di stanza.
Descrizione:
Nel caso in cui il cliente desideri o sia costretto (es. per un guasto) a cambiare 
stanza di soggiorno, il sistema dovrà fornire tutti gli strumenti necessari 
affinché ciò sia possibile.
Input richiesto:
Numero di stanza da lasciare, numero della nuova stanza da occupare
Output desiderato:
Modifica dellinformazione che indicava la stanza che occupavano i clienti 
con il nuovo dato, modifica dello status delle stanze.
Criterio di 
accettazione:
Quando viene accolta una richiesta di cambio di stanza si dovrà poter 
verificare che i dati degli occupanti non si riferiscono più alla stanza in 
precedenza occupata ma alla nuova stanza in cui soggiornano. Il 
cambiamento di stanza coinvolgerà lo stato delle stanze modificandolo 
opportunamente
Aspettative collegate:
Permettere un eventuale spostamento di stanza.
Requisiti collegati:
nn.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
1
Richiesto
Stabile
Piena comprensione
Software
Versione: 1

Data: 28/04/1998

Compilato da: Martini Roberto 

Note: 


"~req~['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-0', '6', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'gest', 'ion', 'e', '▁del', '▁c', 'amb', 'io', '▁di', '▁stan', 'za', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁il', '▁cl', 'ient', 'e', '▁des', 'ider', 'i', '▁o', '▁s', 'ia', '▁cost', 'ret', 'to', '▁(', 'es', '.', '▁per', '▁un', '▁gu', 'ast', 'o', ')', '▁a', '▁c', 'amb', 'ia', 're', '▁', '\n', 'stan', 'za', '▁di', '▁s', 'og', 'gi', 'orn', 'o', ',', '▁il', '▁s', 'ist', 'em', 'a', '▁d', 'ov', 'r', 'à', '▁for', 'n', 'ire', '▁t', 'ut', 'ti', '▁gl', 'i', '▁str', 'ument', 'i', '▁necess', 'ari', '▁', '\n', 'aff', 'in', 'ch', 'é', '▁c', 'i', 'ò', '▁s', 'ia', '▁poss', 'ib', 'ile', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'n', 'um', 'ero', '▁di', '▁stan', 'za', '▁da', '▁l', 'asc', 'ia', 're', ',', '▁num', 'ero', '▁d', 'ella', '▁n', 'u', 'ova', '▁stan', 'za', '▁da', '▁occup', 'are', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁d', 'ell', '\x92', 'in', 'form', 'az', 'ion', 'e', '▁che', '▁indic', 'ava', '▁la', '▁stan', 'za', '▁che', '▁occup', 'av', 'ano', '▁i', '▁cl', 'ient', 'i', '▁', '\n', 'con', '▁il', '▁n', 'u', 'ovo', '▁d', 'ato', ',', '▁mod', 'ific', 'a', '▁d', 'ello', '▁status', '▁del', 'le', '▁stan', 'ze', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'qu', 'ando', '▁vi', 'ene', '▁acc', 'ol', 'ta', '▁un', 'a', '▁rich', 'i', 'est', 'a', '▁di', '▁c', 'amb', 'io', '▁di', '▁stan', 'za', '▁si', '▁d', 'ov', 'r', 'à', '▁pot', 'er', '▁', '\n', 'ver', 'ific', 'are', '▁che', '▁i', '▁d', 'ati', '▁deg', 'li', '▁occup', 'ant', 'i', '▁non', '▁si', '▁rif', 'er', 'is', 'con', 'o', '▁p', 'i', 'ù', '▁all', 'a', '▁stan', 'za', '▁in', '▁', '\n', 'pre', 'ced', 'en', 'za', '▁occup', 'ata', '▁ma', '▁all', 'a', '▁n', 'u', 'ova', '▁stan', 'za', '▁in', '▁cu', 'i', '▁s', 'og', 'gi', 'orn', 'ano', '.', '▁il', '▁', '\n', 'c', 'amb', 'iament', 'o', '▁di', '▁stan', 'za', '▁co', 'in', 'vol', 'ger', 'à', '▁lo', '▁stat', 'o', '▁del', 'le', '▁stan', 'ze', '▁mod', 'ific', 'and', 'olo', '▁', '\n', 'op', 'portun', 'ament', 'e', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'per', 'met', 'ter', 'e', '▁un', '▁event', 'ual', 'e', '▁sp', 'ost', 'ament', 'o', '▁di', '▁stan', 'za', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'n', 'n', '.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁1', '\n\n', 'd', 'ata', ':', '▁28', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁mart', 'ini', '▁robert', 'o', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']~['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-06', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁del', '▁camb', 'io', '▁di', '▁stan', 'za', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁il', '▁client', 'e', '▁des', 'ider', 'i', '▁o', '▁s', 'ia', '▁cost', 'retto', '▁(', 'es', '.', '▁per', '▁un', '▁gu', 'ast', 'o', ')', '▁a', '▁camb', 'ia', 're', '▁', '\n', 'stan', 'za', '▁di', '▁s', 'og', 'gi', 'orno', ',', '▁il', '▁sist', 'ema', '▁dov', 'r', 'à', '▁for', 'n', 'ire', '▁tut', 'ti', '▁gl', 'i', '▁str', 'ument', 'i', '▁necess', 'ari', '▁', '\n', 'aff', 'inch', 'é', '▁ci', 'ò', '▁s', 'ia', '▁poss', 'ib', 'ile', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'num', 'ero', '▁di', '▁stan', 'za', '▁da', '▁l', 'asc', 'ia', 're', ',', '▁num', 'ero', '▁della', '▁nu', 'ova', '▁stan', 'za', '▁da', '▁occup', 'are', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁dell', '\x92', 'inform', 'azione', '▁che', '▁indic', 'ava', '▁la', '▁stan', 'za', '▁che', '▁occup', 'av', 'ano', '▁i', '▁client', 'i', '▁', '\n', 'con', '▁il', '▁nu', 'ovo', '▁d', 'ato', ',', '▁mod', 'ific', 'a', '▁d', 'ello', '▁status', '▁delle', '▁stan', 'ze', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'qu', 'ando', '▁vi', 'ene', '▁accol', 'ta', '▁una', '▁rich', 'iest', 'a', '▁di', '▁camb', 'io', '▁di', '▁stan', 'za', '▁si', '▁dov', 'r', 'à', '▁pot', 'er', '▁', '\n', 'ver', 'ific', 'are', '▁che', '▁i', '▁d', 'ati', '▁deg', 'li', '▁occup', 'anti', '▁non', '▁si', '▁rif', 'er', 'is', 'con', 'o', '▁pi', 'ù', '▁alla', '▁stan', 'za', '▁in', '▁', '\n', 'pre', 'ced', 'enza', '▁occup', 'ata', '▁ma', '▁alla', '▁nu', 'ova', '▁stan', 'za', '▁in', '▁cu', 'i', '▁s', 'og', 'gi', 'orn', 'ano', '.', '▁il', '▁', '\n', 'c', 'amb', 'iament', 'o', '▁di', '▁stan', 'za', '▁coin', 'vol', 'ger', 'à', '▁lo', '▁stat', 'o', '▁delle', '▁stan', 'ze', '▁mod', 'ific', 'and', 'olo', '▁', '\n', 'op', 'portun', 'ament', 'e', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'per', 'met', 'ter', 'e', '▁un', '▁eventual', 'e', '▁sp', 'ost', 'amento', '▁di', '▁stan', 'za', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'nn', '.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁1', '\n\n', 'data', ':', '▁28', '/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']~['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-06', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁del', '▁cambio', '▁di', '▁stanza', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'nel', '▁cas', 'o', '▁in', '▁cui', '▁il', '▁client', 'e', '▁desider', 'i', '▁o', '▁sia', '▁cost', 'retto', '▁(', 'es', '.', '▁per', '▁un', '▁gu', 'asto', ')', '▁a', '▁camb', 'ia', 're', '▁', '\n', 'stan', 'za', '▁di', '▁sog', 'gi', 'orno', ',', '▁il', '▁sistema', '▁dov', 'rà', '▁forn', 'ire', '▁tutti', '▁gli', '▁strumenti', '▁necess', 'ari', '▁', '\n', 'aff', 'inch', 'é', '▁ci', 'ò', '▁sia', '▁poss', 'ib', 'ile', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'num', 'ero', '▁di', '▁stanza', '▁da', '▁lasc', 'ia', 're', ',', '▁numero', '▁della', '▁nuova', '▁stanza', '▁da', '▁occup', 'are', '\n', 'output', '▁desider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁dell', '\x92', 'inform', 'azione', '▁che', '▁indic', 'ava', '▁la', '▁stanza', '▁che', '▁occup', 'av', 'ano', '▁i', '▁client', 'i', '▁', '\n', 'con', '▁il', '▁nuovo', '▁dato', ',', '▁mod', 'ific', 'a', '▁dello', '▁status', '▁delle', '▁stan', 'ze', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'qu', 'ando', '▁vi', 'ene', '▁accol', 'ta', '▁una', '▁rich', 'iest', 'a', '▁di', '▁cambio', '▁di', '▁stanza', '▁si', '▁dov', 'rà', '▁pot', 'er', '▁', '\n', 'ver', 'ific', 'are', '▁che', '▁i', '▁d', 'ati', '▁degli', '▁occup', 'anti', '▁non', '▁si', '▁rif', 'eris', 'con', 'o', '▁pi', 'ù', '▁alla', '▁stanza', '▁in', '▁', '\n', 'preced', 'enza', '▁occup', 'ata', '▁ma', '▁alla', '▁nuova', '▁stanza', '▁in', '▁cui', '▁sog', 'gi', 'orn', 'ano', '.', '▁il', '▁', '\n', 'camb', 'iament', 'o', '▁di', '▁stanza', '▁coin', 'vol', 'ger', 'à', '▁lo', '▁stato', '▁delle', '▁stan', 'ze', '▁mod', 'ific', 'and', 'olo', '▁', '\n', 'op', 'portun', 'amente', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'per', 'met', 'tere', '▁un', '▁eventual', 'e', '▁sp', 'ost', 'amento', '▁di', '▁stanza', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'nn', '.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁1', '\n\n', 'data', ':', '▁28', '/04/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']~requisito numero sog tipo funzional requisito gestion del cambio stanza descrizion nel caso cui client desideri sia costretto per guasto cambiar stanza soggiorno sistema dovr fornir tutti gli strumenti necessari affinch sia possibil input richiesto numero stanza lasciar numero della nuova stanza occupar output desiderato modifica dell informazion che indicava stanza che occupavano clienti con nuovo dato modifica dello status dell stanz criterio accettazion quando vien accolta una richiesta cambio stanza dovr poter verificar che dati deg occupanti non riferiscono alla stanza precedenza occupata alla nuova stanza cui soggiornano cambiamento stanza coinvolg stato dell stanz modificandolo opportunament aspett colleg permetter eventual spostamento stanza requis collegati stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato martini roberto note
13~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-RIS-01.txt~F-RIS-01.txt~"
Requisito numero: 
F-RIS-01
Tipo:
Funzionale
 
Requisito:
Gestione del servizio ristorante per clienti esterni.
Descrizione:
Il sistema dovrà essere in grado di gestire la contabilità immediata di un 
normale ristorante i cui clienti non sono necessariamente soggiornanti 
nellhotel.
Il sistema dovrà essere quindi in grado di:
  fornire i prezzi delle portate singole perché il cliente esterno non sia 
vincolato alla scelta del menù fisso previsto per i soggiornanti;
  accettare in ingresso le varie portate consumate;
  stampare la ricevuta in base all'elenco delle consumazioni.
Input richiesto:
Dati relativi al cliente (numero persone, portate e bevande consumate, 
modalità di pagamento).
Output desiderato:
Stampa del conto relativo alle consumazioni.
Criterio di 
accettazione:
Tale requisito è soddisfatto se il sistema fornisce allutente la possibilità di 
visualizzare, modificare, aggiornare e stampare il conto del servizio di 
ristorazione.
Aspettative collegate:
Semplice gestione dell'attività di ristorazione.
Requisiti collegati:
nn.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Stabile
2
Richiesto
Stabile
Piena comprensione
Organizzazione
Versione: 2.2

Data: 29/03/1998

Compilato da: Girelli Daria 

Note:


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ris', '-0', '1', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'gest', 'ion', 'e', '▁del', '▁serv', 'iz', 'io', '▁r', 'ist', 'or', 'ante', '▁per', '▁cl', 'ient', 'i', '▁es', 'tern', 'i', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'il', '▁s', 'ist', 'em', 'a', '▁d', 'ov', 'r', 'à', '▁ess', 'ere', '▁in', '▁grad', 'o', '▁di', '▁g', 'est', 'ire', '▁la', '▁cont', 'abil', 'it', 'à', '▁immedi', 'ata', '▁di', '▁un', '▁', '\n', 'n', 'orm', 'ale', '▁r', 'ist', 'or', 'ante', '▁i', '▁cu', 'i', '▁cl', 'ient', 'i', '▁non', '▁son', 'o', '▁necess', 'ar', 'iament', 'e', '▁s', 'og', 'gi', 'orn', 'ant', 'i', '▁', '\n', 'nell', '\x92', 'h', 'ot', 'el', '.', '\n', 'il', '▁s', 'ist', 'em', 'a', '▁d', 'ov', 'r', 'à', '▁ess', 'ere', '▁qu', 'ind', 'i', '▁in', '▁grad', 'o', '▁di', ':', '\n', '▁for', 'n', 'ire', '▁i', '▁pre', 'zz', 'i', '▁del', 'le', '▁port', 'ate', '▁sing', 'ole', '▁per', 'ch', 'é', '▁il', '▁cl', 'ient', 'e', '▁es', 'tern', 'o', '▁non', '▁s', 'ia', '▁', '\n', 'v', 'inc', 'ol', 'ato', '▁all', 'a', '▁sc', 'el', 'ta', '▁del', '▁men', 'ù', '▁f', 'is', 'so', '▁prev', 'ist', 'o', '▁per', '▁i', '▁s', 'og', 'gi', 'orn', 'ant', 'i', ';', '\n', '▁acc', 'ett', 'are', '▁in', '▁ing', 'res', 'so', '▁le', '▁var', 'ie', '▁port', 'ate', '▁consum', 'ate', ';', '\n', '▁stamp', 'are', '▁la', '▁rice', 'v', 'ut', 'a', '▁in', '▁base', '▁all', ""'"", 'el', 'en', 'co', '▁del', 'le', '▁consum', 'az', 'ion', 'i', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'd', 'ati', '▁rel', 'at', 'iv', 'i', '▁al', '▁cl', 'ient', 'e', '▁(', 'n', 'um', 'ero', '▁pers', 'one', ',', '▁port', 'ate', '▁e', '▁be', 'v', 'and', 'e', '▁consum', 'ate', ',', '▁', '\n', 'mod', 'al', 'it', 'à', '▁di', '▁p', 'ag', 'ament', 'o', ').', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'st', 'amp', 'a', '▁del', '▁cont', 'o', '▁rel', 'at', 'iv', 'o', '▁alle', '▁consum', 'az', 'ion', 'i', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 't', 'ale', '▁requ', 'is', 'ito', '▁', 'è', '▁s', 'od', 'dis', 'f', 'att', 'o', '▁se', '▁il', '▁s', 'ist', 'em', 'a', '▁for', 'n', 'is', 'ce', '▁all', '\x92', 'ut', 'ent', 'e', '▁la', '▁poss', 'ib', 'il', 'it', 'à', '▁di', '▁', '\n', 'vis', 'ual', 'iz', 'z', 'are', ',', '▁mod', 'ific', 'are', ',', '▁ag', 'gi', 'orn', 'are', '▁e', '▁stamp', 'are', '▁il', '▁cont', 'o', '▁del', '▁serv', 'iz', 'io', '▁di', '▁', '\n', 'rist', 'or', 'az', 'ion', 'e', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 's', 'em', 'pl', 'ice', '▁g', 'est', 'ion', 'e', '▁d', 'ell', ""'"", 'att', 'iv', 'it', 'à', '▁di', '▁r', 'ist', 'or', 'az', 'ion', 'e', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'n', 'n', '.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'st', 'ab', 'ile', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'organ', 'iz', 'z', 'az', 'ion', 'e', '\n', 'vers', 'ion', 'e', ':', '▁2.', '2', '\n\n', 'd', 'ata', ':', '▁29', '/', '03', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁g', 'ire', 'll', 'i', '▁dar', 'ia', '▁', '\n\n', 'note', ':', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ris', '-01', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁del', '▁serv', 'izio', '▁r', 'ist', 'or', 'ante', '▁per', '▁client', 'i', '▁es', 'tern', 'i', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'il', '▁sist', 'ema', '▁dov', 'r', 'à', '▁ess', 'ere', '▁in', '▁grad', 'o', '▁di', '▁gest', 'ire', '▁la', '▁cont', 'abil', 'it', 'à', '▁immedi', 'ata', '▁di', '▁un', '▁', '\n', 'norm', 'ale', '▁r', 'ist', 'or', 'ante', '▁i', '▁cu', 'i', '▁client', 'i', '▁non', '▁son', 'o', '▁necess', 'ar', 'iament', 'e', '▁s', 'og', 'gi', 'orn', 'anti', '▁', '\n', 'nell', '\x92', 'hot', 'el', '.', '\n', 'il', '▁sist', 'ema', '▁dov', 'r', 'à', '▁ess', 'ere', '▁qu', 'indi', '▁in', '▁grad', 'o', '▁di', ':', '\n', '▁for', 'n', 'ire', '▁i', '▁pre', 'zzi', '▁delle', '▁port', 'ate', '▁sing', 'ole', '▁per', 'ch', 'é', '▁il', '▁client', 'e', '▁es', 'tern', 'o', '▁non', '▁s', 'ia', '▁', '\n', 'v', 'inc', 'ol', 'ato', '▁alla', '▁sc', 'el', 'ta', '▁del', '▁men', 'ù', '▁fis', 'so', '▁prev', 'isto', '▁per', '▁i', '▁s', 'og', 'gi', 'orn', 'anti', ';', '\n', '▁acc', 'ett', 'are', '▁in', '▁ing', 'res', 'so', '▁le', '▁var', 'ie', '▁port', 'ate', '▁consum', 'ate', ';', '\n', '▁stamp', 'are', '▁la', '▁rice', 'v', 'uta', '▁in', '▁base', '▁all', ""'"", 'el', 'en', 'co', '▁delle', '▁consum', 'az', 'ioni', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁rel', 'ativ', 'i', '▁al', '▁client', 'e', '▁(', 'num', 'ero', '▁pers', 'one', ',', '▁port', 'ate', '▁e', '▁be', 'v', 'ande', '▁consum', 'ate', ',', '▁', '\n', 'mod', 'al', 'it', 'à', '▁di', '▁pag', 'amento', ').', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'st', 'ampa', '▁del', '▁cont', 'o', '▁rel', 'at', 'ivo', '▁alle', '▁consum', 'az', 'ioni', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 't', 'ale', '▁requ', 'is', 'ito', '▁', 'è', '▁sod', 'dis', 'f', 'att', 'o', '▁se', '▁il', '▁sist', 'ema', '▁for', 'nis', 'ce', '▁all', '\x92', 'ut', 'ente', '▁la', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁', '\n', 'vis', 'ual', 'izz', 'are', ',', '▁mod', 'ific', 'are', ',', '▁ag', 'gi', 'orn', 'are', '▁e', '▁stamp', 'are', '▁il', '▁cont', 'o', '▁del', '▁serv', 'izio', '▁di', '▁', '\n', 'rist', 'or', 'azione', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'sem', 'pl', 'ice', '▁gest', 'ione', '▁dell', ""'"", 'att', 'iv', 'it', 'à', '▁di', '▁r', 'ist', 'or', 'azione', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'nn', '.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'st', 'ab', 'ile', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'organ', 'izz', 'azione', '\n', 'vers', 'ione', ':', '▁2.2', '\n\n', 'data', ':', '▁29', '/', '03', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁g', 'ire', 'lli', '▁dar', 'ia', '▁', '\n\n', 'note', ':', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'ris', '-01', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'gest', 'ione', '▁del', '▁serv', 'izio', '▁r', 'istor', 'ante', '▁per', '▁client', 'i', '▁es', 'tern', 'i', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'il', '▁sistema', '▁dov', 'rà', '▁ess', 'ere', '▁in', '▁grad', 'o', '▁di', '▁gest', 'ire', '▁la', '▁cont', 'abil', 'ità', '▁immedi', 'ata', '▁di', '▁un', '▁', '\n', 'norm', 'ale', '▁r', 'istor', 'ante', '▁i', '▁cui', '▁client', 'i', '▁non', '▁sono', '▁necess', 'ar', 'iament', 'e', '▁sog', 'gi', 'orn', 'anti', '▁', '\n', 'nell', '\x92', 'hotel', '.', '\n', 'il', '▁sistema', '▁dov', 'rà', '▁ess', 'ere', '▁qu', 'indi', '▁in', '▁grad', 'o', '▁di', ':', '\n', '▁forn', 'ire', '▁i', '▁pre', 'zzi', '▁delle', '▁port', 'ate', '▁sing', 'ole', '▁perch', 'é', '▁il', '▁client', 'e', '▁es', 'tern', 'o', '▁non', '▁sia', '▁', '\n', 'vinc', 'ol', 'ato', '▁alla', '▁scel', 'ta', '▁del', '▁men', 'ù', '▁fis', 'so', '▁prev', 'isto', '▁per', '▁i', '▁sog', 'gi', 'orn', 'anti', ';', '\n', '▁acc', 'ett', 'are', '▁in', '▁ing', 'resso', '▁le', '▁varie', '▁port', 'ate', '▁consum', 'ate', ';', '\n', '▁stamp', 'are', '▁la', '▁rice', 'v', 'uta', '▁in', '▁base', '▁all', ""'"", 'elen', 'co', '▁delle', '▁consum', 'azioni', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'd', 'ati', '▁relativ', 'i', '▁al', '▁client', 'e', '▁(', 'num', 'ero', '▁pers', 'one', ',', '▁port', 'ate', '▁e', '▁bev', 'ande', '▁consum', 'ate', ',', '▁', '\n', 'modal', 'ità', '▁di', '▁pag', 'amento', ').', '\n', 'output', '▁desider', 'ato', ':', '\n', 'st', 'ampa', '▁del', '▁cont', 'o', '▁rel', 'ativo', '▁alle', '▁consum', 'azioni', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'tale', '▁requis', 'ito', '▁è', '▁sod', 'dis', 'f', 'atto', '▁se', '▁il', '▁sistema', '▁for', 'nis', 'ce', '▁all', '\x92', 'ut', 'ente', '▁la', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁', '\n', 'visual', 'izz', 'are', ',', '▁mod', 'ific', 'are', ',', '▁ag', 'gi', 'orn', 'are', '▁e', '▁stamp', 'are', '▁il', '▁cont', 'o', '▁del', '▁serv', 'izio', '▁di', '▁', '\n', 'rist', 'or', 'azione', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'sem', 'pl', 'ice', '▁gest', 'ione', '▁dell', ""'"", 'att', 'iv', 'ità', '▁di', '▁r', 'istor', 'azione', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'nn', '.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'stab', 'ile', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'organ', 'izz', 'azione', '\n', 'vers', 'ione', ':', '▁2.2', '\n\n', 'data', ':', '▁29', '/03', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁g', 'irelli', '▁daria', '▁', '\n\n', 'note', ':', '\n\n\n']"~requisito numero ris tipo funzional requisito gestion del servizio ristorant per clienti esterni descrizion sistema dovr esser grado gestir contabilit immediata normal ristorant cui clienti non sono necessariament soggiornanti nell hotel sistema dovr esser quindi grado fornir prezzi dell portat singol perch client esterno non sia vincolato alla scelta del men fisso previsto per soggiornanti accettar ingresso vari portat consum stampar ricevuta base elenco dell consumazioni input richiesto dati relativi client numero person portat bevand consum modalit pagamento output desiderato stampa del conto relativo all consumazioni criterio accettazion tale requisito soddisfatto sistema fornisc utent possibilit visualizzar modificar aggiornar stampar conto del servizio ristorazion aspett colleg semplic gestion dell attivit ristorazion requis collegati stato releas priorit stabilit livello comprension categoria stabil richiesto stabil piena comprension organizzazion version data compilato girelli daria note
14~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-PRE-05.txt~F-PRE-05.txt~"
Requisito numero: 
F-PRE-05
Tipo:
Funzionale
 
Requisito:
Cancellazione di una prenotazione.
Descrizione:
A partire dai dati forniti dal cliente deve essere possibile disdire una 
prenotazione. In tal caso le stanze che erano in stato di bloccato o assegnato 
torneranno ad essere disponibili. Se le stanze per le quali è stato richiesto 
l'annullamento della prenotazione erano state date in gestione ad  un'agenzia 
viaggi esse dovranno:
  riassumere lo stato di commissionate nel caso in cui la data di disdetta sia 
precedente alla data stabilita tra albergatore e agenzia come scadenza del 
commissionamento;
  ritornare ad essere disponibili nel caso in cui tale data sia altrepassata.
Input richiesto:
Nominativo del cliente che era stato lasciato al momento della prenotazione.
Output desiderato:
Modifica dello stato delle stanze che erano state prenotate ed eliminazione 
della prenotazione dall'elenco delle prenotazioni.
Criterio di 
accettazione:
Se i dati forniti corrispondono a quelli di una prenotazione esistente, essa 
viene visualizzata e, dopo una richiesta di conferma, cancellata e lo stato delle 
stanze coinvolte cambiato in disponibile (o commissionata). Se al contrario 
non esiste una corrispondenza nell'elenco viene visualizzato un messaggio di 
errore e viene data la possibilità di modificare i dati forniti o di annullare 
l'operazione.
Aspettative collegate:
Cancellazione della prenotazione con conseguente aggiornamento a stanza 
disponibile. Se la prenotazione da eliminare risulta inesistente un messaggio a 
video ci avviserà dell'errore verificatosi.
Requisiti collegati:
F-PRE-02.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
1
Richiesto
Stabile
Piena comprensione
Software
Versione: 1.2

Data: 31/03/1998

Compilato da: Colombari Andrea

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-0', '5', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'c', 'anc', 'ell', 'az', 'ion', 'e', '▁di', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'a', '▁part', 'ire', '▁d', 'ai', '▁d', 'ati', '▁for', 'n', 'iti', '▁dal', '▁cl', 'ient', 'e', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁dis', 'd', 'ire', '▁un', 'a', '▁', '\n', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', '▁in', '▁tal', '▁cas', 'o', '▁le', '▁stan', 'ze', '▁che', '▁er', 'ano', '▁in', '▁stat', 'o', '▁di', '▁bl', 'oc', 'c', 'ato', '▁o', '▁as', 'se', 'gn', 'ato', '▁', '\n', 't', 'orn', 'er', 'ann', 'o', '▁ad', '▁ess', 'ere', '▁dis', 'pon', 'ib', 'ili', '.', '▁se', '▁le', '▁stan', 'ze', '▁per', '▁le', '▁qual', 'i', '▁', 'è', '▁stat', 'o', '▁rich', 'i', 'est', 'o', '▁', '\n', 'l', ""'"", 'ann', 'ull', 'ament', 'o', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁er', 'ano', '▁state', '▁date', '▁in', '▁g', 'est', 'ion', 'e', '▁ad', '▁un', ""'"", 'agen', 'z', 'ia', '▁', '\n', 'vi', 'ag', 'gi', '▁ess', 'e', '▁d', 'ov', 'r', 'ann', 'o', ':', '\n', '▁ri', 'ass', 'um', 'ere', '▁lo', '▁stat', 'o', '▁di', '▁commission', 'ate', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁la', '▁data', '▁di', '▁dis', 'd', 'ett', 'a', '▁s', 'ia', '▁', '\n', 'pre', 'ced', 'ent', 'e', '▁all', 'a', '▁data', '▁st', 'abil', 'ita', '▁tra', '▁al', 'berg', 'at', 'ore', '▁e', '▁ag', 'enz', 'ia', '▁come', '▁sc', 'ad', 'en', 'za', '▁del', '▁', '\n', 'com', 'mission', 'ament', 'o', ';', '\n', '▁rit', 'orn', 'are', '▁ad', '▁ess', 'ere', '▁dis', 'pon', 'ib', 'ili', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁t', 'ale', '▁data', '▁s', 'ia', '▁alt', 'rep', 'ass', 'ata', '.', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'n', 'omin', 'at', 'iv', 'o', '▁del', '▁cl', 'ient', 'e', '▁che', '▁era', '▁stat', 'o', '▁l', 'asc', 'i', 'ato', '▁al', '▁moment', 'o', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁d', 'ello', '▁stat', 'o', '▁del', 'le', '▁stan', 'ze', '▁che', '▁er', 'ano', '▁state', '▁p', 'ren', 'ot', 'ate', '▁ed', '▁elimin', 'az', 'ion', 'e', '▁', '\n', 'd', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁dall', ""'"", 'el', 'en', 'co', '▁del', 'le', '▁p', 'ren', 'ot', 'az', 'ion', 'i', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'se', '▁i', '▁d', 'ati', '▁for', 'n', 'iti', '▁cor', 'ris', 'p', 'ondon', 'o', '▁a', '▁qu', 'elli', '▁di', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁es', 'ist', 'ent', 'e', ',', '▁ess', 'a', '▁', '\n', 'vi', 'ene', '▁visual', 'iz', 'z', 'ata', '▁e', ',', '▁d', 'op', 'o', '▁un', 'a', '▁rich', 'i', 'est', 'a', '▁di', '▁con', 'fer', 'ma', ',', '▁canc', 'ell', 'ata', '▁e', '▁lo', '▁stat', 'o', '▁del', 'le', '▁', '\n', 'stan', 'ze', '▁co', 'in', 'vol', 'te', '▁c', 'amb', 'i', 'ato', '▁in', '▁dis', 'pon', 'ib', 'ile', '▁(', 'o', '▁commission', 'ata', ').', '▁se', '▁al', '▁cont', 'r', 'ario', '▁', '\n', 'non', '▁es', 'ist', 'e', '▁un', 'a', '▁cor', 'ris', 'p', 'ond', 'en', 'za', '▁n', 'ell', ""'"", 'el', 'en', 'co', '▁vi', 'ene', '▁visual', 'iz', 'z', 'ato', '▁un', '▁mess', 'ag', 'gio', '▁di', '▁', '\n', 'er', 'r', 'ore', '▁e', '▁vi', 'ene', '▁data', '▁la', '▁poss', 'ib', 'il', 'it', 'à', '▁di', '▁mod', 'ific', 'are', '▁i', '▁d', 'ati', '▁for', 'n', 'iti', '▁o', '▁di', '▁ann', 'ull', 'are', '▁', '\n', 'l', ""'"", 'oper', 'az', 'ion', 'e', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'c', 'anc', 'ell', 'az', 'ion', 'e', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁con', '▁con', 'se', 'gu', 'ent', 'e', '▁ag', 'gi', 'orn', 'ament', 'o', '▁a', '▁stan', 'za', '▁', '\n', 'dis', 'pon', 'ib', 'ile', '.', '▁se', '▁la', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁da', '▁elimin', 'are', '▁r', 'is', 'ult', 'a', '▁in', 'es', 'ist', 'ent', 'e', '▁un', '▁mess', 'ag', 'gio', '▁a', '▁', '\n', 'video', '▁c', 'i', '▁av', 'v', 'iser', 'à', '▁d', 'ell', ""'"", 'er', 'r', 'ore', '▁ver', 'ific', 'at', 'os', 'i', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁1.', '2', '\n\n', 'd', 'ata', ':', '▁31', '/', '03', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁colomb', 'ari', '▁andre', 'a', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'pre', '-0', '5', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'canc', 'ell', 'azione', '▁di', '▁una', '▁pren', 'ot', 'azione', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'a', '▁part', 'ire', '▁dai', '▁d', 'ati', '▁for', 'n', 'iti', '▁dal', '▁client', 'e', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁dis', 'd', 'ire', '▁una', '▁', '\n', 'p', 'ren', 'ot', 'azione', '.', '▁in', '▁tal', '▁cas', 'o', '▁le', '▁stan', 'ze', '▁che', '▁er', 'ano', '▁in', '▁stat', 'o', '▁di', '▁bl', 'occ', 'ato', '▁o', '▁as', 'se', 'gn', 'ato', '▁', '\n', 't', 'orn', 'er', 'ann', 'o', '▁ad', '▁ess', 'ere', '▁dis', 'pon', 'ib', 'ili', '.', '▁se', '▁le', '▁stan', 'ze', '▁per', '▁le', '▁qual', 'i', '▁', 'è', '▁stat', 'o', '▁rich', 'iest', 'o', '▁', '\n', 'l', ""'"", 'ann', 'ull', 'amento', '▁della', '▁pren', 'ot', 'azione', '▁er', 'ano', '▁state', '▁date', '▁in', '▁gest', 'ione', '▁ad', '▁un', ""'"", 'agen', 'zia', '▁', '\n', 'vi', 'aggi', '▁ess', 'e', '▁dov', 'r', 'ann', 'o', ':', '\n', '▁ri', 'ass', 'um', 'ere', '▁lo', '▁stat', 'o', '▁di', '▁commission', 'ate', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁la', '▁data', '▁di', '▁dis', 'd', 'etta', '▁s', 'ia', '▁', '\n', 'pre', 'ced', 'ente', '▁alla', '▁data', '▁stabil', 'ita', '▁tra', '▁al', 'berg', 'atore', '▁e', '▁ag', 'enz', 'ia', '▁come', '▁sc', 'ad', 'enza', '▁del', '▁', '\n', 'com', 'mission', 'amento', ';', '\n', '▁rit', 'orn', 'are', '▁ad', '▁ess', 'ere', '▁dis', 'pon', 'ib', 'ili', '▁nel', '▁cas', 'o', '▁in', '▁cu', 'i', '▁tale', '▁data', '▁s', 'ia', '▁alt', 'rep', 'ass', 'ata', '.', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'n', 'omin', 'at', 'ivo', '▁del', '▁client', 'e', '▁che', '▁era', '▁stat', 'o', '▁l', 'asc', 'i', 'ato', '▁al', '▁moment', 'o', '▁della', '▁pren', 'ot', 'azione', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁d', 'ello', '▁stat', 'o', '▁delle', '▁stan', 'ze', '▁che', '▁er', 'ano', '▁state', '▁pren', 'ot', 'ate', '▁ed', '▁elimin', 'azione', '▁', '\n', 'd', 'ella', '▁pren', 'ot', 'azione', '▁dall', ""'"", 'el', 'en', 'co', '▁delle', '▁pren', 'ot', 'az', 'ioni', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'se', '▁i', '▁d', 'ati', '▁for', 'n', 'iti', '▁cor', 'ris', 'p', 'ondon', 'o', '▁a', '▁qu', 'elli', '▁di', '▁una', '▁pren', 'ot', 'azione', '▁es', 'ist', 'ente', ',', '▁ess', 'a', '▁', '\n', 'vi', 'ene', '▁visual', 'izz', 'ata', '▁e', ',', '▁dop', 'o', '▁una', '▁rich', 'iest', 'a', '▁di', '▁con', 'fer', 'ma', ',', '▁canc', 'ell', 'ata', '▁e', '▁lo', '▁stat', 'o', '▁delle', '▁', '\n', 'stan', 'ze', '▁coin', 'vol', 'te', '▁camb', 'i', 'ato', '▁in', '▁dis', 'pon', 'ib', 'ile', '▁(', 'o', '▁commission', 'ata', ').', '▁se', '▁al', '▁cont', 'r', 'ario', '▁', '\n', 'non', '▁es', 'iste', '▁una', '▁cor', 'ris', 'p', 'ond', 'enza', '▁nell', ""'"", 'el', 'en', 'co', '▁vi', 'ene', '▁visual', 'izz', 'ato', '▁un', '▁mess', 'aggio', '▁di', '▁', '\n', 'er', 'r', 'ore', '▁e', '▁vi', 'ene', '▁data', '▁la', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁mod', 'ific', 'are', '▁i', '▁d', 'ati', '▁for', 'n', 'iti', '▁o', '▁di', '▁ann', 'ull', 'are', '▁', '\n', 'l', ""'"", 'oper', 'azione', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'canc', 'ell', 'azione', '▁della', '▁pren', 'ot', 'azione', '▁con', '▁con', 'se', 'gu', 'ente', '▁ag', 'gi', 'orn', 'amento', '▁a', '▁stan', 'za', '▁', '\n', 'dis', 'pon', 'ib', 'ile', '.', '▁se', '▁la', '▁pren', 'ot', 'azione', '▁da', '▁elimin', 'are', '▁ris', 'ult', 'a', '▁in', 'es', 'ist', 'ente', '▁un', '▁mess', 'aggio', '▁a', '▁', '\n', 'video', '▁ci', '▁av', 'v', 'iser', 'à', '▁dell', ""'"", 'er', 'r', 'ore', '▁ver', 'ific', 'at', 'osi', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁1.2', '\n\n', 'data', ':', '▁31', '/', '03', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁colomb', 'ari', '▁andrea', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'pre', '-05', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'canc', 'ell', 'azione', '▁di', '▁una', '▁pren', 'ot', 'azione', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'a', '▁part', 'ire', '▁dai', '▁d', 'ati', '▁forn', 'iti', '▁dal', '▁client', 'e', '▁de', 've', '▁ess', 'ere', '▁poss', 'ib', 'ile', '▁dis', 'dire', '▁una', '▁', '\n', 'p', 'ren', 'ot', 'azione', '.', '▁in', '▁tal', '▁cas', 'o', '▁le', '▁stan', 'ze', '▁che', '▁er', 'ano', '▁in', '▁stato', '▁di', '▁bl', 'occ', 'ato', '▁o', '▁as', 'se', 'gn', 'ato', '▁', '\n', 'torn', 'er', 'anno', '▁ad', '▁ess', 'ere', '▁dis', 'pon', 'ib', 'ili', '.', '▁se', '▁le', '▁stan', 'ze', '▁per', '▁le', '▁qual', 'i', '▁è', '▁stato', '▁rich', 'iest', 'o', '▁', '\n', 'l', ""'"", 'ann', 'ull', 'amento', '▁della', '▁pren', 'ot', 'azione', '▁er', 'ano', '▁state', '▁date', '▁in', '▁gest', 'ione', '▁ad', '▁un', ""'"", 'agen', 'zia', '▁', '\n', 'vi', 'aggi', '▁ess', 'e', '▁dov', 'r', 'anno', ':', '\n', '▁ri', 'ass', 'um', 'ere', '▁lo', '▁stato', '▁di', '▁commission', 'ate', '▁nel', '▁cas', 'o', '▁in', '▁cui', '▁la', '▁data', '▁di', '▁dis', 'd', 'etta', '▁sia', '▁', '\n', 'preced', 'ente', '▁alla', '▁data', '▁stabil', 'ita', '▁tra', '▁alberg', 'atore', '▁e', '▁ag', 'enzia', '▁come', '▁sc', 'ad', 'enza', '▁del', '▁', '\n', 'commission', 'amento', ';', '\n', '▁rit', 'orn', 'are', '▁ad', '▁ess', 'ere', '▁dis', 'pon', 'ib', 'ili', '▁nel', '▁cas', 'o', '▁in', '▁cui', '▁tale', '▁data', '▁sia', '▁alt', 'rep', 'ass', 'ata', '.', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'nomin', 'ativo', '▁del', '▁client', 'e', '▁che', '▁era', '▁stato', '▁lasc', 'iato', '▁al', '▁moment', 'o', '▁della', '▁pren', 'ot', 'azione', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'mod', 'ific', 'a', '▁dello', '▁stato', '▁delle', '▁stan', 'ze', '▁che', '▁er', 'ano', '▁state', '▁pren', 'ot', 'ate', '▁ed', '▁elimin', 'azione', '▁', '\n', 'd', 'ella', '▁pren', 'ot', 'azione', '▁dall', ""'"", 'elen', 'co', '▁delle', '▁pren', 'ot', 'azioni', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'se', '▁i', '▁d', 'ati', '▁forn', 'iti', '▁cor', 'ris', 'p', 'ondon', 'o', '▁a', '▁qu', 'elli', '▁di', '▁una', '▁pren', 'ot', 'azione', '▁es', 'ist', 'ente', ',', '▁essa', '▁', '\n', 'vi', 'ene', '▁visual', 'izz', 'ata', '▁e', ',', '▁dop', 'o', '▁una', '▁rich', 'iest', 'a', '▁di', '▁confer', 'ma', ',', '▁canc', 'ellata', '▁e', '▁lo', '▁stato', '▁delle', '▁', '\n', 'stan', 'ze', '▁coin', 'vol', 'te', '▁camb', 'iato', '▁in', '▁dis', 'pon', 'ib', 'ile', '▁(', 'o', '▁commission', 'ata', ').', '▁se', '▁al', '▁contr', 'ario', '▁', '\n', 'non', '▁es', 'iste', '▁una', '▁cor', 'ris', 'pond', 'enza', '▁nell', ""'"", 'elen', 'co', '▁vi', 'ene', '▁visual', 'izz', 'ato', '▁un', '▁mess', 'aggio', '▁di', '▁', '\n', 'er', 'r', 'ore', '▁e', '▁vi', 'ene', '▁data', '▁la', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁mod', 'ific', 'are', '▁i', '▁d', 'ati', '▁forn', 'iti', '▁o', '▁di', '▁ann', 'ull', 'are', '▁', '\n', 'l', ""'"", 'oper', 'azione', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'canc', 'ell', 'azione', '▁della', '▁pren', 'ot', 'azione', '▁con', '▁conse', 'gu', 'ente', '▁ag', 'gi', 'orn', 'amento', '▁a', '▁stanza', '▁', '\n', 'dis', 'pon', 'ib', 'ile', '.', '▁se', '▁la', '▁pren', 'ot', 'azione', '▁da', '▁elimin', 'are', '▁ris', 'ult', 'a', '▁ines', 'ist', 'ente', '▁un', '▁mess', 'aggio', '▁a', '▁', '\n', 'video', '▁ci', '▁av', 'v', 'iser', 'à', '▁dell', ""'"", 'er', 'r', 'ore', '▁ver', 'ific', 'at', 'osi', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '2.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '1', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁1.2', '\n\n', 'data', ':', '▁31', '/03', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁colomb', 'ari', '▁andrea', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero pre tipo funzional requisito cancellazion una prenotazion descrizion partir dai dati forniti dal client deve esser possibil disdir una prenotazion tal caso stanz che erano stato bloccato assegnato torneranno esser disponibili stanz per quali stato richiesto annullamento della prenotazion erano state date gestion agenzia viaggi ess dovranno riassumer stato commission nel caso cui data disdetta sia precedent alla data stabilita tra albergator agenzia come scadenza del commissionamento ritornar esser disponibili nel caso cui tale data sia altrepassata input richiesto nominativo del client che era stato lasciato momento della prenotazion output desiderato modifica dello stato dell stanz che erano state prenot eliminazion della prenotazion dall elenco dell prenotazioni criterio accettazion dati forniti corrispondono quelli una prenotazion esistent essa vien visualizzata dopo una richiesta conferma cancellata stato dell stanz coinvolt cambiato disponibil commissionata contrario non esist una corrispondenza nell elenco vien visualizzato messaggio error vien data possibilit modificar dati forniti annullar operazion aspett colleg cancellazion della prenotazion con conseguent aggiornamento stanza disponibil prenotazion eliminar risulta inesistent messaggio video avvis dell error verificatosi requis collegati pre stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension softwar version data compilato colombari andrea note
15~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-GES-04.txt~F-GES-04.txt~"
Requisito numero: 
F-GES-04
Tipo:
Funzionale
 
Requisito:
Configurazione delle opzioni di sistema.
Descrizione:
Alcuni parametri e dati che il sistema utilizza per svolgere le attività per cui è 
stato realizzato devono poter essere impostate dal gestore dell'albergo. Dovrà 
essere prevista perciò la possibilità di configurare il sistema in base alle 
esigenze dell'utente. Ciò che dovrà sicuramente comparire sono le seguenti 
impostazioni:
  date di inizio e fine delle varie stagionalità
  sconti e riduzioni da effettuare a neonati e bambini
  durata massima per la quale una stanza può restare bloccata
  supplemento per le varie stagionalità
  costo di uno scatto telefonico
Input richiesto:
I dati di configurazione con le modifiche ritenute opportune dal gestore.
Output desiderato:
Aggiornamento configurazione di sistema.
Criterio di 
accettazione:
I dati dovranno influire sulla gestione dell'albergo in base all'area di 
competenza. Es. se viene previsto uno sconto per i bambini tale sconto dovrà 
apparire chiaramente nel calcolo del conto finale e nella sua stampa.
Aspettative collegate:
Permettere una maggiore flessibilità al sistema.
Requisiti collegati:
F-PRE-03, F-SOG-03, F-SOG-04, F-GES-01
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Sospeso
2
Opzionale
Stabile
Piena comprensione
Software
Versione: 2.1

Data: 15/04/1998

Compilato da: Martini Roberto 

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ges', '-0', '4', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'e', '▁del', 'le', '▁op', 'z', 'ion', 'i', '▁di', '▁s', 'ist', 'em', 'a', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 'al', 'c', 'un', 'i', '▁param', 'et', 'ri', '▁e', '▁d', 'ati', '▁che', '▁il', '▁s', 'ist', 'em', 'a', '▁util', 'iz', 'za', '▁per', '▁s', 'vol', 'g', 'ere', '▁le', '▁att', 'iv', 'it', 'à', '▁per', '▁cu', 'i', '▁', 'è', '▁', '\n', 'st', 'ato', '▁real', 'iz', 'z', 'ato', '▁dev', 'on', 'o', '▁pot', 'er', '▁ess', 'ere', '▁imp', 'ost', 'ate', '▁dal', '▁g', 'est', 'ore', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '.', '▁d', 'ov', 'r', 'à', '▁', '\n', 'ess', 'ere', '▁prev', 'ista', '▁per', 'ci', 'ò', '▁la', '▁poss', 'ib', 'il', 'it', 'à', '▁di', '▁conf', 'ig', 'ur', 'are', '▁il', '▁s', 'ist', 'em', 'a', '▁in', '▁base', '▁alle', '▁', '\n', 'es', 'igen', 'ze', '▁d', 'ell', ""'"", 'ut', 'ent', 'e', '.', '▁c', 'i', 'ò', '▁che', '▁d', 'ov', 'r', 'à', '▁s', 'ic', 'ur', 'ament', 'e', '▁compar', 'ire', '▁son', 'o', '▁le', '▁se', 'gu', 'ent', 'i', '▁', '\n', 'im', 'p', 'ost', 'az', 'ion', 'i', ':', '\n', '▁date', '▁di', '▁in', 'iz', 'io', '▁e', '▁fine', '▁del', 'le', '▁var', 'ie', '▁st', 'ag', 'ional', 'it', 'à', '\n', '▁sc', 'ont', 'i', '▁e', '▁rid', 'uz', 'ion', 'i', '▁da', '▁eff', 'ett', 'u', 'are', '▁a', '▁ne', 'on', 'ati', '▁e', '▁b', 'amb', 'ini', '\n', '▁dur', 'ata', '▁mass', 'ima', '▁per', '▁la', '▁qu', 'ale', '▁un', 'a', '▁stan', 'za', '▁pu', 'ò', '▁rest', 'are', '▁bl', 'oc', 'c', 'ata', '\n', '▁supp', 'lement', 'o', '▁per', '▁le', '▁var', 'ie', '▁st', 'ag', 'ional', 'it', 'à', '\n', '▁cost', 'o', '▁di', '▁un', 'o', '▁sc', 'att', 'o', '▁tele', 'f', 'on', 'ico', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 'i', '▁d', 'ati', '▁di', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '▁con', '▁le', '▁mod', 'ific', 'he', '▁rit', 'en', 'ute', '▁op', 'port', 'une', '▁dal', '▁g', 'est', 'ore', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'ag', 'gi', 'orn', 'ament', 'o', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '▁di', '▁s', 'ist', 'em', 'a', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'i', '▁d', 'ati', '▁d', 'ov', 'r', 'ann', 'o', '▁influ', 'ire', '▁s', 'ull', 'a', '▁g', 'est', 'ion', 'e', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '▁in', '▁base', '▁all', ""'"", 'are', 'a', '▁di', '▁', '\n', 'com', 'pet', 'en', 'za', '.', '▁es', '.', '▁se', '▁vi', 'ene', '▁prev', 'ist', 'o', '▁un', 'o', '▁sc', 'onto', '▁per', '▁i', '▁b', 'amb', 'ini', '▁t', 'ale', '▁sc', 'onto', '▁d', 'ov', 'r', 'à', '▁', '\n', 'app', 'ar', 'ire', '▁chi', 'ar', 'ament', 'e', '▁nel', '▁cal', 'col', 'o', '▁del', '▁cont', 'o', '▁final', 'e', '▁e', '▁n', 'ella', '▁su', 'a', '▁stamp', 'a', '.', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'per', 'met', 'ter', 'e', '▁un', 'a', '▁mag', 'gi', 'ore', '▁fl', 'ess', 'ib', 'il', 'it', 'à', '▁al', '▁s', 'ist', 'em', 'a', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-0', '1', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 's', 'osp', 'es', 'o', '\n', '2', '\n', 'op', 'z', 'ion', 'ale', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'soft', 'ware', '\n', 'vers', 'ion', 'e', ':', '▁2.', '1', '\n\n', 'd', 'ata', ':', '▁15', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁mart', 'ini', '▁robert', 'o', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'ges', '-04', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'con', 'fig', 'ur', 'azione', '▁delle', '▁op', 'z', 'ioni', '▁di', '▁sist', 'ema', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'al', 'c', 'uni', '▁param', 'et', 'ri', '▁e', '▁d', 'ati', '▁che', '▁il', '▁sist', 'ema', '▁util', 'iz', 'za', '▁per', '▁s', 'vol', 'g', 'ere', '▁le', '▁att', 'iv', 'it', 'à', '▁per', '▁cu', 'i', '▁', 'è', '▁', '\n', 'st', 'ato', '▁real', 'izz', 'ato', '▁devon', 'o', '▁pot', 'er', '▁ess', 'ere', '▁imp', 'ost', 'ate', '▁dal', '▁gest', 'ore', '▁dell', ""'"", 'al', 'ber', 'go', '.', '▁dov', 'r', 'à', '▁', '\n', 'ess', 'ere', '▁prev', 'ista', '▁per', 'ci', 'ò', '▁la', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁config', 'ur', 'are', '▁il', '▁sist', 'ema', '▁in', '▁base', '▁alle', '▁', '\n', 'es', 'igen', 'ze', '▁dell', ""'"", 'ut', 'ente', '.', '▁ci', 'ò', '▁che', '▁dov', 'r', 'à', '▁sic', 'ur', 'ament', 'e', '▁compar', 'ire', '▁son', 'o', '▁le', '▁se', 'gu', 'ent', 'i', '▁', '\n', 'im', 'post', 'az', 'ioni', ':', '\n', '▁date', '▁di', '▁in', 'izio', '▁e', '▁fine', '▁delle', '▁var', 'ie', '▁stag', 'ional', 'it', 'à', '\n', '▁sc', 'ont', 'i', '▁e', '▁rid', 'uz', 'ioni', '▁da', '▁eff', 'ett', 'u', 'are', '▁a', '▁neon', 'ati', '▁e', '▁bamb', 'ini', '\n', '▁dur', 'ata', '▁mass', 'ima', '▁per', '▁la', '▁qu', 'ale', '▁una', '▁stan', 'za', '▁pu', 'ò', '▁rest', 'are', '▁bl', 'occ', 'ata', '\n', '▁supplement', 'o', '▁per', '▁le', '▁var', 'ie', '▁stag', 'ional', 'it', 'à', '\n', '▁cost', 'o', '▁di', '▁un', 'o', '▁sc', 'att', 'o', '▁tele', 'f', 'on', 'ico', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'i', '▁d', 'ati', '▁di', '▁config', 'ur', 'azione', '▁con', '▁le', '▁mod', 'ific', 'he', '▁rit', 'en', 'ute', '▁op', 'port', 'une', '▁dal', '▁gest', 'ore', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'aggi', 'orn', 'amento', '▁config', 'ur', 'azione', '▁di', '▁sist', 'ema', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'i', '▁d', 'ati', '▁dov', 'r', 'ann', 'o', '▁influ', 'ire', '▁sull', 'a', '▁gest', 'ione', '▁dell', ""'"", 'al', 'ber', 'go', '▁in', '▁base', '▁all', ""'"", 'area', '▁di', '▁', '\n', 'compet', 'enza', '.', '▁es', '.', '▁se', '▁vi', 'ene', '▁prev', 'isto', '▁un', 'o', '▁sc', 'onto', '▁per', '▁i', '▁bamb', 'ini', '▁tale', '▁sc', 'onto', '▁dov', 'r', 'à', '▁', '\n', 'app', 'ar', 'ire', '▁chi', 'ar', 'ament', 'e', '▁nel', '▁cal', 'colo', '▁del', '▁cont', 'o', '▁finale', '▁e', '▁n', 'ella', '▁su', 'a', '▁stamp', 'a', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'per', 'met', 'ter', 'e', '▁una', '▁mag', 'gi', 'ore', '▁fl', 'ess', 'ib', 'ilit', 'à', '▁al', '▁sist', 'ema', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-01', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 's', 'osp', 'es', 'o', '\n', '2', '\n', 'op', 'z', 'ionale', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁15', '/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'ges', '-04', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'config', 'ur', 'azione', '▁delle', '▁op', 'zioni', '▁di', '▁sistema', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'alc', 'uni', '▁paramet', 'ri', '▁e', '▁d', 'ati', '▁che', '▁il', '▁sistema', '▁util', 'izza', '▁per', '▁s', 'vol', 'g', 'ere', '▁le', '▁att', 'iv', 'ità', '▁per', '▁cui', '▁è', '▁', '\n', 'st', 'ato', '▁real', 'izz', 'ato', '▁devon', 'o', '▁pot', 'er', '▁ess', 'ere', '▁impost', 'ate', '▁dal', '▁gest', 'ore', '▁dell', ""'"", 'al', 'ber', 'go', '.', '▁dov', 'rà', '▁', '\n', 'ess', 'ere', '▁prev', 'ista', '▁per', 'ci', 'ò', '▁la', '▁poss', 'ib', 'ilit', 'à', '▁di', '▁config', 'ur', 'are', '▁il', '▁sistema', '▁in', '▁base', '▁alle', '▁', '\n', 'es', 'igen', 'ze', '▁dell', ""'"", 'ut', 'ente', '.', '▁ci', 'ò', '▁che', '▁dov', 'rà', '▁sic', 'ur', 'amente', '▁compar', 'ire', '▁sono', '▁le', '▁segu', 'enti', '▁', '\n', 'im', 'post', 'azioni', ':', '\n', '▁date', '▁di', '▁in', 'izio', '▁e', '▁fine', '▁delle', '▁varie', '▁stag', 'ional', 'ità', '\n', '▁sc', 'onti', '▁e', '▁rid', 'uzioni', '▁da', '▁eff', 'ettu', 'are', '▁a', '▁neon', 'ati', '▁e', '▁bamb', 'ini', '\n', '▁dur', 'ata', '▁mass', 'ima', '▁per', '▁la', '▁qu', 'ale', '▁una', '▁stanza', '▁pu', 'ò', '▁rest', 'are', '▁bl', 'occ', 'ata', '\n', '▁supplement', 'o', '▁per', '▁le', '▁varie', '▁stag', 'ional', 'ità', '\n', '▁cost', 'o', '▁di', '▁uno', '▁sc', 'atto', '▁telef', 'on', 'ico', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'i', '▁d', 'ati', '▁di', '▁config', 'ur', 'azione', '▁con', '▁le', '▁mod', 'ific', 'he', '▁rit', 'en', 'ute', '▁opportune', '▁dal', '▁gest', 'ore', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'aggi', 'orn', 'amento', '▁config', 'ur', 'azione', '▁di', '▁sistema', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'i', '▁d', 'ati', '▁dov', 'r', 'anno', '▁influ', 'ire', '▁sulla', '▁gest', 'ione', '▁dell', ""'"", 'al', 'ber', 'go', '▁in', '▁base', '▁all', ""'"", 'area', '▁di', '▁', '\n', 'compet', 'enza', '.', '▁es', '.', '▁se', '▁vi', 'ene', '▁prev', 'isto', '▁uno', '▁sc', 'onto', '▁per', '▁i', '▁bamb', 'ini', '▁tale', '▁sc', 'onto', '▁dov', 'rà', '▁', '\n', 'appar', 'ire', '▁chi', 'ar', 'amente', '▁nel', '▁cal', 'colo', '▁del', '▁cont', 'o', '▁finale', '▁e', '▁nella', '▁sua', '▁stampa', '.', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'per', 'met', 'tere', '▁una', '▁maggiore', '▁fl', 'ess', 'ib', 'ilit', 'à', '▁al', '▁sistema', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'pre', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '3,', '▁f', '-', 'so', 'g', '-0', '4,', '▁f', '-', 'ges', '-01', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 's', 'osp', 'eso', '\n', '2', '\n', 'op', 'z', 'ionale', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'software', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁15', '/04/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁martini', '▁roberto', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero ges tipo funzional requisito configurazion dell opzioni sistema descrizion alcuni parametri dati che sistema utilizza per svolger attivit per cui stato realizzato devono poter esser impost dal gestor dell albergo dovr esser prevista perci possibilit configurar sistema base all esigenz dell utent che dovr sicurament comparir sono seguenti impostazioni date inizio fine dell vari stagionalit sconti riduzioni effettuar neonati bambini durata massima per qual una stanza restar bloccata supplemento per vari stagionalit costo uno scatto telefonico input richiesto dati configurazion con modifich ritenut opportun dal gestor output desiderato aggiornamento configurazion sistema criterio accettazion dati dovranno influir sulla gestion dell albergo base area competenza vien previsto uno sconto per bambini tale sconto dovr apparir chiarament nel calcolo del conto final nella sua stampa aspett colleg permetter una maggior flessibilit sistema requis collegati pre sog sog ges stato releas priorit stabilit livello comprension categoria sospeso opzional stabil piena comprension softwar version data compilato martini roberto note
16~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/requirements/F-SOG-02.txt~F-SOG-02.txt~"
Requisito numero: 
F-SOG-02
Tipo:
Funzionale
 
Requisito:
Addebito servizi e spese extra per stanza.
Descrizione:
Tale requisito permette di valutare le eventuali spese extra effettuate dai 
clienti occupanti una certa stanza e di addebitare i relativi prezzi sul conto-
spese previsto per ogni stanza. Il sistema dovrà quindi essere in grado, una 
volta fissati i prezzi relativi ad ogni bene o servizio, di fornire al momento 
della loro richiesta il relativo costo e di addebitarlo sul conto-spese delle 
stanze i cui occupanti hanno usufruito di tale servizio. 
Input richiesto:
Tipo e quantità del bene consumato.
Output desiderato:
Addebito sul conto-spese della stanza del consumatore.
Criterio di 
accettazione:
Per soddisfare tale requisito il sistema dovrà tenere traccia di ogni spesa o 
servizio extra di cui il cliente usufruisce. Tali informazioni dovranno essere 
poi recuperate ogni qual volta un cliente richieda l'ammontare del conto. 
Aspettative collegate:
Contabilizzazione automatica delle spese straordinarie.
Requisiti collegati:
F-SOG-04.
Stato
Release
Priorità
Stabilità
Livello di comprensione
Categoria
Finale
2
Richiesto
Stabile
Piena comprensione
Efficienza
Versione: 2.1

Data: 15/04/1998

Compilato da: Vincenti Paola 

Note: 


"~req~"['▁', '\n', 're', 'qu', 'is', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-0', '2', '\n', 't', 'ip', 'o', ':', '\n', 'f', 'un', 'z', 'ion', 'ale', '\n', '▁', '\n', 're', 'qu', 'is', 'ito', ':', '\n', 'ad', 'de', 'bit', 'o', '▁serv', 'iz', 'i', '▁e', '▁sp', 'ese', '▁extra', '▁per', '▁stan', 'za', '.', '\n', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '\n', 't', 'ale', '▁requ', 'is', 'ito', '▁per', 'met', 'te', '▁di', '▁val', 'ut', 'are', '▁le', '▁event', 'ual', 'i', '▁sp', 'ese', '▁extra', '▁eff', 'ett', 'u', 'ate', '▁d', 'ai', '▁', '\n', 'cl', 'ient', 'i', '▁occup', 'ant', 'i', '▁un', 'a', '▁cert', 'a', '▁stan', 'za', '▁e', '▁di', '▁add', 'e', 'bit', 'are', '▁i', '▁rel', 'at', 'iv', 'i', '▁pre', 'zz', 'i', '▁s', 'ul', '▁cont', 'o', '-', '\n', 'sp', 'ese', '▁prev', 'ist', 'o', '▁per', '▁og', 'ni', '▁stan', 'za', '.', '▁il', '▁s', 'ist', 'em', 'a', '▁d', 'ov', 'r', 'à', '▁qu', 'ind', 'i', '▁ess', 'ere', '▁in', '▁grad', 'o', ',', '▁un', 'a', '▁', '\n', 'vol', 'ta', '▁f', 'iss', 'ati', '▁i', '▁pre', 'zz', 'i', '▁rel', 'at', 'iv', 'i', '▁ad', '▁og', 'ni', '▁bene', '▁o', '▁serv', 'iz', 'io', ',', '▁di', '▁for', 'n', 'ire', '▁al', '▁moment', 'o', '▁', '\n', 'd', 'ella', '▁lor', 'o', '▁rich', 'i', 'est', 'a', '▁il', '▁rel', 'at', 'iv', 'o', '▁cost', 'o', '▁e', '▁di', '▁add', 'e', 'b', 'itar', 'lo', '▁s', 'ul', '▁cont', 'o', '-', 'sp', 'ese', '▁del', 'le', '▁', '\n', 'stan', 'ze', '▁i', '▁cu', 'i', '▁occup', 'ant', 'i', '▁h', 'ann', 'o', '▁us', 'uf', 'r', 'uit', 'o', '▁di', '▁t', 'ale', '▁serv', 'iz', 'io', '.', '▁', '\n', 'in', 'put', '▁rich', 'i', 'est', 'o', ':', '\n', 't', 'ip', 'o', '▁e', '▁quant', 'it', 'à', '▁del', '▁bene', '▁consum', 'ato', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'ad', 'de', 'bit', 'o', '▁s', 'ul', '▁cont', 'o', '-', 'sp', 'ese', '▁d', 'ella', '▁stan', 'za', '▁del', '▁consum', 'at', 'ore', '.', '\n', 'c', 'rit', 'er', 'io', '▁di', '▁', '\n', 'ac', 'c', 'ett', 'az', 'ion', 'e', ':', '\n', 'per', '▁s', 'od', 'dis', 'fare', '▁t', 'ale', '▁requ', 'is', 'ito', '▁il', '▁s', 'ist', 'em', 'a', '▁d', 'ov', 'r', 'à', '▁ten', 'ere', '▁tr', 'ac', 'cia', '▁di', '▁og', 'ni', '▁sp', 'es', 'a', '▁o', '▁', '\n', 's', 'erv', 'iz', 'io', '▁extra', '▁di', '▁cu', 'i', '▁il', '▁cl', 'ient', 'e', '▁us', 'uf', 'ru', 'is', 'ce', '.', '▁tal', 'i', '▁inform', 'az', 'ion', 'i', '▁d', 'ov', 'r', 'ann', 'o', '▁ess', 'ere', '▁', '\n', 'po', 'i', '▁rec', 'up', 'er', 'ate', '▁og', 'ni', '▁qual', '▁vol', 'ta', '▁un', '▁cl', 'ient', 'e', '▁rich', 'ied', 'a', '▁l', ""'"", 'am', 'mont', 'are', '▁del', '▁cont', 'o', '.', '▁', '\n', 'as', 'p', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'cont', 'abil', 'iz', 'z', 'az', 'ion', 'e', '▁autom', 'at', 'ica', '▁del', 'le', '▁sp', 'ese', '▁stra', 'ordin', 'ar', 'ie', '.', '\n', 're', 'qu', 'is', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4.', '\n', 'st', 'ato', '\n', 'rele', 'ase', '\n', 'p', 'ri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'l', 'iv', 'ello', '▁di', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'c', 'ateg', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'i', 'est', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'ien', 'a', '▁comp', 'ren', 's', 'ion', 'e', '\n', 'eff', 'ic', 'ien', 'za', '\n', 'vers', 'ion', 'e', ':', '▁2.', '1', '\n\n', 'd', 'ata', ':', '▁15', '/', '04', '/', '19', '98', '\n\n', 'com', 'p', 'il', 'ato', '▁da', ':', '▁vin', 'cent', 'i', '▁pa', 'ola', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁num', 'ero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-0', '2', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'ad', 'de', 'bit', 'o', '▁serv', 'iz', 'i', '▁e', '▁sp', 'ese', '▁extra', '▁per', '▁stan', 'za', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 't', 'ale', '▁requ', 'is', 'ito', '▁per', 'met', 'te', '▁di', '▁val', 'ut', 'are', '▁le', '▁eventual', 'i', '▁sp', 'ese', '▁extra', '▁eff', 'ett', 'uate', '▁dai', '▁', '\n', 'cl', 'ient', 'i', '▁occup', 'anti', '▁una', '▁cert', 'a', '▁stan', 'za', '▁e', '▁di', '▁add', 'e', 'bit', 'are', '▁i', '▁rel', 'ativ', 'i', '▁pre', 'zzi', '▁sul', '▁cont', 'o', '-', '\n', 'sp', 'ese', '▁prev', 'isto', '▁per', '▁og', 'ni', '▁stan', 'za', '.', '▁il', '▁sist', 'ema', '▁dov', 'r', 'à', '▁qu', 'indi', '▁ess', 'ere', '▁in', '▁grad', 'o', ',', '▁una', '▁', '\n', 'vol', 'ta', '▁fiss', 'ati', '▁i', '▁pre', 'zzi', '▁rel', 'ativ', 'i', '▁ad', '▁og', 'ni', '▁bene', '▁o', '▁serv', 'izio', ',', '▁di', '▁for', 'n', 'ire', '▁al', '▁moment', 'o', '▁', '\n', 'd', 'ella', '▁lor', 'o', '▁rich', 'iest', 'a', '▁il', '▁rel', 'at', 'ivo', '▁cost', 'o', '▁e', '▁di', '▁add', 'eb', 'itar', 'lo', '▁sul', '▁cont', 'o', '-', 'sp', 'ese', '▁delle', '▁', '\n', 'stan', 'ze', '▁i', '▁cu', 'i', '▁occup', 'anti', '▁hann', 'o', '▁us', 'uf', 'ruit', 'o', '▁di', '▁tale', '▁serv', 'izio', '.', '▁', '\n', 'in', 'put', '▁rich', 'iest', 'o', ':', '\n', 'tip', 'o', '▁e', '▁quant', 'it', 'à', '▁del', '▁bene', '▁consum', 'ato', '.', '\n', 'out', 'put', '▁des', 'ider', 'ato', ':', '\n', 'ad', 'de', 'bit', 'o', '▁sul', '▁cont', 'o', '-', 'sp', 'ese', '▁della', '▁stan', 'za', '▁del', '▁consum', 'atore', '.', '\n', 'crit', 'er', 'io', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'per', '▁sod', 'dis', 'fare', '▁tale', '▁requ', 'is', 'ito', '▁il', '▁sist', 'ema', '▁dov', 'r', 'à', '▁ten', 'ere', '▁tr', 'ac', 'cia', '▁di', '▁og', 'ni', '▁sp', 'esa', '▁o', '▁', '\n', 'serv', 'izio', '▁extra', '▁di', '▁cu', 'i', '▁il', '▁client', 'e', '▁us', 'uf', 'ru', 'is', 'ce', '.', '▁tal', 'i', '▁inform', 'az', 'ioni', '▁dov', 'r', 'ann', 'o', '▁ess', 'ere', '▁', '\n', 'po', 'i', '▁rec', 'uper', 'ate', '▁og', 'ni', '▁qual', '▁volta', '▁un', '▁client', 'e', '▁rich', 'ied', 'a', '▁l', ""'"", 'am', 'mont', 'are', '▁del', '▁cont', 'o', '.', '▁', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'cont', 'abil', 'izz', 'azione', '▁autom', 'at', 'ica', '▁delle', '▁sp', 'ese', '▁stra', 'ordin', 'arie', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-0', '4.', '\n', 'st', 'ato', '\n', 'release', '\n', 'pri', 'or', 'it', 'à', '\n', 'st', 'abil', 'it', 'à', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'st', 'ab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'eff', 'ic', 'ien', 'za', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁15', '/', '04', '/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁vincent', 'i', '▁pa', 'ola', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~"['▁', '\n', 're', 'quis', 'ito', '▁numero', ':', '▁', '\n', 'f', '-', 'so', 'g', '-02', '\n', 'tip', 'o', ':', '\n', 'fun', 'z', 'ionale', '\n', '▁', '\n', 're', 'quis', 'ito', ':', '\n', 'ad', 'de', 'bit', 'o', '▁serv', 'izi', '▁e', '▁sp', 'ese', '▁extra', '▁per', '▁stanza', '.', '\n', 'desc', 'riz', 'ione', ':', '\n', 'tale', '▁requis', 'ito', '▁per', 'mette', '▁di', '▁val', 'ut', 'are', '▁le', '▁eventual', 'i', '▁sp', 'ese', '▁extra', '▁eff', 'ett', 'uate', '▁dai', '▁', '\n', 'client', 'i', '▁occup', 'anti', '▁una', '▁cert', 'a', '▁stanza', '▁e', '▁di', '▁add', 'e', 'bit', 'are', '▁i', '▁relativ', 'i', '▁pre', 'zzi', '▁sul', '▁cont', 'o', '-', '\n', 'sp', 'ese', '▁prev', 'isto', '▁per', '▁og', 'ni', '▁stanza', '.', '▁il', '▁sistema', '▁dov', 'rà', '▁qu', 'indi', '▁ess', 'ere', '▁in', '▁grad', 'o', ',', '▁una', '▁', '\n', 'vol', 'ta', '▁fiss', 'ati', '▁i', '▁pre', 'zzi', '▁relativ', 'i', '▁ad', '▁og', 'ni', '▁bene', '▁o', '▁serv', 'izio', ',', '▁di', '▁forn', 'ire', '▁al', '▁moment', 'o', '▁', '\n', 'd', 'ella', '▁lor', 'o', '▁rich', 'iest', 'a', '▁il', '▁rel', 'ativo', '▁cost', 'o', '▁e', '▁di', '▁add', 'eb', 'itar', 'lo', '▁sul', '▁cont', 'o', '-', 'sp', 'ese', '▁delle', '▁', '\n', 'stan', 'ze', '▁i', '▁cui', '▁occup', 'anti', '▁hann', 'o', '▁us', 'uf', 'ruit', 'o', '▁di', '▁tale', '▁serv', 'izio', '.', '▁', '\n', 'input', '▁rich', 'iest', 'o', ':', '\n', 'tip', 'o', '▁e', '▁quant', 'ità', '▁del', '▁bene', '▁consum', 'ato', '.', '\n', 'output', '▁desider', 'ato', ':', '\n', 'ad', 'de', 'bit', 'o', '▁sul', '▁cont', 'o', '-', 'sp', 'ese', '▁della', '▁stanza', '▁del', '▁consum', 'atore', '.', '\n', 'crit', 'erio', '▁di', '▁', '\n', 'acc', 'ett', 'azione', ':', '\n', 'per', '▁sod', 'dis', 'fare', '▁tale', '▁requis', 'ito', '▁il', '▁sistema', '▁dov', 'rà', '▁ten', 'ere', '▁trac', 'cia', '▁di', '▁og', 'ni', '▁sp', 'esa', '▁o', '▁', '\n', 'serv', 'izio', '▁extra', '▁di', '▁cui', '▁il', '▁client', 'e', '▁us', 'uf', 'ru', 'is', 'ce', '.', '▁tal', 'i', '▁inform', 'azioni', '▁dov', 'r', 'anno', '▁ess', 'ere', '▁', '\n', 'po', 'i', '▁recuperate', '▁og', 'ni', '▁qual', '▁volta', '▁un', '▁client', 'e', '▁rich', 'ied', 'a', '▁l', ""'"", 'am', 'mont', 'are', '▁del', '▁cont', 'o', '.', '▁', '\n', 'asp', 'ett', 'ative', '▁colle', 'gate', ':', '\n', 'cont', 'abil', 'izz', 'azione', '▁autom', 'atica', '▁delle', '▁sp', 'ese', '▁stra', 'ordin', 'arie', '.', '\n', 're', 'quis', 'iti', '▁colle', 'g', 'ati', ':', '\n', 'f', '-', 'so', 'g', '-04.', '\n', 'st', 'ato', '\n', 'release', '\n', 'prior', 'ità', '\n', 'stabil', 'ità', '\n', 'liv', 'ello', '▁di', '▁comp', 'rens', 'ione', '\n', 'categ', 'oria', '\n', 'final', 'e', '\n', '2', '\n', 'rich', 'iest', 'o', '\n', 'stab', 'ile', '\n', 'p', 'iena', '▁comp', 'rens', 'ione', '\n', 'eff', 'ic', 'ienza', '\n', 'vers', 'ione', ':', '▁2.1', '\n\n', 'data', ':', '▁15', '/04/19', '98', '\n\n', 'comp', 'il', 'ato', '▁da', ':', '▁vincent', 'i', '▁paola', '▁', '\n\n', 'note', ':', '▁', '\n\n\n']"~requisito numero sog tipo funzional requisito addebito servizi spese extra per stanza descrizion tale requisito permett valutar eventuali spese extra effettu dai clienti occupanti una certa stanza addebitar relativi prezzi sul conto spese previsto per ogni stanza sistema dovr quindi esser grado una volta fissati prezzi relativi ogni bene servizio fornir momento della loro richiesta relativo costo addebitarlo sul conto spese dell stanz cui occupanti hanno usufruito tale servizio input richiesto tipo quantit del bene consumato output desiderato addebito sul conto spese della stanza del consumator criterio accettazion per soddisfar tale requisito sistema dovr tener traccia ogni spesa servizio extra cui client usufruisc tali informazioni dovranno esser poi recuper ogni qual volta client richieda ammontar del conto aspett colleg contabilizzazion automatica dell spese straordinari requis collegati sog stato releas priorit stabilit livello comprension categoria final richiesto stabil piena comprension efficienza version data compilato vincenti paola note
17~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/VediPrenotazione.java~VediPrenotazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class VediPrenotazione extends MascheraPrenotazione
{  
	Prenotazione p;	   
   	RicercaPrenotazione parent;
    char flag;
    
   	public VediPrenotazione(Prenotazione pren, Stanza room, RicercaPrenotazione papa)
    {
        super(room,"""","""",""Visualizzazione dei dati della prenotazione"","""",4, pren.getPensionamento());
        p = pren;
        parent = papa;
        init();
    }
        
    public void init()
    {
    	Frame msg;
    	
    	writeDatiPren(p);
    	for(int i=0; i<11; i++)
    		testo[i].setEditable(false);
    	myCheckbox.setEnabled(false);
    	myCheckbox1.setEnabled(false);
    	for (int i=0; i<checkboxes.length; i++)
    		checkboxes[i].setEnabled(false);
    	testo[9].setText(DateUtils.parseDate(DateUtils.giveStringOfDate(p.getDataPren())));	    
     	panel2.remove(Azione);
    } 
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁v', 'ed', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '▁ext', 'ends', '▁m', 'asc', 'her', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁paren', 't', ';', '\n', '▁char', '▁flag', ';', '\n', '▁', '\n', '▁', '\t', 'publ', 'ic', '▁v', 'ed', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ',', '▁stan', 'za', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁pap', 'a', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",', '""', '"",', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁de', 'i', '▁d', 'ati', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '"",', '""', '"",', '4,', '▁p', 'ren', '.', 'get', 'p', 'ension', 'ament', 'o', '(', ')', ');', '\n', '▁p', '▁=', '▁p', 'ren', ';', '\n', '▁paren', 't', '▁=', '▁pap', 'a', ';', '\n', '▁init', '(', ');', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'fr', 'ame', '▁ms', 'g', ';', '\n', '▁', '\t\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=', '0', ';', '▁i', '<', '11', ';', '▁i', '+', '+', ')', '\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'my', 'che', 'ck', 'box', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'my', 'che', 'ck', 'box', '1.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'che', 'ck', 'box', 'es', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n', '▁', '\t\t', 'che', 'ck', 'box', 'es', '[', 'i', ']', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 't', 'est', 'o', '[', '9', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', '.', 'get', 'd', 'at', 'ap', 'ren', '(', ')', ')', ')', ');', '\t', '▁', '\n', '▁', '\t', 'pan', 'el', '2.', 'rem', 'ove', '(', 'az', 'ion', 'e', ');', '\n', '▁}', '▁', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ved', 'ip', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ';', '\n', '▁char', '▁flag', ';', '\n', '▁', '\n', '▁', '\t', 'public', '▁ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁stan', 'za', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁papa', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",', '""', '"",', '""', 'vis', 'ual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', '"",', '""', '"",', '4,', '▁pren', '.', 'get', 'p', 'ension', 'amento', '());', '\n', '▁p', '▁=', '▁pren', ';', '\n', '▁parent', '▁=', '▁papa', ';', '\n', '▁init', '();', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁', '\t', 'frame', '▁ms', 'g', ';', '\n', '▁', '\t\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=0', ';', '▁i', '<', '11', ';', '▁i', '++', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'my', 'check', 'box', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'my', 'check', 'box', '1.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'check', 'box', 'es', '.', 'length', ';', '▁i', '++', ')', '\n', '▁', '\t\t', 'check', 'box', 'es', '[', 'i', '].', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '()', '))', ');', '\t', '▁', '\n', '▁', '\t', 'pan', 'el', '2.', 'rem', 'ove', '(', 'azione', ');', '\n', '▁}', '▁', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ved', 'ip', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ';', '\n', '▁char', '▁flag', ';', '\n', '▁', '\n', '▁', '\t', 'public', '▁ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁stanza', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁papa', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",""', '"",""', 'visual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', '"",""', '"",', '4,', '▁pren', '.', 'get', 'pension', 'amento', '());', '\n', '▁p', '▁=', '▁pren', ';', '\n', '▁parent', '▁=', '▁papa', ';', '\n', '▁init', '();', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁', '\t', 'frame', '▁msg', ';', '\n', '▁', '\t\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=0;', '▁i', '<', '11', ';', '▁i', '++)', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'my', 'check', 'box', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'my', 'check', 'box', '1.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'check', 'boxes', '.', 'length', ';', '▁i', '++)', '\n', '▁', '\t\t', 'check', 'boxes', '[', 'i', '].', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '()))', ');', '\t', '▁', '\n', '▁', '\t', 'panel', '2.', 'remove', '(', 'azione', ');', '\n', '▁}', '▁', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class vedi prenotazion extend maschera prenotazion prenotazion ricerca prenotazion parent char flag public vedi prenotazion prenotazion pren stanza room ricerca prenotazion papa super room visualizzazion dei dati della prenotazion pren get pensionamento pren parent papa init public void init frame msg write dati pren int testo set edit fals checkbox set enabl fals checkbox set enabl fals int checkbox length checkbox set enabl fals testo set text date util pars date date util give string date get data pren panel remov azion
18~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/CancellaBeniServizi.java~CancellaBeniServizi.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import moduli.BeneServizio;
import moduli.DataBase;
import moduli.ListaBeniServizi;

public class CancellaBeniServizi extends MascheraBeneServizio
{
	BeneServizio extra = null;
	Label elenco_extra1, elenco_extra2, desc_extra, px_extra;
	TextField desc, prezzo;
	Button annulla3, annulla_canc, conferma_canc;
		
	public CancellaBeniServizi()
	{
		super(""Cancellazione di un bene o servizio"");
		setupPannello();
		initialize();
	}
	
	void setupPannello()
	{
		panel[11].setLayout(gridbag);
		elenco_extra1 = new Label(""Scegliere il bene o servizio, appartenente"");
		elenco_extra2 = new Label(""alla categoria selezionata, da cancellare"");
		annulla3 = new Button("" Fine "");
		Utils.constrain(panel[11], elenco_extra1, 0, 0, 5, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 0, 0, 0);
		Utils.constrain(panel[11], elenco_extra2, 0, 1, 5, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 0, 5, 0);
		Utils.constrain(panel[11], elenco, 0, 2, 5, 1,GridBagConstraints.HORIZONTAL,
				GridBagConstraints.CENTER, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], annulla3, 2, 3, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);

		panel[12].setLayout(gridbag);
		desc_extra = new Label(""Nome del bene"");
		px_extra = new Label(""Prezzo del bene"");
		desc = new TextField("""",40);
		prezzo = new TextField("""",10);
		desc.setEditable(false);
		prezzo.setEditable(false);
		annulla_canc = new Button(""Annulla"");
		conferma_canc = new Button(""Conferma"");
		Utils.constrain(panel[12], desc_extra, 0, 0, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], desc, 1, 0, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], px_extra, 0, 1, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 5, 5, 5, 0);
		Utils.constrain(panel[12], prezzo, 1, 1, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 0);
		Utils.constrain(panel[12], annulla_canc, 1, 2, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.EAST, 1.0, 0.0, 5, 5, 0, 5);
		Utils.constrain(panel[12], conferma_canc, 2, 2, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 0, 5);
	}

	public void initialize()
	{
		scelta_piatto[4].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[4].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.DESSERT);
					p();
				}
			}
		});

		scelta_piatto[5].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[5].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.FRUTTA);
					p();
				}
			}
		});

		scelta_servizio[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_servizio[0].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.RICREATIVI);
					o();
				}
			}
		});

		scelta_servizio[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_servizio[1].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.ALTRO);
					o();
				}
			}
		});

		scelta_bevanda[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CAFFETTERIA);
					o();
				}
			}
		});

		scelta_bevanda[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.ANALCOLICI);
					o();
				}
			}
		});

		scelta_bevanda[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[2].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.ALCOLICI);
					o();
				}
			}
		});

		scelta_cibo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_cibo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.DOLCI);
					o();
				}
			}
		});

		scelta_cibo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_cibo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.SALATI);
					o();
				}
			}
		});

		scelta_antipasto[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_antipasto[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.FREDDI);
					o();
				}
			}
		});

		scelta_antipasto[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_antipasto[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CALDI);
					o();
				}
			}
		});

		scelta_primo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_primo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.SOLIDI);
					o();
				}
			}
		});

		scelta_primo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_primo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.LIQUIDI);
					o();
				}
			}
		});

		scelta_secondo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_secondo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CARNE);
					o();
				}
			}
		});

		scelta_secondo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_secondo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.PESCE);
					o();
				}
			}
		});

		scelta_contorno[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.VERDURA_COTTA);
					o();
				}
			}
		});

		scelta_contorno[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.VERDURA_CRUDA);
					o();
				}
			}
		});

		scelta_contorno[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[2].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.FORMAGGIO);
					o();
				}
			}
		});

		conferma_canc.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startConfermaCanc();
			}
		});

		annulla_canc.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				goBack();
			}
		});

		annulla3.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				padre.setEnabled(true);
			}
		});

		elenco.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				beneSelezionato();
			}
		});
	} // init

	void startConfermaCanc()
	{
		int id;
		MessageDialog msg;
						
		// questa e' una forzatura sporca
		testo3 = desc;
		testo4 = prezzo;
		int j;
		if ((j = (Principale.db).delBeneServizio(extra.getCodExtra())) == DataBase.OK)
		{
			for(int i=1;i<13;++i)
				if(panel[i].isVisible())
					remove(panel[i]);
			panel[0].setVisible(true);
		}
		else
			msg = new MessageDialog(this, ""Problemi con il data base: ""+DataBase.strErrore(j));
	}
	
	void beneSelezionato()
	{
		extra = L.getBeneServizio((elenco.getSelectedIndexes())[0]+1);
		remove(panel[11]);
		this.add(panel[12]);
		desc.setText(extra.getDescrizione());
		prezzo.setText(extra.getPxUnitario()+"""");
		panel[12].setVisible(true);
		setVisible(true);
	}

	void goBack()
	{
		remove(panel[12]);
		this.add(panel[11]);
		panel[11].setVisible(true);
		setVisible(true);
	}


}"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'b', 'en', 'es', 'erv', 'iz', 'io', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'd', 'at', 'ab', 'ase', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', ';', '\n\n', 'publ', 'ic', '▁class', '▁canc', 'ell', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁ext', 'ends', '▁m', 'asc', 'her', 'ab', 'en', 'es', 'erv', 'iz', 'io', '\n', '{', '\n\t', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁extra', '▁=', '▁n', 'ull', ';', '\n\t', 'l', 'ab', 'el', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁desc', '_', 'ext', 'ra', ',', '▁p', 'x', '_', 'ext', 'ra', ';', '\n\t', 'text', 'field', '▁desc', ',', '▁pre', 'z', 'zo', ';', '\n\t', 'but', 'ton', '▁ann', 'ull', 'a', '3,', '▁ann', 'ull', 'a', '_', 'c', 'anc', ',', '▁con', 'fer', 'ma', '_', 'c', 'anc', ';', '\n\t\t\n\t', 'publ', 'ic', '▁canc', 'ell', 'ab', 'en', 'is', 'erv', 'iz', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', '""', 'c', 'anc', 'ell', 'az', 'ion', 'e', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'iz', 'io', '"")', ';', '\n\t\t', 'set', 'up', 'p', 'ann', 'ello', '(', ');', '\n\t\t', 'in', 'it', 'ial', 'ize', '(', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁set', 'up', 'p', 'ann', 'ello', '(', ')', '\n\t', '{', '\n\t\t', 'pan', 'el', '[', '11', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '1', '▁=', '▁new', '▁label', '(', '""', 's', 'ce', 'g', 'li', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'iz', 'io', ',', '▁app', 'art', 'en', 'ent', 'e', '"")', ';', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '2', '▁=', '▁new', '▁label', '(', '""', 'all', 'a', '▁categ', 'oria', '▁se', 'le', 'z', 'ion', 'ata', ',', '▁da', '▁canc', 'ell', 'are', '"")', ';', '\n\t\t', 'ann', 'ull', 'a', '3', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁', '0,', '▁', '0,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁', '0,', '▁1,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', ',', '▁', '0,', '▁2,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁ann', 'ull', 'a', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', 'pan', 'el', '[', '12', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'des', 'c', '_', 'ext', 'ra', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '▁del', '▁bene', '"")', ';', '\n\t\t', 'p', 'x', '_', 'ext', 'ra', '▁=', '▁new', '▁label', '(', '""', 'pre', 'z', 'zo', '▁del', '▁bene', '"")', ';', '\n\t\t', 'des', 'c', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4', '0)', ';', '\n\t\t', 'pre', 'z', 'zo', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '0)', ';', '\n\t\t', 'des', 'c', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'pre', 'z', 'zo', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'ann', 'ull', 'a', '_', 'c', 'anc', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n\t\t', 'con', 'fer', 'ma', '_', 'c', 'anc', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁desc', '_', 'ext', 'ra', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁desc', ',', '▁1,', '▁', '0,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁p', 'x', '_', 'ext', 'ra', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁pre', 'z', 'zo', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁ann', 'ull', 'a', '_', 'c', 'anc', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁con', 'fer', 'ma', '_', 'c', 'anc', ',', '▁2,', '▁2,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁initial', 'ize', '(', ')', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'd', 'ess', 'ert', ');', '\n\t\t\t\t\t', 'p', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'fr', 'ut', 'ta', ');', '\n\t\t\t\t\t', 'p', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ric', 'reat', 'iv', 'i', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'al', 't', 'ro', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'aff', 'et', 'ter', 'ia', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'an', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'd', 'ol', 'ci', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'f', 'red', 'di', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'ald', 'i', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 's', 'ol', 'idi', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'car', 'ne', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'p', 'es', 'ce', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ver', 'd', 'ura', '_', 'c', 'ott', 'a', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'form', 'ag', 'gio', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '_', 'c', 'anc', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'con', 'fer', 'm', 'ac', 'anc', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '_', 'c', 'anc', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'g', 'ob', 'ack', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '3.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'el', 'en', 'co', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'b', 'en', 'ese', 'le', 'z', 'ion', 'ato', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'm', 'ac', 'anc', '(', ')', '\n\t', '{', '\n\t\t', 'int', '▁id', ';', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t\t\t\t\n\t\t', '//', '▁quest', 'a', '▁e', ""'"", '▁un', 'a', '▁for', 'z', 'at', 'ura', '▁sp', 'or', 'ca', '\n\t\t', 't', 'est', 'o', '3', '▁=', '▁desc', ';', '\n\t\t', 't', 'est', 'o', '4', '▁=', '▁pre', 'z', 'zo', ';', '\n\t\t', 'int', '▁j', ';', '\n\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'ext', 'ra', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t', '{', '\n\t\t\t', 'for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '13', ';', '+', '+', 'i', ')', '\n\t\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t\t', 'pan', 'el', '[', '0', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ben', 'ese', 'le', 'z', 'ion', 'ato', '(', ')', '\n\t', '{', '\n\t\t', 'ext', 'ra', '▁=', '▁l', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '(', 'el', 'en', 'co', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'des', 'c', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', ');', '\n\t\t', 'pre', 'z', 'zo', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'p', 'x', 'un', 'itar', 'io', '(', ')', '+', '""', '"")', ';', '\n\t\t', 'pan', 'el', '[', '12', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁go', 'back', '(', ')', '\n\t', '{', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'pan', 'el', '[', '11', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\n\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'dat', 'abase', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', ';', '\n\n', 'public', '▁class', '▁canc', 'ell', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁extends', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '\n', '{', '\n\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁null', ';', '\n\t', 'l', 'abel', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁desc', '_', 'ext', 'ra', ',', '▁p', 'x', '_', 'ext', 'ra', ';', '\n\t', 'text', 'field', '▁desc', ',', '▁pre', 'z', 'zo', ';', '\n\t', 'but', 'ton', '▁ann', 'ulla', '3,', '▁ann', 'ulla', '_', 'canc', ',', '▁con', 'fer', 'ma', '_', 'canc', ';', '\n\t\t\n\t', 'public', '▁canc', 'ell', 'ab', 'en', 'is', 'erv', 'iz', 'i', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'canc', 'ell', 'azione', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'izio', '"");', '\n\t\t', 'set', 'up', 'p', 'ann', 'ello', '();', '\n\t\t', 'init', 'ial', 'ize', '();', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁setup', 'p', 'ann', 'ello', '()', '\n\t', '{', '\n\t\t', 'pan', 'el', '[', '11', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '1', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'g', 'li', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'izio', ',', '▁app', 'arten', 'ente', '"");', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '2', '▁=', '▁new', '▁label', '(""', 'alla', '▁categ', 'oria', '▁se', 'lez', 'ion', 'ata', ',', '▁da', '▁canc', 'ell', 'are', '"");', '\n\t\t', 'ann', 'ulla', '3', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁', '0,', '▁', '0,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁', '0,', '▁1,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', ',', '▁', '0,', '▁2,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁ann', 'ulla', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', 'pan', 'el', '[', '12', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'desc', '_', 'ext', 'ra', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁del', '▁bene', '"");', '\n\t\t', 'px', '_', 'ext', 'ra', '▁=', '▁new', '▁label', '(""', 'pre', 'z', 'zo', '▁del', '▁bene', '"");', '\n\t\t', 'desc', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4', '0)', ';', '\n\t\t', 'pre', 'z', 'zo', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n\t\t', 'desc', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'pre', 'z', 'zo', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'ann', 'ulla', '_', 'canc', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '_', 'canc', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁desc', '_', 'ext', 'ra', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁desc', ',', '▁1,', '▁', '0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁p', 'x', '_', 'ext', 'ra', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁pre', 'z', 'zo', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁ann', 'ulla', '_', 'canc', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁con', 'fer', 'ma', '_', 'canc', ',', '▁2,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁initial', 'ize', '()', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'd', 'ess', 'ert', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'fr', 'utta', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ric', 'reat', 'iv', 'i', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'alt', 'ro', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'aff', 'etter', 'ia', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'an', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'd', 'ol', 'ci', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'fred', 'di', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'aldi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'sol', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'car', 'ne', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'pes', 'ce', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cott', 'a', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'form', 'aggio', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '_', 'canc', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'con', 'fer', 'mac', 'anc', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '_', 'canc', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'g', 'ob', 'ack', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '3.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'el', 'en', 'co', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ben', 'ese', 'lez', 'ion', 'ato', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'mac', 'anc', '()', '\n\t', '{', '\n\t\t', 'int', '▁id', ';', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t\t\t\t\n\t\t', '//', '▁quest', 'a', '▁e', ""'"", '▁una', '▁for', 'z', 'at', 'ura', '▁spor', 'ca', '\n\t\t', 'test', 'o', '3', '▁=', '▁desc', ';', '\n\t\t', 'test', 'o', '4', '▁=', '▁pre', 'z', 'zo', ';', '\n\t\t', 'int', '▁j', ';', '\n\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'ben', 'es', 'erv', 'izio', '(', 'ext', 'ra', '.', 'get', 'code', 'xt', 'ra', '()', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t', '{', '\n\t\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t\t', 'pan', 'el', '[', '0', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ben', 'ese', 'lez', 'ion', 'ato', '()', '\n\t', '{', '\n\t\t', 'ext', 'ra', '▁=', '▁l', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', '(', 'el', 'en', 'co', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'desc', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'desc', 'riz', 'ione', '());', '\n\t\t', 'pre', 'z', 'zo', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'px', 'un', 'itar', 'io', '()', '+', '""', '"");', '\n\t\t', 'pan', 'el', '[', '12', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁go', 'back', '()', '\n\t', '{', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'pan', 'el', '[', '11', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n\n\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'import', '▁mod', 'uli', '.', 'database', ';', '\n', 'import', '▁mod', 'uli', '.', 'list', 'ab', 'enis', 'erv', 'izi', ';', '\n\n', 'public', '▁class', '▁canc', 'ell', 'ab', 'enis', 'erv', 'izi', '▁extends', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '\n', '{', '\n\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁null', ';', '\n\t', 'label', '▁elenco', '_', 'extra', '1,', '▁elenco', '_', 'extra', '2,', '▁desc', '_', 'extra', ',', '▁px', '_', 'extra', ';', '\n\t', 'text', 'field', '▁desc', ',', '▁pre', 'zzo', ';', '\n\t', 'button', '▁ann', 'ulla', '3,', '▁ann', 'ulla', '_', 'canc', ',', '▁confer', 'ma', '_', 'canc', ';', '\n\t\t\n\t', 'public', '▁canc', 'ell', 'ab', 'enis', 'erv', 'izi', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'canc', 'ell', 'azione', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'izio', '"");', '\n\t\t', 'set', 'upp', 'ann', 'ello', '();', '\n\t\t', 'initial', 'ize', '();', '\n\t', '}', '\n\t\n\t', 'void', '▁setup', 'p', 'ann', 'ello', '()', '\n\t', '{', '\n\t\t', 'panel', '[', '11', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'elen', 'co', '_', 'extra', '1', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'gli', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'izio', ',', '▁app', 'arten', 'ente', '"");', '\n\t\t', 'elen', 'co', '_', 'extra', '2', '▁=', '▁new', '▁label', '(""', 'alla', '▁categ', 'oria', '▁se', 'lez', 'ion', 'ata', ',', '▁da', '▁canc', 'ell', 'are', '"");', '\n\t\t', 'ann', 'ulla', '3', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', '_', 'extra', '1,', '▁0,', '▁0,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', '_', 'extra', '2,', '▁0,', '▁1,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', ',', '▁0,', '▁2,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁ann', 'ulla', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', 'panel', '[', '12', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'desc', '_', 'extra', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁del', '▁bene', '"");', '\n\t\t', 'px', '_', 'extra', '▁=', '▁new', '▁label', '(""', 'pre', 'zzo', '▁del', '▁bene', '"");', '\n\t\t', 'desc', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4', '0);', '\n\t\t', 'pre', 'zzo', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n\t\t', 'desc', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'pre', 'zzo', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'ann', 'ulla', '_', 'canc', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '_', 'canc', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁desc', '_', 'extra', ',', '▁0,', '▁0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁desc', ',', '▁1,', '▁0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁px', '_', 'extra', ',', '▁0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁pre', 'zzo', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁ann', 'ulla', '_', 'canc', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁0,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁confer', 'ma', '_', 'canc', ',', '▁2,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁0,', '▁5', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁initialize', '()', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'dess', 'ert', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'fr', 'utta', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ric', 'reat', 'ivi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'alt', 'ro', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'c', 'aff', 'etter', 'ia', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'anal', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'dol', 'ci', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'fred', 'di', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'c', 'aldi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'sol', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'carne', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'pes', 'ce', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cott', 'a', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'form', 'aggio', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '_', 'canc', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'con', 'fer', 'mac', 'anc', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '_', 'canc', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'gob', 'ack', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '3.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'elen', 'co', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ben', 'ese', 'lez', 'ion', 'ato', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'void', '▁start', 'con', 'fer', 'mac', 'anc', '()', '\n\t', '{', '\n\t\t', 'int', '▁id', ';', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\t\t\t\t\n\t\t', '//', '▁quest', 'a', '▁e', ""'"", '▁una', '▁for', 'z', 'atura', '▁spor', 'ca', '\n\t\t', 'test', 'o', '3', '▁=', '▁desc', ';', '\n\t\t', 'test', 'o', '4', '▁=', '▁pre', 'zzo', ';', '\n\t\t', 'int', '▁j', ';', '\n\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'del', 'ben', 'es', 'erv', 'izio', '(', 'extra', '.', 'get', 'code', 'xt', 'ra', '()))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t', '{', '\n\t\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t\t\t', 'if', '(', 'panel', '[', 'i', '].', 'is', 'visible', '())', '\n\t\t\t\t\t', 'remove', '(', 'panel', '[', 'i', ']);', '\n\t\t\t', 'panel', '[0', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t', '}', '\n\t\n\t', 'void', '▁ben', 'ese', 'lez', 'ion', 'ato', '()', '\n\t', '{', '\n\t\t', 'extra', '▁=', '▁l', '.', 'get', 'ben', 'es', 'erv', 'izio', '((', 'elen', 'co', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t', 'remove', '(', 'panel', '[', '11', ']);', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', '12', ']);', '\n\t\t', 'desc', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'desc', 'riz', 'ione', '());', '\n\t\t', 'pre', 'zzo', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'px', 'un', 'itario', '()', '+""', '"");', '\n\t\t', 'panel', '[', '12', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n\n\t', 'void', '▁go', 'back', '()', '\n\t', '{', '\n\t\t', 'remove', '(', 'panel', '[', '12', ']);', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', '11', ']);', '\n\t\t', 'panel', '[', '11', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n\n\n', '}']"~"packag interfacc import java awt import java awt event import common util import moduli bene servizio import moduli data base import moduli lista beni servizi public class cancella beni servizi extend maschera bene servizio bene servizio extra null label elenco extra elenco extra desc extra extra text field desc prezzo button annulla annulla canc conferma canc public cancella beni servizi super cancellazion bene servizio setup pannello initi void setup pannello panel set layout gridbag elenco extra new label sceglier bene servizio appartenent elenco extra new label alla categoria selezionata cancellar annulla new button fine util constrain panel elenco extra grid bag constraint none grid bag constraint west util constrain panel elenco extra grid bag constraint none grid bag constraint west util constrain panel elenco grid bag constraint horizont grid bag constraint center util constrain panel annulla grid bag constraint none grid bag constraint center panel set layout gridbag desc extra new label nome del bene px_extra new label prezzo del bene ""); desc new text field ("""", prezzo new text field ("""", desc set edit fals prezzo set edit fals annulla_canc new button annulla ""); conferma_canc new button conferma ""); util constrain panel desc_extra grid bag constraint none grid bag constraint west util constrain panel desc grid bag constraint none grid bag constraint west util constrain panel px_extra grid bag constraint none grid bag constraint west util constrain panel prezzo grid bag constraint none grid bag constraint west util constrain panel annulla_canc grid bag constraint none grid bag constraint east util constrain panel conferma_canc grid bag constraint none grid bag constraint west public void initi scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) level codic compos code level bene servizio dessert (); }); scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) level codic compos code level bene servizio frutta (); }); scelta_servizio add item listen new item listen public void item state chang item event scelta_servizio get state ()) level codic compos code level bene servizio ricreativi (); }); scelta_servizio add item listen new item listen public void item state chang item event scelta_servizio get state ()) level codic compos code level bene servizio altro (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio caffetteria (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio analcolici (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio alcolici (); }); scelta_cibo add item listen new item listen public void item state chang item event scelta_cibo get state ()) level codic compos code level bene servizio dolci (); }); scelta_cibo add item listen new item listen public void item state chang item event scelta_cibo get state ()) level codic compos code level bene servizio salati (); }); scelta_antipasto add item listen new item listen public void item state chang item event scelta_antipasto get state ()) level codic compos code level bene servizio freddi (); }); scelta_antipasto add item listen new item listen public void item state chang item event scelta_antipasto get state ()) level codic compos code level bene servizio caldi (); }); scelta_primo add item listen new item listen public void item state chang item event scelta_primo get state ()) level codic compos code level bene servizio solidi (); }); scelta_primo add item listen new item listen public void item state chang item event scelta_primo get state ()) level codic compos code level bene servizio liquidi (); }); scelta_secondo add item listen new item listen public void item state chang item event scelta_secondo get state ()) level codic compos code level bene servizio carn (); }); scelta_secondo add item listen new item listen public void item state chang item event scelta_secondo get state ()) level codic compos code level bene servizio pesc (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio verdura_cotta (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio verdura_cruda (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio formaggio (); }); conferma_canc add action listen new action listen public void action perform action event start conferma canc (); }); annulla_canc add action listen new action listen public void action perform action event back (); }); annulla3 add action listen new action listen public void action perform action event dispos (); padr set enabl true }); elenco add action listen new action listen public void action perform action event bene selezionato (); }); init void start conferma canc int messag dialog msg questa una forzatura sporca testo3 desc testo4 prezzo int principal del bene servizio extra get cod extra ())) data base int ;++ panel visibl ()) remov panel ]); panel set visibl true els msg new messag dialog problemi con data base data base str error )); void bene selezionato extra get bene servizio elenco get select index ())[ remov panel ]); add panel ]); desc set text extra get descrizion ()); prezzo set text extra get unitario ()+""""); panel set visibl true set visibl true void back remov panel ]); add panel ]); panel set visibl true set visibl true"
19~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/SubRistorazione.java~SubRistorazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import common.utility.*;
import AlberGate;

public class SubRistorazione extends Frame
{
   	Label label;
   	Panel panel0, panel1;
   	Button Calcolo, Annulla;
   	GridBagLayout gridbag=new GridBagLayout();
	Frame p = new Frame();
	MascheraContoRistorazione rist;

   public SubRistorazione()
   {
      super(""Ristorazione"");
      setup();
      init();
      pack();
   }

   void setup()
   {
      this.setFont(ConfigurazioneSistema.font_sub);
   	  panel0=new Panel();
      panel0.setLayout(gridbag);
      panel0.setBackground(Color.white);
      Immagine  figura = new Immagine(""ristorazione.jpg"");
      Etichetta etich = new Etichetta(""Ristorazione.gif"");
      Utils.constrain(panel0,etich, 0, 0, 2, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
      Utils.constrain(panel0,figura, 2, 0, 10, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
       
      panel1 = new Panel();
      panel1.setLayout(new GridLayout(2,1));
      Calcolo = new Button("" Calcolo conto "");
      Annulla = new Button("" Indietro "");
      panel1.add(Calcolo);
      panel1.add(Annulla);

      this.setLayout(gridbag);
      Utils.constrain(this,panel0, 0, 0, 12, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
      Utils.constrain(this,panel1, 12, 0, 1, 12,GridBagConstraints.BOTH,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
   }

   void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            p.setEnabled(true);
         }
      });

      Calcolo.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			startCalcolo();
         }
      });
   }
   
   void startCalcolo()
   {
   		this.setEnabled(false);
		rist = new MascheraContoRistorazione(this);
		rist.setVisible(true);
		rist.padre = this;
   }
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁al', 'berg', 'ate', ';', '\n\n', 'publ', 'ic', '▁class', '▁sub', 'rist', 'or', 'az', 'ion', 'e', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'l', 'ab', 'el', '▁label', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1', ';', '\n', '▁', '\t', 'but', 'ton', '▁cal', 'col', 'o', ',', '▁ann', 'ull', 'a', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'fr', 'ame', '▁p', '▁=', '▁new', '▁frame', '(', ');', '\n\t', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', '▁r', 'ist', ';', '\n\n', '▁public', '▁sub', 'rist', 'or', 'az', 'ion', 'e', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'rist', 'or', 'az', 'ion', 'e', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'sub', ');', '\n', '▁', '\t', '▁pan', 'el', '0', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁pan', 'el', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', '""', 'rist', 'or', 'az', 'ion', 'e', '.', 'j', 'p', 'g', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁et', 'ich', '▁=', '▁new', '▁et', 'ic', 'he', 'tt', 'a', '(', '""', 'rist', 'or', 'az', 'ion', 'e', '.', 'g', 'if', '"")', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'f', 'ig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'new', '▁gr', 'id', 'l', 'ay', 'out', '(', '2,', '1)', ');', '\n', '▁cal', 'col', 'o', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁cal', 'col', 'o', '▁cont', 'o', '▁""', ');', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'cal', 'col', 'o', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ann', 'ull', 'a', ');', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁p', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁cal', 'col', 'o', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'st', 'art', 'cal', 'col', 'o', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁start', 'cal', 'col', 'o', '(', ')', '\n', '▁{', '\n', '▁', '\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'rist', '▁=', '▁new', '▁m', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', '(', 'this', ');', '\n\t\t', 'rist', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'rist', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁al', 'berg', 'ate', ';', '\n\n', 'public', '▁class', '▁sub', 'rist', 'or', 'azione', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'l', 'abel', '▁label', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '0,', '▁panel', '1', ';', '\n', '▁', '\t', 'but', 'ton', '▁cal', 'colo', ',', '▁ann', 'ulla', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'frame', '▁p', '▁=', '▁new', '▁frame', '();', '\n\t', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', '▁r', 'ist', ';', '\n\n', '▁public', '▁sub', 'rist', 'or', 'azione', '()', '\n', '▁{', '\n', '▁super', '(""', 'rist', 'or', 'azione', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁', '\t', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(""', 'rist', 'or', 'azione', '.', 'j', 'pg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'rist', 'or', 'azione', '.', 'g', 'if', '"");', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'fig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'new', '▁grid', 'lay', 'out', '(', '2,', '1)', ');', '\n', '▁cal', 'colo', '▁=', '▁new', '▁button', '(""', '▁cal', 'colo', '▁cont', 'o', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'cal', 'colo', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁p', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁cal', 'colo', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'cal', 'colo', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁start', 'cal', 'colo', '()', '\n', '▁{', '\n', '▁', '\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'rist', '▁=', '▁new', '▁masc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', '(', 'this', ');', '\n\t\t', 'rist', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'rist', '.', 'pad', 're', '▁=', '▁this', ';', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁alberg', 'ate', ';', '\n\n', 'public', '▁class', '▁sub', 'rist', 'or', 'azione', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'label', '▁label', ';', '\n', '▁', '\t', 'panel', '▁panel', '0,', '▁panel', '1;', '\n', '▁', '\t', 'button', '▁cal', 'colo', ',', '▁ann', 'ulla', ';', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'layout', '();', '\n\t', 'frame', '▁p', '▁=', '▁new', '▁frame', '();', '\n\t', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', '▁rist', ';', '\n\n', '▁public', '▁sub', 'rist', 'or', 'azione', '()', '\n', '▁{', '\n', '▁super', '(""', 'rist', 'or', 'azione', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁', '\t', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'agine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'agine', '(""', 'rist', 'or', 'azione', '.', 'jpg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'rist', 'or', 'azione', '.', 'gif', '"");', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'et', 'ich', ',', '▁0,', '▁0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'fig', 'ura', ',', '▁2,', '▁0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'new', '▁grid', 'layout', '(2,', '1)', ');', '\n', '▁cal', 'colo', '▁=', '▁new', '▁button', '(""', '▁cal', 'colo', '▁cont', 'o', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'cal', 'colo', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁12,', '▁0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁p', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁cal', 'colo', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'cal', 'colo', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁start', 'cal', 'colo', '()', '\n', '▁{', '\n', '▁', '\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'rist', '▁=', '▁new', '▁masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', '(', 'this', ');', '\n\t\t', 'rist', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'rist', '.', 'pad', 're', '▁=', '▁this', ';', '\n', '▁}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import java import common util import alber gate public class sub ristorazion extend frame label label panel panel panel button calcolo annulla grid bag layout gridbag new grid bag layout frame new frame maschera conto ristorazion rist public sub ristorazion super ristorazion setup init pack void setup set font configurazion sistema font sub panel new panel panel set layout gridbag panel set background color white immagin figura new immagin ristorazion jpg etichetta etich new etichetta ristorazion gif util constrain panel etich grid bag constraint vertic grid bag constraint center util constrain panel figura grid bag constraint vertic grid bag constraint center panel new panel panel set layout new grid layout calcolo new button calcolo conto annulla new button indietro panel add calcolo panel add annulla set layout gridbag util constrain panel grid bag constraint vertic grid bag constraint west util constrain panel grid bag constraint grid bag constraint west void init annulla add action listen new action listen public void action perform action event dispos (); set enabl true }); calcolo add action listen new action listen public void action perform action event start calcolo (); }); void start calcolo set enabl fals rist new maschera conto ristorazion rist set visibl true rist padr
20~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/AggiungiSoggiornante.java~AggiungiSoggiornante.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import moduli.*;
import common.utility.*;
import common.def.*;
import interfacce.*;
import java.util.Date;

public class AggiungiSoggiornante extends MascheraSoggiorno
{
   	Prenotazione prenotazione;
   	int num_sogg;
	Stanza stanza; 
  	
  	public AggiungiSoggiornante(RicercaPrenotazione parent, Prenotazione p, Stanza s, int num)
   	{
      	super(""Inserimento dati del soggiornante"",""Aggiungi agli altri"", p.getPensionamento(), Flag.ADULTO);
      	padre = parent;
      	stanza = s;
      	num_sogg= num;
      	prenotazione = p;
      	inizializza();
   	}

   public void inizializza()
   {
      testo1.setText(stanza.getNumStanza());
      testo1.setEditable(false);
      testo13.setText(DateUtils.giveStringOfDate(new Date()));
      testo13.setEditable(false);
      testo14.setText(DateUtils.giveStringOfDate(prenotazione.getFineSogg()));
      testo14.setEditable(false);
      
      Conferma.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			startConferma();
         }
      });
      
    }

	void startConferma()
	{
		Frame msg;
		
        if (!errori())
        {
			Soggiornante sogg = readDatiSogg(prenotazione, num_sogg+1);
			sogg.setInizioSogg(new Date());
			sogg.setFineSogg(prenotazione.getFineSogg());
			sogg.setNumStanza(stanza.getNumStanza());
			int j;
          	if ( (j = (Principale.db).writeSoggiornante(sogg)) == DataBase.OK )
          	{     //	Modifico la prenotazione relativa
				if (stanza.getPostiLetto() > num_sogg)
					prenotazione.setNumPers(num_sogg+1);
				else
					if ( (stanza.getPostiLetto() == num_sogg) && (stanza.getDispLettoAgg() == Const.SI) )
					 	prenotazione.setRichLettoAgg(Const.SI);
							
				(Principale.db).changePrenotazione(prenotazione.getIdPrenotazione(), prenotazione.getNumStanza(), 
														prenotazione.getNumPers(),prenotazione.getNome(),prenotazione.getCognome(), 
														prenotazione.getNumTel(), prenotazione.getInizioSogg(), prenotazione.getFineSogg(), prenotazione.getDataPren(),
														prenotazione.getCaparra(), prenotazione.getRichLettoAgg(), prenotazione.getPensionamento(),
														prenotazione.getTramiteAgenzia(), prenotazione.getNomeAgenzia(), prenotazione.getRichParticolari());	
				msg = new AvvisoLocale(this, "" Nuovo soggiornante registrato! "");
           	}
			else
				msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j));
       	}
	}
}

class AvvisoLocale extends Frame
{
   Button OK;
   AggiungiSoggiornante padre;

   public AvvisoLocale(AggiungiSoggiornante parent, String testo)
   {
      super(""Avviso"");
      padre = parent;
      padre.setEnabled(false);
	  this.setFont(ConfigurazioneSistema.font_titolo);
      Panel textPanel = new Panel();
      Panel buttonPanel = new Panel();
      textPanel.add(new Label(testo));
      OK = new Button(""OK"");
      buttonPanel.add(OK);
      add(""North"",textPanel);
      add(""Center"",buttonPanel);
      init();
      pack();
      //setSize(250,100);
      setVisible(true);
   }

   public void init()
   {
      OK.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
         	setVisible(false);
			dispose();
			padre.dispose();
			padre.padre.setEnabled(true);
         }
      });
   }
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁inter', 'f', 'ac', 'ce', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n\n', 'publ', 'ic', '▁class', '▁ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '▁ext', 'ends', '▁m', 'asc', 'her', 'as', 'og', 'gi', 'orn', 'o', '\n', '{', '\n', '▁', '\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', 'ot', 'az', 'ion', 'e', ';', '\n', '▁', '\t', 'int', '▁num', '_', 'so', 'g', 'g', ';', '\n\t', 'stan', 'za', '▁stan', 'za', ';', '▁', '\n', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '(', 'ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁paren', 't', ',', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ',', '▁stan', 'za', '▁s', ',', '▁int', '▁num', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', 'ins', 'er', 'iment', 'o', '▁d', 'ati', '▁del', '▁s', 'og', 'gi', 'orn', 'ante', '"",', '""', 'ag', 'gi', 'ung', 'i', '▁ag', 'li', '▁alt', 'ri', '"",', '▁p', '.', 'get', 'p', 'ension', 'ament', 'o', '(', '),', '▁flag', '.', 'ad', 'ult', 'o', ');', '\n', '▁', '\t', 'p', 'ad', 're', '▁=', '▁paren', 't', ';', '\n', '▁', '\t', 'stan', 'za', '▁=', '▁s', ';', '\n', '▁', '\t', 'n', 'um', '_', 'so', 'g', 'g', '=', '▁num', ';', '\n', '▁', '\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁=', '▁p', ';', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n', '▁', '\t', '}', '\n\n', '▁public', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n', '▁{', '\n', '▁test', 'o', '1.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁test', 'o', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '1', '3.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'new', '▁date', '(', ')', ')', ');', '\n', '▁test', 'o', '1', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '1', '4.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'f', 'ines', 'og', 'g', '(', ')', ')', ');', '\n', '▁test', 'o', '1', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'st', 'art', 'con', 'fer', 'ma', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n', '▁if', '▁(', '!', 'er', 'ror', 'i', '(', ')', ')', '\n', '▁{', '\n\t\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', '▁=', '▁read', 'd', 'at', 'is', 'og', 'g', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ',', '▁num', '_', 'so', 'g', 'g', '+', '1)', ';', '\n\t\t\t', 'so', 'g', 'g', '.', 'set', 'in', 'iz', 'ios', 'og', 'g', '(', 'new', '▁date', '(', ')', ');', '\n\t\t\t', 'so', 'g', 'g', '.', 'set', 'f', 'ines', 'og', 'g', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'f', 'ines', 'og', 'g', '(', ')', ');', '\n\t\t\t', 'so', 'g', 'g', '.', 'set', 'n', 'um', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t\t', 'int', '▁j', ';', '\n', '▁', '\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'es', 'og', 'gi', 'orn', 'ante', '(', 'so', 'g', 'g', ')', ')', '▁=', '=', '▁database', '.', 'ok', '▁)', '\n', '▁', '\t', '{', '▁/', '/', '\t', 'mod', 'ific', 'o', '▁la', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁rel', 'at', 'iva', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', ')', '▁', '>', '▁num', '_', 'so', 'g', 'g', ')', '\n\t\t\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'set', 'n', 'ump', 'ers', '(', 'n', 'um', '_', 'so', 'g', 'g', '+', '1)', ';', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'stan', 'za', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', ')', '▁=', '=', '▁num', '_', 'so', 'g', 'g', ')', '▁&', '&', '▁(', 'stan', 'za', '.', 'get', 'dis', 'p', 'let', 'to', 'ag', 'g', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '▁)', '\n\t\t\t\t\t', '▁', '\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'set', 'rich', 'let', 'to', 'ag', 'g', '(', 'con', 'st', '.', 'si', ');', '\n\t\t\t\t\t\t\t\n\t\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'change', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '),', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'ump', 'ers', '(', '),', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'ome', '(', '),', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'c', 'ogn', 'ome', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'um', 't', 'el', '(', '),', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'd', 'at', 'ap', 'ren', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'c', 'ap', 'ar', 'ra', '(', '),', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'rich', 'let', 'to', 'ag', 'g', '(', '),', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'p', 'ension', 'ament', 'o', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'tr', 'am', 'ite', 'agen', 'z', 'ia', '(', '),', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', '),', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'rich', 'part', 'ic', 'ol', 'ari', '(', ')', ');', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'ol', 'oc', 'ale', '(', 'this', ',', '▁""', '▁n', 'u', 'ovo', '▁s', 'og', 'gi', 'orn', 'ante', '▁reg', 'istr', 'ato', '!', '▁""', ');', '\n', '▁', '\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n', '▁', '\t', '}', '\n\t', '}', '\n', '}', '\n\n', 'class', '▁av', 'vis', 'ol', 'oc', 'ale', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁but', 'ton', '▁ok', ';', '\n', '▁ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '▁pad', 're', ';', '\n\n', '▁public', '▁av', 'vis', 'ol', 'oc', 'ale', '(', 'ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '▁paren', 't', ',', '▁string', '▁test', 'o', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'av', 'vis', 'o', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁pan', 'el', '▁text', 'pan', 'el', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '▁but', 'ton', 'pan', 'el', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁text', 'pan', 'el', '.', 'ad', 'd', '(', 'new', '▁label', '(', 't', 'est', 'o', ')', ');', '\n', '▁ok', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ok', '"")', ';', '\n', '▁but', 'ton', 'pan', 'el', '.', 'ad', 'd', '(', 'ok', ');', '\n', '▁add', '(', '""', 'north', '"",', 'text', 'pan', 'el', ');', '\n', '▁add', '(', '""', 'center', '"",', 'but', 'ton', 'pan', 'el', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁/', '/', 's', 'ets', 'ize', '(', '25', '0,', '100', ');', '\n', '▁set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ok', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t', 'p', 'ad', 're', '.', 'dis', 'pose', '(', ');', '\n\t\t\t', 'p', 'ad', 're', '.', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁inter', 'fac', 'ce', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n\n', 'public', '▁class', '▁ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '▁extends', '▁masc', 'her', 'as', 'og', 'gi', 'orno', '\n', '{', '\n', '▁', '\t', 'p', 'ren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁', '\t', 'int', '▁num', '_', 'so', 'gg', ';', '\n\t', 'stan', 'za', '▁stan', 'za', ';', '▁', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '(', 'ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ',', '▁pren', 'ot', 'azione', '▁p', ',', '▁stan', 'za', '▁s', ',', '▁int', '▁num', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'ins', 'er', 'iment', 'o', '▁d', 'ati', '▁del', '▁s', 'og', 'gi', 'orn', 'ante', '"",', '""', 'aggi', 'ung', 'i', '▁ag', 'li', '▁alt', 'ri', '"",', '▁p', '.', 'get', 'p', 'ension', 'amento', '(', '),', '▁flag', '.', 'ad', 'ult', 'o', ');', '\n', '▁', '\t', 'pad', 're', '▁=', '▁parent', ';', '\n', '▁', '\t', 'stan', 'za', '▁=', '▁s', ';', '\n', '▁', '\t', 'num', '_', 'so', 'gg', '=', '▁num', ';', '\n', '▁', '\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁p', ';', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '();', '\n', '▁', '\t', '}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n', '▁{', '\n', '▁test', 'o', '1.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '1', '3.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'new', '▁date', '())', ');', '\n', '▁test', 'o', '1', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '1', '4.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'f', 'ines', 'ogg', '())', ');', '\n', '▁test', 'o', '1', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n', '▁if', '▁(', '!', 'error', 'i', '())', '\n', '▁{', '\n\t\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁read', 'dat', 'is', 'ogg', '(', 'p', 'ren', 'ot', 'azione', ',', '▁num', '_', 'so', 'gg', '+', '1)', ';', '\n\t\t\t', 'so', 'gg', '.', 'set', 'in', 'iz', 'ios', 'ogg', '(', 'new', '▁date', '());', '\n\t\t\t', 'so', 'gg', '.', 'set', 'f', 'ines', 'ogg', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'f', 'ines', 'ogg', '());', '\n\t\t\t', 'so', 'gg', '.', 'set', 'num', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t', 'int', '▁j', ';', '\n', '▁', '\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'writ', 'es', 'og', 'gi', 'orn', 'ante', '(', 'so', 'gg', '))', '▁==', '▁database', '.', 'ok', '▁)', '\n', '▁', '\t', '{', '▁//', '\t', 'mod', 'ific', 'o', '▁la', '▁pren', 'ot', 'azione', '▁rel', 'at', 'iva', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '.', 'get', 'post', 'il', 'etto', '()', '▁>', '▁num', '_', 'so', 'gg', ')', '\n\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'set', 'n', 'ump', 'ers', '(', 'num', '_', 'so', 'gg', '+', '1)', ';', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'stan', 'za', '.', 'get', 'post', 'il', 'etto', '()', '▁==', '▁num', '_', 'so', 'gg', ')', '▁&', '&', '▁(', 'stan', 'za', '.', 'get', 'dis', 'p', 'let', 'to', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '▁)', '\n\t\t\t\t\t', '▁', '\t', 'p', 'ren', 'ot', 'azione', '.', 'set', 'rich', 'let', 'to', 'agg', '(', 'const', '.', 'si', ');', '\n\t\t\t\t\t\t\t\n\t\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'change', 'p', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '(', '),', '▁pren', 'ot', 'azione', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'get', 'n', 'ump', 'ers', '(', '),', 'p', 'ren', 'ot', 'azione', '.', 'get', 'n', 'ome', '(', '),', 'p', 'ren', 'ot', 'azione', '.', 'get', 'c', 'ogn', 'ome', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'get', 'num', 'tel', '(', '),', '▁pren', 'ot', 'azione', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁pren', 'ot', 'azione', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁pren', 'ot', 'azione', '.', 'get', 'dat', 'ap', 'ren', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'get', 'cap', 'arra', '(', '),', '▁pren', 'ot', 'azione', '.', 'get', 'rich', 'let', 'to', 'agg', '(', '),', '▁pren', 'ot', 'azione', '.', 'get', 'p', 'ension', 'amento', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'get', 'tr', 'am', 'ite', 'agen', 'zia', '(', '),', '▁pren', 'ot', 'azione', '.', 'get', 'n', 'ome', 'agen', 'zia', '(', '),', '▁pren', 'ot', 'azione', '.', 'get', 'rich', 'part', 'icol', 'ari', '());', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'ol', 'oc', 'ale', '(', 'this', ',', '▁""', '▁nu', 'ovo', '▁s', 'og', 'gi', 'orn', 'ante', '▁registr', 'ato', '!', '▁""', ');', '\n', '▁', '\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n', '▁', '\t', '}', '\n\t', '}', '\n', '}', '\n\n', 'class', '▁av', 'vis', 'ol', 'oc', 'ale', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ok', ';', '\n', '▁ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '▁pad', 're', ';', '\n\n', '▁public', '▁av', 'vis', 'ol', 'oc', 'ale', '(', 'aggi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '▁parent', ',', '▁string', '▁test', 'o', ')', '\n', '▁{', '\n', '▁super', '(""', 'av', 'vis', 'o', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁panel', '▁text', 'pan', 'el', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '▁button', 'pan', 'el', '▁=', '▁new', '▁panel', '();', '\n', '▁text', 'pan', 'el', '.', 'add', '(', 'new', '▁label', '(', 'test', 'o', ')', ');', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', 'ok', '"");', '\n', '▁button', 'pan', 'el', '.', 'add', '(', 'ok', ');', '\n', '▁add', '(""', 'north', '"",', 'text', 'pan', 'el', ');', '\n', '▁add', '(""', 'center', '"",', 'but', 'ton', 'pan', 'el', ');', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁//', 's', 'ets', 'ize', '(', '25', '0,', '100', ');', '\n', '▁set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁inter', 'fac', 'ce', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n\n', 'public', '▁class', '▁ag', 'gi', 'ung', 'is', 'oggi', 'orn', 'ante', '▁extends', '▁masc', 'her', 'as', 'oggi', 'orno', '\n', '{', '\n', '▁', '\t', 'p', 'ren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁', '\t', 'int', '▁num', '_', 'so', 'gg', ';', '\n\t', 'stan', 'za', '▁stanza', ';', '▁', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ag', 'gi', 'ung', 'is', 'oggi', 'orn', 'ante', '(', 'ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ',', '▁pren', 'ot', 'azione', '▁p', ',', '▁stanza', '▁s', ',', '▁int', '▁num', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'ins', 'er', 'imento', '▁d', 'ati', '▁del', '▁sog', 'gi', 'orn', 'ante', '"",""', 'aggi', 'ungi', '▁ag', 'li', '▁alt', 'ri', '"",', '▁p', '.', 'get', 'pension', 'amento', '(),', '▁flag', '.', 'adult', 'o', ');', '\n', '▁', '\t', 'pad', 're', '▁=', '▁parent', ';', '\n', '▁', '\t', 'stan', 'za', '▁=', '▁s', ';', '\n', '▁', '\t', 'num', '_', 'so', 'gg', '=', '▁num', ';', '\n', '▁', '\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁p', ';', '\n', '▁', '\t', 'in', 'iz', 'ial', 'izza', '();', '\n', '▁', '\t', '}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n', '▁{', '\n', '▁testo', '1.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁testo', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '13.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'new', '▁date', '())', ');', '\n', '▁testo', '13.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '14.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'f', 'ines', 'ogg', '())', ');', '\n', '▁testo', '14.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'void', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n', '▁if', '▁(!', 'error', 'i', '())', '\n', '▁{', '\n\t\t\t', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁read', 'dat', 'is', 'ogg', '(', 'p', 'ren', 'ot', 'azione', ',', '▁num', '_', 'so', 'gg', '+', '1);', '\n\t\t\t', 'so', 'gg', '.', 'set', 'in', 'iz', 'ios', 'ogg', '(', 'new', '▁date', '());', '\n\t\t\t', 'so', 'gg', '.', 'set', 'f', 'ines', 'ogg', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'f', 'ines', 'ogg', '());', '\n\t\t\t', 'so', 'gg', '.', 'set', 'num', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t', 'int', '▁j', ';', '\n', '▁', '\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'writes', 'oggi', 'orn', 'ante', '(', 'so', 'gg', '))', '▁==', '▁database', '.', 'ok', '▁)', '\n', '▁', '\t', '{', '▁//', '\t', 'mod', 'ific', 'o', '▁la', '▁pren', 'ot', 'azione', '▁rel', 'ativa', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '.', 'get', 'post', 'il', 'etto', '()', '▁>', '▁num', '_', 'so', 'gg', ')', '\n\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'set', 'n', 'ump', 'ers', '(', 'num', '_', 'so', 'gg', '+', '1);', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'stan', 'za', '.', 'get', 'post', 'il', 'etto', '()', '▁==', '▁num', '_', 'so', 'gg', ')', '▁&&', '▁(', 'stan', 'za', '.', 'get', 'disp', 'letto', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '▁)', '\n\t\t\t\t\t', '▁', '\t', 'p', 'ren', 'ot', 'azione', '.', 'set', 'rich', 'letto', 'agg', '(', 'const', '.', 'si', ');', '\n\t\t\t\t\t\t\t\n\t\t\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'change', 'p', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '.', 'getid', 'p', 'ren', 'ot', 'azione', '(),', '▁pren', 'ot', 'azione', '.', 'get', 'num', 'stan', 'za', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'get', 'n', 'ump', 'ers', '(),', 'p', 'ren', 'ot', 'azione', '.', 'get', 'n', 'ome', '(),', 'p', 'ren', 'ot', 'azione', '.', 'get', 'cogn', 'ome', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'get', 'num', 'tel', '(),', '▁pren', 'ot', 'azione', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁pren', 'ot', 'azione', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁pren', 'ot', 'azione', '.', 'get', 'dat', 'ap', 'ren', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'get', 'cap', 'arra', '(),', '▁pren', 'ot', 'azione', '.', 'get', 'rich', 'letto', 'agg', '(),', '▁pren', 'ot', 'azione', '.', 'get', 'pension', 'amento', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '.', 'get', 'tram', 'ite', 'agen', 'zia', '(),', '▁pren', 'ot', 'azione', '.', 'get', 'n', 'ome', 'agen', 'zia', '(),', '▁pren', 'ot', 'azione', '.', 'get', 'rich', 'part', 'icol', 'ari', '());', '\t\n\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'ol', 'oc', 'ale', '(', 'this', ',', '▁""', '▁nuovo', '▁sog', 'gi', 'orn', 'ante', '▁registr', 'ato', '!', '▁""', ');', '\n', '▁', '\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n', '▁', '\t', '}', '\n\t', '}', '\n', '}', '\n\n', 'class', '▁av', 'vis', 'ol', 'oc', 'ale', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ok', ';', '\n', '▁ag', 'gi', 'ung', 'is', 'oggi', 'orn', 'ante', '▁padre', ';', '\n\n', '▁public', '▁av', 'vis', 'ol', 'oc', 'ale', '(', 'aggi', 'ung', 'is', 'oggi', 'orn', 'ante', '▁parent', ',', '▁string', '▁testo', ')', '\n', '▁{', '\n', '▁super', '(""', 'av', 'vis', 'o', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁panel', '▁text', 'panel', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '▁button', 'panel', '▁=', '▁new', '▁panel', '();', '\n', '▁text', 'panel', '.', 'add', '(', 'new', '▁label', '(', 'test', 'o', '));', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', 'ok', '"");', '\n', '▁button', 'panel', '.', 'add', '(', 'ok', ');', '\n', '▁add', '(""', 'north', '"",', 'text', 'panel', ');', '\n', '▁add', '(""', 'center', '"",', 'button', 'panel', ');', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁//', 'sets', 'ize', '(', '250,', '100', ');', '\n', '▁set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'set', 'visible', '(', 'false', ');', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import moduli import common util import common def import interfacc import java util date public class aggiungi soggiornant extend maschera soggiorno prenotazion prenotazion int num sogg stanza stanza public aggiungi soggiornant ricerca prenotazion parent prenotazion stanza int num super inserimento dati del soggiornant aggiungi altri get pensionamento flag adulto padr parent stanza num sogg num prenotazion inizializza public void inizializza testo set text stanza get num stanza testo set edit fals testo set text date util give string date new date testo set edit fals testo set text date util give string date prenotazion get fine sogg testo set edit fals conferma add action listen new action listen public void action perform action event start conferma void start conferma frame msg errori soggiornant sogg read dati sogg prenotazion num sogg sogg set inizio sogg new date sogg set fine sogg prenotazion get fine sogg sogg set num stanza stanza get num stanza int principal write soggiornant sogg data base modifico prenotazion relativa stanza get posti letto num sogg prenotazion set num per num sogg els stanza get posti letto num sogg stanza get disp letto agg const prenotazion set rich letto agg const principal chang prenotazion prenotazion get prenotazion prenotazion get num stanza prenotazion get num per prenotazion get nome prenotazion get cognom prenotazion get num tel prenotazion get inizio sogg prenotazion get fine sogg (), prenotazion get data pren (), prenotazion get caparra (), prenotazion get rich letto agg (), prenotazion get pensionamento (), prenotazion get tramit agenzia (), prenotazion get nome agenzia (), prenotazion get rich particolari ()); msg new avviso local nuovo soggiornant registrato ""); els msg new messag dialog problemi con databas data base str error )); class avviso local extend frame button aggiungi soggiornant padr public avviso local aggiungi soggiornant parent string testo super avviso ""); padr parent padr set enabl fals set font configurazion sistema font_titolo panel text panel new panel (); panel button panel new panel (); text panel add new label testo )); new button ""); button panel add add north text panel add center button panel init (); pack (); set size 250 100 set visibl true public void init add action listen new action listen public void action perform action event set visibl fals dispos (); padr dispos (); padr padr set enabl true });"
21~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraPerAddebitare.java~MascheraPerAddebitare.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class MascheraPerAddebitare extends Frame
{
	// variabili per tenere tutto in memoria
	ListaBeniServizi elenco_extra = new ListaBeniServizi();
	ListaAddebiti elenco_addebiti = new ListaAddebiti();
	ListaBeniServizi elenco_extra_addebitati = new ListaBeniServizi();
	
	// oggetti per la costruzione della finestra
   	Label etich4, etich5, etich6, etich7;
	Panel panel1, panel2, panel3, panel4, panel5, panel6, panel7;
   	Button conferma, annulla, addebita, deaddebita, aggiungi;
   	TextField extra_add, totale;
	List addebiti, extra;
	GridBagLayout gridbag = new GridBagLayout();
	
	// attributi per la gestione della gerarchia delle finestre;
	Frame padre = new Frame();      
	AggiungiBeneServizio nuovo;
	
	// flag per capire se si tratta di un addebito o di un deaddebito
	boolean addebito;

    // variabili per il travaso del database in memoria
    int quantita_mod[] = new int[0]; // quantita aggiunge o tolte a vecchi addebiti

	public MascheraPerAddebitare(String titolo, String bottone_conf)
	{
		super(titolo);
		setupPanels(bottone_conf);
		init();
		pack();
	}
	
	// Creazione della finestra
	void setupPanels(String bottone_conf)
	{
		this.setFont(ConfigurazioneSistema.font_base);
		// creo l'elenco degli addebiti alla stanza e degli extra
		addebiti = new List(10, false);
		addebiti.setFont(ConfigurazioneSistema.font_allineato);
		extra = new List(10, false);
		extra.setFont(ConfigurazioneSistema.font_allineato);
  
		// creo i textfield
		extra_add = new TextField("""", 40);
		totale = new TextField("""", 20);
		extra_add.setEditable(false);
		totale.setEditable(false);

		// creo i pulsanti
		addebita = new Button(""Addebita"");
		deaddebita = new Button(""Togli dall'addebito"");
		aggiungi = new Button(""Aggiungi nuovo bene/servizio"");
		annulla = new Button(""Annulla"");
		conferma = new Button(bottone_conf);
		
		// creo le label
		etich4 = new Label(""Informazioni sugli addebiti"");
		etich4.setFont(ConfigurazioneSistema.font_titolo);
		etich5 = new Label(""Ultimo addebito effettuato"");
		etich6 = new Label(""Lista degli addebiti"");
		etich7 = new Label(""Totale dell'addebito"");

		// creo il primo pannello vuoto
		panel1 = new Panel();
		
		// creo pannello di informazione degli addebiti
		panel2 = new Panel();
		panel2.setLayout(gridbag);
		Utils.constrain(panel2, etich4, 0, 0, 3, 1);
		Utils.constrain(panel2, etich5, 0, 2, 3, 1, 10, 0, 0, 0);
		Utils.constrain(panel2, extra_add, 0, 3, 1, 1, 0, 20, 0, 0);
		Utils.constrain(panel2, etich6, 0, 5, 3, 1, 10, 0, 0, 0);
		Utils.constrain(panel2, addebiti, 0, 6, 2, 4, GridBagConstraints.BOTH,
					GridBagConstraints.WEST, 1.0, 1.0, 0, 20, 0, 20);
		Utils.constrain(panel2, etich7, 0, 12, 3, 1, 10, 0, 0, 0);
		Utils.constrain(panel2, totale, 0, 13, 1, 1, 0, 20, 0, 0);

		// creo pannello per addebita
		panel3 = new Panel();
		panel3.setLayout(gridbag);
		Utils.constrain(panel3, addebita, 0, 0, 1, 1, GridBagConstraints.HORIZONTAL,
					GridBagConstraints.CENTER, 1.0, 0.0, 0, 0, 0, 5);
		Utils.constrain(panel3, deaddebita, 1, 0, 1, 1, GridBagConstraints.HORIZONTAL,
					GridBagConstraints.CENTER, 1.0, 0.0, 0, 5, 0, 0);

		// creo pannello vuoto per num_stanza o coperti
		panel4 = new Panel();
		
		// creo pannello per aggiungi
		panel5 = new Panel();
		panel5.setLayout(gridbag);
		Utils.constrain(panel5, aggiungi, 0, 0, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);
		
		// creo pannello per annulla
		panel6 = new Panel();
		panel6.setLayout(gridbag);
		Utils.constrain(panel6, annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.CENTER, 1.0, 0.0, 0, 0, 0, 0);
	
		// creo pannello per conferma	
		panel7 = new Panel();
		panel7.setLayout(gridbag);
		Utils.constrain(panel7, conferma, 0, 0, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.CENTER, 1.0, 0.0, 0, 0, 0, 0);

		// costruisco la finestra definitiva attaccando i pannelli
		this.setLayout(gridbag);
		Utils.constrain(this, panel1, 0, 0, 1, 1, GridBagConstraints.VERTICAL,
					GridBagConstraints.WEST, 0.5, 0.5, 5, 5, 5, 5);
		Utils.constrain(this, panel2, 1, 0, 1, 4, GridBagConstraints.VERTICAL,
					GridBagConstraints.WEST, 0.5, 0.5, 5, 5, 5, 5);
		Utils.constrain(this, panel3, 0, 1, 1, 1, GridBagConstraints.VERTICAL,
					GridBagConstraints.CENTER, 0.0, 0.0, 5, 0, 5, 0);
		Utils.constrain(this, panel4, 0, 2, 1, 1, GridBagConstraints.VERTICAL,
					GridBagConstraints.WEST, 0.5, 0.5, 5, 0, 5, 0);
		Utils.constrain(this, panel5, 0, 3, 1, 1, GridBagConstraints.VERTICAL,
					GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);
		Utils.constrain(this, panel6, 0, 4, 1, 1, GridBagConstraints.BOTH,
					GridBagConstraints.CENTER, 0.0, 0.0, 5, 0, 5, 0);
		Utils.constrain(this, panel7, 1, 4, 2, 1, GridBagConstraints.BOTH,
					GridBagConstraints.CENTER, 0.0, 0.0, 5, 0, 5, 0);
	}

	// Per la gestione degli eventi della finestra
	void init()
	{
		annulla.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				padre.setEnabled(true);
			}
		});

        aggiungi.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
            	startAggiungi();
            }
        });
	}

    void startAggiungi()
    {
		nuovo = new AggiungiBeneServizio(this);
    }
}

"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '▁ext', 'ends', '▁frame', '\n', '{', '\n\t', '//', '▁vari', 'ab', 'ili', '▁per', '▁ten', 'ere', '▁t', 'ut', 'to', '▁in', '▁mem', 'oria', '\n\t', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁el', 'en', 'co', '_', 'ext', 'ra', '▁=', '▁new', '▁list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '(', ');', '\n\t', 'list', 'a', 'ad', 'de', 'bit', 'i', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁list', 'a', 'ad', 'de', 'bit', 'i', '(', ');', '\n\t', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '▁=', '▁new', '▁list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '(', ');', '\n\t\n\t', '//', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uz', 'ion', 'e', '▁d', 'ella', '▁fin', 'est', 'ra', '\n', '▁', '\t', 'l', 'ab', 'el', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7', ';', '\n\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3,', '▁pan', 'el', '4,', '▁pan', 'el', '5,', '▁pan', 'el', '6,', '▁pan', 'el', '7', ';', '\n', '▁', '\t', 'but', 'ton', '▁con', 'fer', 'ma', ',', '▁ann', 'ull', 'a', ',', '▁add', 'e', 'b', 'ita', ',', '▁dead', 'de', 'b', 'ita', ',', '▁ag', 'gi', 'ung', 'i', ';', '\n', '▁', '\t', 'text', 'field', '▁extra', '_', 'ad', 'd', ',', '▁to', 't', 'ale', ';', '\n\t', 'list', '▁add', 'e', 'bit', 'i', ',', '▁extra', ';', '\n\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t\n\t', '//', '▁att', 'ribut', 'i', '▁per', '▁la', '▁g', 'est', 'ion', 'e', '▁d', 'ella', '▁ger', 'arch', 'ia', '▁del', 'le', '▁fin', 'est', 're', ';', '\n\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '▁', '\n\t', 'ag', 'gi', 'ung', 'ib', 'en', 'es', 'erv', 'iz', 'io', '▁n', 'u', 'ovo', ';', '\n\t\n\t', '//', '▁flag', '▁per', '▁cap', 'ire', '▁se', '▁si', '▁tr', 'att', 'a', '▁di', '▁un', '▁add', 'e', 'bit', 'o', '▁o', '▁di', '▁un', '▁dead', 'de', 'bit', 'o', '\n\t', 'bo', 'ole', 'an', '▁add', 'e', 'bit', 'o', ';', '\n\n', '▁/', '/', '▁vari', 'ab', 'ili', '▁per', '▁il', '▁trav', 'as', 'o', '▁del', '▁database', '▁in', '▁mem', 'oria', '\n', '▁int', '▁quant', 'ita', '_', 'mod', '[', ']', '▁=', '▁new', '▁int', '[', '0', ']', ';', '▁/', '/', '▁quant', 'ita', '▁ag', 'gi', 'un', 'ge', '▁o', '▁to', 'l', 'te', '▁a', '▁v', 'ec', 'chi', '▁add', 'e', 'bit', 'i', '\n\n\t', 'publ', 'ic', '▁m', 'asc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '(', 'str', 'ing', '▁tit', 'olo', ',', '▁string', '▁bot', 'ton', 'e', '_', 'con', 'f', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', 't', 'it', 'olo', ');', '\n\t\t', 'set', 'up', 'pan', 'els', '(', 'bot', 'ton', 'e', '_', 'con', 'f', ');', '\n\t\t', 'in', 'it', '(', ');', '\n\t\t', 'p', 'ack', '(', ');', '\n\t', '}', '\n\t\n\t', '//', '▁cre', 'az', 'ion', 'e', '▁d', 'ella', '▁fin', 'est', 'ra', '\n\t', 'v', 'oid', '▁set', 'up', 'pan', 'els', '(', 'str', 'ing', '▁bot', 'ton', 'e', '_', 'con', 'f', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n\t\t', '//', '▁cre', 'o', '▁l', ""'"", 'el', 'en', 'co', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁all', 'a', '▁stan', 'za', '▁e', '▁deg', 'li', '▁extra', '\n\t\t', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁list', '(', '1', '0,', '▁fal', 'se', ');', '\n\t\t', 'ad', 'de', 'bit', 'i', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n\t\t', 'ext', 'ra', '▁=', '▁new', '▁list', '(', '1', '0,', '▁fal', 'se', ');', '\n\t\t', 'ext', 'ra', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n\t\t', '//', '▁cre', 'o', '▁i', '▁text', 'field', '\n\t\t', 'ext', 'ra', '_', 'ad', 'd', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', '0)', ';', '\n\t\t', 't', 'ot', 'ale', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n\t\t', 'ext', 'ra', '_', 'ad', 'd', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'ot', 'ale', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\n\t\t', '//', '▁cre', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n\t\t', 'ad', 'de', 'b', 'ita', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ad', 'de', 'b', 'ita', '"")', ';', '\n\t\t', 'de', 'ad', 'de', 'b', 'ita', '▁=', '▁new', '▁but', 'ton', '(', '""', 't', 'og', 'li', '▁dall', ""'"", 'ad', 'de', 'bit', 'o', '"")', ';', '\n\t\t', 'ag', 'gi', 'ung', 'i', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ag', 'gi', 'ung', 'i', '▁n', 'u', 'ovo', '▁bene', '/', 's', 'erv', 'iz', 'io', '"")', ';', '\n\t\t', 'ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', 'bot', 'ton', 'e', '_', 'con', 'f', ');', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁le', '▁label', '\n\t\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(', '""', 'in', 'form', 'az', 'ion', 'i', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '"")', ';', '\n\t\t', 'et', 'ich', '4.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(', '""', 'ult', 'im', 'o', '▁add', 'e', 'bit', 'o', '▁eff', 'ett', 'u', 'ato', '"")', ';', '\n\t\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(', '""', 'list', 'a', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '"")', ';', '\n\t\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(', '""', 't', 'ot', 'ale', '▁d', 'ell', ""'"", 'ad', 'de', 'bit', 'o', '"")', ';', '\n\n\t\t', '//', '▁cre', 'o', '▁il', '▁prim', 'o', '▁p', 'ann', 'ello', '▁v', 'u', 'oto', '\n\t\t', 'pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁p', 'ann', 'ello', '▁di', '▁inform', 'az', 'ion', 'e', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '\n\t\t', 'pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ich', '4,', '▁', '0,', '▁', '0,', '▁3,', '▁1', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ich', '5,', '▁', '0,', '▁2,', '▁3,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁extra', '_', 'ad', 'd', ',', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁', '0,', '▁20,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ich', '6,', '▁', '0,', '▁5,', '▁3,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁add', 'e', 'bit', 'i', ',', '▁', '0,', '▁6,', '▁2,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁20,', '▁', '0,', '▁20', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ich', '7,', '▁', '0,', '▁12,', '▁3,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁to', 't', 'ale', ',', '▁', '0,', '▁13,', '▁1,', '▁1,', '▁', '0,', '▁20,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', '▁cre', 'o', '▁p', 'ann', 'ello', '▁per', '▁add', 'e', 'b', 'ita', '\n\t\t', 'pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁add', 'e', 'b', 'ita', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁dead', 'de', 'b', 'ita', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', '▁cre', 'o', '▁p', 'ann', 'ello', '▁v', 'u', 'oto', '▁per', '▁num', '_', 'stan', 'za', '▁o', '▁cop', 'ert', 'i', '\n\t\t', 'pan', 'el', '4', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁p', 'ann', 'ello', '▁per', '▁ag', 'gi', 'ung', 'i', '\n\t\t', 'pan', 'el', '5', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '5.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁ag', 'gi', 'ung', 'i', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁p', 'ann', 'ello', '▁per', '▁ann', 'ull', 'a', '\n\t\t', 'pan', 'el', '6', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '6.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '6,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\n\t\t', '//', '▁cre', 'o', '▁p', 'ann', 'ello', '▁per', '▁con', 'fer', 'ma', '\t\n\t\t', 'pan', 'el', '7', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '7.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '7,', '▁con', 'fer', 'ma', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', '▁co', 'str', 'u', 'is', 'co', '▁la', '▁fin', 'est', 'ra', '▁defin', 'it', 'iva', '▁att', 'ac', 'c', 'ando', '▁i', '▁p', 'ann', 'elli', '\n\t\t', 'this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁1,', '▁', '0,', '▁1,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '4,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '5,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '6,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '7,', '▁1,', '▁4,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t', '}', '\n\n\t', '//', '▁per', '▁la', '▁g', 'est', 'ion', 'e', '▁deg', 'li', '▁event', 'i', '▁d', 'ella', '▁fin', 'est', 'ra', '\n\t', 'v', 'oid', '▁init', '(', ')', '\n\t', '{', '\n\t\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n', '▁ag', 'gi', 'ung', 'i', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'st', 'art', 'ag', 'gi', 'ung', 'i', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\n', '▁vo', 'id', '▁start', 'ag', 'gi', 'ung', 'i', '(', ')', '\n', '▁{', '\n\t\t', 'n', 'u', 'ovo', '▁=', '▁new', '▁ag', 'gi', 'ung', 'ib', 'en', 'es', 'erv', 'iz', 'io', '(', 'this', ');', '\n', '▁}', '\n', '}', '\n\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '▁extends', '▁frame', '\n', '{', '\n\t', '//', '▁vari', 'ab', 'ili', '▁per', '▁ten', 'ere', '▁tut', 'to', '▁in', '▁mem', 'oria', '\n\t', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁el', 'en', 'co', '_', 'ext', 'ra', '▁=', '▁new', '▁list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '();', '\n\t', 'list', 'a', 'ad', 'de', 'bit', 'i', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁list', 'a', 'ad', 'de', 'bit', 'i', '();', '\n\t', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '▁=', '▁new', '▁list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '();', '\n\t\n\t', '//', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uz', 'ione', '▁della', '▁finest', 'ra', '\n', '▁', '\t', 'l', 'abel', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7', ';', '\n\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4,', '▁panel', '5,', '▁panel', '6,', '▁panel', '7', ';', '\n', '▁', '\t', 'but', 'ton', '▁con', 'fer', 'ma', ',', '▁ann', 'ulla', ',', '▁add', 'eb', 'ita', ',', '▁dead', 'de', 'b', 'ita', ',', '▁ag', 'gi', 'ung', 'i', ';', '\n', '▁', '\t', 'text', 'field', '▁extra', '_', 'add', ',', '▁tot', 'ale', ';', '\n\t', 'list', '▁add', 'e', 'bit', 'i', ',', '▁extra', ';', '\n\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t\n\t', '//', '▁attribut', 'i', '▁per', '▁la', '▁gest', 'ione', '▁della', '▁ger', 'arch', 'ia', '▁delle', '▁finest', 're', ';', '\n\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '▁', '\n\t', 'aggi', 'ung', 'ib', 'enes', 'erv', 'izio', '▁nu', 'ovo', ';', '\n\t\n\t', '//', '▁flag', '▁per', '▁cap', 'ire', '▁se', '▁si', '▁tr', 'atta', '▁di', '▁un', '▁add', 'e', 'bit', 'o', '▁o', '▁di', '▁un', '▁dead', 'de', 'bit', 'o', '\n\t', 'bo', 'olean', '▁add', 'e', 'bit', 'o', ';', '\n\n', '▁//', '▁vari', 'ab', 'ili', '▁per', '▁il', '▁trav', 'as', 'o', '▁del', '▁database', '▁in', '▁mem', 'oria', '\n', '▁int', '▁quant', 'ita', '_', 'mod', '[]', '▁=', '▁new', '▁int', '[', '0', ']', ';', '▁//', '▁quant', 'ita', '▁ag', 'gi', 'unge', '▁o', '▁tol', 'te', '▁a', '▁vec', 'chi', '▁add', 'e', 'bit', 'i', '\n\n\t', 'public', '▁masc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '(', 'string', '▁tit', 'olo', ',', '▁string', '▁bot', 'tone', '_', 'conf', ')', '\n\t', '{', '\n\t\t', 'super', '(', 'tit', 'olo', ');', '\n\t\t', 'set', 'up', 'pan', 'els', '(', 'bot', 'tone', '_', 'conf', ');', '\n\t\t', 'init', '();', '\n\t\t', 'pack', '();', '\n\t', '}', '\n\t\n\t', '//', '▁cre', 'azione', '▁della', '▁finest', 'ra', '\n\t', 'v', 'oid', '▁setup', 'pan', 'els', '(', 'string', '▁bot', 'tone', '_', 'conf', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n\t\t', '//', '▁cre', 'o', '▁l', ""'"", 'el', 'en', 'co', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁alla', '▁stan', 'za', '▁e', '▁deg', 'li', '▁extra', '\n\t\t', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\t\t', 'ad', 'de', 'bit', 'i', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\t\t', 'ext', 'ra', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\t\t', 'ext', 'ra', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n\t\t', '//', '▁cre', 'o', '▁i', '▁text', 'field', '\n\t\t', 'ext', 'ra', '_', 'add', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', '0)', ';', '\n\t\t', 'tot', 'ale', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n\t\t', 'ext', 'ra', '_', 'add', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'tot', 'ale', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n\t\t', '//', '▁cre', 'o', '▁i', '▁puls', 'anti', '\n\t\t', 'ad', 'de', 'b', 'ita', '▁=', '▁new', '▁button', '(""', 'ad', 'de', 'b', 'ita', '"");', '\n\t\t', 'dead', 'de', 'b', 'ita', '▁=', '▁new', '▁button', '(""', 't', 'og', 'li', '▁dall', ""'"", 'ad', 'de', 'bit', 'o', '"");', '\n\t\t', 'aggi', 'ung', 'i', '▁=', '▁new', '▁button', '(""', 'aggi', 'ung', 'i', '▁nu', 'ovo', '▁bene', '/', 'serv', 'izio', '"");', '\n\t\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁button', '(', 'bot', 'tone', '_', 'conf', ');', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁le', '▁label', '\n\t\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'inform', 'az', 'ioni', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '"");', '\n\t\t', 'et', 'ich', '4.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'ult', 'imo', '▁add', 'e', 'bit', 'o', '▁eff', 'ett', 'u', 'ato', '"");', '\n\t\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'list', 'a', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '"");', '\n\t\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(""', 'tot', 'ale', '▁dell', ""'"", 'ad', 'de', 'bit', 'o', '"");', '\n\n\t\t', '//', '▁cre', 'o', '▁il', '▁prim', 'o', '▁pann', 'ello', '▁vu', 'oto', '\n\t\t', 'pan', 'el', '1', '▁=', '▁new', '▁panel', '();', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁di', '▁inform', 'azione', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '\n\t\t', 'pan', 'el', '2', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ich', '4,', '▁', '0,', '▁', '0,', '▁3,', '▁1', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ich', '5,', '▁', '0,', '▁2,', '▁3,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁extra', '_', 'add', ',', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁', '0,', '▁20,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ich', '6,', '▁', '0,', '▁5,', '▁3,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁add', 'e', 'bit', 'i', ',', '▁', '0,', '▁6,', '▁2,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁20,', '▁', '0,', '▁20', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ich', '7,', '▁', '0,', '▁12,', '▁3,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁tot', 'ale', ',', '▁', '0,', '▁13,', '▁1,', '▁1,', '▁', '0,', '▁20,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁add', 'eb', 'ita', '\n\t\t', 'pan', 'el', '3', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁add', 'eb', 'ita', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁dead', 'de', 'b', 'ita', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁vu', 'oto', '▁per', '▁num', '_', 'stan', 'za', '▁o', '▁cop', 'ert', 'i', '\n\t\t', 'pan', 'el', '4', '▁=', '▁new', '▁panel', '();', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁ag', 'gi', 'ung', 'i', '\n\t\t', 'pan', 'el', '5', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '5.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁ag', 'gi', 'ung', 'i', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁ann', 'ulla', '\n\t\t', 'pan', 'el', '6', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '6.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '6,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁con', 'fer', 'ma', '\t\n\t\t', 'pan', 'el', '7', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '7.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '7,', '▁con', 'fer', 'ma', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', '▁co', 'str', 'u', 'isco', '▁la', '▁finest', 'ra', '▁defin', 'it', 'iva', '▁att', 'acc', 'ando', '▁i', '▁pann', 'elli', '\n\t\t', 'this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁1,', '▁', '0,', '▁1,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '4,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '5,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '6,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '7,', '▁1,', '▁4,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t', '}', '\n\n\t', '//', '▁per', '▁la', '▁gest', 'ione', '▁deg', 'li', '▁event', 'i', '▁della', '▁finest', 'ra', '\n\t', 'v', 'oid', '▁init', '()', '\n\t', '{', '\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n', '▁ag', 'gi', 'ung', 'i', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'aggi', 'ung', 'i', '();', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\n', '▁void', '▁start', 'aggi', 'ung', 'i', '()', '\n', '▁{', '\n\t\t', 'nu', 'ovo', '▁=', '▁new', '▁ag', 'gi', 'ung', 'ib', 'enes', 'erv', 'izio', '(', 'this', ');', '\n', '▁}', '\n', '}', '\n\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '▁extends', '▁frame', '\n', '{', '\n\t', '//', '▁vari', 'ab', 'ili', '▁per', '▁ten', 'ere', '▁tutto', '▁in', '▁memoria', '\n\t', 'list', 'ab', 'enis', 'erv', 'izi', '▁elenco', '_', 'extra', '▁=', '▁new', '▁list', 'ab', 'enis', 'erv', 'izi', '();', '\n\t', 'lista', 'ad', 'de', 'bit', 'i', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁list', 'a', 'ad', 'de', 'bit', 'i', '();', '\n\t', 'list', 'ab', 'enis', 'erv', 'izi', '▁elenco', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', '▁=', '▁new', '▁list', 'ab', 'enis', 'erv', 'izi', '();', '\n\t\n\t', '//', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uzione', '▁della', '▁finest', 'ra', '\n', '▁', '\t', 'label', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7;', '\n\t', 'panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4,', '▁panel', '5,', '▁panel', '6,', '▁panel', '7;', '\n', '▁', '\t', 'button', '▁confer', 'ma', ',', '▁ann', 'ulla', ',', '▁add', 'eb', 'ita', ',', '▁dead', 'deb', 'ita', ',', '▁ag', 'gi', 'ungi', ';', '\n', '▁', '\t', 'text', 'field', '▁extra', '_', 'add', ',', '▁tot', 'ale', ';', '\n\t', 'list', '▁add', 'e', 'bit', 'i', ',', '▁extra', ';', '\n\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t\n\t', '//', '▁attribut', 'i', '▁per', '▁la', '▁gest', 'ione', '▁della', '▁ger', 'arch', 'ia', '▁delle', '▁finest', 're', ';', '\n\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '▁', '\n\t', 'aggi', 'ung', 'ib', 'enes', 'erv', 'izio', '▁nuovo', ';', '\n\t\n\t', '//', '▁flag', '▁per', '▁cap', 'ire', '▁se', '▁si', '▁tr', 'atta', '▁di', '▁un', '▁add', 'e', 'bit', 'o', '▁o', '▁di', '▁un', '▁dead', 'de', 'bit', 'o', '\n\t', 'boolean', '▁add', 'e', 'bit', 'o', ';', '\n\n', '▁//', '▁vari', 'ab', 'ili', '▁per', '▁il', '▁trav', 'aso', '▁del', '▁database', '▁in', '▁memoria', '\n', '▁int', '▁quant', 'ita', '_', 'mod', '[]', '▁=', '▁new', '▁int', '[0', '];', '▁//', '▁quant', 'ita', '▁ag', 'gi', 'unge', '▁o', '▁tol', 'te', '▁a', '▁vec', 'chi', '▁add', 'e', 'bit', 'i', '\n\n\t', 'public', '▁masc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '(', 'string', '▁tit', 'olo', ',', '▁string', '▁bot', 'tone', '_', 'conf', ')', '\n\t', '{', '\n\t\t', 'super', '(', 'tit', 'olo', ');', '\n\t\t', 'set', 'up', 'pan', 'els', '(', 'bot', 'tone', '_', 'conf', ');', '\n\t\t', 'init', '();', '\n\t\t', 'pack', '();', '\n\t', '}', '\n\t\n\t', '//', '▁cre', 'azione', '▁della', '▁finest', 'ra', '\n\t', 'void', '▁setup', 'pan', 'els', '(', 'string', '▁bot', 'tone', '_', 'conf', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n\t\t', '//', '▁cre', 'o', '▁l', ""'"", 'elen', 'co', '▁degli', '▁add', 'e', 'bit', 'i', '▁alla', '▁stanza', '▁e', '▁degli', '▁extra', '\n\t\t', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\t\t', 'ad', 'de', 'bit', 'i', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\t\t', 'extra', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\t\t', 'extra', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n\t\t', '//', '▁cre', 'o', '▁i', '▁text', 'field', '\n\t\t', 'extra', '_', 'add', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', '0);', '\n\t\t', 'tot', 'ale', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n\t\t', 'extra', '_', 'add', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'tot', 'ale', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n\t\t', '//', '▁cre', 'o', '▁i', '▁puls', 'anti', '\n\t\t', 'ad', 'deb', 'ita', '▁=', '▁new', '▁button', '(""', 'ad', 'deb', 'ita', '"");', '\n\t\t', 'dead', 'deb', 'ita', '▁=', '▁new', '▁button', '(""', 'tog', 'li', '▁dall', ""'"", 'ad', 'de', 'bit', 'o', '"");', '\n\t\t', 'aggi', 'ungi', '▁=', '▁new', '▁button', '(""', 'aggi', 'ungi', '▁nuovo', '▁bene', '/', 'serv', 'izio', '"");', '\n\t\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁button', '(', 'bot', 'tone', '_', 'conf', ');', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁le', '▁label', '\n\t\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'inform', 'azioni', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '"");', '\n\t\t', 'et', 'ich', '4.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'ult', 'imo', '▁add', 'e', 'bit', 'o', '▁eff', 'ettu', 'ato', '"");', '\n\t\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'lista', '▁degli', '▁add', 'e', 'bit', 'i', '"");', '\n\t\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(""', 'tot', 'ale', '▁dell', ""'"", 'ad', 'de', 'bit', 'o', '"");', '\n\n\t\t', '//', '▁cre', 'o', '▁il', '▁primo', '▁pann', 'ello', '▁vu', 'oto', '\n\t\t', 'panel', '1', '▁=', '▁new', '▁panel', '();', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁di', '▁inform', 'azione', '▁degli', '▁add', 'e', 'bit', 'i', '\n\t\t', 'panel', '2', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁et', 'ich', '4,', '▁0,', '▁0,', '▁3,', '▁1);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁et', 'ich', '5,', '▁0,', '▁2,', '▁3,', '▁1,', '▁10,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁extra', '_', 'add', ',', '▁0,', '▁3,', '▁1,', '▁1,', '▁0,', '▁20,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁et', 'ich', '6,', '▁0,', '▁5,', '▁3,', '▁1,', '▁10,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁add', 'e', 'bit', 'i', ',', '▁0,', '▁6,', '▁2,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁20,', '▁0,', '▁20', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁et', 'ich', '7,', '▁0,', '▁12,', '▁3,', '▁1,', '▁10,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁tot', 'ale', ',', '▁0,', '▁13,', '▁1,', '▁1,', '▁0,', '▁20,', '▁0,', '▁', '0);', '\n\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁add', 'eb', 'ita', '\n\t\t', 'panel', '3', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '3,', '▁add', 'eb', 'ita', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '3,', '▁dead', 'deb', 'ita', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁vu', 'oto', '▁per', '▁num', '_', 'stan', 'za', '▁o', '▁cop', 'erti', '\n\t\t', 'panel', '4', '▁=', '▁new', '▁panel', '();', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁ag', 'gi', 'ungi', '\n\t\t', 'panel', '5', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '5.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '5,', '▁ag', 'gi', 'ungi', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁ann', 'ulla', '\n\t\t', 'panel', '6', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '6.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '6,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\n\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁confer', 'ma', '\t\n\t\t', 'panel', '7', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '7.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '7,', '▁confer', 'ma', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n\t\t', '//', '▁co', 'str', 'u', 'isco', '▁la', '▁finest', 'ra', '▁defin', 'it', 'iva', '▁att', 'acc', 'ando', '▁i', '▁pann', 'elli', '\n\t\t', 'this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁1,', '▁0,', '▁1,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁0,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '4,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁0,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '5,', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '6,', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁0,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '7,', '▁1,', '▁4,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁0,', '▁5,', '▁', '0);', '\n\t', '}', '\n\n\t', '//', '▁per', '▁la', '▁gest', 'ione', '▁degli', '▁event', 'i', '▁della', '▁finest', 'ra', '\n\t', 'void', '▁init', '()', '\n\t', '{', '\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n', '▁ag', 'gi', 'ungi', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'aggi', 'ungi', '();', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\n', '▁void', '▁start', 'aggi', 'ungi', '()', '\n', '▁{', '\n\t\t', 'nuovo', '▁=', '▁new', '▁ag', 'gi', 'ung', 'ib', 'enes', 'erv', 'izio', '(', 'this', ');', '\n', '▁}', '\n', '}', '\n\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli public class maschera per addebitar extend frame variabili per tener tutto memoria lista beni servizi elenco extra new lista beni servizi lista addeb elenco addeb new lista addeb lista beni servizi elenco extra addebitati new lista beni servizi oggetti per costruzion della finestra label etich etich etich etich panel panel panel panel panel panel panel panel button conferma annulla addebita deaddebita aggiungi text field extra add total list addeb extra grid bag layout gridbag new grid bag layout attributi per gestion della gerarchia dell finestr frame padr new frame aggiungi bene servizio nuovo flag per capir tratta addebito deaddebito boolean addebito variabili per travaso del databas memoria int quantita mod new int quantita aggiung tolt vecchi addeb public maschera per addebitar string titolo string botton conf super titolo setup panel botton conf init pack creazion della finestra void setup panel string botton conf set font configurazion sistema font base creo elenco deg addeb alla stanza deg extra addeb new list fals addeb set font configurazion sistema font allineato extra new list fals extra set font configurazion sistema font allineato creo textfield extra add new text field total new text field extra add set edit fals total set edit fals creo pulsanti addebita new button addebita deaddebita new button tog dall addebito aggiungi new button aggiungi nuovo bene servizio annulla new button annulla conferma new button botton conf creo label etich new label informazioni sug addeb etich set font configurazion sistema font titolo etich new label ultimo addebito effettuato etich new label lista deg addeb etich new label total dell addebito ""); creo primo pannello vuoto panel1 new panel (); creo pannello informazion deg addeb panel2 new panel (); panel2 set layout gridbag util constrain panel2 etich4 util constrain panel2 etich5 util constrain panel2 extra_add util constrain panel2 etich6 util constrain panel2 addeb grid bag constraint grid bag constraint west util constrain panel2 etich7 util constrain panel2 total creo pannello per addebita panel3 new panel (); panel3 set layout gridbag util constrain panel3 addebita grid bag constraint horizont grid bag constraint center util constrain panel3 deaddebita grid bag constraint horizont grid bag constraint center creo pannello vuoto per num_stanza coperti panel4 new panel (); creo pannello per aggiungi panel5 new panel (); panel5 set layout gridbag util constrain panel5 aggiungi grid bag constraint none grid bag constraint center creo pannello per annulla panel6 new panel (); panel6 set layout gridbag util constrain panel6 annulla grid bag constraint none grid bag constraint center creo pannello per conferma panel7 new panel (); panel7 set layout gridbag util constrain panel7 conferma grid bag constraint none grid bag constraint center costruisco finestra definitiva attaccando pannelli set layout gridbag util constrain panel1 grid bag constraint vertic grid bag constraint west util constrain panel2 grid bag constraint vertic grid bag constraint west util constrain panel3 grid bag constraint vertic grid bag constraint center util constrain panel4 grid bag constraint vertic grid bag constraint west util constrain panel5 grid bag constraint vertic grid bag constraint center util constrain panel6 grid bag constraint grid bag constraint center util constrain panel7 grid bag constraint grid bag constraint center per gestion deg eventi della finestra void init annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); aggiungi add action listen new action listen public void action perform action event start aggiungi (); }); void start aggiungi nuovo new aggiungi bene servizio"
22~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/RicercaAddebiti.java~RicercaAddebiti.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class RicercaAddebiti extends Frame 
{  
    
    //Dichiarazioni di variabili
    Panel panel1, panel2, panel3;
    Label  etichetta1, label1, label3;
    List lista;
    Button  Annulla, Cerca;
    TextField stanza;
    GridBagLayout gridbag = new GridBagLayout();
	Frame padre = new Frame();
    Frame figlio;
    ListaAddebiti L;
    Addebito add;
    float totale_add;
    
    public RicercaAddebiti(Frame p)
    {
        super(""Ricerca degli addebiti"");
        padre = p;
        padre.setEnabled(false);
        setupPanels();
        init();
        pack();
        setVisible(true); 
    }
                     
        void setupPanels()
        {  
			this.setFont(ConfigurazioneSistema.font_base);
            //Creo due pulsanti  
            Annulla = new Button("" Fine  "");
            Cerca = new Button("" Cerca "");

            //Creo le etichette
            etichetta1 = new Label (""Inserire la stanza addebitata                         "");
            etichetta1.setFont(ConfigurazioneSistema.font_titolo);
            label1 = new Label(""Numero Stanza   "");
			label3 = new Label(""Risultato della ricerca"");
			label3.setFont(ConfigurazioneSistema.font_titolo);
            
            //Creo i TextField e ne rendo  alcuni non editabili
            stanza = new TextField("""", 4);
			
            //Creo il pannello in alto per inserimento dei dati del cliente
            panel1 = new Panel();
            panel1.setLayout(gridbag);
            Utils.constrain(panel1, etichetta1, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel1, stanza, 1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
           
            //Creo il pannello in basso con due pulsanti                  
            panel2 = new Panel();
            panel2.setLayout(gridbag);
            Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel2, Cerca, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             
            
            //Creo il pannello con la lista dei risultati della ricerca
            lista = new List(10,false);
            lista.setFont(ConfigurazioneSistema.font_allineato);
            panel3 = new Panel();
            panel3.setLayout(gridbag);
            Utils.constrain(panel3, label3, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel3, lista, 0, 1, 4, 3, GridBagConstraints.BOTH,
                        GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);             
            
            
            //Attacco i pannelli al frame
            this.setLayout(gridbag);
            Utils.constrain(this, panel1, 0, 1, 4, 2, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(this, panel2, 0, 14, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
        	Utils.constrain(this, panel3, 0, 15, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
        	panel3.setVisible(false);
        	pack();
        
        }

    public void init()
    {
		lista.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				if (lista.getSelectedIndex() < (lista.getItemCount()-1))
				{
					add = L.getAddebito((lista.getSelectedIndexes())[0]+1);
					startVediAddebito(add);
				}
			}
      	});
 

		
	stanza.addActionListener(new ActionListener()
	{
		public void actionPerformed(ActionEvent e)
		{
			if (noErrors())
				creaLista();
		}			      	
	});
	
    Cerca.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				if (noErrors())
					creaLista();
			}	
      	});
      
  	Annulla.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				dispose();
				padre.setEnabled(true);
			}
      	});    	
    } 

	void startVediAddebito(Addebito add)
	{
		figlio = new VediAddebito(this, add, totale_add); 
	}	
	
	
	public void creaLista()
	{
		Frame msg;
		BeneServizio extra;
		Addebito addebito;
		String desc = new String();
		totale_add = 0;
		
		L = (Principale.db).foundAddebiti(stanza.getText());
		if (L != null)
		{
			if (!L.isEmpty())
			{
				if (lista.getItemCount() > 0)
					lista.removeAll();
				panel3.setVisible(true);
				pack();
				for(int i = 1; i<=L.length(); i++)
				{	
					addebito = L.getAddebito(i);
					extra = (Principale.db).readBeneServizio(addebito.getCodExtra());
					if (extra != null)
						lista.addItem(""DESCRIZIONE:""+Utils.completaStringa(extra.getDescrizione(), 10)+
									  "" QUANTITA':""+Utils.completaStringa((""""+addebito.getQuantita()), 2)+
									  "" TOTALE ADDEBITO:""+
									  (Principale.config).getValuta()+"".""+
									  addebito.getTotAddebito());	
					totale_add += addebito.getTotAddebito();
				}
				lista.addItem(""L'ADDEBITO TOTALE DELLA STANZA ""+stanza.getText()+"" E' DI ""+
								(Principale.config).getValuta()+"".""+totale_add);
			}
			else
				msg = new AvvisoDialog(this, "" Nessun addebitato trovato. "");
		}
		else
			msg = new MessageDialog(this, "" Problemi con il database! "");
	}			

	boolean noErrors()
	{
		Frame msg;
		//Disponibilita disp = new Disponibilita();
		if ((stanza.getText().equals("""")) ) 
		{
			msg = new AvvisoDialog(this,""Inserire il numero della stanza"");
			return false;
		}
		else
			if( (Principale.db).readStanza(stanza.getText()) == null )
			{
				msg = new MessageDialog(this,""La stanza inserita e' inesistente!"");
				return false;
			}
		return true;	
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁ric', 'er', 'ca', 'ad', 'de', 'bit', 'i', '▁ext', 'ends', '▁frame', '▁', '\n', '{', '▁', '\n', '▁', '\n', '▁/', '/', 'd', 'ich', 'i', 'ar', 'az', 'ion', 'i', '▁di', '▁vari', 'ab', 'ili', '\n', '▁pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3', ';', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁label', '1,', '▁label', '3', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁cer', 'ca', ';', '\n', '▁text', 'field', '▁stan', 'za', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁frame', '▁fig', 'l', 'io', ';', '\n', '▁list', 'a', 'ad', 'de', 'bit', 'i', '▁l', ';', '\n', '▁add', 'e', 'bit', 'o', '▁add', ';', '\n', '▁flo', 'at', '▁to', 't', 'ale', '_', 'ad', 'd', ';', '\n', '▁', '\n', '▁public', '▁ric', 'er', 'ca', 'ad', 'de', 'bit', 'i', '(', 'fr', 'ame', '▁p', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'ric', 'er', 'ca', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '"")', ';', '\n', '▁pad', 're', '▁=', '▁p', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁set', 'vis', 'ible', '(', 'tr', 'ue', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁la', '▁stan', 'za', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁stan', 'za', '▁""', ');', '\n\t\t\t', 'l', 'ab', 'el', '3', '▁=', '▁new', '▁label', '(', '""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', '"")', ';', '\n\t\t\t', 'l', 'ab', 'el', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁al', 'c', 'un', 'i', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁stan', 'za', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n\t\t\t\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁per', '▁ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁cer', 'ca', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁con', '▁la', '▁list', 'a', '▁de', 'i', '▁r', 'is', 'ult', 'ati', '▁d', 'ella', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '1', '0,', 'f', 'al', 'se', ');', '\n', '▁list', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁1,', '▁4,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁15,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n\t\t', 'list', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁', '<', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '-1', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ad', 'd', '▁=', '▁l', '.', 'get', 'ad', 'de', 'bit', 'o', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t\t', 'st', 'art', 'ved', 'i', 'ad', 'de', 'bit', 'o', '(', 'ad', 'd', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\n\t\t\n\t', 'stan', 'za', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t', '{', '\n\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'no', 'er', 'r', 'ors', '(', ')', ')', '\n\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t', '}', '\t\t\t', '▁', '\t\n\t', '}', ');', '\n\t\n', '▁cer', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'no', 'er', 'r', 'ors', '(', ')', ')', '\n\t\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'ved', 'i', 'ad', 'de', 'bit', 'o', '(', 'ad', 'de', 'bit', 'o', '▁add', ')', '\n\t', '{', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁v', 'ed', 'i', 'ad', 'de', 'bit', 'o', '(', 'this', ',', '▁add', ',', '▁to', 't', 'ale', '_', 'ad', 'd', ');', '▁', '\n\t', '}', '\t\n\t\n\t\n\t', 'publ', 'ic', '▁vo', 'id', '▁cre', 'al', 'ista', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁extra', ';', '\n\t\t', 'ad', 'de', 'bit', 'o', '▁add', 'e', 'bit', 'o', ';', '\n\t\t', 'str', 'ing', '▁desc', '▁=', '▁new', '▁string', '(', ');', '\n\t\t', 't', 'ot', 'ale', '_', 'ad', 'd', '▁=', '▁0', ';', '\n\t\t\n\t\t', 'l', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'ad', 'de', 'bit', 'i', '(', 'stan', 'za', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', 'l', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'p', 'ack', '(', ');', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁l', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ');', '\n\t\t\t\t\t', 'ext', 'ra', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'ad', 'de', 'bit', 'o', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ');', '\n\t\t\t\t\t', 'if', '▁(', 'ext', 'ra', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', '""', 'des', 'c', 'ri', 'z', 'ion', 'e', ':', '""', '+', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', 'ext', 'ra', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', '),', '▁10', ')', '+', '\n\t\t\t\t\t\t\t\t\t', '▁""', '▁quant', 'ita', ""'"", ':', '""', '+', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', '(', '""', '""', '+', 'ad', 'de', 'bit', 'o', '.', 'get', 'qu', 'ant', 'ita', '(', ')', '),', '▁2', ')', '+', '\n\t\t\t\t\t\t\t\t\t', '▁""', '▁to', 't', 'ale', '▁add', 'e', 'bit', 'o', ':', '""', '+', '\n\t\t\t\t\t\t\t\t\t', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', '\n\t\t\t\t\t\t\t\t\t', '▁add', 'e', 'bit', 'o', '.', 'get', 't', 'ot', 'ad', 'de', 'bit', 'o', '(', ')', ');', '\t\n\t\t\t\t\t', 't', 'ot', 'ale', '_', 'ad', 'd', '▁+', '=', '▁add', 'e', 'bit', 'o', '.', 'get', 't', 'ot', 'ad', 'de', 'bit', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', '""', 'l', ""'"", 'ad', 'de', 'bit', 'o', '▁to', 't', 'ale', '▁d', 'ella', '▁stan', 'za', '▁""', '+', 'stan', 'za', '.', 'get', 'text', '(', ')', '+', '""', '▁e', ""'"", '▁di', '▁""', '+', '\n\t\t\t\t\t\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', 't', 'ot', 'ale', '_', 'ad', 'd', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁n', 'ess', 'un', '▁add', 'e', 'bit', 'ato', '▁tro', 'v', 'ato', '.', '▁""', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t', '}', '\t\t\t\n\n\t', 'bo', 'ole', 'an', '▁no', 'er', 'r', 'ors', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', '//', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', '(', 'stan', 'za', '.', 'get', 'text', '(', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁d', 'ella', '▁stan', 'za', '"")', ';', '\n\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'text', '(', ')', ')', '▁=', '=', '▁n', 'ull', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁e', ""'"", '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t\t', '}', '\n\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ric', 'er', 'ca', 'ad', 'de', 'bit', 'i', '▁extends', '▁frame', '▁', '\n', '{', '▁', '\n', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'az', 'ioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '3', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁cer', 'ca', ';', '\n', '▁text', 'field', '▁stan', 'za', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '\n', '▁frame', '▁fig', 'lio', ';', '\n', '▁list', 'a', 'ad', 'de', 'bit', 'i', '▁l', ';', '\n', '▁add', 'e', 'bit', 'o', '▁add', ';', '\n', '▁float', '▁tot', 'ale', '_', 'add', ';', '\n', '▁', '\n', '▁public', '▁ric', 'er', 'ca', 'ad', 'de', 'bit', 'i', '(', 'frame', '▁p', ')', '\n', '▁{', '\n', '▁super', '(""', 'ric', 'er', 'ca', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '"");', '\n', '▁pad', 're', '▁=', '▁p', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁set', 'vis', 'ible', '(', 'true', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁due', '▁puls', 'anti', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁la', '▁stan', 'za', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stan', 'za', '▁""', ');', '\n\t\t\t', 'l', 'abel', '3', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', '"");', '\n\t\t\t', 'l', 'abel', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n\t\t\t\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁per', '▁ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁cer', 'ca', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '10,', 'false', ');', '\n', '▁list', 'a', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁1,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'false', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'list', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', '()', '▁<', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '-1', '))', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'add', '▁=', '▁l', '.', 'get', 'ad', 'de', 'bit', 'o', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t\t', 'start', 'ved', 'iad', 'de', 'bit', 'o', '(', 'add', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\n\t\t\n\t', 'stan', 'za', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t', '{', '\n\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'no', 'er', 'rors', '())', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t', '}', '\t\t\t', '▁', '\t\n\t', '}', ');', '\n\t\n', '▁cer', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'no', 'er', 'rors', '())', '\n\t\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'ved', 'iad', 'de', 'bit', 'o', '(', 'ad', 'de', 'bit', 'o', '▁add', ')', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁ved', 'iad', 'de', 'bit', 'o', '(', 'this', ',', '▁add', ',', '▁tot', 'ale', '_', 'add', ');', '▁', '\n\t', '}', '\t\n\t\n\t\n\t', 'public', '▁void', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'ben', 'es', 'erv', 'izio', '▁extra', ';', '\n\t\t', 'ad', 'de', 'bit', 'o', '▁add', 'e', 'bit', 'o', ';', '\n\t\t', 'string', '▁desc', '▁=', '▁new', '▁string', '();', '\n\t\t', 'tot', 'ale', '_', 'add', '▁=', '▁0', ';', '\n\t\t\n\t\t', 'l', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'ad', 'de', 'bit', 'i', '(', 'stan', 'za', '.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁l', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ');', '\n\t\t\t\t\t', 'ext', 'ra', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'ben', 'es', 'erv', 'izio', '(', 'ad', 'de', 'bit', 'o', '.', 'get', 'code', 'xt', 'ra', '());', '\n\t\t\t\t\t', 'if', '▁(', 'ext', 'ra', '▁!=', '▁null', ')', '\n\t\t\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(""', 'desc', 'riz', 'ione', ':', '""', '+', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'ext', 'ra', '.', 'get', 'desc', 'riz', 'ione', '(', '),', '▁10)', '+', '\n\t\t\t\t\t\t\t\t\t', '▁""', '▁quant', 'ita', ""':"", '""', '+', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', '(""', '""', '+', 'ad', 'de', 'bit', 'o', '.', 'get', 'qu', 'ant', 'ita', '()', '),', '▁2)', '+', '\n\t\t\t\t\t\t\t\t\t', '▁""', '▁tot', 'ale', '▁add', 'e', 'bit', 'o', ':', '""', '+', '\n\t\t\t\t\t\t\t\t\t', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', '\n\t\t\t\t\t\t\t\t\t', '▁add', 'e', 'bit', 'o', '.', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\t\n\t\t\t\t\t', 'tot', 'ale', '_', 'add', '▁+', '=', '▁add', 'e', 'bit', 'o', '.', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(""', 'l', ""'"", 'ad', 'de', 'bit', 'o', '▁tot', 'ale', '▁della', '▁stan', 'za', '▁""', '+', 'stan', 'za', '.', 'get', 'text', '()', '+', '""', '▁e', ""'"", '▁di', '▁""', '+', '\n\t\t\t\t\t\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', 'tot', 'ale', '_', 'add', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁ness', 'un', '▁add', 'e', 'bit', 'ato', '▁tro', 'v', 'ato', '.', '▁""', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t', '}', '\t\t\t\n\n\t', 'bo', 'olean', '▁no', 'er', 'rors', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', '//', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', '(', 'stan', 'za', '.', 'get', 'text', '().', 'equ', 'als', '(""', '"")', ')', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁della', '▁stan', 'za', '"");', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '(', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'text', '())', '▁==', '▁null', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁e', ""'"", '▁in', 'es', 'ist', 'ente', '!', '"");', '\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ricer', 'ca', 'ad', 'de', 'bit', 'i', '▁extends', '▁frame', '▁', '\n', '{', '▁', '\n', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'azioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3;', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '3;', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁cer', 'ca', ';', '\n', '▁text', 'field', '▁stanza', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '\n', '▁frame', '▁fig', 'lio', ';', '\n', '▁list', 'a', 'ad', 'de', 'bit', 'i', '▁l', ';', '\n', '▁add', 'e', 'bit', 'o', '▁add', ';', '\n', '▁float', '▁tot', 'ale', '_', 'add', ';', '\n', '▁', '\n', '▁public', '▁ricer', 'ca', 'ad', 'de', 'bit', 'i', '(', 'frame', '▁p', ')', '\n', '▁{', '\n', '▁super', '(""', 'ric', 'er', 'ca', '▁degli', '▁add', 'e', 'bit', 'i', '"");', '\n', '▁padre', '▁=', '▁p', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁set', 'visible', '(', 'true', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁due', '▁puls', 'anti', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁la', '▁stanza', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stanza', '▁""', ');', '\n\t\t\t', 'label', '3', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', '"");', '\n\t\t\t', 'label', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁stanza', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n\t\t\t\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁per', '▁ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁stanza', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁cer', 'ca', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ricer', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '10,', 'false', ');', '\n', '▁list', 'a', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁label', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁list', 'a', ',', '▁0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.0,', '▁3.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁1,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'panel', '3.', 'set', 'visible', '(', 'false', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'lista', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'lista', '.', 'get', 'selected', 'index', '()', '▁<', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '-1', '))', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'add', '▁=', '▁l', '.', 'get', 'ad', 'de', 'bit', 'o', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t\t\t', 'start', 'ved', 'iad', 'de', 'bit', 'o', '(', 'add', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\n\t\t\n\t', 'stan', 'za', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t', '{', '\n\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'no', 'errors', '())', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t', '}', '\t\t\t', '▁', '\t\n\t', '}', ');', '\n\t\n', '▁cer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'no', 'errors', '())', '\n\t\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n', '▁}', '▁', '\n\n\t', 'void', '▁start', 'ved', 'iad', 'de', 'bit', 'o', '(', 'ad', 'de', 'bit', 'o', '▁add', ')', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁ved', 'iad', 'de', 'bit', 'o', '(', 'this', ',', '▁add', ',', '▁tot', 'ale', '_', 'add', ');', '▁', '\n\t', '}', '\t\n\t\n\t\n\t', 'public', '▁void', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'ben', 'es', 'erv', 'izio', '▁extra', ';', '\n\t\t', 'ad', 'de', 'bit', 'o', '▁add', 'e', 'bit', 'o', ';', '\n\t\t', 'string', '▁desc', '▁=', '▁new', '▁string', '();', '\n\t\t', 'tot', 'ale', '_', 'add', '▁=', '▁0;', '\n\t\t\n\t\t', 'l', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'ad', 'de', 'bit', 'i', '(', 'stan', 'za', '.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(!', 'l', '.', 'isempty', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'lista', '.', 'remove', 'all', '();', '\n\t\t\t\t', 'panel', '3.', 'set', 'visible', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1;', '▁i', '<', '=', 'l', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁l', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ');', '\n\t\t\t\t\t', 'extra', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'ben', 'es', 'erv', 'izio', '(', 'ad', 'de', 'bit', 'o', '.', 'get', 'code', 'xt', 'ra', '());', '\n\t\t\t\t\t', 'if', '▁(', 'extra', '▁!=', '▁null', ')', '\n\t\t\t\t\t\t', 'lista', '.', 'add', 'item', '(""', 'desc', 'riz', 'ione', ':""', '+', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'extra', '.', 'get', 'desc', 'riz', 'ione', '(),', '▁10)', '+', '\n\t\t\t\t\t\t\t\t\t', '▁""', '▁quant', 'ita', ""':"", '""', '+', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', '(""', '""', '+', 'ad', 'de', 'bit', 'o', '.', 'get', 'quant', 'ita', '()),', '▁2)', '+', '\n\t\t\t\t\t\t\t\t\t', '▁""', '▁tot', 'ale', '▁add', 'e', 'bit', 'o', ':""', '+', '\n\t\t\t\t\t\t\t\t\t', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', '\n\t\t\t\t\t\t\t\t\t', '▁add', 'e', 'bit', 'o', '.', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\t\n\t\t\t\t\t', 'tot', 'ale', '_', 'add', '▁+=', '▁add', 'e', 'bit', 'o', '.', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'lista', '.', 'add', 'item', '(""', 'l', ""'"", 'ad', 'de', 'bit', 'o', '▁tot', 'ale', '▁della', '▁stanza', '▁""+', 'stan', 'za', '.', 'get', 'text', '()', '+""', '▁e', ""'"", '▁di', '▁""+', '\n\t\t\t\t\t\t\t\t', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', 'tot', 'ale', '_', 'add', ');', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁ness', 'un', '▁add', 'e', 'bit', 'ato', '▁trov', 'ato', '.', '▁""', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t', '}', '\t\t\t\n\n\t', 'boolean', '▁no', 'errors', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', '//', 'dis', 'pon', 'ibil', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁((', 'stan', 'za', '.', 'get', 'text', '().', 'equals', '(""', '""))', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁numero', '▁della', '▁stanza', '"");', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'if', '(', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'text', '())', '▁==', '▁null', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stanza', '▁ins', 'er', 'ita', '▁e', ""'"", '▁ines', 'ist', 'ente', '!', '"");', '\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class ricerca addeb extend frame dichiarazioni variabili panel panel panel panel label etichetta label label list lista button annulla cerca text field stanza grid bag layout gridbag new grid bag layout frame padr new frame frame figlio lista addeb addebito add float total add public ricerca addeb frame super ricerca deg addeb padr padr set enabl fals setup panel init pack set visibl true void setup panel set font configurazion sistema font base creo due pulsanti annulla new button fine cerca new button cerca creo etichett etichetta new label inserir stanza addebitata etichetta set font configurazion sistema font titolo label new label numero stanza label new label risultato della ricerca label set font configurazion sistema font titolo creo text field rendo alcuni non editabili stanza new text field creo pannello alto per inserimento dei dati del client panel new panel panel set layout gridbag util constrain panel etichetta grid bag constraint none grid bag constraint northwest util constrain panel label grid bag constraint none grid bag constraint northwest util constrain panel stanza grid bag constraint none grid bag constraint northwest creo pannello basso con due pulsanti panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint center util constrain panel2 cerca grid bag constraint none grid bag constraint center creo pannello con lista dei risultati della ricerca lista new list fals lista set font configurazion sistema font_allineato panel3 new panel (); panel3 set layout gridbag util constrain panel3 label3 grid bag constraint none grid bag constraint west util constrain panel3 lista grid bag constraint grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint west util constrain panel3 grid bag constraint horizont grid bag constraint west panel3 set visibl fals pack (); public void init lista add action listen new action listen public void action perform action event lista get select index lista get item count ()- add get addebito lista get select index ())[ start vedi addebito add }); stanza add action listen new action listen public void action perform action event error ()) crea lista (); }); cerca add action listen new action listen public void action perform action event error ()) crea lista (); }); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); void start vedi addebito addebito add figlio new vedi addebito add totale_add public void crea lista frame msg bene servizio extra addebito addebito string desc new string (); totale_add principal found addeb stanza get text ()); null empti ()) lista get item count lista remov (); panel3 set visibl true pack (); int length (); ++) addebito get addebito extra principal read bene servizio addebito get cod extra ()); extra null lista add item descrizion :""+ util completa stringa extra get descrizion (), quantita :""+ util completa stringa ((""""+ addebito get quantita ()), total addebito :""+ principal config get valuta ()+"".""+ addebito get tot addebito ()); totale_add addebito get tot addebito (); lista add item addebito total della stanza stanza get text ()+"" principal config get valuta ()+"".""+ totale_add els msg new avviso dialog nessun addebitato trovato ""); els msg new messag dialog problemi con databas ""); boolean error frame msg disponibilita disp new disponibilita (); stanza get text (). equal ("""")) msg new avviso dialog inserir numero della stanza ""); return fals els principal read stanza stanza get text ()) null msg new messag dialog stanza inserita inesistent !""); return fals return true"
23~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/VediSoggiornante.java~VediSoggiornante.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import moduli.*;
import common.utility.*;
import common.def.*;
import java.util.Date;

public class VediSoggiornante extends MascheraSoggiorno
{
	Frame padre;   
   	public VediSoggiornante(Frame p, Soggiornante sogg)
   	{
      	super(""Visualizzazione dei dati del soggiornante"","" Fine "", sogg.getPensionamento(), sogg.getStatus() );
      	padre=p;
      	padre.setEnabled(false);
      	inizializza(sogg);
      	pack();
      	this.setVisible(true);
   	}

   public void inizializza(Soggiornante sogg)
   {
      panel3.remove(Annulla);
      disableFields();
      writeDatiSogg(sogg);
      
      
      Conferma.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            padre.setEnabled(true);
         }
      });
	}
	
	void disableFields()
	{
		testo1.setEditable(false);
		testo2.setEditable(false);
		testo3.setEditable(false);
		testo4.setEditable(false);
		testo5.setEditable(false);
		testo6.setEditable(false);
		testo7.setEditable(false);
		testo8.setEditable(false);
		testo9.setEditable(false);
		testo10.setEditable(false);
		testo11.setEditable(false);
		testo12.setEditable(false);
		testo13.setEditable(false);
		testo14.setEditable(false);
		for (int i=0; i<checkboxes.length; i++)
			checkboxes[i].setEnabled(false);
		for (int i=0; i<checkboxes1.length; i++)
			checkboxes1[i].setEnabled(false);
	}

}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n\n', 'publ', 'ic', '▁class', '▁v', 'ed', 'is', 'og', 'gi', 'orn', 'ante', '▁ext', 'ends', '▁m', 'asc', 'her', 'as', 'og', 'gi', 'orn', 'o', '\n', '{', '\n\t', 'fr', 'ame', '▁pad', 're', ';', '▁', '\n', '▁', '\t', 'publ', 'ic', '▁v', 'ed', 'is', 'og', 'gi', 'orn', 'ante', '(', 'fr', 'ame', '▁p', ',', '▁s', 'og', 'gi', 'orn', 'ante', '▁s', 'og', 'g', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁de', 'i', '▁d', 'ati', '▁del', '▁s', 'og', 'gi', 'orn', 'ante', '"",', '""', '▁fine', '▁""', ',', '▁s', 'og', 'g', '.', 'get', 'p', 'ension', 'ament', 'o', '(', '),', '▁s', 'og', 'g', '.', 'get', 'st', 'atus', '(', ')', '▁', ');', '\n', '▁', '\t', 'p', 'ad', 're', '=', 'p', ';', '\n', '▁', '\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '(', 'so', 'g', 'g', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', 'this', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n\n', '▁public', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', ')', '\n', '▁{', '\n', '▁pan', 'el', '3.', 'rem', 'ove', '(', 'ann', 'ull', 'a', ');', '\n', '▁dis', 'able', 'field', 's', '(', ');', '\n', '▁writ', 'ed', 'at', 'is', 'og', 'g', '(', 'so', 'g', 'g', ');', '\n', '▁', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁dis', 'able', 'field', 's', '(', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '5.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '6.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '7.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '8.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '9.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '0.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'che', 'ck', 'box', 'es', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t', 'che', 'ck', 'box', 'es', '[', 'i', ']', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'che', 'ck', 'box', 'es', '1.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t', 'che', 'ck', 'box', 'es', '1', '[', 'i', ']', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t', '}', '\n\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n\n', 'public', '▁class', '▁ved', 'is', 'og', 'gi', 'orn', 'ante', '▁extends', '▁masc', 'her', 'as', 'og', 'gi', 'orno', '\n', '{', '\n\t', 'frame', '▁pad', 're', ';', '▁', '\n', '▁', '\t', 'public', '▁ved', 'is', 'og', 'gi', 'orn', 'ante', '(', 'frame', '▁p', ',', '▁s', 'og', 'gi', 'orn', 'ante', '▁s', 'ogg', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'vis', 'ual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁del', '▁s', 'og', 'gi', 'orn', 'ante', '"",', '""', '▁fine', '▁""', ',', '▁s', 'ogg', '.', 'get', 'p', 'ension', 'amento', '(', '),', '▁s', 'ogg', '.', 'get', 'st', 'atus', '()', '▁', ');', '\n', '▁', '\t', 'pad', 're', '=', 'p', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '(', 'so', 'gg', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'this', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁', '\t', '}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '(', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', ')', '\n', '▁{', '\n', '▁panel', '3.', 'rem', 'ove', '(', 'ann', 'ulla', ');', '\n', '▁dis', 'able', 'fields', '();', '\n', '▁writ', 'ed', 'at', 'is', 'ogg', '(', 'so', 'gg', ');', '\n', '▁', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁dis', 'able', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '5.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '6.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '7.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '8.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '9.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '10.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '11.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '12.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '1', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '1', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'check', 'box', 'es', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t', 'check', 'box', 'es', '[', 'i', '].', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'check', 'box', 'es', '1.', 'length', ';', '▁i', '++', ')', '\n\t\t\t', 'check', 'box', 'es', '1', '[', 'i', '].', 'set', 'en', 'abled', '(', 'false', ');', '\n\t', '}', '\n\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n\n', 'public', '▁class', '▁ved', 'is', 'oggi', 'orn', 'ante', '▁extends', '▁masc', 'her', 'as', 'oggi', 'orno', '\n', '{', '\n\t', 'frame', '▁padre', ';', '▁', '\n', '▁', '\t', 'public', '▁ved', 'is', 'oggi', 'orn', 'ante', '(', 'frame', '▁p', ',', '▁sog', 'gi', 'orn', 'ante', '▁s', 'ogg', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'visual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁del', '▁sog', 'gi', 'orn', 'ante', '"",""', '▁fine', '▁"",', '▁s', 'ogg', '.', 'get', 'pension', 'amento', '(),', '▁s', 'ogg', '.', 'get', 'status', '()', '▁);', '\n', '▁', '\t', 'pad', 're', '=', 'p', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'in', 'iz', 'ial', 'izza', '(', 'so', 'gg', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'this', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁', '\t', '}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'izza', '(', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', ')', '\n', '▁{', '\n', '▁panel', '3.', 'remove', '(', 'ann', 'ulla', ');', '\n', '▁disable', 'fields', '();', '\n', '▁writ', 'ed', 'atis', 'ogg', '(', 'so', 'gg', ');', '\n', '▁', '\n', '▁', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁disable', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '5.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '6.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '7.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '8.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '9.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '10.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '11.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '12.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '13.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '14.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'check', 'boxes', '.', 'length', ';', '▁i', '++)', '\n\t\t\t', 'check', 'boxes', '[', 'i', '].', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'check', 'boxes', '1.', 'length', ';', '▁i', '++)', '\n\t\t\t', 'check', 'boxes', '1', '[', 'i', '].', 'set', 'enabled', '(', 'false', ');', '\n\t', '}', '\n\n', '}', '\n']"~packag interfacc import java awt import java awt event import moduli import common util import common def import java util date public class vedi soggiornant extend maschera soggiorno frame padr public vedi soggiornant frame soggiornant sogg super visualizzazion dei dati del soggiornant fine sogg get pensionamento sogg get status padr padr set enabl fals inizializza sogg pack set visibl true public void inizializza soggiornant sogg panel remov annulla disabl field write dati sogg sogg conferma add action listen new action listen public void action perform action event dispos padr set enabl true void disabl field testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals testo set edit fals int checkbox length checkbox set enabl fals int checkbox length checkbox set enabl fals
24~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/DescrittoreStanze.java~DescrittoreStanze.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class DescrittoreStanze extends Frame
{
	//Dichiaro gli oggetti che utilizzero' per costruire la finestra
	Label etichetta, label1, label2, label3, label4;
	TextField testo1, testo2, testo3, testo4;
	Button Annulla, Azione, Cerca;
	Panel panel1, panel2;
	GridBagLayout gridbag = new GridBagLayout();
	Checkbox mycheckboxes;
	SubStanze stanze = new SubStanze();		
    int caller;  
	public DescrittoreStanze(String title, String caption, int c)
	{
		super(title);
		caller = c;
		setupPanels(caption);
		inizializza();
		pack();
	}

	void setupPanels(String caption)
	{
		this.setFont(ConfigurazioneSistema.font_base);
		//Creo  le etichette
		etichetta=new Label(""Informazioni sulle stanze"");
		etichetta.setFont(ConfigurazioneSistema.font_titolo);
		label1 = new Label(""Numero di stanza"");
		label2 = new Label(""Numero di posti letto"");
		label3 = new Label(""Prezzo base della stanza ""+(Principale.config).getValuta()+""."");
		label4 = new Label(""Descrizione delle caratteristiche peculiari della stanza"");
    
		//Creo i TextField
		testo1 = new TextField("""", 4);
		testo2 = new TextField("""", 4);
		testo3 = new TextField("""", 10);
		testo4 = new TextField("""", 50);
   
		//Creo i bottoni
		Annulla = new Button("" Fine "");
		Azione = new Button(caption);
		Cerca = new Button("" Cerca "");
		mycheckboxes = new Checkbox("" Letto aggiuntivo"", null, false);

		//Creo il pannello in alto contenente i dati del cliente
		panel1 = new Panel();
		panel1.setLayout(gridbag);
		Utils.constrain(panel1, etichetta, 0, 0, 2, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
		Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
		Utils.constrain(panel1, testo1, 1, 1, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
		Utils.constrain(panel1, label2, 2, 1, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 25);
		Utils.constrain(panel1, testo2, 3, 1, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
		Utils.constrain(panel1, label3, 0, 2, 1 ,1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
		Utils.constrain(panel1, testo3, 1, 2, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
		Utils.constrain(panel1, mycheckboxes, 2, 2, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
		Utils.constrain(panel1, label4, 0, 3, 2, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
		Utils.constrain(panel1, testo4, 2, 3, 3, 1, GridBagConstraints.NONE,
					GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);

		//Creo il pannello in basso con due pulsanti
		panel2 = new Panel();
		panel2.setLayout(gridbag);
		Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.CENTER, 0, 0.0, 5, 5, 5, 5);
		Utils.constrain(panel2, Azione, 1, 0, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.CENTER, 0, 0.0, 5, 5, 5, 5);
		if ((caller == 2) || (caller==3))
		Utils.constrain(panel2, Cerca, 2, 0, 1, 1, GridBagConstraints.NONE,
					GridBagConstraints.CENTER, 0, 0.0, 5, 5, 5, 5);			

		
		//Attacco i pannelli al frame
		this.setLayout(gridbag);
		Utils.constrain(this, panel1, 0, 0, 4, 4, GridBagConstraints.HORIZONTAL,
					GridBagConstraints.NORTH, 1.0, 1.0, 5, 5, 5, 5);
		Utils.constrain(this,panel2, 0, 4, 4, 1, GridBagConstraints.HORIZONTAL,
					GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);
	}

	public void inizializza()
	{
		Annulla.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				stanze.setEnabled(true);
			}
		});
	}
	
	protected Stanza readDatiStanza()
	{
		Stanza room = new Stanza();
		room.setNumStanza(testo1.getText());
		room.setPostiLetto(Integer.parseInt(testo2.getText()));
		Float f = Float.valueOf(testo3.getText());
		room.setPxBase(f.floatValue());
		room.setDescrizione(testo4.getText());
		if 	(mycheckboxes.getState())
			room.setDispLettoAgg(Const.SI);
		return room;	 
	}

	protected void writeDatiStanza(Stanza room)
	{
		testo1.setText(room.getNumStanza());
		testo2.setText(""""+room.getPostiLetto());
		testo3.setText(""""+room.getPxBase());
		testo4.setText(room.getDescrizione());    	
		if ( room.getDispLettoAgg() == Const.SI)
			mycheckboxes.setState(true);
		else
			mycheckboxes.setState(false);	
	}
    
	protected void cleanFields()
	{
		testo1.setText("""");
		testo2.setText("""");
		testo3.setText("""");
		testo4.setText("""");
		mycheckboxes.setState(false);	
	}
	
	protected boolean errori()
	{
		Frame msg;
		
		if ( !((testo1.getText()).length() <= 4) )
		{
			msg = new MessageDialog(this, "" Il numero della stanza deve essere composto da al piu' 4 caratteri! "");
			return true;	
		}
		if ( ((testo1.getText()).equals("""")) )
		{
			msg = new MessageDialog(this, "" Manca il numero della stanza! "");
			return true;	
		}
		if ( ((testo2.getText()).equals("""")) )
		{
			msg = new MessageDialog(this, "" Manca il numero di posti letto! "");
			return true;	
		}
		if ( !Utils.isIntPos(testo2.getText()) )
		{
			msg = new MessageDialog(this, "" Il numero di posti deve essere un numero positivo! "");
			return true;	
		}
		if ( ((testo3.getText()).equals("""")) )
		{
			msg = new MessageDialog(this, "" Manca il prezzo della stanza! "");
			return true;	
		}
		if ( !Utils.isFloatPos(testo3.getText()) )
		{
			msg = new MessageDialog(this, "" Il prezzo della stanza deve essere un numero positivo! "");
			return true;	
		}
		if ( !((testo4.getText()).length() <= 52) )
		{
			msg = new MessageDialog(this, "" La descrizione deve essere composta da al piu' 52 caratteri! "");
			return true;	
		}
		return false;
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁desc', 'rit', 'tor', 'est', 'an', 'ze', '▁ext', 'ends', '▁frame', '\n', '{', '\n\t', '//', 'd', 'ich', 'i', 'aro', '▁gl', 'i', '▁og', 'get', 'ti', '▁che', '▁util', 'iz', 'z', 'ero', ""'"", '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁fin', 'est', 'ra', '\n\t', 'l', 'ab', 'el', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4', ';', '\n\t', 'text', 'field', '▁test', 'o', '1,', '▁test', 'o', '2,', '▁test', 'o', '3,', '▁test', 'o', '4', ';', '\n\t', 'but', 'ton', '▁ann', 'ull', 'a', ',', '▁az', 'ion', 'e', ',', '▁cer', 'ca', ';', '\n\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2', ';', '\n\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'che', 'ck', 'box', '▁my', 'che', 'ck', 'box', 'es', ';', '\n\t', 'sub', 'stan', 'ze', '▁stan', 'ze', '▁=', '▁new', '▁subst', 'an', 'ze', '(', ');', '\t\t\n', '▁int', '▁call', 'er', ';', '▁', '\n\t', 'publ', 'ic', '▁desc', 'rit', 'tor', 'est', 'an', 'ze', '(', 'str', 'ing', '▁title', ',', '▁string', '▁capt', 'ion', ',', '▁int', '▁c', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', 't', 'it', 'le', ');', '\n\t\t', 'c', 'all', 'er', '▁=', '▁c', ';', '\n\t\t', 'set', 'up', 'pan', 'els', '(', 'c', 'apt', 'ion', ');', '\n\t\t', 'in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n\t\t', 'p', 'ack', '(', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁set', 'up', 'pan', 'els', '(', 'str', 'ing', '▁capt', 'ion', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n\t\t', '//', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n\t\t', 'etic', 'he', 'tt', 'a', '=', 'new', '▁label', '(', '""', 'in', 'form', 'az', 'ion', 'i', '▁s', 'ul', 'le', '▁stan', 'ze', '"")', ';', '\n\t\t', 'etic', 'he', 'tt', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'l', 'ab', 'el', '1', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁di', '▁stan', 'za', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '2', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁di', '▁post', 'i', '▁let', 'to', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '3', '▁=', '▁new', '▁label', '(', '""', 'pre', 'z', 'zo', '▁base', '▁d', 'ella', '▁stan', 'za', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '4', '▁=', '▁new', '▁label', '(', '""', 'des', 'c', 'ri', 'z', 'ion', 'e', '▁del', 'le', '▁car', 'at', 'ter', 'istic', 'he', '▁p', 'ec', 'ul', 'i', 'ari', '▁d', 'ella', '▁stan', 'za', '"")', ';', '\n', '▁', '\n\t\t', '//', 'c', 're', 'o', '▁i', '▁text', 'field', '\n\t\t', 't', 'est', 'o', '1', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n\t\t', 't', 'est', 'o', '2', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n\t\t', 't', 'est', 'o', '3', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁10', ');', '\n\t\t', 't', 'est', 'o', '4', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁5', '0)', ';', '\n', '▁', '\n\t\t', '//', 'c', 're', 'o', '▁i', '▁bot', 'ton', 'i', '\n\t\t', 'ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n\t\t', 'az', 'ion', 'e', '▁=', '▁new', '▁but', 'ton', '(', 'c', 'apt', 'ion', ');', '\n\t\t', 'cer', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁cer', 'ca', '▁""', ');', '\n\t\t', 'my', 'che', 'ck', 'box', 'es', '▁=', '▁new', '▁check', 'box', '(', '""', '▁let', 'to', '▁ag', 'gi', 'unt', 'iv', 'o', '"",', '▁n', 'ull', ',', '▁fal', 'se', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁cont', 'en', 'ent', 'e', '▁i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '\n\t\t', 'pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1,', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁2', '5)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '2,', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '3,', '▁', '0,', '▁2,', '▁1', '▁,', '1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '3,', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁my', 'che', 'ck', 'box', 'es', ',', '▁2,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '4,', '▁', '0,', '▁3,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '4,', '▁2,', '▁3,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '\n\t\t', 'pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁az', 'ion', 'e', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'if', '▁(', '(', 'c', 'all', 'er', '▁=', '=', '▁2', ')', '▁||', '▁(', 'c', 'all', 'er', '=', '=', '3)', ')', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁cer', 'ca', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\t\t\t\n\n\t\t\n\t\t', '//', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '2,', '▁', '0,', '▁4,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'stan', 'ze', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '\n\t\n\t', 'pro', 't', 'ected', '▁stan', 'za', '▁read', 'd', 'at', 'istan', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'stan', 'za', '▁room', '▁=', '▁new', '▁stan', 'za', '(', ');', '\n\t\t', 'room', '.', 'set', 'n', 'um', 'stan', 'za', '(', 't', 'est', 'o', '1.', 'get', 'text', '(', ')', ');', '\n\t\t', 'room', '.', 'set', 'p', 'ost', 'il', 'et', 'to', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 't', 'est', 'o', '2.', 'get', 'text', '(', ')', ')', ');', '\n\t\t', 'fl', 'o', 'at', '▁f', '▁=', '▁flo', 'at', '.', 'value', 'of', '(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ');', '\n\t\t', 'room', '.', 'set', 'p', 'x', 'base', '(', 'f', '.', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n\t\t', 'room', '.', 'set', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', 't', 'est', 'o', '4.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁', '\t', '(', 'my', 'che', 'ck', 'box', 'es', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', 'room', '.', 'set', 'dis', 'p', 'let', 'to', 'ag', 'g', '(', 'con', 'st', '.', 'si', ');', '\n\t\t', 'ret', 'urn', '▁room', ';', '\t', '▁', '\n\t', '}', '\n\n\t', 'pro', 't', 'ected', '▁vo', 'id', '▁writ', 'ed', 'at', 'istan', 'za', '(', 'stan', 'za', '▁room', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '2.', 's', 'ette', 'xt', '(', '""', '""', '+', 'room', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '3.', 's', 'ette', 'xt', '(', '""', '""', '+', 'room', '.', 'get', 'p', 'x', 'base', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '4.', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', ');', '▁', '\t\n\t\t', 'if', '▁(', '▁room', '.', 'get', 'dis', 'p', 'let', 'to', 'ag', 'g', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n\t\t\t', 'my', 'che', 'ck', 'box', 'es', '.', 'set', 'state', '(', 'tr', 'ue', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'my', 'che', 'ck', 'box', 'es', '.', 'set', 'state', '(', 'f', 'al', 'se', ');', '\t\n\t', '}', '\n', '▁', '\n\t', 'pro', 't', 'ected', '▁vo', 'id', '▁clean', 'field', 's', '(', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '2.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '3.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '4.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 'my', 'che', 'ck', 'box', 'es', '.', 'set', 'state', '(', 'f', 'al', 'se', ');', '\t\n\t', '}', '\n\t\n\t', 'pro', 't', 'ected', '▁bo', 'ole', 'an', '▁er', 'ror', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '1.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁4', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁d', 'ella', '▁stan', 'za', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁4', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', '(', 't', 'est', 'o', '1.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁d', 'ella', '▁stan', 'za', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', '(', 't', 'est', 'o', '2.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁di', '▁post', 'i', '▁let', 'to', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 't', 'est', 'o', '2.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁post', 'i', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'iv', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', '(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁pre', 'z', 'zo', '▁d', 'ella', '▁stan', 'za', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁pre', 'z', 'zo', '▁d', 'ella', '▁stan', 'za', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'iv', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '4.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁5', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁desc', 'ri', 'z', 'ion', 'e', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'a', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁5', '2', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁desc', 'rit', 'tor', 'estan', 'ze', '▁extends', '▁frame', '\n', '{', '\n\t', '//', 'd', 'ichi', 'aro', '▁gl', 'i', '▁og', 'get', 'ti', '▁che', '▁util', 'izz', 'ero', ""'"", '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁finest', 'ra', '\n\t', 'l', 'abel', '▁et', 'iche', 'tta', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4', ';', '\n\t', 'text', 'field', '▁test', 'o', '1,', '▁test', 'o', '2,', '▁test', 'o', '3,', '▁test', 'o', '4', ';', '\n\t', 'but', 'ton', '▁ann', 'ulla', ',', '▁az', 'ione', ',', '▁cer', 'ca', ';', '\n\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2', ';', '\n\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'check', 'box', '▁my', 'check', 'box', 'es', ';', '\n\t', 'sub', 'stan', 'ze', '▁stan', 'ze', '▁=', '▁new', '▁subst', 'an', 'ze', '();', '\t\t\n', '▁int', '▁call', 'er', ';', '▁', '\n\t', 'public', '▁desc', 'rit', 'tor', 'estan', 'ze', '(', 'string', '▁title', ',', '▁string', '▁capt', 'ion', ',', '▁int', '▁c', ')', '\n\t', '{', '\n\t\t', 'super', '(', 'title', ');', '\n\t\t', 'call', 'er', '▁=', '▁c', ';', '\n\t\t', 'set', 'up', 'pan', 'els', '(', 'capt', 'ion', ');', '\n\t\t', 'in', 'iz', 'ial', 'iz', 'za', '();', '\n\t\t', 'pack', '();', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁setup', 'pan', 'els', '(', 'string', '▁capt', 'ion', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n\t\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n\t\t', 'etic', 'he', 'tta', '=', 'new', '▁label', '(""', 'inform', 'az', 'ioni', '▁sul', 'le', '▁stan', 'ze', '"");', '\n\t\t', 'etic', 'he', 'tta', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'l', 'abel', '1', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁stan', 'za', '"");', '\n\t\t', 'l', 'abel', '2', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁post', 'i', '▁let', 'to', '"");', '\n\t\t', 'l', 'abel', '3', '▁=', '▁new', '▁label', '(""', 'pre', 'z', 'zo', '▁base', '▁della', '▁stan', 'za', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n\t\t', 'l', 'abel', '4', '▁=', '▁new', '▁label', '(""', 'desc', 'riz', 'ione', '▁delle', '▁car', 'atter', 'istic', 'he', '▁peculi', 'ari', '▁della', '▁stan', 'za', '"");', '\n', '▁', '\n\t\t', '//', 'cre', 'o', '▁i', '▁text', 'field', '\n\t\t', 'test', 'o', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n\t\t', 'test', 'o', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n\t\t', 'test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10', ');', '\n\t\t', 'test', 'o', '4', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁5', '0)', ';', '\n', '▁', '\n\t\t', '//', 'cre', 'o', '▁i', '▁bot', 'ton', 'i', '\n\t\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n\t\t', 'azione', '▁=', '▁new', '▁button', '(', 'capt', 'ion', ');', '\n\t\t', 'cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n\t\t', 'my', 'check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '(""', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', '"",', '▁null', ',', '▁false', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁cont', 'en', 'ente', '▁i', '▁d', 'ati', '▁del', '▁client', 'e', '\n\t\t', 'pan', 'el', '1', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', ',', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁2', '5)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '2,', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '3,', '▁', '0,', '▁2,', '▁1', '▁,', '1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '3,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁my', 'check', 'box', 'es', ',', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '4,', '▁', '0,', '▁3,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '4,', '▁2,', '▁3,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '\n\t\t', 'pan', 'el', '2', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁az', 'ione', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'if', '▁(', '(', 'call', 'er', '▁==', '▁2)', '▁||', '▁(', 'call', 'er', '=', '=', '3)', ')', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁cer', 'ca', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\t\t\t\n\n\t\t\n\t\t', '//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'north', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '2,', '▁', '0,', '▁4,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n\t', '{', '\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'stan', 'ze', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '\n\t\n\t', 'protected', '▁stan', 'za', '▁read', 'dat', 'istan', 'za', '()', '\n\t', '{', '\n\t\t', 'stan', 'za', '▁room', '▁=', '▁new', '▁stan', 'za', '();', '\n\t\t', 'room', '.', 'set', 'num', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '());', '\n\t\t', 'room', '.', 'set', 'post', 'il', 'etto', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'test', 'o', '2.', 'get', 'text', '())', ');', '\n\t\t', 'flo', 'at', '▁f', '▁=', '▁float', '.', 'value', 'of', '(', 'test', 'o', '3.', 'get', 'text', '());', '\n\t\t', 'room', '.', 'set', 'px', 'base', '(', 'f', '.', 'flo', 'at', 'value', '());', '\n\t\t', 'room', '.', 'set', 'desc', 'riz', 'ione', '(', 'test', 'o', '4.', 'get', 'text', '());', '\n\t\t', 'if', '▁', '\t', '(', 'my', 'check', 'box', 'es', '.', 'get', 'state', '())', '\n\t\t\t', 'room', '.', 'set', 'dis', 'p', 'let', 'to', 'agg', '(', 'const', '.', 'si', ');', '\n\t\t', 'return', '▁room', ';', '\t', '▁', '\n\t', '}', '\n\n\t', 'protected', '▁void', '▁writ', 'ed', 'at', 'istan', 'za', '(', 'stan', 'za', '▁room', ')', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '(""', '""', '+', 'room', '.', 'get', 'post', 'il', 'etto', '());', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(""', '""', '+', 'room', '.', 'get', 'px', 'base', '());', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'desc', 'riz', 'ione', '());', '▁', '\t\n\t\t', 'if', '▁(', '▁room', '.', 'get', 'dis', 'p', 'let', 'to', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t', 'my', 'check', 'box', 'es', '.', 'set', 'state', '(', 'true', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'my', 'check', 'box', 'es', '.', 'set', 'state', '(', 'false', ');', '\t\n\t', '}', '\n', '▁', '\n\t', 'protected', '▁void', '▁clean', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'my', 'check', 'box', 'es', '.', 'set', 'state', '(', 'false', ');', '\t\n\t', '}', '\n\t\n\t', 'protected', '▁bo', 'olean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '1.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁4)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁della', '▁stan', 'za', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁4', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', '(', 'test', 'o', '1.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁della', '▁stan', 'za', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', '(', 'test', 'o', '2.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁di', '▁post', 'i', '▁let', 'to', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'test', 'o', '2.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁post', 'i', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', '(', 'test', 'o', '3.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁pre', 'z', 'zo', '▁della', '▁stan', 'za', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'test', 'o', '3.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁pre', 'z', 'zo', '▁della', '▁stan', 'za', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '4.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁5', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁desc', 'riz', 'ione', '▁de', 've', '▁ess', 'ere', '▁comp', 'osta', '▁da', '▁al', '▁pi', 'u', ""'"", '▁52', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁desc', 'rit', 'tor', 'estan', 'ze', '▁extends', '▁frame', '\n', '{', '\n\t', '//', 'd', 'ichi', 'aro', '▁gli', '▁og', 'get', 'ti', '▁che', '▁util', 'izz', 'ero', ""'"", '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁finest', 'ra', '\n\t', 'label', '▁et', 'iche', 'tta', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4;', '\n\t', 'text', 'field', '▁testo', '1,', '▁testo', '2,', '▁testo', '3,', '▁testo', '4;', '\n\t', 'button', '▁ann', 'ulla', ',', '▁az', 'ione', ',', '▁cer', 'ca', ';', '\n\t', 'panel', '▁panel', '1,', '▁panel', '2;', '\n\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'check', 'box', '▁my', 'check', 'boxes', ';', '\n\t', 'sub', 'stan', 'ze', '▁stan', 'ze', '▁=', '▁new', '▁subst', 'anze', '();', '\t\t\n', '▁int', '▁caller', ';', '▁', '\n\t', 'public', '▁desc', 'rit', 'tor', 'estan', 'ze', '(', 'string', '▁title', ',', '▁string', '▁caption', ',', '▁int', '▁c', ')', '\n\t', '{', '\n\t\t', 'super', '(', 'title', ');', '\n\t\t', 'call', 'er', '▁=', '▁c', ';', '\n\t\t', 'set', 'up', 'pan', 'els', '(', 'caption', ');', '\n\t\t', 'in', 'iz', 'ial', 'izza', '();', '\n\t\t', 'pack', '();', '\n\t', '}', '\n\n\t', 'void', '▁setup', 'pan', 'els', '(', 'string', '▁caption', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n\t\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n\t\t', 'etic', 'he', 'tta', '=', 'new', '▁label', '(""', 'inform', 'azioni', '▁sulle', '▁stan', 'ze', '"");', '\n\t\t', 'etic', 'he', 'tta', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'label', '1', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁stanza', '"");', '\n\t\t', 'label', '2', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁post', 'i', '▁let', 'to', '"");', '\n\t\t', 'label', '3', '▁=', '▁new', '▁label', '(""', 'pre', 'zzo', '▁base', '▁della', '▁stanza', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n\t\t', 'label', '4', '▁=', '▁new', '▁label', '(""', 'desc', 'riz', 'ione', '▁delle', '▁car', 'atter', 'istic', 'he', '▁peculi', 'ari', '▁della', '▁stanza', '"");', '\n', '▁', '\n\t\t', '//', 'cre', 'o', '▁i', '▁text', 'field', '\n\t\t', 'test', 'o', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n\t\t', 'test', 'o', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n\t\t', 'test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10);', '\n\t\t', 'test', 'o', '4', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁5', '0);', '\n', '▁', '\n\t\t', '//', 'cre', 'o', '▁i', '▁bot', 'toni', '\n\t\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n\t\t', 'azione', '▁=', '▁new', '▁button', '(', 'caption', ');', '\n\t\t', 'cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n\t\t', 'my', 'check', 'boxes', '▁=', '▁new', '▁check', 'box', '(""', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', '"",', '▁null', ',', '▁false', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁cont', 'en', 'ente', '▁i', '▁d', 'ati', '▁del', '▁client', 'e', '\n\t\t', 'panel', '1', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', ',', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '1,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁2', '5);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '2,', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '3,', '▁0,', '▁2,', '▁1', '▁,', '1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '3,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁my', 'check', 'boxes', ',', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '4,', '▁0,', '▁3,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '4,', '▁2,', '▁3,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '\n\t\t', 'panel', '2', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁az', 'ione', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'if', '▁((', 'call', 'er', '▁==', '▁2)', '▁||', '▁(', 'call', 'er', '==', '3))', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁cer', 'ca', ',', '▁2,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\t\t\t\n\n\t\t\n\t\t', '//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁4,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'north', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '2,', '▁0,', '▁4,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n\t', '{', '\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'stan', 'ze', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '\n\t\n\t', 'protected', '▁stanza', '▁read', 'dat', 'istan', 'za', '()', '\n\t', '{', '\n\t\t', 'stan', 'za', '▁room', '▁=', '▁new', '▁stanza', '();', '\n\t\t', 'room', '.', 'set', 'num', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '());', '\n\t\t', 'room', '.', 'set', 'post', 'il', 'etto', '(', 'integer', '.', 'parse', 'int', '(', 'test', 'o', '2.', 'get', 'text', '())', ');', '\n\t\t', 'float', '▁f', '▁=', '▁float', '.', 'value', 'of', '(', 'test', 'o', '3.', 'get', 'text', '());', '\n\t\t', 'room', '.', 'set', 'px', 'base', '(', 'f', '.', 'float', 'value', '());', '\n\t\t', 'room', '.', 'set', 'desc', 'riz', 'ione', '(', 'test', 'o', '4.', 'get', 'text', '());', '\n\t\t', 'if', '▁', '\t', '(', 'my', 'check', 'boxes', '.', 'get', 'state', '())', '\n\t\t\t', 'room', '.', 'set', 'disp', 'letto', 'agg', '(', 'const', '.', 'si', ');', '\n\t\t', 'return', '▁room', ';', '\t', '▁', '\n\t', '}', '\n\n\t', 'protected', '▁void', '▁writ', 'ed', 'at', 'istan', 'za', '(', 'stan', 'za', '▁room', ')', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '(""', '""', '+', 'room', '.', 'get', 'post', 'il', 'etto', '());', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(""', '""', '+', 'room', '.', 'get', 'px', 'base', '());', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'desc', 'riz', 'ione', '());', '▁', '\t\n\t\t', 'if', '▁(', '▁room', '.', 'get', 'disp', 'letto', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t', 'my', 'check', 'boxes', '.', 'set', 'state', '(', 'true', ');', '\n\t\t', 'else', '\n\t\t\t', 'my', 'check', 'boxes', '.', 'set', 'state', '(', 'false', ');', '\t\n\t', '}', '\n', '▁', '\n\t', 'protected', '▁void', '▁clean', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'my', 'check', 'boxes', '.', 'set', 'state', '(', 'false', ');', '\t\n\t', '}', '\n\t\n\t', 'protected', '▁boolean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '1.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁4)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁numero', '▁della', '▁stanza', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁4', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁((', 'test', 'o', '1.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁numero', '▁della', '▁stanza', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁((', 'test', 'o', '2.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁numero', '▁di', '▁post', 'i', '▁let', 'to', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'int', 'pos', '(', 'test', 'o', '2.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁numero', '▁di', '▁post', 'i', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁posit', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁((', 'test', 'o', '3.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁pre', 'zzo', '▁della', '▁stanza', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'test', 'o', '3.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁pre', 'zzo', '▁della', '▁stanza', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁posit', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '4.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁5', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁desc', 'riz', 'ione', '▁de', 've', '▁ess', 'ere', '▁comp', 'osta', '▁da', '▁al', '▁pi', 'u', ""'"", '▁52', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\t\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli public class descrittor stanz extend frame dichiaro gli oggetti che utilizzero per costruir finestra label etichetta label label label label text field testo testo testo testo button annulla azion cerca panel panel panel grid bag layout gridbag new grid bag layout checkbox mycheckbox sub stanz stanz new sub stanz int caller public descrittor stanz string titl string caption int super titl caller setup panel caption inizializza pack void setup panel string caption set font configurazion sistema font base creo etichett etichetta new label informazioni sull stanz etichetta set font configurazion sistema font titolo label new label numero stanza label new label numero posti letto label new label prezzo base della stanza principal config get valuta label new label descrizion dell caratteristich peculiari della stanza creo text field testo new text field testo new text field testo new text field testo new text field creo bottoni annulla new button fine azion new button caption cerca new button cerca mycheckbox new checkbox letto aggiuntivo null fals creo pannello alto contenent dati del client panel new panel panel set layout gridbag util constrain panel etichetta grid bag constraint none grid bag constraint northwest util constrain panel label grid bag constraint none grid bag constraint northwest util constrain panel1 testo1 grid bag constraint none grid bag constraint northwest util constrain panel1 label2 grid bag constraint none grid bag constraint northwest util constrain panel1 testo2 grid bag constraint none grid bag constraint northwest util constrain panel1 label3 grid bag constraint none grid bag constraint northwest util constrain panel1 testo3 grid bag constraint none grid bag constraint northwest util constrain panel1 mycheckbox grid bag constraint none grid bag constraint northwest util constrain panel1 label4 grid bag constraint none grid bag constraint northwest util constrain panel1 testo4 grid bag constraint none grid bag constraint northwest creo pannello basso con due pulsanti panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint center util constrain panel2 azion grid bag constraint none grid bag constraint center caller caller util constrain panel2 cerca grid bag constraint none grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint north util constrain panel2 grid bag constraint horizont grid bag constraint center public void inizializza annulla add action listen new action listen public void action perform action event dispos (); stanz set enabl true }); protect stanza read dati stanza stanza room new stanza (); room set num stanza testo1 get text ()); room set posti letto integ pars int testo2 get text ())); float float valu testo3 get text ()); room set base float valu ()); room set descrizion testo4 get text ()); mycheckbox get state ()) room set disp letto agg const return room protect void write dati stanza stanza room testo1 set text room get num stanza ()); testo2 set text (""""+ room get posti letto ()); testo3 set text (""""+ room get base ()); testo4 set text room get descrizion ()); room get disp letto agg const mycheckbox set state true els mycheckbox set state fals protect void clean field testo1 set text (""""); testo2 set text (""""); testo3 set text (""""); testo4 set text (""""); mycheckbox set state fals protect boolean errori frame msg !(( testo1 get text ()). length msg new messag dialog numero della stanza deve esser composto piu caratteri ""); return true testo1 get text ()). equal ("""")) msg new messag dialog manca numero della stanza ""); return true testo2 get text ()). equal ("""")) msg new messag dialog manca numero posti letto ""); return true util int pos testo2 get text ()) msg new messag dialog numero posti deve esser numero positivo ""); return true testo3 get text ()). equal ("""")) msg new messag dialog manca prezzo della stanza ""); return true util float pos testo3 get text ()) msg new messag dialog prezzo della stanza deve esser numero positivo ""); return true !(( testo4 get text ()). length msg new messag dialog descrizion deve esser composta piu caratteri ""); return true return fals"
25~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/SubGestione.java~SubGestione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import common.utility.*;

public class SubGestione extends Frame
{
   	Label label;
   	Panel panel0, panel1;
   	Button Stanze, BeniServizi, Configurazione, Annulla ;
   	GridBagLayout gridbag=new GridBagLayout();
  	Frame p1 = new Frame();
   	Password pass = new Password();
   	SubStanze call_stanze;	
   	SubBeniServizi call_beniservizi;
   	ConfigurazioneSistema call_config;
   
   public SubGestione()
   {
      super(""Gestione albergo"");
      setup();
      init();
      pack();
   }


   void setup()
   {
	  this.setFont(ConfigurazioneSistema.font_sub);
      panel0=new Panel();
      panel0.setLayout(gridbag);
      panel0.setBackground(Color.white);
      Immagine  figura = new Immagine(""alb1.jpg"");
      Etichetta etich = new Etichetta(""Gestione.gif"");
      Utils.constrain(panel0,etich, 0, 0, 2, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
      Utils.constrain(panel0,figura, 2, 0, 10, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
       
      panel1 = new Panel();
      panel1.setLayout(new GridLayout(4,1));
      Stanze = new Button(""Stanze"");
      BeniServizi = new Button("" Beni & Servizi "");
      Configurazione = new Button("" Configurazione "");
      Annulla = new Button("" Indietro "");
      panel1.add(Stanze);
      panel1.add(BeniServizi);
      panel1.add(Configurazione);
      panel1.add(Annulla);

      this.setLayout(gridbag);
      Utils.constrain(this,panel0, 0, 0, 12, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
      Utils.constrain(this,panel1, 12, 0, 1, 12,GridBagConstraints.BOTH,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
   }

   void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            pass.setEnabled(true);
            pass.p.setEnabled(true);
         }
      });
      
      Stanze.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            gestioneStanze();
         }
      });
      
      BeniServizi.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            gestioneBeniServizi();
         }
      });
      
      Configurazione.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            startConfigurazione();
         }
      });
   }

	void gestioneStanze()
	{
		this.setEnabled(false);
		call_stanze = new SubStanze();
		call_stanze.setVisible(true);
		call_stanze.s = this;
	}
	
	void gestioneBeniServizi()
	{
		this.setEnabled(false);
		call_beniservizi = new SubBeniServizi();
		call_beniservizi.setVisible(true);
		call_beniservizi.s = this;
	}
	
	void startConfigurazione()
	{
		this.setEnabled(false);
		call_config = new ConfigurazioneSistema(Principale.config, false, Principale.db);
		call_config.setVisible(true);
		call_config.padre = this;
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁sub', 'gest', 'ion', 'e', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'l', 'ab', 'el', '▁label', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1', ';', '\n', '▁', '\t', 'but', 'ton', '▁stan', 'ze', ',', '▁ben', 'is', 'erv', 'iz', 'i', ',', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', ',', '▁ann', 'ull', 'a', '▁;', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁', '\t', 'fr', 'ame', '▁p', '1', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁', '\t', 'pass', 'w', 'ord', '▁pass', '▁=', '▁new', '▁pass', 'w', 'ord', '(', ');', '\n', '▁', '\t', 'sub', 'stan', 'ze', '▁call', '_', 'stan', 'ze', ';', '\t\n', '▁', '\t', 'sub', 'b', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', 'b', 'en', 'is', 'erv', 'iz', 'i', ';', '\n', '▁', '\t', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '▁call', '_', 'con', 'f', 'ig', ';', '\n', '▁', '\n', '▁public', '▁sub', 'gest', 'ion', 'e', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'gest', 'ion', 'e', '▁al', 'ber', 'go', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'sub', ');', '\n', '▁pan', 'el', '0', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁pan', 'el', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', '""', 'alb', '1.', 'j', 'p', 'g', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁et', 'ich', '▁=', '▁new', '▁et', 'ic', 'he', 'tt', 'a', '(', '""', 'gest', 'ion', 'e', '.', 'g', 'if', '"")', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'f', 'ig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'new', '▁gr', 'id', 'l', 'ay', 'out', '(', '4,', '1)', ');', '\n', '▁stan', 'ze', '▁=', '▁new', '▁but', 'ton', '(', '""', 'stan', 'ze', '"")', ';', '\n', '▁ben', 'is', 'erv', 'iz', 'i', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ben', 'i', '▁&', '▁serv', 'iz', 'i', '▁""', ');', '\n', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '▁""', ');', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'stan', 'ze', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'b', 'en', 'is', 'erv', 'iz', 'i', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'e', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ann', 'ull', 'a', ');', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pass', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁pass', '.', 'p', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁stan', 'ze', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁g', 'est', 'ion', 'est', 'an', 'ze', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ben', 'is', 'erv', 'iz', 'i', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁g', 'est', 'ion', 'e', 'b', 'en', 'is', 'erv', 'iz', 'i', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁start', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁g', 'est', 'ion', 'est', 'an', 'ze', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', 'stan', 'ze', '▁=', '▁new', '▁subst', 'an', 'ze', '(', ');', '\n\t\t', 'c', 'all', '_', 'stan', 'ze', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'all', '_', 'stan', 'ze', '.', 's', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁g', 'est', 'ion', 'e', 'b', 'en', 'is', 'erv', 'iz', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', 'b', 'en', 'is', 'erv', 'iz', 'i', '▁=', '▁new', '▁sub', 'b', 'en', 'is', 'erv', 'iz', 'i', '(', ');', '\n\t\t', 'c', 'all', '_', 'b', 'en', 'is', 'erv', 'iz', 'i', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'all', '_', 'b', 'en', 'is', 'erv', 'iz', 'i', '.', 's', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', 'con', 'f', 'ig', '▁=', '▁new', '▁conf', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ',', '▁fal', 'se', ',', '▁princip', 'ale', '.', 'd', 'b', ');', '\n\t\t', 'c', 'all', '_', 'con', 'f', 'ig', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'all', '_', 'con', 'f', 'ig', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'public', '▁class', '▁sub', 'gest', 'ione', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'l', 'abel', '▁label', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '0,', '▁panel', '1', ';', '\n', '▁', '\t', 'but', 'ton', '▁stan', 'ze', ',', '▁ben', 'is', 'erv', 'iz', 'i', ',', '▁config', 'ur', 'azione', ',', '▁ann', 'ulla', '▁;', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁', '\t', 'frame', '▁p', '1', '▁=', '▁new', '▁frame', '();', '\n', '▁', '\t', 'pass', 'word', '▁pass', '▁=', '▁new', '▁pass', 'word', '();', '\n', '▁', '\t', 'sub', 'stan', 'ze', '▁call', '_', 'stan', 'ze', ';', '\t\n', '▁', '\t', 'sub', 'ben', 'is', 'erv', 'iz', 'i', '▁call', '_', 'ben', 'is', 'erv', 'iz', 'i', ';', '\n', '▁', '\t', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '▁call', '_', 'con', 'fig', ';', '\n', '▁', '\n', '▁public', '▁sub', 'gest', 'ione', '()', '\n', '▁{', '\n', '▁super', '(""', 'gest', 'ione', '▁al', 'ber', 'go', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(""', 'alb', '1.', 'j', 'pg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'gest', 'ione', '.', 'g', 'if', '"");', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'fig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'new', '▁grid', 'lay', 'out', '(', '4,', '1)', ');', '\n', '▁stan', 'ze', '▁=', '▁new', '▁button', '(""', 'stan', 'ze', '"");', '\n', '▁ben', 'is', 'erv', 'iz', 'i', '▁=', '▁new', '▁button', '(""', '▁ben', 'i', '▁&', '▁serv', 'iz', 'i', '▁""', ');', '\n', '▁config', 'ur', 'azione', '▁=', '▁new', '▁button', '(""', '▁config', 'ur', 'azione', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'stan', 'ze', ');', '\n', '▁panel', '1.', 'add', '(', 'ben', 'is', 'erv', 'iz', 'i', ');', '\n', '▁panel', '1.', 'add', '(', 'con', 'fig', 'ur', 'azione', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁pass', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁pass', '.', 'p', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁stan', 'ze', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁gest', 'ion', 'estan', 'ze', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ben', 'is', 'erv', 'iz', 'i', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁gest', 'ione', 'ben', 'is', 'erv', 'iz', 'i', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁config', 'ur', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'con', 'fig', 'ur', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁gest', 'ion', 'estan', 'ze', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', 'stan', 'ze', '▁=', '▁new', '▁subst', 'an', 'ze', '();', '\n\t\t', 'call', '_', 'stan', 'ze', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'call', '_', 'stan', 'ze', '.', 's', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁gest', 'ione', 'ben', 'is', 'erv', 'iz', 'i', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', 'ben', 'is', 'erv', 'iz', 'i', '▁=', '▁new', '▁sub', 'ben', 'is', 'erv', 'iz', 'i', '();', '\n\t\t', 'call', '_', 'ben', 'is', 'erv', 'iz', 'i', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'call', '_', 'ben', 'is', 'erv', 'iz', 'i', '.', 's', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'con', 'fig', 'ur', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', 'con', 'fig', '▁=', '▁new', '▁config', 'ur', 'az', 'iones', 'ist', 'ema', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ',', '▁false', ',', '▁princip', 'ale', '.', 'db', ');', '\n\t\t', 'call', '_', 'con', 'fig', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'call', '_', 'con', 'fig', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n\n', 'public', '▁class', '▁sub', 'gest', 'ione', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'label', '▁label', ';', '\n', '▁', '\t', 'panel', '▁panel', '0,', '▁panel', '1;', '\n', '▁', '\t', 'button', '▁stan', 'ze', ',', '▁ben', 'is', 'erv', 'izi', ',', '▁config', 'ur', 'azione', ',', '▁ann', 'ulla', '▁;', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'layout', '();', '\n', '▁', '\t', 'frame', '▁p', '1', '▁=', '▁new', '▁frame', '();', '\n', '▁', '\t', 'pass', 'word', '▁pass', '▁=', '▁new', '▁password', '();', '\n', '▁', '\t', 'sub', 'stan', 'ze', '▁call', '_', 'stan', 'ze', ';', '\t\n', '▁', '\t', 'sub', 'ben', 'is', 'erv', 'izi', '▁call', '_', 'ben', 'is', 'erv', 'izi', ';', '\n', '▁', '\t', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '▁call', '_', 'config', ';', '\n', '▁', '\n', '▁public', '▁sub', 'gest', 'ione', '()', '\n', '▁{', '\n', '▁super', '(""', 'gest', 'ione', '▁alber', 'go', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'agine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'agine', '(""', 'alb', '1.', 'jpg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'gest', 'ione', '.', 'gif', '"");', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'et', 'ich', ',', '▁0,', '▁0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'fig', 'ura', ',', '▁2,', '▁0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'new', '▁grid', 'layout', '(', '4,', '1)', ');', '\n', '▁stan', 'ze', '▁=', '▁new', '▁button', '(""', 'stan', 'ze', '"");', '\n', '▁ben', 'is', 'erv', 'izi', '▁=', '▁new', '▁button', '(""', '▁beni', '▁&', '▁serv', 'izi', '▁""', ');', '\n', '▁config', 'ur', 'azione', '▁=', '▁new', '▁button', '(""', '▁config', 'ur', 'azione', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'stan', 'ze', ');', '\n', '▁panel', '1.', 'add', '(', 'ben', 'is', 'erv', 'izi', ');', '\n', '▁panel', '1.', 'add', '(', 'config', 'ur', 'azione', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁12,', '▁0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁pass', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁pass', '.', 'p', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁stan', 'ze', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁gest', 'ion', 'estan', 'ze', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ben', 'is', 'erv', 'izi', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁gest', 'ione', 'ben', 'is', 'erv', 'izi', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁config', 'ur', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'config', 'ur', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁gest', 'ion', 'estan', 'ze', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_', 'stan', 'ze', '▁=', '▁new', '▁subst', 'anze', '();', '\n\t\t', 'call', '_', 'stan', 'ze', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'call', '_', 'stan', 'ze', '.', 's', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁gest', 'ione', 'ben', 'is', 'erv', 'izi', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_', 'ben', 'is', 'erv', 'izi', '▁=', '▁new', '▁sub', 'ben', 'is', 'erv', 'izi', '();', '\n\t\t', 'call', '_', 'ben', 'is', 'erv', 'izi', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'call', '_', 'ben', 'is', 'erv', 'izi', '.', 's', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'config', 'ur', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_', 'config', '▁=', '▁new', '▁config', 'ur', 'az', 'iones', 'ist', 'ema', '(', 'princip', 'ale', '.', 'config', ',', '▁false', ',', '▁princip', 'ale', '.', 'db', ');', '\n\t\t', 'call', '_', 'config', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'call', '_', 'config', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import java import common util public class sub gestion extend frame label label panel panel panel button stanz beni servizi configurazion annulla grid bag layout gridbag new grid bag layout frame new frame password pass new password sub stanz call stanz sub beni servizi call beniservizi configurazion sistema call config public sub gestion super gestion albergo setup init pack void setup set font configurazion sistema font sub panel new panel panel set layout gridbag panel set background color white immagin figura new immagin alb jpg etichetta etich new etichetta gestion gif util constrain panel etich grid bag constraint vertic grid bag constraint center util constrain panel figura grid bag constraint vertic grid bag constraint center panel new panel panel set layout new grid layout stanz new button stanz beni servizi new button beni servizi configurazion new button configurazion annulla new button indietro panel add stanz panel add beni servizi panel add configurazion panel add annulla set layout gridbag util constrain panel grid bag constraint vertic grid bag constraint west util constrain panel1 grid bag constraint grid bag constraint west void init annulla add action listen new action listen public void action perform action event dispos (); pass set enabl true pass set enabl true }); stanz add action listen new action listen public void action perform action event gestion stanz (); }); beni servizi add action listen new action listen public void action perform action event gestion beni servizi (); }); configurazion add action listen new action listen public void action perform action event start configurazion (); }); void gestion stanz set enabl fals call_stanz new sub stanz (); call_stanz set visibl true call_stanz void gestion beni servizi set enabl fals call_beniservizi new sub beni servizi (); call_beniservizi set visibl true call_beniservizi void start configurazion set enabl fals call_config new configurazion sistema principal config fals principal call_config set visibl true call_config padr
26~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/AskChiudiSingoloConAgenzia.java~AskChiudiSingoloConAgenzia.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import interfacce.MascheraVisualizzazioneConto;

public class AskChiudiSingoloConAgenzia extends Frame
{
   	Button button1, button2, button3;
   	MascheraCalcoloConto padre;
   	Panel panel1, panel2;
   	Label message;
   	GridBagLayout gridbag = new GridBagLayout();
   	
   	public AskChiudiSingoloConAgenzia(MascheraCalcoloConto parent)
   	{
      	super(""Cosa devo fare?"");
      	padre = parent;
      	padre.setEnabled(false);
      	setupPanel();
      	init();
      	pack();
      	setVisible(true);
   }

	void setupPanel()
	{
      	message = new Label(""Calcolare il conto di un soggiornante venuto con agenzia implica cambiare la sua data di partenza."");
      	button1 = new Button("" Annulla "");
      	button2 = new Button("" Cambia data "");        
        this.setFont(ConfigurazioneSistema.font_titolo);
        panel1 = new Panel();
        panel1.setLayout(gridbag);
        Utils.constrain(panel1, message, 0, 0, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
      	//Creo il pannello in basso con due pulsanti                  
        panel2 = new Panel();
        panel2.setLayout(gridbag);
        Utils.constrain(panel2, button1, 0, 0, 1, 1, GridBagConstraints.NONE,
        	            GridBagConstraints.CENTER, 0.0, 0.0, 0, 0, 0, 15);
            Utils.constrain(panel2, button2, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 0, 15, 0, 0);             
        //Attacco i pannelli al frame
        this.setLayout(gridbag);
        Utils.constrain(this, panel1, 0, 1, 4, 2, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
        Utils.constrain(this, panel2, 0, 14, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
	}
   
   
   public void init()
   {
      button1.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
         	startAzione();
         }
      });
      
      button2.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			padre.startChiudiSingoloConAgenzia();
			startAzione();
         }
      });
   }
   
   void startAzione()
   {
       	setVisible(false);
        dispose();
        padre.setEnabled(true);
   }
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁inter', 'f', 'ac', 'ce', '.', 'm', 'asc', 'her', 'av', 'is', 'ual', 'iz', 'z', 'az', 'ion', 'ec', 'onto', ';', '\n\n', 'publ', 'ic', '▁class', '▁as', 'k', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'z', 'ia', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'but', 'ton', '▁but', 'ton', '1,', '▁but', 'ton', '2,', '▁but', 'ton', '3', ';', '\n', '▁', '\t', 'm', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '▁pad', 're', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2', ';', '\n', '▁', '\t', 'l', 'ab', 'el', '▁message', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁as', 'k', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'z', 'ia', '(', 'm', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '▁paren', 't', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', 'c', 'osa', '▁dev', 'o', '▁f', 'are', '?', '"")', ';', '\n', '▁', '\t', 'p', 'ad', 're', '▁=', '▁paren', 't', ';', '\n', '▁', '\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'el', '(', ');', '\n', '▁', '\t', 'in', 'it', '(', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁set', 'up', 'pan', 'el', '(', ')', '\n\t', '{', '\n', '▁', '\t', 'm', 'ess', 'age', '▁=', '▁new', '▁label', '(', '""', 'cal', 'col', 'are', '▁il', '▁cont', 'o', '▁di', '▁un', '▁s', 'og', 'gi', 'orn', 'ante', '▁ven', 'ut', 'o', '▁con', '▁ag', 'enz', 'ia', '▁impl', 'ica', '▁c', 'amb', 'ia', 're', '▁la', '▁su', 'a', '▁data', '▁di', '▁part', 'en', 'za', '.""', ');', '\n', '▁', '\t', 'but', 'ton', '1', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ann', 'ull', 'a', '▁""', ');', '\n', '▁', '\t', 'but', 'ton', '2', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁c', 'amb', 'ia', '▁data', '▁""', ');', '▁', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁message', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁but', 'ton', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁', '\t', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁but', 'ton', '2,', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁15,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁1,', '▁4,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', '}', '\n', '▁', '\n', '▁', '\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁but', 'ton', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁but', 'ton', '2.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'p', 'ad', 're', '.', 'st', 'art', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'z', 'ia', '(', ');', '\n\t\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁start', 'az', 'ion', 'e', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁inter', 'fac', 'ce', '.', 'm', 'asc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', ';', '\n\n', 'public', '▁class', '▁ask', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'zia', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'but', 'ton', '▁button', '1,', '▁button', '2,', '▁button', '3', ';', '\n', '▁', '\t', 'm', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '▁pad', 're', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2', ';', '\n', '▁', '\t', 'l', 'abel', '▁message', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ask', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'zia', '(', 'm', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '▁parent', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'c', 'osa', '▁dev', 'o', '▁fare', '?', '"");', '\n', '▁', '\t', 'pad', 're', '▁=', '▁parent', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'el', '();', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁setup', 'pan', 'el', '()', '\n\t', '{', '\n', '▁', '\t', 'mess', 'age', '▁=', '▁new', '▁label', '(""', 'cal', 'col', 'are', '▁il', '▁cont', 'o', '▁di', '▁un', '▁s', 'og', 'gi', 'orn', 'ante', '▁ven', 'uto', '▁con', '▁ag', 'enz', 'ia', '▁impl', 'ica', '▁camb', 'ia', 're', '▁la', '▁su', 'a', '▁data', '▁di', '▁part', 'enza', '.""', ');', '\n', '▁', '\t', 'but', 'ton', '1', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁', '\t', 'but', 'ton', '2', '▁=', '▁new', '▁button', '(""', '▁camb', 'ia', '▁data', '▁""', ');', '▁', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁message', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁button', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁', '\t', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁button', '2,', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁15,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁1,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', '}', '\n', '▁', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁button', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁button', '2.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'pad', 're', '.', 'start', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'zia', '();', '\n\t\t\t', 'start', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁start', 'azione', '()', '\n', '▁{', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'false', ');', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁inter', 'fac', 'ce', '.', 'masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', ';', '\n\n', 'public', '▁class', '▁ask', 'chi', 'ud', 'ising', 'ol', 'ocon', 'agen', 'zia', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'button', '▁button', '1,', '▁button', '2,', '▁button', '3;', '\n', '▁', '\t', 'masc', 'her', 'acal', 'col', 'oc', 'onto', '▁padre', ';', '\n', '▁', '\t', 'panel', '▁panel', '1,', '▁panel', '2;', '\n', '▁', '\t', 'label', '▁message', ';', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ask', 'chi', 'ud', 'ising', 'ol', 'ocon', 'agen', 'zia', '(', 'masc', 'her', 'acal', 'col', 'oc', 'onto', '▁parent', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'c', 'osa', '▁devo', '▁fare', '?', '"");', '\n', '▁', '\t', 'pad', 're', '▁=', '▁parent', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'set', 'up', 'panel', '();', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n\t', 'void', '▁setup', 'panel', '()', '\n\t', '{', '\n', '▁', '\t', 'message', '▁=', '▁new', '▁label', '(""', 'cal', 'col', 'are', '▁il', '▁cont', 'o', '▁di', '▁un', '▁sog', 'gi', 'orn', 'ante', '▁ven', 'uto', '▁con', '▁ag', 'enzia', '▁impl', 'ica', '▁camb', 'ia', 're', '▁la', '▁sua', '▁data', '▁di', '▁part', 'enza', '."");', '\n', '▁', '\t', 'button', '1', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁', '\t', 'button', '2', '▁=', '▁new', '▁button', '(""', '▁camb', 'ia', '▁data', '▁""', ');', '▁', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁message', ',', '▁0,', '▁0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁button', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁', '\t', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁button', '2,', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁15,', '▁0,', '▁', '0);', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁1,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', '}', '\n', '▁', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁button', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁button', '2.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'pad', 're', '.', 'start', 'chi', 'ud', 'ising', 'ol', 'ocon', 'agen', 'zia', '();', '\n\t\t\t', 'start', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁start', 'azione', '()', '\n', '▁{', '\n', '▁', '\t', 'set', 'visible', '(', 'false', ');', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import interfacc maschera visualizzazion conto public class ask chiudi singolo con agenzia extend frame button button button button maschera calcolo conto padr panel panel panel label messag grid bag layout gridbag new grid bag layout public ask chiudi singolo con agenzia maschera calcolo conto parent super cosa devo fare padr parent padr set enabl fals setup panel init pack set visibl true void setup panel messag new label calcolar conto soggiornant venuto con agenzia implica cambiar sua data partenza button new button annulla button new button cambia data set font configurazion sistema font titolo panel new panel panel set layout gridbag util constrain panel messag grid bag constraint none grid bag constraint northwest creo pannello basso con due pulsanti panel new panel panel set layout gridbag util constrain panel button grid bag constraint none grid bag constraint center util constrain panel button grid bag constraint none grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint west public void init button1 add action listen new action listen public void action perform action event start azion (); }); button2 add action listen new action listen public void action perform action event padr start chiudi singolo con agenzia (); start azion (); }); void start azion set visibl fals dispos (); padr set enabl true
27~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraCambio.java~MascheraCambio.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.util.Date;
import common.def.*;
import common.utility.Utils;
import common.utility.DateUtils;
import moduli.*;

public class MascheraCambio extends Frame
{
	TextField stanza1, stanza2;
	Button Annulla, Conferma, Ricerca;
	Label etichetta1, etichetta2;
	Panel panel1, panel2;
	GridBagLayout gridbag = new GridBagLayout();
	Prenotazione p;
	Frame padre;
	MascheraRicercaStanza figlio;
	
	public MascheraCambio(Frame parent)
	{
      super(""Cambio di stanza"");
      padre = parent;
      padre.setEnabled(false);
      setup();
      init();
      pack();
      this.setVisible(true);
	}

	void setup()
	{
	  this.setFont(ConfigurazioneSistema.font_base);
      stanza1 = new TextField("""", 4);
      stanza2 = new TextField("""", 4);
      stanza2.setEditable(false);
      etichetta1 = new Label(""Stanza attuale"");
      etichetta2 = new Label(""     Nuova stanza"");
      Annulla = new Button("" Annulla "");
      Ricerca = new Button("" Ricerca "");
      Conferma = new Button(""Conferma"");
      Conferma.setEnabled(false);
				
      panel1 = new Panel();
      panel1.setLayout(gridbag);
      Utils.constrain(panel1, etichetta1, 0, 0, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel1, stanza1,    1, 0, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel1, etichetta2, 2, 0, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel1, stanza2,    3, 0, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);

      panel2 = new Panel();
      panel2.setLayout(gridbag);
      Utils.constrain(panel2, Annulla,  0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel2, Ricerca,  1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel2, Conferma, 2, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 0, 0, 0, 0);                  

      
      this.setLayout(gridbag);
      Utils.constrain(this, panel1, 0, 0, 1, 1, GridBagConstraints.BOTH,
                        GridBagConstraints.WEST, 1.0, 1.0, 10, 10, 10, 10);
      Utils.constrain(this, panel2, 0, 1, 1, 1, GridBagConstraints.BOTH,
                        GridBagConstraints.EAST, 1.0, 1.0, 10, 10, 10, 10);
	}

	public void init()
	{
      
      
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            padre.setEnabled(true);
         }
      });

      Conferma.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			startConferma();
         }
      });
      
      Ricerca.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			if (noErrors()) 
			{	
				//stanza1.setEditable(false);
				startRicerca();
         	}
         }
      });
	}
   
	void startConferma()
	{
		Frame msg;
		ListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();
		if (elenco_disp == null)
		{
			msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return;
		}
		else
		{   
			if (ctrlPosti())
			{
				int ris;
				if ( (ris = (Principale.db).changeStanzaSoggiornanti(stanza1.getText(), stanza2.getText())) > 0 )
				{
					if ( (ris = (Principale.db).changeStanzaAddebiti(stanza1.getText(), stanza2.getText())) < 0 )
							msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(ris));
					if ( (ris = (Principale.db).changeStanzaTelefonate(stanza1.getText(), stanza2.getText())) < 0 )
							msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(ris));
					Utils.aggiornaDisp(elenco_disp,stanza1.getText(),p.getInizioSogg(),p.getFineSogg(),Flag.DISPONIBILE,Flag.OCCUPATA,true);		
					Utils.aggiornaDisp(elenco_disp,stanza2.getText(),p.getInizioSogg(),p.getFineSogg(),Flag.OCCUPATA,Flag.DISPONIBILE,true);		
					Utils.aggiornaDisp(elenco_disp,stanza2.getText(),p.getInizioSogg(),p.getFineSogg(),Flag.OCCUPATA,Flag.COMMISSIONATA,true);		
				
					Utils.aggiornaDisp(elenco_disp,stanza2.getText(),p.getInizioSogg(),p.getFineSogg(),Flag.OCCUPATA,Flag.DISPONIBILE,true);		
					Utils.aggiornaDisp(elenco_disp,stanza2.getText(),p.getInizioSogg(),p.getFineSogg(),Flag.OCCUPATA,Flag.COMMISSIONATA,true);		
					if (p.getTramiteAgenzia() == Const.SI)
					{	
						Utils.restoreCommissioni(stanza1.getText());
					}
					msg = new AvvisoDialog(this,""La stanza e' stata cambiata e tutti i dati riferiti ad essa aggiornati"");
					Conferma.setEnabled(false);
				}
				else
					if ( (ris != 0) && (!(ris == DataBase.DONT_EXISTS_STANZA) ) )
						msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(ris));
			}
		}
	}
   
	boolean ctrlPosti()
	{
		Frame msg;
		ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(stanza1.getText(),false);
		Stanza room2 = (Principale.db).readStanza(stanza2.getText());
		if ( !(room2 ==null) && !(L_sogg == null))
			if	(L_sogg.length() > contaPosti(room2))
			{	
				msg = new AvvisoDialog(this,""La stanza scelta e' troppo piccola per ""+L_sogg.length()+"" persone""); 			
				return false;
			}
			else 
			 return true;
		else
		{
		 	msg = new MessageDialog(this,"" Problemi con il database! "");
			return false;
		}
	}
	
	int contaPosti(Stanza s)
	{
		int c = s.getPostiLetto();
		if (s.getDispLettoAgg() == Const.SI)
			c++;
		return c;	
	}
	
	void startRicerca()
	{
		this.setEnabled(false);
		figlio = new MascheraRicercaStanza(""Ricerca di stanze disponibili per cambio stanza"",3);
		Soggiornante sogg = (Principale.db).readSoggiornante(stanza1.getText(),1);
		p = (Principale.db).readPrenotazione(sogg.getIdPrenotazione());
		if ( !(p == null))
		{	
			figlio.data_inizio.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(new Date())));
			figlio.data_inizio.setEditable(false);
			figlio.data_fine.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(p.getFineSogg())));
			figlio.save_date = p.getFineSogg();
			if (p.getTramiteAgenzia() == Const.SI)
			{
				figlio.con_ag.setState(true);
				figlio.con_ag.setEnabled(false);
				figlio.nome_ag.setText(p.getNomeAgenzia());
				figlio.nome_ag.setEditable(false);
			}	
			figlio.setVisible(true);
			figlio.father = this;
		}
	}
	
	boolean noErrors()
	{
		Frame msg;
		Disponibilita disp = new Disponibilita();
		ListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();
		
		if (elenco_disp == null)
		{
			msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return false;
		}
		
		if ((stanza1.getText().equals("""")) ) 
		{
			msg = new AvvisoDialog(this,"" Inserire il numero della stanza da cambiare! "");
			return false;
		}
		else
		{
			if( (Principale.db).readStanza(stanza1.getText()) == null )
			{
				msg = new MessageDialog(this,"" La stanza inserita e' inesistente! "");
				return false;
			}
			else
			{	
				disp = Utils.getDispOfRoom(elenco_disp, stanza1.getText(), true);
				if (disp != null)
				{
					if (  disp.getStatusGiorno(DateUtils.dataTogiorni(new Date()),Const.ANNO_CORRENTE) != Flag.OCCUPATA )
					{	
						msg = new MessageDialog(this,"" La stanza inserita non e' attualmente occupata! "");
						return false;
					}
				}
			}
		}
		return true;	
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', 'ut', 'ils', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', 'd', 'ate', 'ut', 'ils', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ac', 'amb', 'io', '▁ext', 'ends', '▁frame', '\n', '{', '\n\t', 'text', 'field', '▁stan', 'za', '1,', '▁stan', 'za', '2', ';', '\n\t', 'but', 'ton', '▁ann', 'ull', 'a', ',', '▁con', 'fer', 'ma', ',', '▁ric', 'er', 'ca', ';', '\n\t', 'l', 'ab', 'el', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2', ';', '\n\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2', ';', '\n\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ';', '\n\t', 'fr', 'ame', '▁pad', 're', ';', '\n\t', 'm', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '▁fig', 'l', 'io', ';', '\n\t\n\t', 'publ', 'ic', '▁m', 'asc', 'her', 'ac', 'amb', 'io', '(', 'fr', 'ame', '▁paren', 't', ')', '\n\t', '{', '\n', '▁super', '(', '""', 'c', 'amb', 'io', '▁di', '▁stan', 'za', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁set', 'up', '(', ')', '\n\t', '{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁stan', 'za', '1', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁stan', 'za', '2', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁stan', 'za', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'stan', 'za', '▁att', 'ual', 'e', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2', '▁=', '▁new', '▁label', '(', '""', '▁n', 'u', 'ova', '▁stan', 'za', '"")', ';', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ann', 'ull', 'a', '▁""', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ric', 'er', 'ca', '▁""', ');', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n', '▁con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁stan', 'za', '1,', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁stan', 'za', '2,', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ric', 'er', 'ca', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁con', 'fer', 'ma', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n\n', '▁', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁10,', '▁10,', '▁10,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.', '0,', '▁1.', '0,', '▁10,', '▁10,', '▁10,', '▁10', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n\t', '{', '\n', '▁', '\n', '▁', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'st', 'art', 'con', 'fer', 'ma', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ric', 'er', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'if', '▁(', 'no', 'er', 'r', 'ors', '(', ')', ')', '▁', '\n\t\t\t', '{', '\t\n\t\t\t\t', '//', 'stan', 'za', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'st', 'art', 'ric', 'er', 'ca', '(', ');', '\n', '▁', '\t', '}', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n', '▁', '\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '▁', '\n\t\t\t', 'if', '▁(', 'ct', 'r', 'l', 'p', 'ost', 'i', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁r', 'is', ';', '\n\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'ang', 'est', 'an', 'z', 'as', 'og', 'gi', 'orn', 'ant', 'i', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', '▁stan', 'za', '2.', 'get', 'text', '(', ')', ')', ')', '▁', '>', '▁0', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'ang', 'est', 'an', 'za', 'ad', 'de', 'bit', 'i', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', '▁stan', 'za', '2.', 'get', 'text', '(', ')', ')', ')', '▁', '<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'ris', ')', ');', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'ang', 'est', 'an', 'z', 'ate', 'le', 'f', 'on', 'ate', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', '▁stan', 'za', '2.', 'get', 'text', '(', ')', ')', ')', '▁', '<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'ris', ')', ');', '\n\t\t\t\t\t', 'ut', 'ils', '.', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '1.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', 'p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', 'fl', 'ag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'fl', 'ag', '.', 'oc', 'c', 'up', 'ata', ',', 'tr', 'ue', ');', '\t\t\n\t\t\t\t\t', 'ut', 'ils', '.', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '2.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', 'p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', 'fl', 'ag', '.', 'oc', 'c', 'up', 'ata', ',', 'fl', 'ag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'tr', 'ue', ');', '\t\t\n\t\t\t\t\t', 'ut', 'ils', '.', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '2.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', 'p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', 'fl', 'ag', '.', 'oc', 'c', 'up', 'ata', ',', 'fl', 'ag', '.', 'com', 'mission', 'ata', ',', 'tr', 'ue', ');', '\t\t\n\t\t\t\t\n\t\t\t\t\t', 'ut', 'ils', '.', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '2.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', 'p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', 'fl', 'ag', '.', 'oc', 'c', 'up', 'ata', ',', 'fl', 'ag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'tr', 'ue', ');', '\t\t\n\t\t\t\t\t', 'ut', 'ils', '.', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '2.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', 'p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', 'fl', 'ag', '.', 'oc', 'c', 'up', 'ata', ',', 'fl', 'ag', '.', 'com', 'mission', 'ata', ',', 'tr', 'ue', ');', '\t\t\n\t\t\t\t\t', 'if', '▁(', 'p', '.', 'get', 'tr', 'am', 'ite', 'agen', 'z', 'ia', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'ut', 'ils', '.', 'rest', 'or', 'ec', 'om', 'mission', 'i', '(', 'stan', 'za', '1.', 'get', 'text', '(', ')', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁e', ""'"", '▁st', 'ata', '▁c', 'amb', 'i', 'ata', '▁e', '▁t', 'ut', 'ti', '▁i', '▁d', 'ati', '▁rif', 'er', 'iti', '▁ad', '▁ess', 'a', '▁ag', 'gi', 'orn', 'ati', '"")', ';', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁!', '=', '▁', '0)', '▁&', '&', '▁(', '!', '(', 'ris', '▁=', '=', '▁database', '.', 'd', 'ont', '_', 'ex', 'ists', '_', 'stan', 'za', ')', '▁)', '▁)', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'ris', ')', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n', '▁', '\n\t', 'bo', 'ole', 'an', '▁c', 'tr', 'l', 'p', 'ost', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', 'f', 'al', 'se', ');', '\n\t\t', 'stan', 'za', '▁room', '2', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '2.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', '▁!', '(', 'room', '2', '▁=', '=', 'n', 'ull', ')', '▁&', '&', '▁!', '(', 'l', '_', 'so', 'g', 'g', '▁=', '=', '▁n', 'ull', ')', ')', '\n\t\t\t', 'if', '\t', '(', 'l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ')', '▁', '>', '▁cont', 'ap', 'ost', 'i', '(', 'room', '2)', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁sc', 'el', 'ta', '▁e', ""'"", '▁t', 'rop', 'po', '▁pic', 'col', 'a', '▁per', '▁""', '+', 'l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ')', '+', '""', '▁pers', 'one', '"")', ';', '▁', '\t\t\t\n\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '▁', '\n\t\t\t', '▁return', '▁true', ';', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t', '▁', '\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'int', '▁cont', 'ap', 'ost', 'i', '(', 'stan', 'za', '▁s', ')', '\n\t', '{', '\n\t\t', 'int', '▁c', '▁=', '▁s', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', ');', '\n\t\t', 'if', '▁(', 's', '.', 'get', 'dis', 'p', 'let', 'to', 'ag', 'g', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n\t\t\t', 'c', '+', '+', ';', '\n\t\t', 'ret', 'urn', '▁c', ';', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'ric', 'er', 'ca', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '(', '""', 'ric', 'er', 'ca', '▁di', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁per', '▁c', 'amb', 'io', '▁stan', 'za', '"",', '3)', ';', '\n\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'so', 'g', 'gi', 'orn', 'ante', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', '1)', ';', '\n\t\t', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'so', 'g', 'g', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t', 'if', '▁(', '▁!', '(', 'p', '▁=', '=', '▁n', 'ull', ')', ')', '\n\t\t', '{', '\t\n\t\t\t', 'f', 'ig', 'l', 'io', '.', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'new', '▁date', '(', ')', ')', ')', ');', '\n\t\t\t', 'f', 'ig', 'l', 'io', '.', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'f', 'ig', 'l', 'io', '.', 'd', 'ata', '_', 'f', 'ine', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', '.', 'get', 'f', 'ines', 'og', 'g', '(', ')', ')', ')', ');', '\n\t\t\t', 'f', 'ig', 'l', 'io', '.', 's', 'ave', '_', 'd', 'ate', '▁=', '▁p', '.', 'get', 'f', 'ines', 'og', 'g', '(', ');', '\n\t\t\t', 'if', '▁(', 'p', '.', 'get', 'tr', 'am', 'ite', 'agen', 'z', 'ia', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'f', 'ig', 'l', 'io', '.', 'con', '_', 'ag', '.', 'set', 'state', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'f', 'ig', 'l', 'io', '.', 'con', '_', 'ag', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'f', 'ig', 'l', 'io', '.', 'n', 'ome', '_', 'ag', '.', 's', 'ette', 'xt', '(', 'p', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', ')', ');', '\n\t\t\t\t', 'f', 'ig', 'l', 'io', '.', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', '}', '\t\n\t\t\t', 'f', 'ig', 'l', 'io', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t', 'f', 'ig', 'l', 'io', '.', 'father', '▁=', '▁this', ';', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'bo', 'ole', 'an', '▁no', 'er', 'r', 'ors', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'if', '▁(', '(', 'stan', 'za', '1.', 'get', 'text', '(', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁d', 'ella', '▁stan', 'za', '▁da', '▁c', 'amb', 'ia', 're', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'if', '(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '1.', 'get', 'text', '(', ')', ')', '▁=', '=', '▁n', 'ull', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁e', ""'"", '▁in', 'es', 'ist', 'ent', 'e', '!', '▁""', ');', '\n\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'dis', 'p', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁stan', 'za', '1.', 'get', 'text', '(', '),', '▁true', ');', '\n\t\t\t\t', 'if', '▁(', 'dis', 'p', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁disp', '.', 'get', 'st', 'atus', 'gi', 'orn', 'o', '(', 'd', 'ate', 'ut', 'ils', '.', 'd', 'at', 'at', 'og', 'i', 'orn', 'i', '(', 'new', '▁date', '(', ')', '),', 'con', 'st', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ')', '▁!', '=', '▁flag', '.', 'oc', 'c', 'up', 'ata', '▁)', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁non', '▁e', ""'"", '▁att', 'ual', 'ment', 'e', '▁occup', 'ata', '!', '▁""', ');', '\n\t\t\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', 'ut', 'ils', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', 'date', 'ut', 'ils', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ac', 'amb', 'io', '▁extends', '▁frame', '\n', '{', '\n\t', 'text', 'field', '▁stan', 'za', '1,', '▁stan', 'za', '2', ';', '\n\t', 'but', 'ton', '▁ann', 'ulla', ',', '▁con', 'fer', 'ma', ',', '▁ric', 'er', 'ca', ';', '\n\t', 'l', 'abel', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2', ';', '\n\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2', ';', '\n\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\n\t', 'frame', '▁pad', 're', ';', '\n\t', 'm', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '▁fig', 'lio', ';', '\n\t\n\t', 'public', '▁masc', 'her', 'ac', 'amb', 'io', '(', 'frame', '▁parent', ')', '\n\t', '{', '\n', '▁super', '(""', 'c', 'amb', 'io', '▁di', '▁stan', 'za', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁setup', '()', '\n\t', '{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁stan', 'za', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁stan', 'za', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁stan', 'za', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁att', 'ual', 'e', '"");', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', '▁nu', 'ova', '▁stan', 'za', '"");', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁button', '(""', '▁ric', 'er', 'ca', '▁""', ');', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\t\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁stan', 'za', '1,', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '2,', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁stan', 'za', '2,', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ric', 'er', 'ca', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁con', 'fer', 'ma', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n\n', '▁', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁10,', '▁10,', '▁10,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.', '0,', '▁1.', '0,', '▁10,', '▁10,', '▁10,', '▁10', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n', '▁', '\n', '▁', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ric', 'er', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'if', '▁(', 'no', 'er', 'rors', '())', '▁', '\n\t\t\t', '{', '\t\n\t\t\t\t', '//', 'stan', 'za', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'start', 'ric', 'er', 'ca', '();', '\n', '▁', '\t', '}', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n', '▁', '\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '▁', '\n\t\t\t', 'if', '▁(', 'ct', 'rl', 'post', 'i', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁ris', ';', '\n\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'chang', 'est', 'anzas', 'og', 'gi', 'orn', 'anti', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', '▁stan', 'za', '2.', 'get', 'text', '()', '))', '▁>', '▁0', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'chang', 'estan', 'za', 'ad', 'de', 'bit', 'i', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', '▁stan', 'za', '2.', 'get', 'text', '()', '))', '▁<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'ris', ')', ');', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'chang', 'est', 'anz', 'ate', 'le', 'f', 'on', 'ate', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', '▁stan', 'za', '2.', 'get', 'text', '()', '))', '▁<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'ris', ')', ');', '\n\t\t\t\t\t', 'ut', 'ils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '1.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', 'flag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'flag', '.', 'occup', 'ata', ',', 'true', ');', '\t\t\n\t\t\t\t\t', 'ut', 'ils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '2.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', 'flag', '.', 'occup', 'ata', ',', 'flag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'true', ');', '\t\t\n\t\t\t\t\t', 'ut', 'ils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '2.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', 'flag', '.', 'occup', 'ata', ',', 'flag', '.', 'com', 'mission', 'ata', ',', 'true', ');', '\t\t\n\t\t\t\t\n\t\t\t\t\t', 'ut', 'ils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '2.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', 'flag', '.', 'occup', 'ata', ',', 'flag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'true', ');', '\t\t\n\t\t\t\t\t', 'ut', 'ils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'stan', 'za', '2.', 'get', 'text', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', 'flag', '.', 'occup', 'ata', ',', 'flag', '.', 'com', 'mission', 'ata', ',', 'true', ');', '\t\t\n\t\t\t\t\t', 'if', '▁(', 'p', '.', 'get', 'tr', 'am', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'ut', 'ils', '.', 'rest', 'or', 'ec', 'om', 'mission', 'i', '(', 'stan', 'za', '1.', 'get', 'text', '());', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁e', ""'"", '▁st', 'ata', '▁camb', 'iata', '▁e', '▁tut', 'ti', '▁i', '▁d', 'ati', '▁rif', 'er', 'iti', '▁ad', '▁ess', 'a', '▁ag', 'gi', 'orn', 'ati', '"");', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁!=', '▁', '0)', '▁&', '&', '▁(', '!', '(', 'ris', '▁==', '▁database', '.', 'd', 'ont', '_', 'ex', 'ists', '_', 'stan', 'za', ')', '▁)', '▁)', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'ris', ')', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n', '▁', '\n\t', 'bo', 'olean', '▁c', 'tr', 'l', 'post', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', 'false', ');', '\n\t\t', 'stan', 'za', '▁room', '2', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '2.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', '▁!', '(', 'room', '2', '▁==', 'n', 'ull', ')', '▁&', '&', '▁!', '(', 'l', '_', 'so', 'gg', '▁==', '▁null', '))', '\n\t\t\t', 'if', '\t', '(', 'l', '_', 'so', 'gg', '.', 'length', '()', '▁>', '▁cont', 'ap', 'ost', 'i', '(', 'room', '2)', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁sc', 'el', 'ta', '▁e', ""'"", '▁trop', 'po', '▁pic', 'cola', '▁per', '▁""', '+', 'l', '_', 'so', 'gg', '.', 'length', '()', '+', '""', '▁pers', 'one', '"");', '▁', '\t\t\t\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '▁', '\n\t\t\t', '▁return', '▁true', ';', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t', '▁', '\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'int', '▁cont', 'ap', 'ost', 'i', '(', 'stan', 'za', '▁s', ')', '\n\t', '{', '\n\t\t', 'int', '▁c', '▁=', '▁s', '.', 'get', 'post', 'il', 'etto', '();', '\n\t\t', 'if', '▁(', 's', '.', 'get', 'dis', 'p', 'let', 'to', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t', 'c', '++', ';', '\n\t\t', 'return', '▁c', ';', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'ric', 'er', 'ca', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '(""', 'ric', 'er', 'ca', '▁di', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁per', '▁camb', 'io', '▁stan', 'za', '"",', '3)', ';', '\n\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'so', 'g', 'gi', 'orn', 'ante', '(', 'stan', 'za', '1.', 'get', 'text', '(', '),', '1)', ';', '\n\t\t', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'p', 'ren', 'ot', 'azione', '(', 'so', 'gg', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t', 'if', '▁(', '▁!', '(', 'p', '▁==', '▁null', '))', '\n\t\t', '{', '\t\n\t\t\t', 'fig', 'lio', '.', 'data', '_', 'in', 'izio', '.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'new', '▁date', '()', '))', ');', '\n\t\t\t', 'fig', 'lio', '.', 'data', '_', 'in', 'izio', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'fig', 'lio', '.', 'data', '_', 'f', 'ine', '.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', '.', 'get', 'f', 'ines', 'ogg', '()', '))', ');', '\n\t\t\t', 'fig', 'lio', '.', 'save', '_', 'date', '▁=', '▁p', '.', 'get', 'f', 'ines', 'ogg', '();', '\n\t\t\t', 'if', '▁(', 'p', '.', 'get', 'tr', 'am', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'fig', 'lio', '.', 'con', '_', 'ag', '.', 'set', 'state', '(', 'true', ');', '\n\t\t\t\t', 'fig', 'lio', '.', 'con', '_', 'ag', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\t', 'fig', 'lio', '.', 'n', 'ome', '_', 'ag', '.', 's', 'ette', 'xt', '(', 'p', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t\t\t', 'fig', 'lio', '.', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', '}', '\t\n\t\t\t', 'fig', 'lio', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t', 'fig', 'lio', '.', 'father', '▁=', '▁this', ';', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'bo', 'olean', '▁no', 'er', 'rors', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'if', '▁(', '(', 'stan', 'za', '1.', 'get', 'text', '().', 'equ', 'als', '(""', '"")', ')', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁della', '▁stan', 'za', '▁da', '▁camb', 'ia', 're', '!', '▁""', ');', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'if', '(', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '1.', 'get', 'text', '())', '▁==', '▁null', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁e', ""'"", '▁in', 'es', 'ist', 'ente', '!', '▁""', ');', '\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'dis', 'p', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁stan', 'za', '1.', 'get', 'text', '(', '),', '▁true', ');', '\n\t\t\t\t', 'if', '▁(', 'dis', 'p', '▁!=', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁disp', '.', 'get', 'st', 'atus', 'gi', 'orno', '(', 'date', 'ut', 'ils', '.', 'dat', 'at', 'og', 'i', 'orn', 'i', '(', 'new', '▁date', '()', '),', 'const', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ')', '▁!=', '▁flag', '.', 'occup', 'ata', '▁)', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁non', '▁e', ""'"", '▁att', 'ual', 'ment', 'e', '▁occup', 'ata', '!', '▁""', ');', '\n\t\t\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.', 'utils', ';', '\n', 'import', '▁common', '.', 'utility', '.', 'date', 'utils', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ac', 'amb', 'io', '▁extends', '▁frame', '\n', '{', '\n\t', 'text', 'field', '▁stanza', '1,', '▁stanza', '2;', '\n\t', 'button', '▁ann', 'ulla', ',', '▁confer', 'ma', ',', '▁ricer', 'ca', ';', '\n\t', 'label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2;', '\n\t', 'panel', '▁panel', '1,', '▁panel', '2;', '\n\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\n\t', 'frame', '▁padre', ';', '\n\t', 'masc', 'her', 'aric', 'er', 'cast', 'anza', '▁fig', 'lio', ';', '\n\t\n\t', 'public', '▁masc', 'her', 'ac', 'amb', 'io', '(', 'frame', '▁parent', ')', '\n\t', '{', '\n', '▁super', '(""', 'camb', 'io', '▁di', '▁stanza', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁this', '.', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n\n\t', 'void', '▁setup', '()', '\n\t', '{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁stanza', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁stanza', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁stanza', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁att', 'ual', 'e', '"");', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', '▁nuova', '▁stanza', '"");', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁ricer', 'ca', '▁=', '▁new', '▁button', '(""', '▁ricer', 'ca', '▁""', ');', '\n', '▁confer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁confer', 'ma', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\t\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁stanza', '1,', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '2,', '▁2,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁stanza', '2,', '▁3,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ricer', 'ca', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁confer', 'ma', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n\n', '▁', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁10,', '▁10,', '▁10,', '▁10);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.0,', '▁1.0,', '▁10,', '▁10,', '▁10,', '▁10);', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n', '▁', '\n', '▁', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ricer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'if', '▁(', 'no', 'errors', '())', '▁', '\n\t\t\t', '{', '\t\n\t\t\t\t', '//', 'stan', 'za', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'start', 'ric', 'er', 'ca', '();', '\n', '▁', '\t', '}', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n', '▁', '\n\t', 'void', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁elenco', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁(', 'elen', 'co', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '▁', '\n\t\t\t', 'if', '▁(', 'ct', 'rl', 'post', 'i', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁ris', ';', '\n\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'chang', 'est', 'anzas', 'oggi', 'orn', 'anti', '(', 'stan', 'za', '1.', 'get', 'text', '(),', '▁stanza', '2.', 'get', 'text', '()))', '▁>', '▁0', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'chang', 'estan', 'za', 'ad', 'de', 'bit', 'i', '(', 'stan', 'za', '1.', 'get', 'text', '(),', '▁stanza', '2.', 'get', 'text', '()))', '▁<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'ris', '));', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'chang', 'est', 'anz', 'ate', 'lef', 'onate', '(', 'stan', 'za', '1.', 'get', 'text', '(),', '▁stanza', '2.', 'get', 'text', '()))', '▁<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'ris', '));', '\n\t\t\t\t\t', 'utils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'elen', 'co', '_', 'disp', ',', 'stan', 'za', '1.', 'get', 'text', '(),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(),', 'flag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'flag', '.', 'occup', 'ata', ',', 'true', ');', '\t\t\n\t\t\t\t\t', 'utils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'elen', 'co', '_', 'disp', ',', 'stan', 'za', '2.', 'get', 'text', '(),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(),', 'flag', '.', 'occup', 'ata', ',', 'flag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'true', ');', '\t\t\n\t\t\t\t\t', 'utils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'elen', 'co', '_', 'disp', ',', 'stan', 'za', '2.', 'get', 'text', '(),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(),', 'flag', '.', 'occup', 'ata', ',', 'flag', '.', 'commission', 'ata', ',', 'true', ');', '\t\t\n\t\t\t\t\n\t\t\t\t\t', 'utils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'elen', 'co', '_', 'disp', ',', 'stan', 'za', '2.', 'get', 'text', '(),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(),', 'flag', '.', 'occup', 'ata', ',', 'flag', '.', 'dis', 'pon', 'ib', 'ile', ',', 'true', ');', '\t\t\n\t\t\t\t\t', 'utils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'elen', 'co', '_', 'disp', ',', 'stan', 'za', '2.', 'get', 'text', '(),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(),', 'flag', '.', 'occup', 'ata', ',', 'flag', '.', 'commission', 'ata', ',', 'true', ');', '\t\t\n\t\t\t\t\t', 'if', '▁(', 'p', '.', 'get', 'tram', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'utils', '.', 'rest', 'orec', 'om', 'mission', 'i', '(', 'stan', 'za', '1.', 'get', 'text', '());', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', 'la', '▁stanza', '▁e', ""'"", '▁st', 'ata', '▁camb', 'iata', '▁e', '▁tutti', '▁i', '▁d', 'ati', '▁rif', 'er', 'iti', '▁ad', '▁essa', '▁ag', 'gi', 'orn', 'ati', '"");', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'ris', '▁!=', '▁0)', '▁&&', '▁(!', '(', 'ris', '▁==', '▁database', '.', 'd', 'ont', '_', 'exists', '_', 'stan', 'za', ')', '▁)', '▁)', '\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'ris', '));', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n', '▁', '\n\t', 'boolean', '▁ctr', 'l', 'post', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'stan', 'za', '1.', 'get', 'text', '(),', 'false', ');', '\n\t\t', 'stan', 'za', '▁room', '2', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '2.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', '▁!', '(', 'room', '2', '▁==', 'null', ')', '▁&&', '▁!', '(', 'l', '_', 'so', 'gg', '▁==', '▁null', '))', '\n\t\t\t', 'if', '\t', '(', 'l', '_', 'so', 'gg', '.', 'length', '()', '▁>', '▁cont', 'apost', 'i', '(', 'room', '2))', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', 'la', '▁stanza', '▁scel', 'ta', '▁e', ""'"", '▁trop', 'po', '▁pic', 'cola', '▁per', '▁""+', 'l', '_', 'so', 'gg', '.', 'length', '()', '+""', '▁pers', 'one', '"");', '▁', '\t\t\t\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t', '}', '\n\t\t\t', 'else', '▁', '\n\t\t\t', '▁return', '▁true', ';', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t', '▁', '\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'int', '▁cont', 'apost', 'i', '(', 'stan', 'za', '▁s', ')', '\n\t', '{', '\n\t\t', 'int', '▁c', '▁=', '▁s', '.', 'get', 'post', 'il', 'etto', '();', '\n\t\t', 'if', '▁(', 's', '.', 'get', 'disp', 'letto', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t', 'c', '++;', '\n\t\t', 'return', '▁c', ';', '\t\n\t', '}', '\n\t\n\t', 'void', '▁start', 'ric', 'er', 'ca', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '(""', 'ric', 'er', 'ca', '▁di', '▁stan', 'ze', '▁dis', 'pon', 'ib', 'ili', '▁per', '▁cambio', '▁stanza', '"",', '3);', '\n\t\t', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'so', 'ggi', 'orn', 'ante', '(', 'stan', 'za', '1.', 'get', 'text', '(),', '1);', '\n\t\t', 'p', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'p', 'ren', 'ot', 'azione', '(', 'so', 'gg', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t', 'if', '▁(', '▁!', '(', 'p', '▁==', '▁null', '))', '\n\t\t', '{', '\t\n\t\t\t', 'fig', 'lio', '.', 'data', '_', 'in', 'izio', '.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'new', '▁date', '()))', ');', '\n\t\t\t', 'fig', 'lio', '.', 'data', '_', 'in', 'izio', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'fig', 'lio', '.', 'data', '_', 'fine', '.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', '.', 'get', 'f', 'ines', 'ogg', '()))', ');', '\n\t\t\t', 'fig', 'lio', '.', 'save', '_', 'date', '▁=', '▁p', '.', 'get', 'f', 'ines', 'ogg', '();', '\n\t\t\t', 'if', '▁(', 'p', '.', 'get', 'tram', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'fig', 'lio', '.', 'con', '_', 'ag', '.', 'set', 'state', '(', 'true', ');', '\n\t\t\t\t', 'fig', 'lio', '.', 'con', '_', 'ag', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\t', 'fig', 'lio', '.', 'n', 'ome', '_', 'ag', '.', 's', 'ette', 'xt', '(', 'p', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t\t\t', 'fig', 'lio', '.', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', '}', '\t\n\t\t\t', 'fig', 'lio', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t\t', 'fig', 'lio', '.', 'father', '▁=', '▁this', ';', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'boolean', '▁no', 'errors', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁elenco', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t\n\t\t', 'if', '▁(', 'elen', 'co', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'if', '▁((', 'stan', 'za', '1.', 'get', 'text', '().', 'equals', '(""', '""))', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁il', '▁numero', '▁della', '▁stanza', '▁da', '▁camb', 'ia', 're', '!', '▁""', ');', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'if', '(', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '1.', 'get', 'text', '())', '▁==', '▁null', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stanza', '▁ins', 'er', 'ita', '▁e', ""'"", '▁ines', 'ist', 'ente', '!', '▁""', ');', '\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'disp', '▁=', '▁ut', 'ils', '.', 'get', 'disp', 'of', 'room', '(', 'elen', 'co', '_', 'disp', ',', '▁stanza', '1.', 'get', 'text', '(),', '▁true', ');', '\n\t\t\t\t', 'if', '▁(', 'disp', '▁!=', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁disp', '.', 'get', 'status', 'gi', 'orno', '(', 'date', 'utils', '.', 'dat', 'at', 'ogi', 'orn', 'i', '(', 'new', '▁date', '()),', 'const', '.', 'anno', '_', 'cor', 'rente', ')', '▁!=', '▁flag', '.', 'occup', 'ata', '▁)', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stanza', '▁ins', 'er', 'ita', '▁non', '▁e', ""'"", '▁att', 'ual', 'mente', '▁occup', 'ata', '!', '▁""', ');', '\n\t\t\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import java util date import common def import common util util import common util date util import moduli public class maschera cambio extend frame text field stanza stanza button annulla conferma ricerca label etichetta etichetta panel panel panel grid bag layout gridbag new grid bag layout prenotazion frame padr maschera ricerca stanza figlio public maschera cambio frame parent super cambio stanza padr parent padr set enabl fals setup init pack set visibl true void setup set font configurazion sistema font base stanza new text field stanza new text field stanza set edit fals etichetta new label stanza attual etichetta new label nuova stanza annulla new button annulla ricerca new button ricerca conferma new button conferma conferma set enabl fals panel new panel panel set layout gridbag util constrain panel etichetta grid bag constraint none grid bag constraint northwest util constrain panel stanza grid bag constraint none grid bag constraint northwest util constrain panel etichetta grid bag constraint none grid bag constraint northwest util constrain panel1 stanza2 grid bag constraint none grid bag constraint northwest panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint center util constrain panel2 ricerca grid bag constraint none grid bag constraint center util constrain panel2 conferma grid bag constraint none grid bag constraint center set layout gridbag util constrain panel1 grid bag constraint grid bag constraint west util constrain panel2 grid bag constraint grid bag constraint east public void init annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); conferma add action listen new action listen public void action perform action event start conferma (); }); ricerca add action listen new action listen public void action perform action event error ()) stanza1 set edit fals start ricerca (); }); void start conferma frame msg lista disponibilita elenco_disp principal elenco disponibilita (); elenco_disp null msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return els ctrl posti ()) int ris ris principal chang stanza soggiornanti stanza1 get text (), stanza2 get text ())) ris principal chang stanza addeb stanza1 get text (), stanza2 get text ())) msg new messag dialog problemi con databas data base str error ris )); ris principal chang stanza telefon stanza1 get text (), stanza2 get text ())) msg new messag dialog problemi con databas data base str error ris )); util aggiorna disp elenco_disp stanza1 get text (), get inizio sogg (), get fine sogg (), flag disponibil flag occupata true util aggiorna disp elenco_disp stanza2 get text (), get inizio sogg (), get fine sogg (), flag occupata flag disponibil true util aggiorna disp elenco_disp stanza2 get text (), get inizio sogg (), get fine sogg (), flag occupata flag commissionata true util aggiorna disp elenco_disp stanza2 get text (), get inizio sogg (), get fine sogg (), flag occupata flag disponibil true util aggiorna disp elenco_disp stanza2 get text (), get inizio sogg (), get fine sogg (), flag occupata flag commissionata true get tramit agenzia const util restor commissioni stanza1 get text ()); msg new avviso dialog stanza stata cambiata tutti dati rifer essa aggiornati ""); conferma set enabl fals els ris (!( ris data base dont_exists_stanza msg new messag dialog problemi con databas data base str error ris )); boolean ctrl posti frame msg lista soggiornanti l_sogg principal found soggiornanti stanza1 get text (), fals stanza room2 principal read stanza stanza2 get text ()); room2 null l_sogg null l_sogg length conta posti room2 msg new avviso dialog stanza scelta troppo piccola per l_sogg length ()+"" person ""); return fals els return true els msg new messag dialog problemi con databas ""); return fals int conta posti stanza int get posti letto (); get disp letto agg const ++; return void start ricerca set enabl fals figlio new maschera ricerca stanza ricerca stanz disponibili per cambio stanza soggiornant sogg principal read soggiornant stanza1 get text (), principal read prenotazion sogg get prenotazion ()); null figlio data_inizio set text date util pars date date util give string date new date ()))); figlio data_inizio set edit fals figlio data_fin set text date util pars date date util give string date get fine sogg ()))); figlio save_d get fine sogg (); get tramit agenzia const figlio con_ag set state true figlio con_ag set enabl fals figlio nome_ag set text get nome agenzia ()); figlio nome_ag set edit fals figlio set visibl true figlio father boolean error frame msg disponibilita disp new disponibilita (); lista disponibilita elenco_disp principal elenco disponibilita (); elenco_disp null msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return fals stanza1 get text (). equal ("""")) msg new avviso dialog inserir numero della stanza cambiar ""); return fals els principal read stanza stanza1 get text ()) null msg new messag dialog stanza inserita inesistent ""); return fals els disp util get disp room elenco_disp stanza1 get text (), true disp null disp get status giorno date util data togiorni new date ()), const anno_corrent flag occupata msg new messag dialog stanza inserita non attualment occupata ""); return fals return true"
28~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/SubSoggiorno.java~SubSoggiorno.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.Random;
import common.utility.*;
import moduli.*;

public class SubSoggiorno extends Frame
{
   Label label;
   Panel panel0, panel1;
   Button Arrivo, Cambio, Addebito, Telefonate, Calcolo, Ricerca, BeniServizi,Annulla;
   GridBagLayout gridbag=new GridBagLayout();
   Frame p = new Frame();	
   RicercaPrenotazione ric_pren;
   Frame figlio;

   public SubSoggiorno()
   {
      super(""Soggiorno"");
      setup();
      init();
      pack();
   }

   void setup()
   {
      this.setFont(ConfigurazioneSistema.font_sub);
      panel0=new Panel();
      panel0.setLayout(gridbag);
      panel0.setBackground(Color.white);
      
      Random rnd = new Random();
      int num;
      if ((num = (rnd.nextInt() % 5) ) < 0)
      	  num = num * -1;
      num ++;	   
      String file_name = new String(""servizi""+num+"".jpg"");
      Immagine  figura = new Immagine(file_name);
      Etichetta etich = new Etichetta(""Soggiorno.gif"");
      Utils.constrain(panel0,etich, 0, 0, 2, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
      Utils.constrain(panel0,figura, 2, 0, 10, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
       
      panel1 = new Panel();
      panel1.setLayout(new GridLayout(8,1));
      Arrivo = new Button("" Arrivo clienti "");
      Cambio = new Button("" Cambio stanza "");
      Addebito = new Button("" Addebito spese "");
      Telefonate = new Button("" Telefonate "");
      Calcolo = new Button("" Calcolo conto "");
      Ricerca = new Button("" Ricerca... "");
      BeniServizi = new Button("" Beni & Servizi "");
      Annulla = new Button("" Indietro "");
      panel1.add(Arrivo);
      panel1.add(Addebito);
      panel1.add(BeniServizi);
      panel1.add(Telefonate);
      panel1.add(Cambio);
      panel1.add(Calcolo);
      panel1.add(Ricerca);
      panel1.add(Annulla);

      this.setLayout(gridbag);
      Utils.constrain(this,panel0, 0, 0, 12, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
      Utils.constrain(this,panel1, 12, 0, 1, 12,GridBagConstraints.BOTH,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
   }

   void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            p.setEnabled(true);
         }
      });
   
   	Arrivo.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            insSoggiornante();
         }
      });
    
    Calcolo.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            calcoloConto();
         }
      });
      
   	Addebito.addActionListener(new ActionListener()
    {
     	public void actionPerformed(ActionEvent e)
        {
            addebitaBeneServizio();
        }
   	});
   	
   	BeniServizi.addActionListener(new ActionListener()
    {
     	public void actionPerformed(ActionEvent e)
        {
            visitaBeneServizio();
        }
   	});
   	
   	Telefonate.addActionListener(new ActionListener()
    {
     	public void actionPerformed(ActionEvent e)
        {
            ricercaTelefonate();
        }
   	});
   	
   	Cambio.addActionListener(new ActionListener()
    {
     	public void actionPerformed(ActionEvent e)
        {
            cambiaStanza();
        }
   	});  
      
   	Ricerca.addActionListener(new ActionListener()
    {
     	public void actionPerformed(ActionEvent e)
        {
            startRicerca();
        }
   	});  
   }

	void insSoggiornante()
	{
		this.setEnabled(false);
		ric_pren = new RicercaPrenotazione(""Arrivo clienti"",3);
		ric_pren.setVisible(true);
		ric_pren.padre = this;
	}
	
	void addebitaBeneServizio()
	{
		figlio = new MascheraAddebiti(this);
	}
	
	void visitaBeneServizio()
	{
		figlio = new RicercaAddebiti(this);
	}
	
	void ricercaTelefonate()
	{
		figlio = new RicercaTelefonate(this);
	}
	
	void calcoloConto()
	{
		figlio = new MascheraCalcoloConto(this);
		figlio.setVisible(true);
	}
	
	void cambiaStanza()
	{
		figlio = new MascheraCambio(this);
	}

	void startRicerca()
	{
		figlio = new MascheraRicercaSoggiornante(this);
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'r', 'and', 'om', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁sub', 'so', 'g', 'gi', 'orn', 'o', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1', ';', '\n', '▁but', 'ton', '▁arr', 'iv', 'o', ',', '▁c', 'amb', 'io', ',', '▁add', 'e', 'bit', 'o', ',', '▁tele', 'f', 'on', 'ate', ',', '▁cal', 'col', 'o', ',', '▁ric', 'er', 'ca', ',', '▁ben', 'is', 'erv', 'iz', 'i', ',', 'ann', 'ull', 'a', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '(', ');', '\t\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁ric', '_', 'p', 'ren', ';', '\n', '▁frame', '▁fig', 'l', 'io', ';', '\n\n', '▁public', '▁sub', 'so', 'g', 'gi', 'orn', 'o', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'so', 'g', 'gi', 'orn', 'o', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'sub', ');', '\n', '▁pan', 'el', '0', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁pan', 'el', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁', '\n', '▁rand', 'om', '▁r', 'nd', '▁=', '▁new', '▁rand', 'om', '(', ');', '\n', '▁int', '▁num', ';', '\n', '▁if', '▁(', '(', 'n', 'um', '▁=', '▁(', 'r', 'nd', '.', 'ne', 'xt', 'int', '(', ')', '▁', '%', '▁5', ')', '▁)', '▁', '<', '▁', '0)', '\n', '▁', '\t', '▁num', '▁=', '▁num', '▁*', '▁-', '1', ';', '\n', '▁num', '▁+', '+', ';', '\t', '▁', '\n', '▁string', '▁file', '_', 'name', '▁=', '▁new', '▁string', '(', '""', 's', 'erv', 'iz', 'i', '""', '+', 'n', 'um', '+', '"".', 'j', 'p', 'g', '"")', ';', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', 'f', 'ile', '_', 'name', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁et', 'ich', '▁=', '▁new', '▁et', 'ic', 'he', 'tt', 'a', '(', '""', 'so', 'g', 'gi', 'orn', 'o', '.', 'g', 'if', '"")', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'f', 'ig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'new', '▁gr', 'id', 'l', 'ay', 'out', '(', '8,', '1)', ');', '\n', '▁arr', 'iv', 'o', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁arr', 'iv', 'o', '▁cl', 'ient', 'i', '▁""', ');', '\n', '▁c', 'amb', 'io', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁c', 'amb', 'io', '▁stan', 'za', '▁""', ');', '\n', '▁add', 'e', 'bit', 'o', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁add', 'e', 'bit', 'o', '▁sp', 'ese', '▁""', ');', '\n', '▁tele', 'f', 'on', 'ate', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁tele', 'f', 'on', 'ate', '▁""', ');', '\n', '▁cal', 'col', 'o', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁cal', 'col', 'o', '▁cont', 'o', '▁""', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ric', 'er', 'ca', '...', '▁""', ');', '\n', '▁ben', 'is', 'erv', 'iz', 'i', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ben', 'i', '▁&', '▁serv', 'iz', 'i', '▁""', ');', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ar', 'r', 'iv', 'o', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ad', 'de', 'bit', 'o', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'b', 'en', 'is', 'erv', 'iz', 'i', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'te', 'le', 'f', 'on', 'ate', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'c', 'amb', 'io', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'cal', 'col', 'o', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ric', 'er', 'ca', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ann', 'ull', 'a', ');', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁p', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t', 'ar', 'r', 'iv', 'o', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'so', 'g', 'gi', 'orn', 'ante', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁cal', 'col', 'o', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁cal', 'col', 'oc', 'onto', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t', 'ad', 'de', 'bit', 'o', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'ab', 'en', 'es', 'erv', 'iz', 'io', '(', ');', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'b', 'en', 'is', 'erv', 'iz', 'i', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁visit', 'ab', 'en', 'es', 'erv', 'iz', 'io', '(', ');', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'te', 'le', 'f', 'on', 'ate', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '(', ');', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'c', 'amb', 'io', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁c', 'amb', 'i', 'ast', 'an', 'za', '(', ');', '\n', '▁}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁', '\n', '▁', '\t', 'ric', 'er', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁start', 'ric', 'er', 'ca', '(', ');', '\n', '▁}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁ins', 'so', 'g', 'gi', 'orn', 'ante', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', '""', 'ar', 'r', 'iv', 'o', '▁cl', 'ient', 'i', '"",', '3)', ';', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁add', 'e', 'bit', 'ab', 'en', 'es', 'erv', 'iz', 'io', '(', ')', '\n\t', '{', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁m', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁visit', 'ab', 'en', 'es', 'erv', 'iz', 'io', '(', ')', '\n\t', '{', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁ric', 'er', 'ca', 'ad', 'de', 'bit', 'i', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '(', ')', '\n\t', '{', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁cal', 'col', 'oc', 'onto', '(', ')', '\n\t', '{', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁m', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '(', 'this', ');', '\n\t\t', 'f', 'ig', 'l', 'io', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁c', 'amb', 'i', 'ast', 'an', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁m', 'asc', 'her', 'ac', 'amb', 'io', '(', 'this', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'ric', 'er', 'ca', '(', ')', '\n\t', '{', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁m', 'asc', 'her', 'ar', 'ic', 'erc', 'as', 'og', 'gi', 'orn', 'ante', '(', 'this', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'rand', 'om', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁sub', 'so', 'g', 'gi', 'orno', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1', ';', '\n', '▁button', '▁arr', 'ivo', ',', '▁camb', 'io', ',', '▁add', 'e', 'bit', 'o', ',', '▁tele', 'f', 'on', 'ate', ',', '▁cal', 'colo', ',', '▁ric', 'er', 'ca', ',', '▁ben', 'is', 'erv', 'iz', 'i', ',', 'ann', 'ulla', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '();', '\t\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁ric', '_', 'p', 'ren', ';', '\n', '▁frame', '▁fig', 'lio', ';', '\n\n', '▁public', '▁sub', 'so', 'g', 'gi', 'orno', '()', '\n', '▁{', '\n', '▁super', '(""', 'so', 'g', 'gi', 'orno', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁', '\n', '▁random', '▁r', 'nd', '▁=', '▁new', '▁random', '();', '\n', '▁int', '▁num', ';', '\n', '▁if', '▁(', '(', 'num', '▁=', '▁(', 'r', 'nd', '.', 'next', 'int', '()', '▁%', '▁5)', '▁)', '▁<', '▁', '0)', '\n', '▁', '\t', '▁num', '▁=', '▁num', '▁*', '▁-', '1', ';', '\n', '▁num', '▁+', '+', ';', '\t', '▁', '\n', '▁string', '▁file', '_', 'name', '▁=', '▁new', '▁string', '(""', 'serv', 'iz', 'i', '""', '+', 'num', '+', '"".', 'j', 'pg', '"");', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', 'file', '_', 'name', ');', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'so', 'g', 'gi', 'orno', '.', 'g', 'if', '"");', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'fig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'new', '▁grid', 'lay', 'out', '(', '8,', '1)', ');', '\n', '▁arr', 'ivo', '▁=', '▁new', '▁button', '(""', '▁arr', 'ivo', '▁client', 'i', '▁""', ');', '\n', '▁camb', 'io', '▁=', '▁new', '▁button', '(""', '▁camb', 'io', '▁stan', 'za', '▁""', ');', '\n', '▁add', 'e', 'bit', 'o', '▁=', '▁new', '▁button', '(""', '▁add', 'e', 'bit', 'o', '▁sp', 'ese', '▁""', ');', '\n', '▁tele', 'f', 'on', 'ate', '▁=', '▁new', '▁button', '(""', '▁tele', 'f', 'on', 'ate', '▁""', ');', '\n', '▁cal', 'colo', '▁=', '▁new', '▁button', '(""', '▁cal', 'colo', '▁cont', 'o', '▁""', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁button', '(""', '▁ric', 'er', 'ca', '...', '▁""', ');', '\n', '▁ben', 'is', 'erv', 'iz', 'i', '▁=', '▁new', '▁button', '(""', '▁ben', 'i', '▁&', '▁serv', 'iz', 'i', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'arr', 'ivo', ');', '\n', '▁panel', '1.', 'add', '(', 'ad', 'de', 'bit', 'o', ');', '\n', '▁panel', '1.', 'add', '(', 'ben', 'is', 'erv', 'iz', 'i', ');', '\n', '▁panel', '1.', 'add', '(', 'tele', 'f', 'on', 'ate', ');', '\n', '▁panel', '1.', 'add', '(', 'c', 'amb', 'io', ');', '\n', '▁panel', '1.', 'add', '(', 'cal', 'colo', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁p', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t', 'arr', 'ivo', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'so', 'g', 'gi', 'orn', 'ante', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁cal', 'colo', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁cal', 'col', 'oc', 'onto', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t', 'ad', 'de', 'bit', 'o', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'ab', 'enes', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'ben', 'is', 'erv', 'iz', 'i', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁visit', 'ab', 'enes', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'tele', 'f', 'on', 'ate', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'c', 'amb', 'io', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁camb', 'iast', 'anza', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁', '\n', '▁', '\t', 'ric', 'er', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'ric', 'er', 'ca', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁ins', 'so', 'g', 'gi', 'orn', 'ante', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', 'arr', 'ivo', '▁client', 'i', '"",', '3)', ';', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁add', 'e', 'bit', 'ab', 'enes', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'hera', 'ad', 'de', 'bit', 'i', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁visit', 'ab', 'enes', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁ric', 'er', 'ca', 'ad', 'de', 'bit', 'i', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁cal', 'col', 'oc', 'onto', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '(', 'this', ');', '\n\t\t', 'fig', 'lio', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁camb', 'iast', 'anza', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ac', 'amb', 'io', '(', 'this', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'ric', 'er', 'ca', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ar', 'ic', 'erc', 'as', 'og', 'gi', 'orn', 'ante', '(', 'this', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'random', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁sub', 'so', 'ggi', 'orno', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1;', '\n', '▁button', '▁arr', 'ivo', ',', '▁cambio', ',', '▁add', 'e', 'bit', 'o', ',', '▁telef', 'onate', ',', '▁cal', 'colo', ',', '▁ricer', 'ca', ',', '▁ben', 'is', 'erv', 'izi', ',', 'ann', 'ulla', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'layout', '();', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '();', '\t\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁ric', '_', 'p', 'ren', ';', '\n', '▁frame', '▁fig', 'lio', ';', '\n\n', '▁public', '▁sub', 'so', 'ggi', 'orno', '()', '\n', '▁{', '\n', '▁super', '(""', 'so', 'ggi', 'orno', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁', '\n', '▁random', '▁rnd', '▁=', '▁new', '▁random', '();', '\n', '▁int', '▁num', ';', '\n', '▁if', '▁((', 'num', '▁=', '▁(', 'r', 'nd', '.', 'next', 'int', '()', '▁%', '▁5)', '▁)', '▁<', '▁0)', '\n', '▁', '\t', '▁num', '▁=', '▁num', '▁*', '▁-', '1;', '\n', '▁num', '▁+', '+', ';', '\t', '▁', '\n', '▁string', '▁file', '_', 'name', '▁=', '▁new', '▁string', '(""', 'serv', 'izi', '""', '+', 'num', '+', '"".', 'jpg', '"");', '\n', '▁imm', 'agine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'agine', '(', 'file', '_', 'name', ');', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'so', 'ggi', 'orno', '.', 'gif', '"");', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'et', 'ich', ',', '▁0,', '▁0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'fig', 'ura', ',', '▁2,', '▁0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'new', '▁grid', 'layout', '(', '8,', '1)', ');', '\n', '▁arr', 'ivo', '▁=', '▁new', '▁button', '(""', '▁arr', 'ivo', '▁client', 'i', '▁""', ');', '\n', '▁cambio', '▁=', '▁new', '▁button', '(""', '▁cambio', '▁stanza', '▁""', ');', '\n', '▁add', 'e', 'bit', 'o', '▁=', '▁new', '▁button', '(""', '▁add', 'e', 'bit', 'o', '▁sp', 'ese', '▁""', ');', '\n', '▁telef', 'onate', '▁=', '▁new', '▁button', '(""', '▁telef', 'onate', '▁""', ');', '\n', '▁cal', 'colo', '▁=', '▁new', '▁button', '(""', '▁cal', 'colo', '▁cont', 'o', '▁""', ');', '\n', '▁ricer', 'ca', '▁=', '▁new', '▁button', '(""', '▁ricer', 'ca', '...', '▁""', ');', '\n', '▁ben', 'is', 'erv', 'izi', '▁=', '▁new', '▁button', '(""', '▁beni', '▁&', '▁serv', 'izi', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'arr', 'ivo', ');', '\n', '▁panel', '1.', 'add', '(', 'ad', 'de', 'bit', 'o', ');', '\n', '▁panel', '1.', 'add', '(', 'ben', 'is', 'erv', 'izi', ');', '\n', '▁panel', '1.', 'add', '(', 'tele', 'f', 'onate', ');', '\n', '▁panel', '1.', 'add', '(', 'camb', 'io', ');', '\n', '▁panel', '1.', 'add', '(', 'cal', 'colo', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁12,', '▁0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁p', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t', 'arr', 'ivo', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'so', 'ggi', 'orn', 'ante', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁cal', 'colo', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁cal', 'col', 'oc', 'onto', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t', 'ad', 'de', 'bit', 'o', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'ab', 'enes', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'ben', 'is', 'erv', 'izi', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁visit', 'ab', 'enes', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'tele', 'f', 'onate', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ric', 'erc', 'ate', 'lef', 'onate', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'camb', 'io', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁camb', 'iast', 'anza', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁', '\n', '▁', '\t', 'ric', 'er', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'ric', 'er', 'ca', '();', '\n', '▁}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁}', '\n\n\t', 'void', '▁ins', 'so', 'ggi', 'orn', 'ante', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', 'arr', 'ivo', '▁client', 'i', '"",', '3);', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁add', 'e', 'bit', 'ab', 'enes', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁maschera', 'ad', 'de', 'bit', 'i', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁visit', 'ab', 'enes', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁ricer', 'ca', 'ad', 'de', 'bit', 'i', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁ric', 'erc', 'ate', 'lef', 'onate', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁ric', 'erc', 'ate', 'lef', 'onate', '(', 'this', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁cal', 'col', 'oc', 'onto', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'acal', 'col', 'oc', 'onto', '(', 'this', ');', '\n\t\t', 'fig', 'lio', '.', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁camb', 'iast', 'anza', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ac', 'amb', 'io', '(', 'this', ');', '\n\t', '}', '\n\n\t', 'void', '▁start', 'ric', 'er', 'ca', '()', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'aric', 'erc', 'as', 'oggi', 'orn', 'ante', '(', 'this', ');', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import java import java util random import common util import moduli public class sub soggiorno extend frame label label panel panel panel button arrivo cambio addebito telefon calcolo ricerca beni servizi annulla grid bag layout gridbag new grid bag layout frame new frame ricerca prenotazion ric pren frame figlio public sub soggiorno super soggiorno setup init pack void setup set font configurazion sistema font sub panel new panel panel set layout gridbag panel set background color white random rnd new random int num num rnd next int num num num string file name new string servizi num jpg immagin figura new immagin file name etichetta etich new etichetta soggiorno gif util constrain panel etich grid bag constraint vertic grid bag constraint center util constrain panel figura grid bag constraint vertic grid bag constraint center panel new panel panel set layout new grid layout arrivo new button arrivo clienti cambio new button cambio stanza addebito new button addebito spese telefon new button telefon calcolo new button calcolo conto ricerca new button ricerca ... ""); beni servizi new button beni servizi ""); annulla new button indietro ""); panel1 add arrivo panel1 add addebito panel1 add beni servizi panel1 add telefon panel1 add cambio panel1 add calcolo panel1 add ricerca panel1 add annulla set layout gridbag util constrain panel0 grid bag constraint vertic grid bag constraint west util constrain panel1 grid bag constraint grid bag constraint west void init annulla add action listen new action listen public void action perform action event dispos (); set enabl true }); arrivo add action listen new action listen public void action perform action event soggiornant (); }); calcolo add action listen new action listen public void action perform action event calcolo conto (); }); addebito add action listen new action listen public void action perform action event addebita bene servizio (); }); beni servizi add action listen new action listen public void action perform action event visita bene servizio (); }); telefon add action listen new action listen public void action perform action event ricerca telefon (); }); cambio add action listen new action listen public void action perform action event cambia stanza (); }); ricerca add action listen new action listen public void action perform action event start ricerca (); }); void soggiornant set enabl fals ric_pren new ricerca prenotazion arrivo clienti ric_pren set visibl true ric_pren padr void addebita bene servizio figlio new maschera addeb void visita bene servizio figlio new ricerca addeb void ricerca telefon figlio new ricerca telefon void calcolo conto figlio new maschera calcolo conto figlio set visibl true void cambia stanza figlio new maschera cambio void start ricerca figlio new maschera ricerca soggiornant"
29~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/SubStanze.java~SubStanze.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import common.utility.*;

public class SubStanze extends Frame
{
   Label label;
   Panel panel0, panel1;
   Button Inserimento, Modifica, Cancellazione, Ricerca, Annulla;
   GridBagLayout gridbag=new GridBagLayout();
   SubGestione s = new SubGestione();
   InserisciStanze call_1;
   ModificaStanze call_2;
   CancellaStanze call_3;
   VediStanza call_4;
   
   public SubStanze()
   {
      super(""Gestione delle stanze"");
      setup();
      init();
      pack();
   }

   void setup()
   {
      this.setFont(ConfigurazioneSistema.font_sub);
	  panel0=new Panel();
      panel0.setLayout(gridbag);
      panel0.setBackground(Color.white);
      Immagine  figura = new Immagine(""camera1.jpg"");
      Etichetta etich = new Etichetta(""Stanze.gif"");
      Utils.constrain(panel0,etich, 0, 0, 2, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
      Utils.constrain(panel0,figura, 2, 0, 10, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
       
      panel1 = new Panel();
      panel1.setLayout(new GridLayout(5,1));
      Inserimento = new Button(""Inserimento"");
      Modifica = new Button(""Modifica"");
      Cancellazione = new Button(""Cancellazione"");
      Ricerca = new Button(""Ricerca..."");
      Annulla = new Button(""Indietro"");
      panel1.add(Inserimento);
      panel1.add(Modifica);
      panel1.add(Cancellazione);
      panel1.add(Ricerca);
      panel1.add(Annulla);

      this.setLayout(gridbag);
      Utils.constrain(this,panel0, 0, 0, 12, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
      Utils.constrain(this,panel1, 12, 0, 1, 12,GridBagConstraints.BOTH,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
   }

   void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
           	s.setEnabled(true);
         }
      });
      
      Inserimento.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            insStanza();
         }
      });

      Modifica.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            modStanza();
         }
      });

      Cancellazione.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            cancStanza();
         }
      });
      
      Ricerca.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            vediStanza();
         }
      });
   }

	void insStanza()
	{
		this.setEnabled(false);
		call_1 = new InserisciStanze();
		call_1.setVisible(true);
		call_1.stanze = this;
	}

	void modStanza()
	{
		this.setEnabled(false);
		call_2 = new ModificaStanze();
		call_2.setVisible(true);
		call_2.stanze = this;
	}

	void cancStanza()
	{
		this.setEnabled(false);
		call_3 = new CancellaStanze();
		call_3.setVisible(true);
		call_3.stanze = this;
	}
	
	void vediStanza()
	{
		this.setEnabled(false);
		call_4 = new VediStanza();
		call_4.setVisible(true);
		call_4.stanze = this;
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁subst', 'an', 'ze', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1', ';', '\n', '▁but', 'ton', '▁ins', 'er', 'iment', 'o', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'az', 'ion', 'e', ',', '▁ric', 'er', 'ca', ',', '▁ann', 'ull', 'a', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁sub', 'gest', 'ion', 'e', '▁s', '▁=', '▁new', '▁sub', 'gest', 'ion', 'e', '(', ');', '\n', '▁ins', 'er', 'isc', 'istan', 'ze', '▁call', '_', '1', ';', '\n', '▁mod', 'ific', 'ast', 'an', 'ze', '▁call', '_', '2', ';', '\n', '▁canc', 'ell', 'ast', 'an', 'ze', '▁call', '_', '3', ';', '\n', '▁v', 'ed', 'istan', 'za', '▁call', '_', '4', ';', '\n', '▁', '\n', '▁public', '▁subst', 'an', 'ze', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'gest', 'ion', 'e', '▁del', 'le', '▁stan', 'ze', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'sub', ');', '\n\t', '▁pan', 'el', '0', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁pan', 'el', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', '""', 'c', 'amer', 'a', '1.', 'j', 'p', 'g', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁et', 'ich', '▁=', '▁new', '▁et', 'ic', 'he', 'tt', 'a', '(', '""', 'stan', 'ze', '.', 'g', 'if', '"")', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'f', 'ig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'new', '▁gr', 'id', 'l', 'ay', 'out', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'iment', 'o', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ins', 'er', 'iment', 'o', '"")', ';', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'mod', 'ific', 'a', '"")', ';', '\n', '▁canc', 'ell', 'az', 'ion', 'e', '▁=', '▁new', '▁but', 'ton', '(', '""', 'c', 'anc', 'ell', 'az', 'ion', 'e', '"")', ';', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ric', 'er', 'ca', '..', '.""', ');', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ind', 'iet', 'ro', '"")', ';', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ins', 'er', 'iment', 'o', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'mod', 'ific', 'a', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'c', 'anc', 'ell', 'az', 'ion', 'e', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ric', 'er', 'ca', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ann', 'ull', 'a', ');', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁', '\t', 's', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'iment', 'o', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'stan', 'za', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁mod', 'ific', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'stan', 'za', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'stan', 'za', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ric', 'er', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁v', 'ed', 'istan', 'za', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁ins', 'stan', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', '1', '▁=', '▁new', '▁ins', 'er', 'isc', 'istan', 'ze', '(', ');', '\n\t\t', 'c', 'all', '_', '1.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'all', '_', '1.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁mod', 'stan', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', '2', '▁=', '▁new', '▁mod', 'ific', 'ast', 'an', 'ze', '(', ');', '\n\t\t', 'c', 'all', '_', '2.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'all', '_', '2.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁canc', 'stan', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', '3', '▁=', '▁new', '▁canc', 'ell', 'ast', 'an', 'ze', '(', ');', '\n\t\t', 'c', 'all', '_', '3.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'all', '_', '3.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁v', 'ed', 'istan', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', '4', '▁=', '▁new', '▁v', 'ed', 'istan', 'za', '(', ');', '\n\t\t', 'c', 'all', '_', '4.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'all', '_', '4.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'public', '▁class', '▁subst', 'an', 'ze', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1', ';', '\n', '▁button', '▁ins', 'er', 'iment', 'o', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'azione', ',', '▁ric', 'er', 'ca', ',', '▁ann', 'ulla', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁sub', 'gest', 'ione', '▁s', '▁=', '▁new', '▁sub', 'gest', 'ione', '();', '\n', '▁ins', 'er', 'isc', 'istan', 'ze', '▁call', '_', '1', ';', '\n', '▁mod', 'ific', 'ast', 'an', 'ze', '▁call', '_', '2', ';', '\n', '▁canc', 'ell', 'ast', 'an', 'ze', '▁call', '_', '3', ';', '\n', '▁ved', 'istan', 'za', '▁call', '_', '4', ';', '\n', '▁', '\n', '▁public', '▁subst', 'an', 'ze', '()', '\n', '▁{', '\n', '▁super', '(""', 'gest', 'ione', '▁delle', '▁stan', 'ze', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n\t', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(""', 'camer', 'a', '1.', 'j', 'pg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'stan', 'ze', '.', 'g', 'if', '"");', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'fig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'new', '▁grid', 'lay', 'out', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'iment', 'o', '▁=', '▁new', '▁button', '(""', 'ins', 'er', 'iment', 'o', '"");', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁button', '(""', 'mod', 'ific', 'a', '"");', '\n', '▁canc', 'ell', 'azione', '▁=', '▁new', '▁button', '(""', 'canc', 'ell', 'azione', '"");', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁button', '(""', 'ric', 'er', 'ca', '...""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ind', 'iet', 'ro', '"");', '\n', '▁panel', '1.', 'add', '(', 'ins', 'er', 'iment', 'o', ');', '\n', '▁panel', '1.', 'add', '(', 'mod', 'ific', 'a', ');', '\n', '▁panel', '1.', 'add', '(', 'canc', 'ell', 'azione', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁', '\t', 's', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'iment', 'o', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'stan', 'za', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁mod', 'ific', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'stan', 'za', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'stan', 'za', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ric', 'er', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ved', 'istan', 'za', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁ins', 'stan', 'za', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', '1', '▁=', '▁new', '▁ins', 'er', 'isc', 'istan', 'ze', '();', '\n\t\t', 'call', '_', '1.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'call', '_', '1.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁mod', 'stan', 'za', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', '2', '▁=', '▁new', '▁mod', 'ific', 'ast', 'an', 'ze', '();', '\n\t\t', 'call', '_', '2.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'call', '_', '2.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁canc', 'stan', 'za', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', '3', '▁=', '▁new', '▁canc', 'ell', 'ast', 'an', 'ze', '();', '\n\t\t', 'call', '_', '3.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'call', '_', '3.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ved', 'istan', 'za', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', '4', '▁=', '▁new', '▁ved', 'istan', 'za', '();', '\n\t\t', 'call', '_', '4.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'call', '_', '4.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n\n', 'public', '▁class', '▁subst', 'anze', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1;', '\n', '▁button', '▁ins', 'er', 'imento', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'azione', ',', '▁ricer', 'ca', ',', '▁ann', 'ulla', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'layout', '();', '\n', '▁sub', 'gest', 'ione', '▁s', '▁=', '▁new', '▁sub', 'gest', 'ione', '();', '\n', '▁ins', 'er', 'isc', 'istan', 'ze', '▁call', '_', '1;', '\n', '▁mod', 'ific', 'ast', 'anze', '▁call', '_', '2;', '\n', '▁canc', 'ell', 'ast', 'anze', '▁call', '_', '3;', '\n', '▁ved', 'istan', 'za', '▁call', '_', '4;', '\n', '▁', '\n', '▁public', '▁subst', 'anze', '()', '\n', '▁{', '\n', '▁super', '(""', 'gest', 'ione', '▁delle', '▁stan', 'ze', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n\t', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'agine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'agine', '(""', 'camera', '1.', 'jpg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'stan', 'ze', '.', 'gif', '"");', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'et', 'ich', ',', '▁0,', '▁0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'fig', 'ura', ',', '▁2,', '▁0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'new', '▁grid', 'layout', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'imento', '▁=', '▁new', '▁button', '(""', 'ins', 'er', 'imento', '"");', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁button', '(""', 'mod', 'ific', 'a', '"");', '\n', '▁canc', 'ell', 'azione', '▁=', '▁new', '▁button', '(""', 'canc', 'ell', 'azione', '"");', '\n', '▁ricer', 'ca', '▁=', '▁new', '▁button', '(""', 'ric', 'er', 'ca', '...""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ind', 'ietro', '"");', '\n', '▁panel', '1.', 'add', '(', 'ins', 'er', 'imento', ');', '\n', '▁panel', '1.', 'add', '(', 'mod', 'ific', 'a', ');', '\n', '▁panel', '1.', 'add', '(', 'canc', 'ell', 'azione', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁12,', '▁0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁', '\t', 's', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'imento', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'stan', 'za', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁mod', 'ific', 'a', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'stan', 'za', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'stan', 'za', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ricer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ved', 'istan', 'za', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁ins', 'stan', 'za', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_1', '▁=', '▁new', '▁ins', 'er', 'isc', 'istan', 'ze', '();', '\n\t\t', 'call', '_', '1.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'call', '_', '1.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\n\t', 'void', '▁mod', 'stan', 'za', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_2', '▁=', '▁new', '▁mod', 'ific', 'ast', 'anze', '();', '\n\t\t', 'call', '_', '2.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'call', '_', '2.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\n\t', 'void', '▁canc', 'stan', 'za', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_3', '▁=', '▁new', '▁canc', 'ell', 'ast', 'anze', '();', '\n\t\t', 'call', '_', '3.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'call', '_', '3.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁ved', 'istan', 'za', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_', '4', '▁=', '▁new', '▁ved', 'istan', 'za', '();', '\n\t\t', 'call', '_', '4.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'call', '_', '4.', 'stan', 'ze', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import java import common util public class sub stanz extend frame label label panel panel panel button inserimento modifica cancellazion ricerca annulla grid bag layout gridbag new grid bag layout sub gestion new sub gestion inserisci stanz call modifica stanz call cancella stanz call vedi stanza call public sub stanz super gestion dell stanz setup init pack void setup set font configurazion sistema font sub panel new panel panel set layout gridbag panel set background color white immagin figura new immagin camera jpg etichetta etich new etichetta stanz gif util constrain panel etich grid bag constraint vertic grid bag constraint center util constrain panel figura grid bag constraint vertic grid bag constraint center panel new panel panel set layout new grid layout inserimento new button inserimento modifica new button modifica cancellazion new button cancellazion ricerca new button ricerca annulla new button indietro panel add inserimento panel add modifica panel add cancellazion panel add ricerca panel add annulla set layout gridbag util constrain panel0 grid bag constraint vertic grid bag constraint west util constrain panel1 grid bag constraint grid bag constraint west void init annulla add action listen new action listen public void action perform action event dispos (); set enabl true }); inserimento add action listen new action listen public void action perform action event stanza (); }); modifica add action listen new action listen public void action perform action event mod stanza (); }); cancellazion add action listen new action listen public void action perform action event canc stanza (); }); ricerca add action listen new action listen public void action perform action event vedi stanza (); }); void stanza set enabl fals call_1 new inserisci stanz (); call_1 set visibl true call_1 stanz void mod stanza set enabl fals call_2 new modifica stanz (); call_2 set visibl true call_2 stanz void canc stanza set enabl fals call_3 new cancella stanz (); call_3 set visibl true call_3 stanz void vedi stanza set enabl fals call_4 new vedi stanza (); call_4 set visibl true call_4 stanz
30~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/ModificaStanze.java~ModificaStanze.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class ModificaStanze extends DescrittoreStanze
{
	public ModificaStanze()
	{
		super(""Modifica dei dati delle stanze"", ""Modifica"", 2);
		init();
	}

	public void init()
	{
		testo1.setEditable(true);
		testo2.setEditable(false);
		testo3.setEditable(false);
		testo4.setEditable(false);
		mycheckboxes.setEnabled(false);
		Azione.setEnabled(false);
		
		Azione.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startAzione();
			}
		});
      
		testo1.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startTesto1();
			}			      	
		});
		
		Cerca.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startTesto1();
			}			      	
		});
    } // init
	
	void startAzione()
	{
		MessageDialog msg;
		
		if (!errori())
		{
			Stanza room = readDatiStanza();					
			int j;
			if( (j = (Principale.db).changeStanza(room.getNumStanza(), room.getPostiLetto(), 
							room.getDispLettoAgg(), room.getPxBase(), 
							room.getDescrizione())) == DataBase.OK)
			{
				cleanFields();
				testo1.setEditable(true);
				testo2.setEditable(false);
				testo3.setEditable(false);
				testo4.setEditable(false);
				mycheckboxes.setEnabled(false);
				Azione.setEnabled(false);
			}
			else
				msg = new MessageDialog(this, ""Problemi con il data base: ""+DataBase.strErrore(j));
		}
	}

	void startTesto1()
	{
		MessageDialog msg;

		Stanza room;
		if ((room = (Principale.db).readStanza(testo1.getText())) != null)
		{
			writeDatiStanza(room);
			testo1.setEditable(false);
			testo2.setEditable(true);
			testo3.setEditable(true);
			testo4.setEditable(true);
			mycheckboxes.setEnabled(true);
			Azione.setEnabled(true);
		}
		else
			msg = new MessageDialog(this, ""Stanza inesistente!"");
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁mod', 'ific', 'ast', 'an', 'ze', '▁ext', 'ends', '▁desc', 'rit', 'tor', 'est', 'an', 'ze', '\n', '{', '\n\t', 'publ', 'ic', '▁mod', 'ific', 'ast', 'an', 'ze', '(', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', '""', 'mod', 'ific', 'a', '▁de', 'i', '▁d', 'ati', '▁del', 'le', '▁stan', 'ze', '"",', '▁""', 'mod', 'ific', 'a', '"",', '▁2', ');', '\n\t\t', 'in', 'it', '(', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t', 't', 'est', 'o', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'my', 'che', 'ck', 'box', 'es', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\n\t\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 't', 'est', 'o', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 't', 'est', 'o', '1', '(', ');', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 't', 'est', 'o', '1', '(', ');', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n', '▁}', '▁/', '/', '▁init', '\n\t\n\t', 'v', 'oid', '▁start', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '!', 'er', 'ror', 'i', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'stan', 'za', '▁room', '▁=', '▁read', 'd', 'at', 'istan', 'za', '(', ');', '\t\t\t\t\t\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '(', '▁(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'ang', 'est', 'an', 'za', '(', 'room', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁room', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', '),', '▁', '\n\t\t\t\t\t\t\t', 'room', '.', 'get', 'dis', 'p', 'let', 'to', 'ag', 'g', '(', '),', '▁room', '.', 'get', 'p', 'x', 'base', '(', '),', '▁', '\n\t\t\t\t\t\t\t', 'room', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'cle', 'an', 'field', 's', '(', ');', '\n\t\t\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 't', 'est', 'o', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 't', 'est', 'o', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 't', 'est', 'o', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'my', 'che', 'ck', 'box', 'es', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 't', 'est', 'o', '1', '(', ')', '\n\t', '{', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁(', '(', 'room', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 't', 'est', 'o', '1.', 'get', 'text', '(', ')', ')', ')', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 't', 'est', 'o', '2.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t\t', 't', 'est', 'o', '3.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t\t', 't', 'est', 'o', '4.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t\t', 'my', 'che', 'ck', 'box', 'es', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁mod', 'ific', 'ast', 'an', 'ze', '▁extends', '▁desc', 'rit', 'tor', 'estan', 'ze', '\n', '{', '\n\t', 'public', '▁mod', 'ific', 'ast', 'an', 'ze', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'mod', 'ific', 'a', '▁dei', '▁d', 'ati', '▁delle', '▁stan', 'ze', '"",', '▁""', 'mod', 'ific', 'a', '"",', '▁2', ');', '\n\t\t', 'init', '();', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'my', 'check', 'box', 'es', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\n\t\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 'test', 'o', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'test', 'o', '1', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'test', 'o', '1', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n', '▁}', '▁//', '▁init', '\n\t\n\t', 'v', 'oid', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '!', 'error', 'i', '())', '\n\t\t', '{', '\n\t\t\t', 'stan', 'za', '▁room', '▁=', '▁read', 'dat', 'istan', 'za', '();', '\t\t\t\t\t\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '(', '▁(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'chang', 'estan', 'za', '(', 'room', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁room', '.', 'get', 'post', 'il', 'etto', '(', '),', '▁', '\n\t\t\t\t\t\t\t', 'room', '.', 'get', 'dis', 'p', 'let', 'to', 'agg', '(', '),', '▁room', '.', 'get', 'px', 'base', '(', '),', '▁', '\n\t\t\t\t\t\t\t', 'room', '.', 'get', 'desc', 'riz', 'ione', '()', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'cle', 'an', 'fields', '();', '\n\t\t\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'my', 'check', 'box', 'es', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'test', 'o', '1', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁(', '(', 'room', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '()', '))', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', 'my', 'check', 'box', 'es', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁in', 'es', 'ist', 'ente', '!', '"");', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁mod', 'ific', 'ast', 'anze', '▁extends', '▁desc', 'rit', 'tor', 'estan', 'ze', '\n', '{', '\n\t', 'public', '▁mod', 'ific', 'ast', 'anze', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'mod', 'ific', 'a', '▁dei', '▁d', 'ati', '▁delle', '▁stan', 'ze', '"",', '▁""', 'mod', 'ific', 'a', '"",', '▁2', ');', '\n\t\t', 'init', '();', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'my', 'check', 'boxes', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'azione', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\n\t\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 'test', 'o', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'test', 'o', '1', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'test', 'o', '1', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n', '▁}', '▁//', '▁init', '\n\t\n\t', 'void', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(!', 'error', 'i', '())', '\n\t\t', '{', '\n\t\t\t', 'stan', 'za', '▁room', '▁=', '▁read', 'dat', 'istan', 'za', '();', '\t\t\t\t\t\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '(', '▁(', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'chang', 'estan', 'za', '(', 'room', '.', 'get', 'num', 'stan', 'za', '(),', '▁room', '.', 'get', 'post', 'il', 'etto', '(),', '▁', '\n\t\t\t\t\t\t\t', 'room', '.', 'get', 'disp', 'letto', 'agg', '(),', '▁room', '.', 'get', 'px', 'base', '(),', '▁', '\n\t\t\t\t\t\t\t', 'room', '.', 'get', 'desc', 'riz', 'ione', '()))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'clean', 'fields', '();', '\n\t\t\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'my', 'check', 'boxes', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\t', 'azione', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'void', '▁start', 'test', 'o', '1', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁((', 'room', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '()))', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', 'my', 'check', 'boxes', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', 'azione', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁ines', 'ist', 'ente', '!', '"");', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli public class modifica stanz extend descrittor stanz public modifica stanz super modifica dei dati dell stanz modifica init public void init testo set edit true testo set edit fals testo set edit fals testo set edit fals mycheckbox set enabl fals azion set enabl fals azion add action listen new action listen public void action perform action event start azion testo add action listen new action listen public void action perform action event start testo cerca add action listen new action listen public void action perform action event start testo init void start azion messag dialog msg errori stanza room read dati stanza int principal chang stanza room get num stanza room get posti letto room get disp letto agg room get base room get descrizion data base clean field testo set edit true testo set edit fals testo set edit fals testo set edit fals mycheckbox set enabl fals azion set enabl fals els msg new messag dialog problemi con data base data base str error void start testo messag dialog msg stanza room room principal read stanza testo get text null write dati stanza room testo set edit fals testo set edit true testo set edit true testo4 set edit true mycheckbox set enabl true azion set enabl true els msg new messag dialog stanza inesistent !"");"
31~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraTelefonate.java~MascheraTelefonate.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class MascheraTelefonate extends Frame
{
   	TextField num_stanza, data_tel, ora_i, ora_f, numero, durata, scatti, costo,
   			  tot_scatti, tot_costo;
   	Label etich1, etich2, etich3, etich4, etich5, etich6, etich7, etich8, etich9,
   		  etich10, etich11, etich12;
   	Panel panel1, panel2;
   	Button Annulla;
   	GridBagLayout gridbag = new GridBagLayout();
   	Frame padre = new Frame();
	Telefonata phone;
  	int scatti_totali; 	
   	public MascheraTelefonate(Frame p, Telefonata t, int tot)
   	{
      	super(""Visualizzazione dei dati delle telefonate"");
      	padre = p;
      	phone = t;
      	scatti_totali = tot;
      	padre.setEnabled(false);
      	setupPanels();
      	inizializza();
      	pack();
      	setVisible(true);
   	}

   	void setupPanels()
   	{
	    this.setFont(ConfigurazioneSistema.font_base);
      	//Creo le etichette
      	etich1 = new Label(""Dati della telefonata"");
      	etich1.setFont(ConfigurazioneSistema.font_titolo);
      	etich2 = new Label(""Numero Stanza"");
      	etich3 = new Label(""Data Telefonata"");
      	etich4 = new Label(""Ora di Inizio"");
      	etich5 = new Label(""Ora di Fine"");
      	etich6 = new Label(""Durata"");
      	etich7 = new Label(""Numero Chiamato"");
      	etich8 = new Label(""Scatti Addebitati"");
		etich9 = new Label(""Spesa Addebitata"");
      	etich10 = new Label(""Totale Scatti"");
      	etich10.setFont(ConfigurazioneSistema.font_titolo);
      	etich11 = new Label(""Totale Spesa"");
		etich11.setFont(ConfigurazioneSistema.font_titolo);
		etich12 = new Label(""Riassunto totali stanza ""+phone.getNumStanza());
		etich12.setFont(ConfigurazioneSistema.font_titolo);
      
      	//Creo i TextField e ne rendo  alcuni non editabili
      	data_tel = new TextField("""",12);
      	num_stanza = new TextField("""",4);
      	ora_i = new TextField("""",12);
     	ora_f = new TextField("""",12);
      	durata = new TextField("""",12);
      	scatti = new TextField("""",4);
      	numero = new TextField("""",18);
      	costo = new TextField("""",12);
      	tot_scatti = new TextField("""",4);
      	tot_costo = new TextField("""",14);
      	
      	//Disabilita i TextField
      	data_tel.setEditable(false);
      	num_stanza.setEditable(false);
      	ora_i.setEditable(false);
     	ora_f.setEditable(false);
      	durata.setEditable(false);
      	scatti.setEditable(false);
      	numero.setEditable(false);
      	costo.setEditable(false);
      	tot_scatti.setEditable(false);
      	tot_costo.setEditable(false);

      	//Creo i pulsanti
      	Annulla = new Button("" Indietro "");

      	//Creo il pannello
      	panel1 = new Panel();
      	panel1.setLayout(gridbag);
      	Utils.constrain(panel1, etich1, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0); 
      	Utils.constrain(panel1, etich2, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
 	    Utils.constrain(panel1,num_stanza, 1, 1, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich3, 2, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,data_tel, 3, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich4, 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,ora_i , 1, 2, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich5, 2, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,ora_f , 3, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich6, 4, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,durata, 5, 2, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich7, 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,numero , 1, 3, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
		Utils.constrain(panel1, etich8, 0, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,scatti, 1, 4, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);                         
		Utils.constrain(panel1, etich9, 2, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
		Utils.constrain(panel1,costo, 3, 4, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
        Utils.constrain(panel1,etich12, 0, 5, 2, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);                 
        Utils.constrain(panel1, etich10, 0, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
        Utils.constrain(panel1,tot_scatti, 1, 6, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);                         
		Utils.constrain(panel1, etich11, 2, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
		Utils.constrain(panel1,tot_costo, 3, 6, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);                                          

      	panel2 = new Panel();
     	panel2.setLayout(gridbag);
      	Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 0, 0, 0, 15);
		
      	//Attacco i pannelli al frame
      	this.setLayout(gridbag);
      	Utils.constrain(this, panel1, 0, 0, 6, 7, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(this, panel2, 0, 7, 6, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
   }

   public void inizializza()
   {
      writeDatiTel();
      
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			dispose();
			padre.setEnabled(true);
         }
      });
   }

	void writeDatiTel()
	{
		data_tel.setText(DateUtils.giveStringOfDate(phone.getDataTel()));
      	num_stanza.setText(phone.getNumStanza());
      	ora_i.setText(""""+phone.getInizioTel());
     	ora_f.setText(""""+phone.getFineTel());
      	durata.setText(""""+phone.getDurataTel());
      	scatti.setText(""""+phone.getNumScatti());
      	numero.setText(phone.getNumChiamato());
      	costo.setText(""""+((Principale.config).getCostoXScatto())*phone.getNumScatti());      	
      	tot_scatti.setText(""""+scatti_totali);
      	tot_costo.setText(""""+((Principale.config).getCostoXScatto())*scatti_totali);		
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ate', 'le', 'f', 'on', 'ate', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'text', 'field', '▁num', '_', 'stan', 'za', ',', '▁data', '_', 't', 'el', ',', '▁or', 'a', '_', 'i', ',', '▁or', 'a', '_', 'f', ',', '▁num', 'ero', ',', '▁dur', 'ata', ',', '▁sc', 'att', 'i', ',', '▁cost', 'o', ',', '\n', '▁', '\t\t\t', '▁to', 't', '_', 'sc', 'att', 'i', ',', '▁to', 't', '_', 'c', 'ost', 'o', ';', '\n', '▁', '\t', 'l', 'ab', 'el', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7,', '▁et', 'ich', '8,', '▁et', 'ich', '9,', '\n', '▁', '\t\t', '▁et', 'ich', '1', '0,', '▁et', 'ich', '1', '1,', '▁et', 'ich', '12', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2', ';', '\n', '▁', '\t', 'but', 'ton', '▁ann', 'ull', 'a', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁', '\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '\n\t', 'te', 'le', 'f', 'on', 'ata', '▁ph', 'one', ';', '\n', '▁', '\t', 'int', '▁sc', 'att', 'i', '_', 't', 'ot', 'ali', ';', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁m', 'asc', 'her', 'ate', 'le', 'f', 'on', 'ate', '(', 'fr', 'ame', '▁p', ',', '▁tele', 'f', 'on', 'ata', '▁t', ',', '▁int', '▁to', 't', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁de', 'i', '▁d', 'ati', '▁del', 'le', '▁tele', 'f', 'on', 'ate', '"")', ';', '\n', '▁', '\t', 'p', 'ad', 're', '▁=', '▁p', ';', '\n', '▁', '\t', 'phone', '▁=', '▁t', ';', '\n', '▁', '\t', 'sc', 'att', 'i', '_', 't', 'ot', 'ali', '▁=', '▁to', 't', ';', '\n', '▁', '\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'els', '(', ');', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'v', 'oid', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁', '\t', '//', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(', '""', 'd', 'ati', '▁d', 'ella', '▁tele', 'f', 'on', 'ata', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁stan', 'za', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁tele', 'f', 'on', 'ata', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(', '""', 'ora', '▁di', '▁in', 'iz', 'io', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(', '""', 'ora', '▁di', '▁fine', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(', '""', 'd', 'ur', 'ata', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁ch', 'iam', 'ato', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '8', '▁=', '▁new', '▁label', '(', '""', 'sc', 'att', 'i', '▁add', 'e', 'bit', 'ati', '"")', ';', '\n\t\t', 'et', 'ich', '9', '▁=', '▁new', '▁label', '(', '""', 'sp', 'es', 'a', '▁add', 'e', 'bit', 'ata', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '10', '▁=', '▁new', '▁label', '(', '""', 't', 'ot', 'ale', '▁sc', 'att', 'i', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '1', '0.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '11', '▁=', '▁new', '▁label', '(', '""', 't', 'ot', 'ale', '▁sp', 'es', 'a', '"")', ';', '\n\t\t', 'et', 'ich', '1', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'et', 'ich', '12', '▁=', '▁new', '▁label', '(', '""', 'ri', 'ass', 'unt', 'o', '▁total', 'i', '▁stan', 'za', '▁""', '+', 'phone', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 'et', 'ich', '1', '2.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\n', '▁', '\t', '//', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁al', 'c', 'un', 'i', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁', '\t', 'd', 'ata', '_', 't', 'el', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁', '\t', 'ora', '_', 'i', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'ora', '_', 'f', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'd', 'ur', 'ata', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'sc', 'att', 'i', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁', '\t', 'n', 'um', 'ero', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '18', ');', '\n', '▁', '\t', 'c', 'ost', 'o', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '2)', ';', '\n', '▁', '\t', 't', 'ot', '_', 'sc', 'att', 'i', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁', '\t', 't', 'ot', '_', 'c', 'ost', 'o', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '4)', ';', '\n', '▁', '\t\n', '▁', '\t', '//', 'dis', 'abil', 'ita', '▁i', '▁text', 'field', '\n', '▁', '\t', 'd', 'ata', '_', 't', 'el', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'ora', '_', 'i', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'ora', '_', 'f', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'd', 'ur', 'ata', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'sc', 'att', 'i', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'n', 'um', 'ero', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'c', 'ost', 'o', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 't', 'ot', '_', 'sc', 'att', 'i', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 't', 'ot', '_', 'c', 'ost', 'o', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\n', '▁', '\t', '//', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n', '▁', '\t', 'ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n\n', '▁', '\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '\n', '▁', '\t', 'pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁', '\t', 'pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'n', 'um', '_', 'stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '3,', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'd', 'ata', '_', 't', 'el', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '4,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'ora', '_', 'i', '▁,', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '5,', '▁2,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'ora', '_', 'f', '▁,', '▁3,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '6,', '▁4,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'd', 'ur', 'ata', ',', '▁5,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '7,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'n', 'um', 'ero', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '8,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'sc', 'att', 'i', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '9,', '▁2,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'c', 'ost', 'o', ',', '▁3,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'et', 'ich', '1', '2,', '▁', '0,', '▁5,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '0,', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 't', 'ot', '_', 'sc', 'att', 'i', ',', '▁1,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '1,', '▁2,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 't', 'ot', '_', 'c', 'ost', 'o', ',', '▁3,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁', '\t', 'pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁', '\t', 'pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁15', ');', '\n\t\t\n', '▁', '\t', '//', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁', '\t', 'this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁6,', '▁7,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁7,', '▁6,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n', '▁{', '\n', '▁writ', 'ed', 'at', 'it', 'el', '(', ');', '\n', '▁', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁writ', 'ed', 'at', 'it', 'el', '(', ')', '\n\t', '{', '\n\t\t', 'd', 'ata', '_', 't', 'el', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'phone', '.', 'get', 'd', 'at', 'ate', 'l', '(', ')', ')', ');', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'phone', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁', '\t', 'ora', '_', 'i', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'phone', '.', 'get', 'in', 'iz', 'iot', 'el', '(', ')', ');', '\n', '▁', '\t', 'ora', '_', 'f', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'phone', '.', 'get', 'f', 'inet', 'el', '(', ')', ');', '\n', '▁', '\t', 'd', 'ur', 'ata', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'phone', '.', 'get', 'd', 'ur', 'at', 'ate', 'l', '(', ')', ');', '\n', '▁', '\t', 'sc', 'att', 'i', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'phone', '.', 'get', 'n', 'um', 'sc', 'att', 'i', '(', ')', ');', '\n', '▁', '\t', 'n', 'um', 'ero', '.', 's', 'ette', 'xt', '(', 'phone', '.', 'get', 'n', 'um', 'ch', 'iam', 'ato', '(', ')', ');', '\n', '▁', '\t', 'c', 'ost', 'o', '.', 's', 'ette', 'xt', '(', '""', '""', '+', '(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'c', 'ost', 'ox', 'sc', 'att', 'o', '(', ')', ')', '*', 'phone', '.', 'get', 'n', 'um', 'sc', 'att', 'i', '(', ')', ');', '▁', '\t\n', '▁', '\t', 't', 'ot', '_', 'sc', 'att', 'i', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'sc', 'att', 'i', '_', 't', 'ot', 'ali', ');', '\n', '▁', '\t', 't', 'ot', '_', 'c', 'ost', 'o', '.', 's', 'ette', 'xt', '(', '""', '""', '+', '(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'c', 'ost', 'ox', 'sc', 'att', 'o', '(', ')', ')', '*', 'sc', 'att', 'i', '_', 't', 'ot', 'ali', ');', '\t\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ate', 'le', 'f', 'on', 'ate', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'text', 'field', '▁num', '_', 'stan', 'za', ',', '▁data', '_', 'tel', ',', '▁or', 'a', '_', 'i', ',', '▁or', 'a', '_', 'f', ',', '▁num', 'ero', ',', '▁dur', 'ata', ',', '▁sc', 'atti', ',', '▁cost', 'o', ',', '\n', '▁', '\t\t\t', '▁tot', '_', 'sc', 'atti', ',', '▁tot', '_', 'cost', 'o', ';', '\n', '▁', '\t', 'l', 'abel', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7,', '▁et', 'ich', '8,', '▁et', 'ich', '9,', '\n', '▁', '\t\t', '▁et', 'ich', '10,', '▁et', 'ich', '1', '1,', '▁et', 'ich', '12', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2', ';', '\n', '▁', '\t', 'but', 'ton', '▁ann', 'ulla', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁', '\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '\n\t', 'tele', 'f', 'on', 'ata', '▁phone', ';', '\n', '▁', '\t', 'int', '▁sc', 'atti', '_', 'tot', 'ali', ';', '▁', '\t\n', '▁', '\t', 'public', '▁masc', 'her', 'ate', 'le', 'f', 'on', 'ate', '(', 'frame', '▁p', ',', '▁tele', 'f', 'on', 'ata', '▁t', ',', '▁int', '▁tot', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'vis', 'ual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁delle', '▁tele', 'f', 'on', 'ate', '"");', '\n', '▁', '\t', 'pad', 're', '▁=', '▁p', ';', '\n', '▁', '\t', 'phone', '▁=', '▁t', ';', '\n', '▁', '\t', 'sc', 'atti', '_', 'tot', 'ali', '▁=', '▁tot', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'els', '();', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'v', 'oid', '▁setup', 'pan', 'els', '()', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁della', '▁tele', 'f', 'on', 'ata', '"");', '\n', '▁', '\t', 'et', 'ich', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stan', 'za', '"");', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'data', '▁tele', 'f', 'on', 'ata', '"");', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'ora', '▁di', '▁in', 'izio', '"");', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'ora', '▁di', '▁fine', '"");', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'dur', 'ata', '"");', '\n', '▁', '\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁ch', 'iam', 'ato', '"");', '\n', '▁', '\t', 'et', 'ich', '8', '▁=', '▁new', '▁label', '(""', 'sc', 'atti', '▁add', 'e', 'bit', 'ati', '"");', '\n\t\t', 'et', 'ich', '9', '▁=', '▁new', '▁label', '(""', 'sp', 'esa', '▁add', 'e', 'bit', 'ata', '"");', '\n', '▁', '\t', 'et', 'ich', '10', '▁=', '▁new', '▁label', '(""', 'tot', 'ale', '▁sc', 'atti', '"");', '\n', '▁', '\t', 'et', 'ich', '10.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '11', '▁=', '▁new', '▁label', '(""', 'tot', 'ale', '▁sp', 'esa', '"");', '\n\t\t', 'et', 'ich', '11.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'et', 'ich', '12', '▁=', '▁new', '▁label', '(""', 'ri', 'ass', 'unt', 'o', '▁total', 'i', '▁stan', 'za', '▁""', '+', 'phone', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'et', 'ich', '12.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁', '\t', '//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁', '\t', 'data', '_', 'tel', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁', '\t', 'ora', '_', 'i', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'ora', '_', 'f', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'dur', 'ata', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'sc', 'atti', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁', '\t', 'num', 'ero', '▁=', '▁new', '▁text', 'field', '(""', '"",', '18', ');', '\n', '▁', '\t', 'cost', 'o', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '2)', ';', '\n', '▁', '\t', 'tot', '_', 'sc', 'atti', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁', '\t', 'tot', '_', 'cost', 'o', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '4)', ';', '\n', '▁', '\t\n', '▁', '\t', '//', 'dis', 'abil', 'ita', '▁i', '▁text', 'field', '\n', '▁', '\t', 'data', '_', 'tel', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'ora', '_', 'i', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'ora', '_', 'f', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'dur', 'ata', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'sc', 'atti', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', 'ero', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'cost', 'o', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'tot', '_', 'sc', 'atti', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'tot', '_', 'cost', 'o', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁', '\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '\n', '▁', '\t', 'pan', 'el', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁', '\t', 'pan', 'el', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'num', '_', 'stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '3,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'data', '_', 'tel', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '4,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'ora', '_', 'i', '▁,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '5,', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'ora', '_', 'f', '▁,', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '6,', '▁4,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'dur', 'ata', ',', '▁5,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '7,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'num', 'ero', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '8,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'sc', 'atti', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '9,', '▁2,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'cost', 'o', ',', '▁3,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'et', 'ich', '1', '2,', '▁', '0,', '▁5,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '10,', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'tot', '_', 'sc', 'atti', ',', '▁1,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '1,', '▁2,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'tot', '_', 'cost', 'o', ',', '▁3,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁', '\t', 'pan', 'el', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁', '\t', 'pan', 'el', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁15', ');', '\n\t\t\n', '▁', '\t', '//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁', '\t', 'this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁6,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁7,', '▁6,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n', '▁{', '\n', '▁writ', 'ed', 'at', 'it', 'el', '();', '\n', '▁', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁writ', 'ed', 'at', 'it', 'el', '()', '\n\t', '{', '\n\t\t', 'data', '_', 'tel', '.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'phone', '.', 'get', 'dat', 'atel', '())', ');', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'phone', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', 'ora', '_', 'i', '.', 's', 'ette', 'xt', '(""', '""', '+', 'phone', '.', 'get', 'in', 'iz', 'iot', 'el', '());', '\n', '▁', '\t', 'ora', '_', 'f', '.', 's', 'ette', 'xt', '(""', '""', '+', 'phone', '.', 'get', 'f', 'inet', 'el', '());', '\n', '▁', '\t', 'dur', 'ata', '.', 's', 'ette', 'xt', '(""', '""', '+', 'phone', '.', 'get', 'dur', 'at', 'atel', '());', '\n', '▁', '\t', 'sc', 'atti', '.', 's', 'ette', 'xt', '(""', '""', '+', 'phone', '.', 'get', 'num', 'sc', 'atti', '());', '\n', '▁', '\t', 'num', 'ero', '.', 's', 'ette', 'xt', '(', 'phone', '.', 'get', 'num', 'ch', 'iam', 'ato', '());', '\n', '▁', '\t', 'cost', 'o', '.', 's', 'ette', 'xt', '(""', '""', '+', '(', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'cost', 'ox', 'sc', 'att', 'o', '())', '*', 'phone', '.', 'get', 'num', 'sc', 'atti', '());', '▁', '\t\n', '▁', '\t', 'tot', '_', 'sc', 'atti', '.', 's', 'ette', 'xt', '(""', '""', '+', 'sc', 'atti', '_', 'tot', 'ali', ');', '\n', '▁', '\t', 'tot', '_', 'cost', 'o', '.', 's', 'ette', 'xt', '(""', '""', '+', '(', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'cost', 'ox', 'sc', 'att', 'o', '())', '*', 'sc', 'atti', '_', 'tot', 'ali', ');', '\t\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ate', 'lef', 'onate', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'text', 'field', '▁num', '_', 'stan', 'za', ',', '▁data', '_', 'tel', ',', '▁ora', '_', 'i', ',', '▁ora', '_', 'f', ',', '▁numero', ',', '▁dur', 'ata', ',', '▁sc', 'atti', ',', '▁cost', 'o', ',', '\n', '▁', '\t\t\t', '▁tot', '_', 'sc', 'atti', ',', '▁tot', '_', 'cost', 'o', ';', '\n', '▁', '\t', 'label', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7,', '▁et', 'ich', '8,', '▁et', 'ich', '9,', '\n', '▁', '\t\t', '▁et', 'ich', '10,', '▁et', 'ich', '11,', '▁et', 'ich', '12', ';', '\n', '▁', '\t', 'panel', '▁panel', '1,', '▁panel', '2;', '\n', '▁', '\t', 'button', '▁ann', 'ulla', ';', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁', '\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '\n\t', 'tele', 'fon', 'ata', '▁phone', ';', '\n', '▁', '\t', 'int', '▁sc', 'atti', '_', 'tot', 'ali', ';', '▁', '\t\n', '▁', '\t', 'public', '▁masc', 'her', 'ate', 'lef', 'onate', '(', 'frame', '▁p', ',', '▁telef', 'on', 'ata', '▁t', ',', '▁int', '▁tot', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'visual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁delle', '▁telef', 'onate', '"");', '\n', '▁', '\t', 'pad', 're', '▁=', '▁p', ';', '\n', '▁', '\t', 'phone', '▁=', '▁t', ';', '\n', '▁', '\t', 'sc', 'atti', '_', 'tot', 'ali', '▁=', '▁tot', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'els', '();', '\n', '▁', '\t', 'in', 'iz', 'ial', 'izza', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'set', 'visible', '(', 'true', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'void', '▁setup', 'pan', 'els', '()', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁della', '▁telef', 'on', 'ata', '"");', '\n', '▁', '\t', 'et', 'ich', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stanza', '"");', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'data', '▁telef', 'on', 'ata', '"");', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'ora', '▁di', '▁in', 'izio', '"");', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'ora', '▁di', '▁fine', '"");', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'dur', 'ata', '"");', '\n', '▁', '\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁ch', 'iam', 'ato', '"");', '\n', '▁', '\t', 'et', 'ich', '8', '▁=', '▁new', '▁label', '(""', 'sc', 'atti', '▁add', 'e', 'bit', 'ati', '"");', '\n\t\t', 'et', 'ich', '9', '▁=', '▁new', '▁label', '(""', 'sp', 'esa', '▁add', 'e', 'bit', 'ata', '"");', '\n', '▁', '\t', 'et', 'ich', '10', '▁=', '▁new', '▁label', '(""', 'tot', 'ale', '▁sc', 'atti', '"");', '\n', '▁', '\t', 'et', 'ich', '10.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '11', '▁=', '▁new', '▁label', '(""', 'tot', 'ale', '▁sp', 'esa', '"");', '\n\t\t', 'et', 'ich', '11.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'et', 'ich', '12', '▁=', '▁new', '▁label', '(""', 'ri', 'ass', 'unto', '▁total', 'i', '▁stanza', '▁""+', 'phone', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'et', 'ich', '12.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁', '\t', '//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁', '\t', 'data', '_', 'tel', '▁=', '▁new', '▁text', 'field', '(""', '"",', '12)', ';', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁', '\t', 'ora', '_', 'i', '▁=', '▁new', '▁text', 'field', '(""', '"",', '12)', ';', '\n', '▁', '\t', 'ora', '_', 'f', '▁=', '▁new', '▁text', 'field', '(""', '"",', '12)', ';', '\n', '▁', '\t', 'dur', 'ata', '▁=', '▁new', '▁text', 'field', '(""', '"",', '12)', ';', '\n', '▁', '\t', 'sc', 'atti', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁', '\t', 'num', 'ero', '▁=', '▁new', '▁text', 'field', '(""', '"",', '18', ');', '\n', '▁', '\t', 'cost', 'o', '▁=', '▁new', '▁text', 'field', '(""', '"",', '12)', ';', '\n', '▁', '\t', 'tot', '_', 'sc', 'atti', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁', '\t', 'tot', '_', 'cost', 'o', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '4);', '\n', '▁', '\t\n', '▁', '\t', '//', 'dis', 'abil', 'ita', '▁i', '▁text', 'field', '\n', '▁', '\t', 'data', '_', 'tel', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'ora', '_', 'i', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'ora', '_', 'f', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'dur', 'ata', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'sc', 'atti', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', 'ero', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'cost', 'o', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'tot', '_', 'sc', 'atti', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'tot', '_', 'cost', 'o', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁', '\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '\n', '▁', '\t', 'panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁', '\t', 'panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '2,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'num', '_', 'stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '3,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'data', '_', 'tel', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '4,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'ora', '_', 'i', '▁,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '5,', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'ora', '_', 'f', '▁,', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '6,', '▁4,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'dur', 'ata', ',', '▁5,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '7,', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'num', 'ero', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '8,', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'sc', 'atti', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '9,', '▁2,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'cost', 'o', ',', '▁3,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'et', 'ich', '12,', '▁0,', '▁5,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '10,', '▁0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'tot', '_', 'sc', 'atti', ',', '▁1,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '11,', '▁2,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'tot', '_', 'cost', 'o', ',', '▁3,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁', '\t', 'panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁', '\t', 'panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁15', ');', '\n\t\t\n', '▁', '\t', '//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁', '\t', 'this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁6,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁7,', '▁6,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n', '▁{', '\n', '▁writ', 'ed', 'at', 'itel', '();', '\n', '▁', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁writ', 'ed', 'at', 'itel', '()', '\n\t', '{', '\n\t\t', 'data', '_', 'tel', '.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'phone', '.', 'get', 'dat', 'atel', '())', ');', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'phone', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', 'ora', '_', 'i', '.', 's', 'ette', 'xt', '(""', '""', '+', 'phone', '.', 'get', 'in', 'iz', 'iot', 'el', '());', '\n', '▁', '\t', 'ora', '_', 'f', '.', 's', 'ette', 'xt', '(""', '""', '+', 'phone', '.', 'get', 'f', 'inet', 'el', '());', '\n', '▁', '\t', 'dur', 'ata', '.', 's', 'ette', 'xt', '(""', '""', '+', 'phone', '.', 'get', 'dur', 'at', 'atel', '());', '\n', '▁', '\t', 'sc', 'atti', '.', 's', 'ette', 'xt', '(""', '""', '+', 'phone', '.', 'get', 'num', 'sc', 'atti', '());', '\n', '▁', '\t', 'num', 'ero', '.', 's', 'ette', 'xt', '(', 'phone', '.', 'get', 'num', 'ch', 'iam', 'ato', '());', '\n', '▁', '\t', 'cost', 'o', '.', 's', 'ette', 'xt', '(""', '""', '+', '((', 'princip', 'ale', '.', 'config', ').', 'get', 'cost', 'ox', 'sc', 'atto', '())', '*', 'phone', '.', 'get', 'num', 'sc', 'atti', '());', '▁', '\t\n', '▁', '\t', 'tot', '_', 'sc', 'atti', '.', 's', 'ette', 'xt', '(""', '""', '+', 'sc', 'atti', '_', 'tot', 'ali', ');', '\n', '▁', '\t', 'tot', '_', 'cost', 'o', '.', 's', 'ette', 'xt', '(""', '""', '+', '((', 'princip', 'ale', '.', 'config', ').', 'get', 'cost', 'ox', 'sc', 'atto', '())', '*', 'sc', 'atti', '_', 'tot', 'ali', ');', '\t\t\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli public class maschera telefon extend frame text field num stanza data tel ora ora numero durata scatti costo tot scatti tot costo label etich etich etich etich etich etich etich etich etich etich etich etich panel panel panel button annulla grid bag layout gridbag new grid bag layout frame padr new frame telefonata phone int scatti totali public maschera telefon frame telefonata int tot super visualizzazion dei dati dell telefon padr phone scatti totali tot padr set enabl fals setup panel inizializza pack set visibl true void setup panel set font configurazion sistema font base creo etichett etich new label dati della telefonata etich set font configurazion sistema font titolo etich new label numero stanza etich new label data telefonata etich new label ora inizio etich new label ora fine etich new label durata etich new label numero chiamato etich new label scatti addebitati etich new label spesa addebitata etich new label total scatti etich set font configurazion sistema font titolo etich new label total spesa etich set font configurazion sistema font titolo etich new label riassunto totali stanza phone get num stanza etich set font configurazion sistema font titolo creo text field rendo alcuni non editabili data tel new text field num_stanza new text field ("""", ora_i new text field ("""", ora_f new text field ("""", durata new text field ("""", scatti new text field ("""", numero new text field ("""", costo new text field ("""", tot_scatti new text field ("""", tot_costo new text field ("""", disabilita text field data_tel set edit fals num_stanza set edit fals ora_i set edit fals ora_f set edit fals durata set edit fals scatti set edit fals numero set edit fals costo set edit fals tot_scatti set edit fals tot_costo set edit fals creo pulsanti annulla new button indietro ""); creo pannello panel1 new panel (); panel1 set layout gridbag util constrain panel1 etich1 grid bag constraint none grid bag constraint northwest util constrain panel1 etich2 grid bag constraint none grid bag constraint northwest util constrain panel1 num_stanza grid bag constraint none grid bag constraint northwest util constrain panel1 etich3 grid bag constraint none grid bag constraint northwest util constrain panel1 data_tel grid bag constraint none grid bag constraint northwest util constrain panel1 etich4 grid bag constraint none grid bag constraint northwest util constrain panel1 ora_i grid bag constraint none grid bag constraint northwest util constrain panel1 etich5 grid bag constraint none grid bag constraint northwest util constrain panel1 ora_f grid bag constraint none grid bag constraint northwest util constrain panel1 etich6 grid bag constraint none grid bag constraint northwest util constrain panel1 durata grid bag constraint none grid bag constraint northwest util constrain panel1 etich7 grid bag constraint none grid bag constraint northwest util constrain panel1 numero grid bag constraint none grid bag constraint northwest util constrain panel1 etich8 grid bag constraint none grid bag constraint northwest util constrain panel1 scatti grid bag constraint none grid bag constraint northwest util constrain panel1 etich9 grid bag constraint none grid bag constraint northwest util constrain panel1 costo grid bag constraint none grid bag constraint northwest util constrain panel1 etich12 grid bag constraint none grid bag constraint northwest util constrain panel1 etich10 grid bag constraint none grid bag constraint northwest util constrain panel1 tot_scatti grid bag constraint none grid bag constraint northwest util constrain panel1 etich11 grid bag constraint none grid bag constraint northwest util constrain panel1 tot_costo grid bag constraint none grid bag constraint northwest panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint none grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint west public void inizializza write dati tel (); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); void write dati tel data_tel set text date util give string date phone get data tel ())); num_stanza set text phone get num stanza ()); ora_i set text (""""+ phone get inizio tel ()); ora_f set text (""""+ phone get fine tel ()); durata set text (""""+ phone get durata tel ()); scatti set text (""""+ phone get num scatti ()); numero set text phone get num chiamato ()); costo set text (""""+(( principal config get costo xscatto ())* phone get num scatti ()); tot_scatti set text (""""+ scatti_totali tot_costo set text (""""+(( principal config get costo xscatto ())* scatti_totali"
32~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraRicercaStorico.java~MascheraRicercaStorico.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.ListaClienti;
import moduli.Cliente;

public class MascheraRicercaStorico extends Frame
{
   Button Annulla, Conferma;
   TextField testo[];
   Label etichetta1, etichetta2, etichetta3, etichetta4, etichetta5, label1, label2,
         label3, label5;
   Panel panel[];
   CheckboxGroup checkbox_group;
   Checkbox[] checkboxes;
   GridBagLayout gridbag =new GridBagLayout();
   List list_clienti;
   Frame padre;
   VediCliente figlio;
   Cliente cliente;
   
   // la seguente variabile serve per tenere in memoria la lista dei clienti
   // cercati nello storico
   ListaClienti elenco_clienti;

   public MascheraRicercaStorico(Frame parent)
   {
      super(""Ricerca nello storico"");
      padre = parent;
      padre.setEnabled(false);
      setupPanels();
      pack();
      init();
      this.setVisible(true);
   }

   void setupPanels()
   {
	  this.setFont(ConfigurazioneSistema.font_base);
      //Creo i pulsanti
      Annulla = new Button(""Annulla "");
      //Annulla.setFont(new Font(""Courier"", Font.PLAIN, 12));
      Conferma = new Button(""Conferma"");
      Conferma.setEnabled(false);
      //Conferma.setFont(new Font(""Courier"", Font.PLAIN, 12));

      //Creo le etichette
      etichetta1 = new Label(""Selezionare il tipo di ricerca che si desidera effettuare:"");
      etichetta1.setFont(ConfigurazioneSistema.font_titolo);
      etichetta2 = new Label(""Risultato della ricerca:"");
      etichetta2.setFont(ConfigurazioneSistema.font_titolo);
      etichetta3 = new Label(""Ricerca per stanza:"");
      etichetta3.setFont(ConfigurazioneSistema.font_titolo);
      etichetta4 = new Label(""Ricerca per nome:"");
      etichetta4.setFont(ConfigurazioneSistema.font_titolo);
      etichetta5 = new Label(""Ricerca per data:"");
      etichetta5.setFont(ConfigurazioneSistema.font_titolo);
      label1 = new Label(""Stanza numero"");
      label2 = new Label(""Cognome"");
      label3 = new Label(""Nome"");
      label5 = new Label(""Data di soggiorno desiderata"");

      //Creo un Checkbox ad esclusione
      checkbox_group = new CheckboxGroup();
      checkboxes = new Checkbox[3];
      checkboxes[0] = new Checkbox(""Ricerca per stanza"",checkbox_group,false);
      checkboxes[1] = new Checkbox(""Ricerca per nome"",checkbox_group,false);
      checkboxes[2] = new Checkbox(""Ricerca per data"",checkbox_group,false);


      //Creo i TextField e li rendo non editabili
      testo = new TextField[4];
      testo[0] = new TextField("""", 6);
      testo[1] = new TextField("""", 25);
      testo[2] = new TextField("""", 25);
      testo[3] = new TextField("""", 12);
      for(int i=0;i<testo.length;++i)
      testo[i].setEditable(false);

      //creo una TextArea
      list_clienti = new List(10, false);

      panel=new Panel[6];
      for(int i=0;i<6;++i)
         {
            panel[i]=new Panel();
            panel[i].setLayout(gridbag);
         }
      //Creo il pannello in alto a sinistra
      Utils.constrain(panel[1], etichetta1, 0, 0, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0); 
      Utils.constrain(panel[1], checkboxes[0], 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0); 
      Utils.constrain(panel[1], checkboxes[1], 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
      Utils.constrain(panel[1], checkboxes[2], 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
            
      //Creo il pannello ricerca per stanza
      Utils.constrain(panel[2], etichetta3, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[2], label1, 0, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[2], testo[0], 1, 1, 1, 1, GridBagConstraints.NONE,
                      GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);

      //Creo il pannello ricerca per nome e cognome
      Utils.constrain(panel[3], etichetta4, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[3], label2, 0, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[3], testo[1], 1, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel[3], label3, 0, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.SOUTHWEST, 0.0, 0.0, 20, 5, 0, 20);
      Utils.constrain(panel[3], testo[2], 1, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.SOUTHWEST, 1.0, 0.0, 20, 0, 0, 0);

      //Creo il pannnello ricerca per data
      Utils.constrain(panel[4], etichetta5, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[4], label5, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[4], testo[3], 1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 5); 
      
      //Creo il pannello dei pulsanti
      Utils.constrain(panel[0], Annulla, 1, 0, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.EAST, 0.3, 0.0, 10, 0, 10, 5);
      Utils.constrain(panel[0], Conferma, 3, 0, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.WEST, 0.3, 0.0, 10, 5, 10, 0);

      //Creo il pannello contenente la list_clienti 
      Utils.constrain(panel[5], etichetta2, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[5], list_clienti, 0, 1, 1, 1, GridBagConstraints.BOTH,
                         GridBagConstraints.NORTHWEST, 1.0, 1.0, 0, 5, 0, 20);

      //Attacco i pannelli al frame
      this.setLayout(gridbag);
      Utils.constrain(this, panel[1], 0, 0, 5, 4, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[2], 0, 4, 5, 2, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[3], 0, 6, 5, 3,GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
      Utils.constrain(this,panel[4], 0, 9, 5, 2,GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[0], 0, 11, 5, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.SOUTHEAST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[5], 0, 12, 5, 7, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
   }

   	public void init()
   	{
      	checkboxes[0].addItemListener(new ItemListener()   
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
            	if(checkboxes[0].getState())
            	{
                	if (list_clienti.getItemCount() > 0)
						list_clienti.removeAll();
                	testo[0].setEditable(true);
                	for(int i=1;i<=3;++i)
                   		testo[i].setEditable(false);
					Conferma.setEnabled(true);
             	}
         	}
      	});
                      
      	checkboxes[1].addItemListener(new ItemListener()   
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
            	if(checkboxes[1].getState())
            	{
                	if (list_clienti.getItemCount() > 0)
						list_clienti.removeAll();
               		 for(int i=1;i<3;++i)
                   		testo[i].setEditable(true);
                	testo[0].setEditable(false);
                	testo[3].setEditable(false);
					Conferma.setEnabled(true);
             	}
         	}
      	});

      	checkboxes[2].addItemListener(new ItemListener()
     	{
         	public void itemStateChanged(ItemEvent e)
         	{
            	if(checkboxes[2].getState())
            	{
                	if (list_clienti.getItemCount() > 0)
						list_clienti.removeAll();
                	testo[3].setEditable(true);
                	for(int i=0;i<3;++i)
                   		testo[i].setEditable(false);
					Conferma.setEnabled(true);
            	}
         	}
      	}); 

      	Conferma.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				startConferma();
         	}
      	});

		Annulla.addActionListener(new ActionListener()
      	{
      		public void actionPerformed(ActionEvent e)
         	{
            	dispose();
            	padre.setEnabled(true);
          	}
       	});
   		
   		list_clienti.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				startVediCliente();		
			}
      	});
   		
   	}
   
   	void startConferma()
   	{
		int i;
		Frame msg;
				
		Conferma.setEnabled(false);
		if (!errori())
		{
			if(checkboxes[0].getState())
				elenco_clienti = (Principale.db).foundStorico(testo[0].getText());
			else if(checkboxes[1].getState())
				elenco_clienti = (Principale.db).foundStorico(testo[1].getText(), testo[2].getText());
			else if(checkboxes[2].getState())
				elenco_clienti = (Principale.db).foundStorico(DateUtils.convertDate(testo[3].getText()));
			else
				elenco_clienti = new ListaClienti();
			if (elenco_clienti != null)
			{
				if (list_clienti.getItemCount() > 0)
					list_clienti.removeAll();
				for (i = 1; i <= elenco_clienti.length(); i++)
					list_clienti.addItem((elenco_clienti.getCliente(i)).toString());
				if (list_clienti.getItemCount() == 0)
					msg = new AvvisoDialog(this, ""Trovata nessuna corrispondenza!"");
			}
			else
				msg = new MessageDialog(this, ""Problemi con il database!"");
		}
		else
			msg = new MessageDialog(this, ""Errore nei parametri!"");
		for (i = 0; i<testo.length; i++)
		{
			testo[i].setText("""");
			testo[i].setEditable(false);
		}
		for (i = 0; i<checkboxes.length; i++)
			checkboxes[i].setEnabled(true);
   	}
   
   	boolean errori()
   	{
		if(checkboxes[0].getState())
			return ( (testo[0].getText()).length() > 4 );
		else if(checkboxes[1].getState())
			return( (testo[1].getText()).length() > 20 || (testo[2].getText()).length() > 20 );
		else if(checkboxes[2].getState())
			return( !DateUtils.dataCorretta(testo[3].getText()) );
		else
			return true;
   	}

	void startVediCliente()
	{
		cliente = elenco_clienti.getCliente((list_clienti.getSelectedIndexes())[0]+1);
		figlio = new VediCliente(this,cliente);
	}
}

"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'list', 'ac', 'l', 'ient', 'i', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'cl', 'ient', 'e', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'or', 'ico', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁con', 'fer', 'ma', ';', '\n', '▁text', 'field', '▁test', 'o', '[', ']', ';', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁et', 'ic', 'he', 'tt', 'a', '5,', '▁label', '1,', '▁label', '2,', '\n', '▁label', '3,', '▁label', '5', ';', '\n', '▁pan', 'el', '▁pan', 'el', '[', ']', ';', '\n', '▁check', 'box', 'gro', 'up', '▁check', 'box', '_', 'gro', 'up', ';', '\n', '▁check', 'box', '[', ']', '▁check', 'box', 'es', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁list', '▁list', '_', 'cl', 'ient', 'i', ';', '\n', '▁frame', '▁pad', 're', ';', '\n', '▁v', 'ed', 'ic', 'l', 'ient', 'e', '▁fig', 'l', 'io', ';', '\n', '▁cl', 'ient', 'e', '▁cl', 'ient', 'e', ';', '\n', '▁', '\n', '▁/', '/', '▁la', '▁se', 'gu', 'ent', 'e', '▁vari', 'ab', 'ile', '▁serve', '▁per', '▁ten', 'ere', '▁in', '▁mem', 'oria', '▁la', '▁list', 'a', '▁de', 'i', '▁cl', 'ient', 'i', '\n', '▁/', '/', '▁cer', 'c', 'ati', '▁n', 'ello', '▁stor', 'ico', '\n', '▁list', 'ac', 'l', 'ient', 'i', '▁el', 'en', 'co', '_', 'cl', 'ient', 'i', ';', '\n\n', '▁public', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'or', 'ico', '(', 'fr', 'ame', '▁paren', 't', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'ric', 'er', 'ca', '▁n', 'ello', '▁stor', 'ico', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁init', '(', ');', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '▁""', ');', '\n', '▁/', '/', 'ann', 'ull', 'a', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ')', ');', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n', '▁con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁/', '/', 'con', 'fer', 'ma', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ')', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'se', 'le', 'z', 'ion', 'are', '▁il', '▁tip', 'o', '▁di', '▁ric', 'er', 'ca', '▁che', '▁si', '▁des', 'ider', 'a', '▁eff', 'ett', 'u', 'are', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2', '▁=', '▁new', '▁label', '(', '""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3', '▁=', '▁new', '▁label', '(', '""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '4', '▁=', '▁new', '▁label', '(', '""', 'ric', 'er', 'ca', '▁per', '▁n', 'ome', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '4.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '5', '▁=', '▁new', '▁label', '(', '""', 'ric', 'er', 'ca', '▁per', '▁data', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '5.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'stan', 'za', '▁num', 'ero', '"")', ';', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(', '""', 'c', 'ogn', 'ome', '"")', ';', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '"")', ';', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁di', '▁s', 'og', 'gi', 'orn', 'o', '▁des', 'ider', 'ata', '"")', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'gro', 'up', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n', '▁check', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ric', 'er', 'ca', '▁per', '▁n', 'ome', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n', '▁check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ric', 'er', 'ca', '▁per', '▁data', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁test', 'o', '▁=', '▁new', '▁text', 'field', '[', '4', ']', ';', '\n', '▁test', 'o', '[', '0', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁6', ');', '\n', '▁test', 'o', '[', '1', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁2', '5)', ';', '\n', '▁test', 'o', '[', '2', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁2', '5)', ';', '\n', '▁test', 'o', '[', '3', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁12', ');', '\n', '▁for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', 't', 'est', 'o', '.', 'l', 'ength', ';', '+', '+', 'i', ')', '\n', '▁test', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', 'a', '▁text', 'are', 'a', '\n', '▁list', '_', 'cl', 'ient', 'i', '▁=', '▁new', '▁list', '(', '1', '0,', '▁fal', 'se', ');', '\n\n', '▁pan', 'el', '=', 'new', '▁pan', 'el', '[', '6', ']', ';', '\n', '▁for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', '6', ';', '+', '+', 'i', ')', '\n', '▁{', '\n', '▁pan', 'el', '[', 'i', ']', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '[', 'i', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁}', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁a', '▁sin', 'ist', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '0', ']', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '1', ']', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '2', ']', ',', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁stan', 'za', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁test', 'o', '[', '0', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁n', 'ome', '▁e', '▁co', 'gn', 'ome', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁label', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁test', 'o', '[', '1', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁label', '3,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁test', 'o', '[', '2', ']', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁20,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'n', 'ello', '▁ric', 'er', 'ca', '▁per', '▁data', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '5,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁label', '5,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁test', 'o', '[', '3', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁5', ');', '▁', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁de', 'i', '▁p', 'uls', 'ant', 'i', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', ']', ',', '▁ann', 'ull', 'a', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁', '0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', ']', ',', '▁con', 'fer', 'ma', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁cont', 'en', 'ent', 'e', '▁la', '▁list', '_', 'cl', 'ient', 'i', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '5', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '5', ']', ',', '▁list', '_', 'cl', 'ient', 'i', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '1', ']', ',', '▁', '0,', '▁', '0,', '▁5,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '2', ']', ',', '▁', '0,', '▁4,', '▁5,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '3', ']', ',', '▁', '0,', '▁6,', '▁5,', '▁3,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '[', '4', ']', ',', '▁', '0,', '▁9,', '▁5,', '▁2,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '0', ']', ',', '▁', '0,', '▁11,', '▁5,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'so', 'ut', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '5', ']', ',', '▁', '0,', '▁12,', '▁5,', '▁7,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁', '\t', 't', 'est', 'o', '[', '0', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '=', '3', ';', '+', '+', 'i', ')', '\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁', '\t\t', '▁for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '3', ';', '+', '+', 'i', ')', '\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 't', 'est', 'o', '[', '0', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 't', 'est', 'o', '[', '3', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n', '▁', '\t', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁', '\t', 't', 'est', 'o', '[', '3', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', '3', ';', '+', '+', 'i', ')', '\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\n\n', '▁', '\t', 'con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'con', 'fer', 'ma', '(', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'dis', 'pose', '(', ');', '\n', '▁', '\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\t\n', '▁', '\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'ved', 'ic', 'l', 'ient', 'e', '(', ');', '\t\t\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\t\n', '▁', '\t', '}', '\n', '▁', '\n', '▁', '\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '(', ')', '\n', '▁', '\t', '{', '\n\t\t', 'int', '▁i', ';', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\t\t\n\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'if', '▁(', '!', 'er', 'ror', 'i', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'st', 'or', 'ico', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'el', 'se', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'st', 'or', 'ico', '(', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', '),', '▁test', 'o', '[', '2', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'el', 'se', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'st', 'or', 'ico', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', ')', ')', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁=', '▁new', '▁list', 'ac', 'l', 'ient', 'i', '(', ');', '\n\t\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t\t', 'for', '▁(', 'i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'cl', 'ient', 'i', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'ad', 'd', 'it', 'em', '(', '(', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '.', 'get', 'cl', 'ient', 'e', '(', 'i', ')', ').', 't', 'ost', 'ring', '(', ')', ');', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁=', '=', '▁', '0)', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 't', 'ro', 'v', 'ata', '▁n', 'ess', 'una', '▁cor', 'ris', 'p', 'ond', 'en', 'za', '!', '"")', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '!', '"")', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁ne', 'i', '▁param', 'et', 'ri', '!', '"")', ';', '\n\t\t', 'for', '▁(', 'i', '▁=', '▁0', ';', '▁i', '<', 't', 'est', 'o', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t', '{', '\n\t\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', '}', '\n\t\t', 'for', '▁(', 'i', '▁=', '▁0', ';', '▁i', '<', 'che', 'ck', 'box', 'es', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t', 'che', 'ck', 'box', 'es', '[', 'i', ']', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n', '▁', '\n', '▁', '\t', 'bo', 'ole', 'an', '▁er', 'ror', 'i', '(', ')', '\n', '▁', '\t', '{', '\n\t\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', 'ret', 'urn', '▁(', '▁(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '>', '▁4', '▁', ');', '\n\t\t', 'el', 'se', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', 'ret', 'urn', '(', '▁(', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '>', '▁20', '▁||', '▁(', 't', 'est', 'o', '[', '2', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '>', '▁20', '▁', ');', '\n\t\t', 'el', 'se', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', 'ret', 'urn', '(', '▁!', 'd', 'ate', 'ut', 'ils', '.', 'd', 'at', 'ac', 'or', 'ret', 'ta', '(', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', ')', ')', '▁', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n', '▁', '\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'ved', 'ic', 'l', 'ient', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'cl', 'ient', 'e', '▁=', '▁el', 'en', 'co', '_', 'cl', 'ient', 'i', '.', 'get', 'cl', 'ient', 'e', '(', '(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁v', 'ed', 'ic', 'l', 'ient', 'e', '(', 'this', ',', 'cl', 'ient', 'e', ');', '\n\t', '}', '\n', '}', '\n\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'list', 'ac', 'l', 'ient', 'i', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'cl', 'iente', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'or', 'ico', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ann', 'ulla', ',', '▁con', 'fer', 'ma', ';', '\n', '▁text', 'field', '▁test', 'o', '[]', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', '4,', '▁et', 'iche', 'tta', '5,', '▁label', '1,', '▁label', '2,', '\n', '▁label', '3,', '▁label', '5', ';', '\n', '▁panel', '▁panel', '[]', ';', '\n', '▁check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁check', 'box', '[]', '▁check', 'box', 'es', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁list', '▁list', '_', 'cl', 'ient', 'i', ';', '\n', '▁frame', '▁pad', 're', ';', '\n', '▁vedic', 'l', 'iente', '▁fig', 'lio', ';', '\n', '▁client', 'e', '▁client', 'e', ';', '\n', '▁', '\n', '▁//', '▁la', '▁se', 'gu', 'ente', '▁vari', 'ab', 'ile', '▁serve', '▁per', '▁ten', 'ere', '▁in', '▁mem', 'oria', '▁la', '▁list', 'a', '▁dei', '▁client', 'i', '\n', '▁//', '▁cer', 'c', 'ati', '▁n', 'ello', '▁stor', 'ico', '\n', '▁list', 'ac', 'l', 'ient', 'i', '▁el', 'en', 'co', '_', 'cl', 'ient', 'i', ';', '\n\n', '▁public', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'or', 'ico', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'ric', 'er', 'ca', '▁n', 'ello', '▁stor', 'ico', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁pack', '();', '\n', '▁init', '();', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '▁""', ');', '\n', '▁//', 'ann', 'ulla', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁//', 'con', 'fer', 'ma', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'se', 'lez', 'ion', 'are', '▁il', '▁tip', 'o', '▁di', '▁ric', 'er', 'ca', '▁che', '▁si', '▁des', 'ider', 'a', '▁eff', 'ett', 'u', 'are', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', ':', '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '4', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁n', 'ome', ':', '"");', '\n', '▁et', 'iche', 'tta', '4.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '5', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁data', ':', '"");', '\n', '▁et', 'iche', 'tta', '5.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁num', 'ero', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'c', 'ogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(""', 'data', '▁di', '▁s', 'og', 'gi', 'orno', '▁des', 'ider', 'ata', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n', '▁check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁n', 'ome', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n', '▁check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁data', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁edit', 'ab', 'ili', '\n', '▁test', 'o', '▁=', '▁new', '▁text', 'field', '[', '4', ']', ';', '\n', '▁test', 'o', '[', '0', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁6', ');', '\n', '▁test', 'o', '[', '1]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁2', '5)', ';', '\n', '▁test', 'o', '[', '2', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁2', '5)', ';', '\n', '▁test', 'o', '[', '3', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁for', '(', 'int', '▁i', '=0', ';', 'i', '<', 'test', 'o', '.', 'length', ';', '++', 'i', ')', '\n', '▁test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁una', '▁text', 'area', '\n', '▁list', '_', 'cl', 'ient', 'i', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\n', '▁panel', '=', 'new', '▁panel', '[', '6', ']', ';', '\n', '▁for', '(', 'int', '▁i', '=0', ';', 'i', '<', '6', ';', '++', 'i', ')', '\n', '▁{', '\n', '▁panel', '[', 'i', ']', '=', 'new', '▁panel', '();', '\n', '▁panel', '[', 'i', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁}', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁sin', 'ist', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '0', '],', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '1', '],', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '2', '],', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁stan', 'za', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁et', 'iche', 'tta', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁test', 'o', '[', '0', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁n', 'ome', '▁e', '▁cogn', 'ome', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁et', 'iche', 'tta', '4,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁label', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁test', 'o', '[', '1', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁label', '3,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁test', 'o', '[', '2', '],', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.', '0,', '▁0.', '0,', '▁20,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'n', 'ello', '▁ric', 'er', 'ca', '▁per', '▁data', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁et', 'iche', 'tta', '5,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁label', '5,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁test', 'o', '[', '3', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁puls', 'anti', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', '],', '▁ann', 'ulla', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁', '0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', '],', '▁con', 'fer', 'ma', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁list', '_', 'cl', 'ient', 'i', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '5', '],', '▁et', 'iche', 'tta', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '5', '],', '▁list', '_', 'cl', 'ient', 'i', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '1', '],', '▁', '0,', '▁', '0,', '▁5,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '2', '],', '▁', '0,', '▁4,', '▁5,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '3', '],', '▁', '0,', '▁6,', '▁5,', '▁3,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '[', '4', '],', '▁', '0,', '▁9,', '▁5,', '▁2,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '0', '],', '▁', '0,', '▁11,', '▁5,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '5', '],', '▁', '0,', '▁12,', '▁5,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'check', 'box', 'es', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'rem', 'ove', 'all', '();', '\n', '▁', '\t', 'test', 'o', '[', '0', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '=3', ';', '++', 'i', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'check', 'box', 'es', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'rem', 'ove', 'all', '();', '\n', '▁', '\t\t', '▁for', '(', 'int', '▁i', '=1', ';', 'i', '<', '3', ';', '++', 'i', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'test', 'o', '[', '0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'test', 'o', '[', '3', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n', '▁', '\t', 'check', 'box', 'es', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'rem', 'ove', 'all', '();', '\n', '▁', '\t', 'test', 'o', '[', '3', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=0', ';', 'i', '<', '3', ';', '++', 'i', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\n\n', '▁', '\t', 'con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'dis', 'pose', '();', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\t\n', '▁', '\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'ved', 'ic', 'l', 'iente', '();', '\t\t\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\t\n', '▁', '\t', '}', '\n', '▁', '\n', '▁', '\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '()', '\n', '▁', '\t', '{', '\n\t\t', 'int', '▁i', ';', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\t\t\n\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'if', '▁(', '!', 'error', 'i', '())', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'stor', 'ico', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '());', '\n\t\t\t', 'el', 'se', '▁if', '(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'stor', 'ico', '(', 'test', 'o', '[', '1', '].', 'get', 'text', '(', '),', '▁test', 'o', '[', '2', '].', 'get', 'text', '());', '\n\t\t\t', 'el', 'se', '▁if', '(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'stor', 'ico', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '())', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁=', '▁new', '▁list', 'ac', 'l', 'ient', 'i', '();', '\n\t\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t\t', 'for', '▁(', 'i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'cl', 'ient', 'i', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t\t', 'list', '_', 'cl', 'ient', 'i', '.', 'add', 'it', 'em', '(', '(', 'el', 'en', 'co', '_', 'cl', 'ient', 'i', '.', 'get', 'cl', 'iente', '(', 'i', ')', ').', 't', 'ost', 'ring', '());', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'it', 'em', 'count', '()', '▁==', '▁', '0)', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 't', 'rov', 'ata', '▁ness', 'una', '▁cor', 'ris', 'p', 'ond', 'enza', '!', '"");', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁ne', 'i', '▁param', 'et', 'ri', '!', '"");', '\n\t\t', 'for', '▁(', 'i', '▁=', '▁0', ';', '▁i', '<', 'test', 'o', '.', 'length', ';', '▁i', '++', ')', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '(""', '"");', '\n\t\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', '}', '\n\t\t', 'for', '▁(', 'i', '▁=', '▁0', ';', '▁i', '<', 'check', 'box', 'es', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t', 'check', 'box', 'es', '[', 'i', '].', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\n', '▁', '\t', 'bo', 'olean', '▁error', 'i', '()', '\n', '▁', '\t', '{', '\n\t\t', 'if', '(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '▁(', '▁(', 'test', 'o', '[', '0', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁4', '▁', ');', '\n\t\t', 'el', 'se', '▁if', '(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '(', '▁(', 'test', 'o', '[', '1', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁20', '▁||', '▁(', 'test', 'o', '[', '2', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁20', '▁', ');', '\n\t\t', 'el', 'se', '▁if', '(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '(', '▁!', 'date', 'ut', 'ils', '.', 'dat', 'ac', 'or', 'ret', 'ta', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '())', '▁', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'return', '▁true', ';', '\n', '▁', '\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'ved', 'ic', 'l', 'iente', '()', '\n\t', '{', '\n\t\t', 'cl', 'iente', '▁=', '▁el', 'en', 'co', '_', 'cl', 'ient', 'i', '.', 'get', 'cl', 'iente', '(', '(', 'list', '_', 'cl', 'ient', 'i', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁vedic', 'l', 'iente', '(', 'this', ',', 'cl', 'iente', ');', '\n\t', '}', '\n', '}', '\n\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'list', 'ac', 'l', 'ient', 'i', ';', '\n', 'import', '▁mod', 'uli', '.', 'cl', 'iente', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'aric', 'er', 'cast', 'or', 'ico', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ann', 'ulla', ',', '▁confer', 'ma', ';', '\n', '▁text', 'field', '▁testo', '[]', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', '4,', '▁et', 'iche', 'tta', '5,', '▁label', '1,', '▁label', '2,', '\n', '▁label', '3,', '▁label', '5;', '\n', '▁panel', '▁panel', '[]', ';', '\n', '▁check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁check', 'box', '[]', '▁check', 'boxes', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', 'new', '▁grid', 'bag', 'layout', '();', '\n', '▁list', '▁list', '_', 'client', 'i', ';', '\n', '▁frame', '▁padre', ';', '\n', '▁vedic', 'l', 'iente', '▁fig', 'lio', ';', '\n', '▁client', 'e', '▁client', 'e', ';', '\n', '▁', '\n', '▁//', '▁la', '▁segu', 'ente', '▁vari', 'abile', '▁serve', '▁per', '▁ten', 'ere', '▁in', '▁memoria', '▁la', '▁list', 'a', '▁dei', '▁client', 'i', '\n', '▁//', '▁cer', 'c', 'ati', '▁nello', '▁stor', 'ico', '\n', '▁list', 'ac', 'l', 'ient', 'i', '▁elenco', '_', 'client', 'i', ';', '\n\n', '▁public', '▁masc', 'her', 'aric', 'er', 'cast', 'or', 'ico', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'ric', 'er', 'ca', '▁nello', '▁stor', 'ico', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁pack', '();', '\n', '▁init', '();', '\n', '▁this', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '▁""', ');', '\n', '▁//', 'ann', 'ulla', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n', '▁confer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁confer', 'ma', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁//', 'con', 'fer', 'ma', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'se', 'lez', 'ion', 'are', '▁il', '▁tipo', '▁di', '▁ricer', 'ca', '▁che', '▁si', '▁desider', 'a', '▁eff', 'ettu', 'are', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', ':', '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁stanza', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '4', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁nome', ':', '"");', '\n', '▁et', 'iche', 'tta', '4.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '5', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁data', ':', '"");', '\n', '▁et', 'iche', 'tta', '5.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁numero', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'cogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(""', 'data', '▁di', '▁sog', 'gi', 'orno', '▁desider', 'ata', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'boxes', '▁=', '▁new', '▁check', 'box', '[', '3', '];', '\n', '▁check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁stanza', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n', '▁check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁nome', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n', '▁check', 'boxes', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁data', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁edit', 'ab', 'ili', '\n', '▁testo', '▁=', '▁new', '▁text', 'field', '[', '4', '];', '\n', '▁testo', '[0]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁6', ');', '\n', '▁testo', '[1]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁2', '5);', '\n', '▁testo', '[', '2]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁2', '5);', '\n', '▁testo', '[', '3]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁for', '(', 'int', '▁i', '=0;', 'i', '<', 'test', 'o', '.', 'length', ';', '++', 'i', ')', '\n', '▁testo', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁una', '▁text', 'area', '\n', '▁list', '_', 'client', 'i', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\n', '▁panel', '=', 'new', '▁panel', '[', '6', '];', '\n', '▁for', '(', 'int', '▁i', '=0;', 'i', '<', '6;', '++', 'i', ')', '\n', '▁{', '\n', '▁panel', '[', 'i', ']', '=', 'new', '▁panel', '();', '\n', '▁panel', '[', 'i', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁}', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁sin', 'istra', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[0', '],', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[1', '],', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[', '2', '],', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ricer', 'ca', '▁per', '▁stanza', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁et', 'iche', 'tta', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁testo', '[0', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ricer', 'ca', '▁per', '▁nome', '▁e', '▁cogn', 'ome', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁et', 'iche', 'tta', '4,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁label', '2,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁testo', '[1', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁label', '3,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁testo', '[', '2', '],', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.0,', '▁0.', '0,', '▁20,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'n', 'ello', '▁ricer', 'ca', '▁per', '▁data', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁et', 'iche', 'tta', '5,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁label', '5,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁testo', '[', '3', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁puls', 'anti', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[0', '],', '▁ann', 'ulla', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[0', '],', '▁confer', 'ma', ',', '▁3,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁list', '_', 'client', 'i', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '5', '],', '▁et', 'iche', 'tta', '2,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '5', '],', '▁list', '_', 'client', 'i', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁1.0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[1', '],', '▁0,', '▁0,', '▁5,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '2', '],', '▁0,', '▁4,', '▁5,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '3', '],', '▁0,', '▁6,', '▁5,', '▁3,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '[', '4', '],', '▁0,', '▁9,', '▁5,', '▁2,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[0', '],', '▁0,', '▁11,', '▁5,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '5', '],', '▁0,', '▁12,', '▁5,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'check', 'boxes', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'client', 'i', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t\t', 'list', '_', 'client', 'i', '.', 'remove', 'all', '();', '\n', '▁', '\t', 'test', 'o', '[0', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '=3;', '++', 'i', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'check', 'boxes', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'client', 'i', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t\t', 'list', '_', 'client', 'i', '.', 'remove', 'all', '();', '\n', '▁', '\t\t', '▁for', '(', 'int', '▁i', '=1', ';', 'i', '<', '3;', '++', 'i', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'test', 'o', '[0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'test', 'o', '[', '3', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n', '▁', '\t', 'check', 'boxes', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'client', 'i', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t\t', 'list', '_', 'client', 'i', '.', 'remove', 'all', '();', '\n', '▁', '\t', 'test', 'o', '[', '3', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=0;', 'i', '<', '3;', '++', 'i', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\n\n', '▁', '\t', 'con', 'fer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'dis', 'pose', '();', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\t\n', '▁', '\t\t', 'list', '_', 'client', 'i', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'vedic', 'l', 'iente', '();', '\t\t\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\t\n', '▁', '\t', '}', '\n', '▁', '\n', '▁', '\t', 'void', '▁start', 'con', 'fer', 'ma', '()', '\n', '▁', '\t', '{', '\n\t\t', 'int', '▁i', ';', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\t\t\n\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'if', '▁(!', 'error', 'i', '())', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', 'elen', 'co', '_', 'client', 'i', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'stor', 'ico', '(', 'test', 'o', '[0', '].', 'get', 'text', '());', '\n\t\t\t', 'else', '▁if', '(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', 'elen', 'co', '_', 'client', 'i', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'stor', 'ico', '(', 'test', 'o', '[1', '].', 'get', 'text', '(),', '▁testo', '[', '2', '].', 'get', 'text', '());', '\n\t\t\t', 'else', '▁if', '(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', 'elen', 'co', '_', 'client', 'i', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'stor', 'ico', '(', 'date', 'utils', '.', 'convert', 'date', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '())', ');', '\n\t\t\t', 'else', '\n\t\t\t\t', 'elen', 'co', '_', 'client', 'i', '▁=', '▁new', '▁list', 'ac', 'l', 'ient', 'i', '();', '\n\t\t\t', 'if', '▁(', 'elen', 'co', '_', 'client', 'i', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'client', 'i', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'list', '_', 'client', 'i', '.', 'remove', 'all', '();', '\n\t\t\t\t', 'for', '▁(', 'i', '▁=', '▁1;', '▁i', '▁<', '=', '▁elenco', '_', 'client', 'i', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t\t', 'list', '_', 'client', 'i', '.', 'add', 'item', '((', 'elen', 'co', '_', 'client', 'i', '.', 'get', 'cl', 'iente', '(', 'i', ')).', 'tostring', '());', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'client', 'i', '.', 'get', 'item', 'count', '()', '▁==', '▁0)', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 't', 'rov', 'ata', '▁ness', 'una', '▁cor', 'ris', 'pond', 'enza', '!', '"");', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nei', '▁paramet', 'ri', '!', '"");', '\n\t\t', 'for', '▁(', 'i', '▁=', '▁0;', '▁i', '<', 'test', 'o', '.', 'length', ';', '▁i', '++)', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '("""");', '\n\t\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', '}', '\n\t\t', 'for', '▁(', 'i', '▁=', '▁0;', '▁i', '<', 'check', 'boxes', '.', 'length', ';', '▁i', '++)', '\n\t\t\t', 'check', 'boxes', '[', 'i', '].', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\n', '▁', '\t', 'boolean', '▁error', 'i', '()', '\n', '▁', '\t', '{', '\n\t\t', 'if', '(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '▁(', '▁(', 'test', 'o', '[0', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁4', '▁);', '\n\t\t', 'else', '▁if', '(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '(', '▁(', 'test', 'o', '[1', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁20', '▁||', '▁(', 'test', 'o', '[', '2', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁20', '▁);', '\n\t\t', 'else', '▁if', '(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '(', '▁!', 'date', 'utils', '.', 'dat', 'acor', 'retta', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '())', '▁);', '\n\t\t', 'else', '\n\t\t\t', 'return', '▁true', ';', '\n', '▁', '\t', '}', '\n\n\t', 'void', '▁start', 'vedic', 'l', 'iente', '()', '\n\t', '{', '\n\t\t', 'cl', 'iente', '▁=', '▁elenco', '_', 'client', 'i', '.', 'get', 'cl', 'iente', '((', 'list', '_', 'client', 'i', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁vedic', 'l', 'iente', '(', 'this', ',', 'cl', 'iente', ');', '\n\t', '}', '\n', '}', '\n\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli lista clienti import moduli client public class maschera ricerca storico extend frame button annulla conferma text field testo label etichetta etichetta etichetta etichetta etichetta label label label label panel panel checkbox group checkbox group checkbox checkbox grid bag layout gridbag new grid bag layout list list clienti frame padr vedi client figlio client client seguent variabil serv per tener memoria lista dei clienti cercati nello storico lista clienti elenco clienti public maschera ricerca storico frame parent super ricerca nello storico padr parent padr set enabl fals setup panel pack init set visibl true void setup panel set font configurazion sistema font base creo pulsanti annulla new button annulla annulla set font new font courier font plain conferma new button conferma conferma set enabl fals conferma set font new font courier font plain creo etichett etichetta new label selezionar tipo ricerca che desidera effettuar etichetta set font configurazion sistema font titolo etichetta new label risultato della ricerca etichetta set font configurazion sistema font titolo etichetta new label ricerca per stanza etichetta set font configurazion sistema font titolo etichetta new label ricerca per nome etichetta set font configurazion sistema font titolo etichetta new label ricerca per data etichetta set font configurazion sistema font titolo label new label stanza numero label new label cognom label new label nome label new label data soggiorno desiderata creo checkbox esclusion checkbox_group new checkbox group (); checkbox new checkbox checkbox new checkbox ricerca per stanza checkbox_group fals checkbox new checkbox ricerca per nome checkbox_group fals checkbox new checkbox ricerca per data checkbox_group fals creo text field rendo non editabili testo new text field testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", int testo length ;++ testo set edit fals creo una text area list_clienti new list fals panel new panel int ;++ panel new panel (); panel set layout gridbag creo pannello alto sinistra util constrain panel etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest creo pannello ricerca per stanza util constrain panel etichetta3 grid bag constraint none grid bag constraint northwest util constrain panel label1 grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest creo pannello ricerca per nome cognom util constrain panel etichetta4 grid bag constraint none grid bag constraint northwest util constrain panel label2 grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest util constrain panel label3 grid bag constraint none grid bag constraint southwest util constrain panel testo grid bag constraint none grid bag constraint southwest creo pannnello ricerca per data util constrain panel etichetta5 grid bag constraint none grid bag constraint northwest util constrain panel label5 grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest creo pannello dei pulsanti util constrain panel annulla grid bag constraint none grid bag constraint east util constrain panel conferma grid bag constraint none grid bag constraint west creo pannello contenent list_clienti util constrain panel etichetta2 grid bag constraint none grid bag constraint northwest util constrain panel list_clienti grid bag constraint grid bag constraint northwest attacco pannelli frame set layout gridbag util constrain panel grid bag constraint horizont grid bag constraint northwest util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel grid bag constraint horizont grid bag constraint southeast util constrain panel grid bag constraint horizont grid bag constraint west public void init checkbox add item listen new item listen public void item state chang item event checkbox get state ()) list_clienti get item count list_clienti remov (); testo set edit true int ;++ testo set edit fals conferma set enabl true }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) list_clienti get item count list_clienti remov (); int ;++ testo set edit true testo set edit fals testo set edit fals conferma set enabl true }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) list_clienti get item count list_clienti remov (); testo set edit true int ;++ testo set edit fals conferma set enabl true }); conferma add action listen new action listen public void action perform action event start conferma (); }); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); list_clienti add action listen new action listen public void action perform action event start vedi client (); }); void start conferma int frame msg conferma set enabl fals errori ()) checkbox get state ()) elenco_clienti principal found storico testo get text ()); els checkbox get state ()) elenco_clienti principal found storico testo get text (), testo get text ()); els checkbox get state ()) elenco_clienti principal found storico date util convert date testo get text ())); els elenco_clienti new lista clienti (); elenco_clienti null list_clienti get item count list_clienti remov (); elenco_clienti length (); ++) list_clienti add item elenco_clienti get client )). string ()); list_clienti get item count msg new avviso dialog trovata nessuna corrispondenza !""); els msg new messag dialog problemi con databas !""); els msg new messag dialog error nei parametri !""); testo length ++) testo set text (""""); testo set edit fals checkbox length ++) checkbox set enabl true boolean errori checkbox get state ()) return testo get text ()). length els checkbox get state ()) return testo get text ()). length testo get text ()). length els checkbox get state ()) return date util data corretta testo get text ()) els return true void start vedi client client elenco_clienti get client list_clienti get select index ())[ figlio new vedi client client"
33~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/InserisciCommissioni.java~InserisciCommissioni.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class InserisciCommissioni extends MascheraCommissioni
{
	MascheraRicercaStanza mask_ricerca = new MascheraRicercaStanza("""",1); 
   	
   	public InserisciCommissioni(Stanza stanza, String data1, String data2)
   	{
      	super(data1, data2, ""Inserimento dei dati delle commissioni"",""Inserisci"",1);
      	init(stanza, data1, data2);
   	}

 	public void init(Stanza stanza, String data1, String data2)
 	{     	
      	num_stanza.setText(stanza.getNumStanza());
        inizio_comm.setText(data1);
        fine_comm.setText(data2);
        num_stanza.setEditable(false);
        inizio_comm.setEditable(false);
        fine_comm.setEditable(false);
		
      	Annulla.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				dispose();
				mask_ricerca.setEnabled(true);
			}
        });
      	
      	Azione.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				startAzione();
			}
        });
    }

	void startAzione()
	{
		Frame msg;
		
		if ( !errori() )
		{
			Commissionamento comm = readDatiComm();
			int j;
			if ( (j = (Principale.db).newIdCommissionamento()) == DataBase.OK )
			{
				(Principale.config).updateIdCommissionamento();
				if ((j = (Principale.db).writeCommissionamento(comm)) == DataBase.OK)
				{
					aggiornaDisp(comm, Flag.COMMISSIONATA);
					dispose();
					mask_ricerca.restartAvvio();
					mask_ricerca.setEnabled(true);
				}
				else
					msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j) );
			}
			else
				msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j) );
		}
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁ins', 'er', 'isc', 'ic', 'om', 'mission', 'i', '▁ext', 'ends', '▁m', 'asc', 'her', 'ac', 'om', 'mission', 'i', '\n', '{', '\n\t', 'm', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '▁m', 'ask', '_', 'ric', 'er', 'ca', '▁=', '▁new', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '(', '""', '"",', '1)', ';', '▁', '\n', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁ins', 'er', 'isc', 'ic', 'om', 'mission', 'i', '(', 'stan', 'za', '▁stan', 'za', ',', '▁string', '▁data', '1,', '▁string', '▁data', '2)', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', 'd', 'ata', '1,', '▁data', '2,', '▁""', 'ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁del', 'le', '▁commission', 'i', '"",', '""', 'ins', 'er', 'isc', 'i', '"",', '1)', ';', '\n', '▁', '\t', 'in', 'it', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2)', ';', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', 'stan', 'za', '▁stan', 'za', ',', '▁string', '▁data', '1,', '▁string', '▁data', '2)', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁in', 'iz', 'io', '_', 'com', 'm', '.', 's', 'ette', 'xt', '(', 'd', 'ata', '1)', ';', '\n', '▁fine', '_', 'com', 'm', '.', 's', 'ette', 'xt', '(', 'd', 'ata', '2)', ';', '\n', '▁num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁in', 'iz', 'io', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁fine', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\n', '▁', '\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'm', 'ask', '_', 'ric', 'er', 'ca', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\t\n', '▁', '\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'er', 'ror', 'i', '(', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'com', 'mission', 'ament', 'o', '▁comm', '▁=', '▁read', 'd', 'atic', 'omm', '(', ');', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'new', 'id', 'com', 'mission', 'ament', 'o', '(', ')', ')', '▁=', '=', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'up', 'd', 'ate', 'id', 'com', 'mission', 'ament', 'o', '(', ');', '\n\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'ec', 'om', 'mission', 'ament', 'o', '(', 'com', 'm', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'com', 'm', ',', '▁flag', '.', 'com', 'mission', 'ata', ');', '\n\t\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t\t', 'm', 'ask', '_', 'ric', 'er', 'ca', '.', 'rest', 'art', 'av', 'v', 'io', '(', ');', '\n\t\t\t\t\t', 'm', 'ask', '_', 'ric', 'er', 'ca', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'icom', 'mission', 'i', '▁extends', '▁masc', 'her', 'acom', 'mission', 'i', '\n', '{', '\n\t', 'm', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '▁mask', '_', 'ric', 'er', 'ca', '▁=', '▁new', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '(""', '"",', '1)', ';', '▁', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ins', 'er', 'isc', 'icom', 'mission', 'i', '(', 'stan', 'za', '▁stan', 'za', ',', '▁string', '▁data', '1,', '▁string', '▁data', '2)', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(', 'data', '1,', '▁data', '2,', '▁""', 'ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁delle', '▁commission', 'i', '"",', '""', 'ins', 'er', 'isc', 'i', '"",', '1)', ';', '\n', '▁', '\t', 'init', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2)', ';', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '(', 'stan', 'za', '▁stan', 'za', ',', '▁string', '▁data', '1,', '▁string', '▁data', '2)', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁in', 'izio', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'data', '1)', ';', '\n', '▁fine', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'data', '2)', ';', '\n', '▁num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁in', 'izio', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁fine', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\n', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\t\n', '▁', '\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'com', 'mission', 'amento', '▁comm', '▁=', '▁read', 'd', 'atic', 'omm', '();', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'new', 'id', 'com', 'mission', 'amento', '())', '▁==', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'up', 'date', 'id', 'com', 'mission', 'amento', '();', '\n\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'writ', 'ec', 'om', 'mission', 'amento', '(', 'comm', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'orn', 'ad', 'isp', '(', 'comm', ',', '▁flag', '.', 'com', 'mission', 'ata', ');', '\n\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'rest', 'art', 'av', 'v', 'io', '();', '\n\t\t\t\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'icom', 'mission', 'i', '▁extends', '▁masc', 'her', 'acom', 'mission', 'i', '\n', '{', '\n\t', 'masc', 'her', 'aric', 'er', 'cast', 'anza', '▁mask', '_', 'ric', 'er', 'ca', '▁=', '▁new', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '(""', '"",', '1);', '▁', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ins', 'er', 'isc', 'icom', 'mission', 'i', '(', 'stan', 'za', '▁stanza', ',', '▁string', '▁data', '1,', '▁string', '▁data', '2)', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(', 'data', '1,', '▁data', '2,', '▁""', 'ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁delle', '▁commission', 'i', '"",""', 'ins', 'er', 'isc', 'i', '"",', '1);', '\n', '▁', '\t', 'init', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2);', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '(', 'stan', 'za', '▁stanza', ',', '▁string', '▁data', '1,', '▁string', '▁data', '2)', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁in', 'izio', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'data', '1);', '\n', '▁fine', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'data', '2);', '\n', '▁num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁in', 'izio', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁fine', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\n', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\t\n', '▁', '\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'commission', 'amento', '▁comm', '▁=', '▁read', 'd', 'atic', 'omm', '();', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'new', 'id', 'commission', 'amento', '())', '▁==', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'princip', 'ale', '.', 'config', ').', 'update', 'id', 'commission', 'amento', '();', '\n\t\t\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'writ', 'ecom', 'mission', 'amento', '(', 'comm', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'orn', 'ad', 'isp', '(', 'comm', ',', '▁flag', '.', 'commission', 'ata', ');', '\n\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'rest', 'art', 'av', 'vio', '();', '\n\t\t\t\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁);', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁);', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import moduli public class inserisci commissioni extend maschera commissioni maschera ricerca stanza mask ricerca new maschera ricerca stanza public inserisci commissioni stanza stanza string data string data super data data inserimento dei dati dell commissioni inserisci init stanza data data public void init stanza stanza string data string data num stanza set text stanza get num stanza inizio comm set text data fine comm set text data num stanza set edit fals inizio comm set edit fals fine comm set edit fals annulla add action listen new action listen public void action perform action event dispos mask ricerca set enabl true azion add action listen new action listen public void action perform action event start azion void start azion frame msg errori commissionamento comm read dati comm int principal new commissionamento data base principal config updat commissionamento principal write commissionamento comm data base aggiorna disp comm flag commissionata dispos mask ricerca restart avvio mask ricerca set enabl true els msg new messag dialog problemi con databas data base str error els msg new messag dialog problemi con databas data base str error
34~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/InserisciSoggiornante.java~InserisciSoggiornante.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import moduli.*;
import common.utility.*;
import common.def.*;
import interfacce.*;
import java.util.Date;

public class InserisciSoggiornante extends MascheraSoggiorno
{
   Prenotazione prenotazione;
   int counter_ins = 1;
   int counter_tot;
   public InserisciSoggiornante(RicercaPrenotazione parent, Prenotazione p)
   {
      super(""Inserimento dati"", ""Inserisci"", p.getPensionamento(), Flag.ADULTO);
      padre = parent;
      padre.setEnabled(false);
      prenotazione = p;
      inizializza();
   }

   public void inizializza()
   {
      testo1.setText(prenotazione.getNumStanza());
      testo1.setEditable(false);
      testo2.setText(prenotazione.getCognome());
      testo3.setText(prenotazione.getNome());
      testo7.setText(prenotazione.getNumTel());
      testo13.setText(DateUtils.giveStringOfDate(prenotazione.getInizioSogg()));
      testo13.setEditable(false);
      testo14.setText(DateUtils.giveStringOfDate(prenotazione.getFineSogg()));
      testo14.setEditable(false);
      counter_tot = prenotazione.getNumPers();
      if (prenotazione.getRichLettoAgg() == Const.SI)
      	counter_tot++;
      changeTitle(counter_ins, counter_tot);
      
      Conferma.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			startConferma();
         }
      });
      
    }

	void startConferma()
	{
		Frame msg;
		
        if (!erroriLocale())
        {
			Soggiornante sogg = readDatiSogg(prenotazione, counter_ins);
			int j;
          	if ( (j = (Principale.db).writeSoggiornante(sogg)) == DataBase.OK )
          	{
				Annulla.setEnabled(false);
				cleanFields();
				if (counter_ins == counter_tot)
				{
					aggiornaDisp(sogg, Flag.OCCUPATA );
					dispose();
					padre.creaLista(1);
					padre.setEnabled(true);
				}
				counter_ins++;
				changeTitle(counter_ins, counter_tot);
           	}
			else
				msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j));
       	}
	}
	
	boolean erroriLocale()
	{
		if (!errori())
		{
			if (counter_ins == 1)
			{
				Frame msg;
				if ( (testo2.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitato il cognome! "");
					return true;
				}
				if ( (testo3.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitato il nome! "");
					return true;
				}
				if ( (testo6.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitato il numero di documento! "");
					return true;
				}
				if ( (testo7.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitato il numero telefonico! "");
					return true;
				}
				if ( (testo8.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitato l'indirizzo! "");
					return true;
				}
				if ( (testo9.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitato il C.A.P.! "");
					return true;
				}
				if ( (testo10.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitato il comune! "");
					return true;
				}
				if ( (testo11.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitata la citta! "");
					return true;
				}
				if ( (testo12.getText()).equals("""") )
				{
					msg = new MessageDialog(this, "" Per il primo soggiornante inserito deve essere digitata la nazione! "");
					return true;
				}
			}
			return false;
		}
		return true;
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁inter', 'f', 'ac', 'ce', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n\n', 'publ', 'ic', '▁class', '▁ins', 'er', 'isc', 'is', 'og', 'gi', 'orn', 'ante', '▁ext', 'ends', '▁m', 'asc', 'her', 'as', 'og', 'gi', 'orn', 'o', '\n', '{', '\n', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', 'ot', 'az', 'ion', 'e', ';', '\n', '▁int', '▁counter', '_', 'ins', '▁=', '▁1', ';', '\n', '▁int', '▁counter', '_', 't', 'ot', ';', '\n', '▁public', '▁ins', 'er', 'isc', 'is', 'og', 'gi', 'orn', 'ante', '(', 'ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁paren', 't', ',', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'ins', 'er', 'iment', 'o', '▁d', 'ati', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '▁p', '.', 'get', 'p', 'ension', 'ament', 'o', '(', '),', '▁flag', '.', 'ad', 'ult', 'o', ');', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁=', '▁p', ';', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n', '▁{', '\n', '▁test', 'o', '1.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁test', 'o', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '2.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'c', 'ogn', 'ome', '(', ')', ');', '\n', '▁test', 'o', '3.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'ome', '(', ')', ');', '\n', '▁test', 'o', '7.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'um', 't', 'el', '(', ')', ');', '\n', '▁test', 'o', '1', '3.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ')', ');', '\n', '▁test', 'o', '1', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '1', '4.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'f', 'ines', 'og', 'g', '(', ')', ')', ');', '\n', '▁test', 'o', '1', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁counter', '_', 't', 'ot', '▁=', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'n', 'ump', 'ers', '(', ');', '\n', '▁if', '▁(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'get', 'rich', 'let', 'to', 'ag', 'g', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n', '▁', '\t', 'counter', '_', 't', 'ot', '+', '+', ';', '\n', '▁chang', 'et', 'it', 'le', '(', 'counter', '_', 'ins', ',', '▁counter', '_', 't', 'ot', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'st', 'art', 'con', 'fer', 'ma', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n', '▁if', '▁(', '!', 'er', 'ror', 'il', 'oc', 'ale', '(', ')', ')', '\n', '▁{', '\n\t\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', '▁=', '▁read', 'd', 'at', 'is', 'og', 'g', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ',', '▁counter', '_', 'ins', ');', '\n\t\t\t', 'int', '▁j', ';', '\n', '▁', '\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'es', 'og', 'gi', 'orn', 'ante', '(', 'so', 'g', 'g', ')', ')', '▁=', '=', '▁database', '.', 'ok', '▁)', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'ann', 'ull', 'a', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'cle', 'an', 'field', 's', '(', ');', '\n\t\t\t\t', 'if', '▁(', 'counter', '_', 'ins', '▁=', '=', '▁counter', '_', 't', 'ot', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'so', 'g', 'g', ',', '▁flag', '.', 'oc', 'c', 'up', 'ata', '▁', ');', '\n\t\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t\t', 'p', 'ad', 're', '.', 'c', 'real', 'ista', '(', '1)', ';', '\n\t\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'counter', '_', 'ins', '+', '+', ';', '\n\t\t\t\t', 'ch', 'ang', 'et', 'it', 'le', '(', 'counter', '_', 'ins', ',', '▁counter', '_', 't', 'ot', ');', '\n', '▁', '\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n', '▁', '\t', '}', '\n\t', '}', '\n\t\n\t', 'bo', 'ole', 'an', '▁er', 'ror', 'il', 'oc', 'ale', '(', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', '!', 'er', 'ror', 'i', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'counter', '_', 'ins', '▁=', '=', '▁1', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '2.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ato', '▁il', '▁co', 'gn', 'ome', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ato', '▁il', '▁n', 'ome', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '6.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ato', '▁il', '▁num', 'ero', '▁di', '▁document', 'o', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '7.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ato', '▁il', '▁num', 'ero', '▁tele', 'f', 'on', 'ico', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '8.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ato', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '9.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ato', '▁il', '▁c', '.', 'a', '.', 'p', '.', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '1', '0.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ato', '▁il', '▁com', 'une', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '1', '1.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ata', '▁la', '▁c', 'itt', 'a', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '1', '2.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁dig', 'it', 'ata', '▁la', '▁naz', 'ion', 'e', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁true', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁inter', 'fac', 'ce', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'is', 'og', 'gi', 'orn', 'ante', '▁extends', '▁masc', 'her', 'as', 'og', 'gi', 'orno', '\n', '{', '\n', '▁pren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁int', '▁counter', '_', 'ins', '▁=', '▁1', ';', '\n', '▁int', '▁counter', '_', 'tot', ';', '\n', '▁public', '▁ins', 'er', 'isc', 'is', 'og', 'gi', 'orn', 'ante', '(', 'ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ',', '▁pren', 'ot', 'azione', '▁p', ')', '\n', '▁{', '\n', '▁super', '(""', 'ins', 'er', 'iment', 'o', '▁d', 'ati', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '▁p', '.', 'get', 'p', 'ension', 'amento', '(', '),', '▁flag', '.', 'ad', 'ult', 'o', ');', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁pren', 'ot', 'azione', '▁=', '▁p', ';', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '();', '\n', '▁}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n', '▁{', '\n', '▁test', 'o', '1.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '2.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'c', 'ogn', 'ome', '());', '\n', '▁test', 'o', '3.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'n', 'ome', '());', '\n', '▁test', 'o', '7.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'num', 'tel', '());', '\n', '▁test', 'o', '1', '3.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'in', 'iz', 'ios', 'ogg', '())', ');', '\n', '▁test', 'o', '1', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '1', '4.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'f', 'ines', 'ogg', '())', ');', '\n', '▁test', 'o', '1', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁counter', '_', 'tot', '▁=', '▁pren', 'ot', 'azione', '.', 'get', 'n', 'ump', 'ers', '();', '\n', '▁if', '▁(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'rich', 'let', 'to', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '\n', '▁', '\t', 'counter', '_', 'tot', '++', ';', '\n', '▁chang', 'et', 'it', 'le', '(', 'counter', '_', 'ins', ',', '▁counter', '_', 'tot', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n', '▁if', '▁(', '!', 'error', 'il', 'oc', 'ale', '())', '\n', '▁{', '\n\t\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁read', 'dat', 'is', 'ogg', '(', 'p', 'ren', 'ot', 'azione', ',', '▁counter', '_', 'ins', ');', '\n\t\t\t', 'int', '▁j', ';', '\n', '▁', '\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'writ', 'es', 'og', 'gi', 'orn', 'ante', '(', 'so', 'gg', '))', '▁==', '▁database', '.', 'ok', '▁)', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'ann', 'ulla', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\t', 'cle', 'an', 'fields', '();', '\n\t\t\t\t', 'if', '▁(', 'counter', '_', 'ins', '▁==', '▁counter', '_', 'tot', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'orn', 'ad', 'isp', '(', 'so', 'gg', ',', '▁flag', '.', 'occup', 'ata', '▁', ');', '\n\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t', 'pad', 're', '.', 'c', 'real', 'ista', '(1)', ';', '\n\t\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'counter', '_', 'ins', '++', ';', '\n\t\t\t\t', 'chang', 'et', 'it', 'le', '(', 'counter', '_', 'ins', ',', '▁counter', '_', 'tot', ');', '\n', '▁', '\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n', '▁', '\t', '}', '\n\t', '}', '\n\t\n\t', 'bo', 'olean', '▁error', 'il', 'oc', 'ale', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', '!', 'error', 'i', '())', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'counter', '_', 'ins', '▁==', '▁1)', '\n\t\t\t', '{', '\n\t\t\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '2.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁cogn', 'ome', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '3.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁n', 'ome', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '6.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁num', 'ero', '▁di', '▁document', 'o', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '7.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁num', 'ero', '▁tele', 'f', 'on', 'ico', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '8.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '9.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁c', '.', 'a', '.', 'p', '.', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '10.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁comune', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '11.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ata', '▁la', '▁c', 'itta', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '12.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁prim', 'o', '▁s', 'og', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ata', '▁la', '▁naz', 'ione', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁inter', 'fac', 'ce', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'is', 'oggi', 'orn', 'ante', '▁extends', '▁masc', 'her', 'as', 'oggi', 'orno', '\n', '{', '\n', '▁pren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁int', '▁counter', '_', 'ins', '▁=', '▁1;', '\n', '▁int', '▁counter', '_', 'tot', ';', '\n', '▁public', '▁ins', 'er', 'isc', 'is', 'oggi', 'orn', 'ante', '(', 'ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ',', '▁pren', 'ot', 'azione', '▁p', ')', '\n', '▁{', '\n', '▁super', '(""', 'ins', 'er', 'imento', '▁d', 'ati', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '▁p', '.', 'get', 'pension', 'amento', '(),', '▁flag', '.', 'adult', 'o', ');', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁pren', 'ot', 'azione', '▁=', '▁p', ';', '\n', '▁in', 'iz', 'ial', 'izza', '();', '\n', '▁}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n', '▁{', '\n', '▁testo', '1.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁testo', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '2.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'cogn', 'ome', '());', '\n', '▁testo', '3.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'n', 'ome', '());', '\n', '▁testo', '7.', 's', 'ette', 'xt', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'num', 'tel', '());', '\n', '▁testo', '13.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'in', 'iz', 'ios', 'ogg', '())', ');', '\n', '▁testo', '13.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '14.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'f', 'ines', 'ogg', '())', ');', '\n', '▁testo', '14.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁counter', '_', 'tot', '▁=', '▁pren', 'ot', 'azione', '.', 'get', 'n', 'ump', 'ers', '();', '\n', '▁if', '▁(', 'p', 'ren', 'ot', 'azione', '.', 'get', 'rich', 'letto', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '\n', '▁', '\t', 'counter', '_', 'tot', '++;', '\n', '▁chang', 'et', 'itle', '(', 'counter', '_', 'ins', ',', '▁counter', '_', 'tot', ');', '\n', '▁', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'void', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n', '▁if', '▁(!', 'error', 'il', 'oc', 'ale', '())', '\n', '▁{', '\n\t\t\t', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁read', 'dat', 'is', 'ogg', '(', 'p', 'ren', 'ot', 'azione', ',', '▁counter', '_', 'ins', ');', '\n\t\t\t', 'int', '▁j', ';', '\n', '▁', '\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'writes', 'oggi', 'orn', 'ante', '(', 'so', 'gg', '))', '▁==', '▁database', '.', 'ok', '▁)', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'ann', 'ulla', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\t', 'clean', 'fields', '();', '\n\t\t\t\t', 'if', '▁(', 'counter', '_', 'ins', '▁==', '▁counter', '_', 'tot', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'orn', 'ad', 'isp', '(', 'so', 'gg', ',', '▁flag', '.', 'occup', 'ata', '▁);', '\n\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t', 'pad', 're', '.', 'c', 'real', 'ista', '(1)', ';', '\n\t\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'counter', '_', 'ins', '++;', '\n\t\t\t\t', 'chang', 'et', 'itle', '(', 'counter', '_', 'ins', ',', '▁counter', '_', 'tot', ');', '\n', '▁', '\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n', '▁', '\t', '}', '\n\t', '}', '\n\t\n\t', 'boolean', '▁error', 'il', 'oc', 'ale', '()', '\n\t', '{', '\n\t\t', 'if', '▁(!', 'error', 'i', '())', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'counter', '_', 'ins', '▁==', '▁1)', '\n\t\t\t', '{', '\n\t\t\t\t', 'frame', '▁msg', ';', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '2.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁cogn', 'ome', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '3.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁nome', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '6.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁numero', '▁di', '▁document', 'o', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '7.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁numero', '▁telef', 'on', 'ico', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '8.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '9.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁c', '.', 'a', '.', 'p', '.', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '10.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ato', '▁il', '▁comune', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '11.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ata', '▁la', '▁c', 'itta', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'if', '▁(', '▁(', 'test', 'o', '12.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁per', '▁il', '▁primo', '▁sog', 'gi', 'orn', 'ante', '▁ins', 'er', 'ito', '▁de', 've', '▁ess', 'ere', '▁digit', 'ata', '▁la', '▁naz', 'ione', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import moduli import common util import common def import interfacc import java util date public class inserisci soggiornant extend maschera soggiorno prenotazion prenotazion int counter int counter tot public inserisci soggiornant ricerca prenotazion parent prenotazion super inserimento dati inserisci get pensionamento flag adulto padr parent padr set enabl fals prenotazion inizializza public void inizializza testo set text prenotazion get num stanza testo set edit fals testo set text prenotazion get cognom testo set text prenotazion get nome testo set text prenotazion get num tel testo set text date util give string date prenotazion get inizio sogg testo set edit fals testo set text date util give string date prenotazion get fine sogg testo set edit fals counter tot prenotazion get num per prenotazion get rich letto agg const counter tot chang titl counter counter tot conferma add action listen new action listen public void action perform action event start conferma void start conferma frame msg errori local soggiornant sogg read dati sogg prenotazion counter int principal write soggiornant sogg data base annulla set enabl fals clean field counter counter tot aggiorna disp sogg flag occupata dispos padr crea lista padr set enabl true counter chang titl counter counter tot els msg new messag dialog problemi con databas data base str error )); boolean errori local errori ()) counter_in frame msg testo2 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitato cognom ""); return true testo3 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitato nome ""); return true testo6 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitato numero documento ""); return true testo7 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitato numero telefonico ""); return true testo8 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitato indirizzo ""); return true testo9 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitato ""); return true testo10 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitato comun ""); return true testo11 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitata citta ""); return true testo12 get text ()). equal ("""") msg new messag dialog per primo soggiornant inserito deve esser digitata nazion ""); return true return fals return true"
35~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraCommissioni.java~MascheraCommissioni.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class MascheraCommissioni extends Frame
{
   TextField num_stanza, nome_agenzia, inizio_comm, fine_comm, scadenza_comm ,num_tel_agenzia;
   Label etichetta3, etich1, etich2, etich3, etich4, etich5, etich6, etich7;
   Panel panel1, panel2, panel3, panel4, panel5;
   List lista;
   Button Annulla, Azione, Cerca;
   GridBagLayout gridbag = new GridBagLayout();
   SubCommissioni padre = new SubCommissioni();
   ListaCommissionamenti L;
   int caller;
   public MascheraCommissioni(String data1, String data2, String title, String caption, int c)
   {
      super(title);
      caller = c;
      setupPanels(data1, data2, caption);
      inizializza();
      pack();
   }

   	void setupPanels(String data1, String data2, String caption)
   	{
	    this.setFont(ConfigurazioneSistema.font_base);
      	//Creo le etichette
      	etichetta3 = new Label(""Inserimento dati della commissione"");
      	etichetta3.setFont(ConfigurazioneSistema.font_titolo);
      	etich1 = new Label(""Nome Agenzia"");
      	etich2 = new Label(""Numero Stanza"");
      	etich3 = new Label(""Data inizio Commissione"");
      	etich4 = new Label(""Data fine Commissione"");
      	etich5 = new Label(""Data scadenza Commissione"");
      	etich6 = new Label(""Numero telefonico Agenzia"");
      	etich7 = new Label(""Risultato della ricerca"");
		etich7.setFont(ConfigurazioneSistema.font_titolo);
		
      
      //Creo i TextField e ne rendo  alcuni non editabili
      nome_agenzia = new TextField("""",20);
      num_stanza = new TextField("""",4);
      inizio_comm = new TextField("""",12);
      fine_comm = new TextField("""",12);
      scadenza_comm = new TextField("""",12);
      num_tel_agenzia = new TextField("""",16);

      //Creo i pulsanti
      Annulla = new Button("" Fine "");
      Azione = new Button(caption);
      Cerca = new Button("" Cerca "");

      //Creo il pannello
      panel3 = new Panel();
      panel3.setLayout(gridbag);
      Utils.constrain(panel3, etichetta3, 0, 0, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0); 
      Utils.constrain(panel3, etich1, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3,nome_agenzia , 1, 1, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3, etich2, 2, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3,num_stanza, 3, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3, etich3, 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3,inizio_comm , 1, 2, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3, etich4, 2, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3,fine_comm , 3, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3, etich5, 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3,scadenza_comm , 1, 3, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3, etich6, 0, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3,num_tel_agenzia , 1, 4, 4, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);

      panel4 = new Panel();
      panel4.setLayout(gridbag);
      Utils.constrain(panel4, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 15);
      Utils.constrain(panel4, Azione, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);      
      if ((caller == 2) || (caller == 3) )
      Utils.constrain(panel4,Cerca, 2, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);                               
		
		
		lista = new List(10, false);
		lista.setFont(ConfigurazioneSistema.font_allineato);
		
		panel5 = new Panel();
		panel5.setLayout(gridbag);
        Utils.constrain(panel5, etich7, 0, 0, 2, 1, GridBagConstraints.NONE,
                       GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);
        Utils.constrain(panel5,lista, 0, 1, 4, 3, GridBagConstraints.BOTH,
                        GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);
		      
      
      //Attacco i pannelli al frame
      this.setLayout(gridbag);
      Utils.constrain(this, panel3, 0, 0, 6, 5, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel4, 0, 5, 6, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel5, 0, 6, 6, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);                  
	panel5.setVisible(false);
	pack();	   		
   
   }

   public void inizializza()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			dispose();
			padre.setEnabled(true);
         }
      });
   }

	Commissionamento readDatiComm()
	{
		Commissionamento comm = new Commissionamento();
		comm.setIdCommissionamento((Principale.config).getIdCommissionamento());
		comm.setNomeAgenzia(nome_agenzia.getText());
		comm.setNumStanza(num_stanza.getText());
		comm.setInizioComm(DateUtils.convertDate(inizio_comm.getText()));
		comm.setFineComm(DateUtils.convertDate(fine_comm.getText()));
		comm.setScadenzaComm(DateUtils.convertDate(scadenza_comm.getText()));
		comm.setNumTel(num_tel_agenzia.getText());
		return comm;
	}

	void writeDatiComm(Commissionamento comm)
	{
		nome_agenzia.setText(comm.getNomeAgenzia());
		num_stanza.setText(comm.getNumStanza());
		inizio_comm.setText(DateUtils.giveStringOfDate(comm.getInizioComm()));							
		fine_comm.setText(DateUtils.giveStringOfDate(comm.getFineComm()));
		scadenza_comm.setText(DateUtils.giveStringOfDate(comm.getScadenzaComm()));
		num_tel_agenzia.setText(comm.getNumTel());
	}

	protected boolean errori()
	{
		Frame msg;
		
		if (!((num_stanza.getText()).length() <= 4))
		{
			msg = new MessageDialog(this, "" Il numero della stanza deve avere al piu' 4 caratteri! "");
			return true;
		}
		if ((num_stanza.getText()).equals(""""))
		{
			msg = new MessageDialog(this, "" Manca il numero di stanza! "");
			return true;
		}
		if ((nome_agenzia.getText()).equals("""")) 
		{
			msg = new MessageDialog(this, "" Manca il nome dell'agenzia! "");
			return true;
		}
		if (!((nome_agenzia.getText()).length() <= 20))
		{
			msg = new MessageDialog(this, "" Il nome dell'agenzia deve avere al piu' 20 caratteri! "");
			return true;
		}
		if ((scadenza_comm.getText()).equals(""""))
		{
			msg = new MessageDialog(this, "" Manca la data di scadenza! "");
			return true;
		}
		if (!(DateUtils.dataCorretta(scadenza_comm.getText()) ))
		{
			msg = new MessageDialog(this, "" La data di scadenza e' non corretta! "");
			return true;
		}
		if ((num_tel_agenzia.getText()).equals(""""))
		{
			msg = new MessageDialog(this, "" Manca il numero di telefono! "");
			return true;
		}
		if (!((num_tel_agenzia.getText()).length() <= 16))
		{
			msg = new MessageDialog(this, "" Il numero di telefono deve avere al piu' 16 caratteri! "");
			return true;
		}
		return false;
	}

	void cleanFields()
	{
	  nome_agenzia.setText("""");
      num_stanza.setText("""");
      inizio_comm.setText("""");
      fine_comm.setText("""");
      scadenza_comm.setText("""");
      num_tel_agenzia.setText("""");
	}

	// procedura utilizzata da Modifica e Cancella
	void creaLista()
	{
		Frame msg;
		
		Commissionamento c;
		L = (Principale.db).foundCommissionamenti(new String(nome_agenzia.getText()));
		if (L != null)
		{
			if (lista.getItemCount() > 0)
				lista.removeAll();
			if (!L.isEmpty())
			{
				panel5.setVisible(true);
				pack();
				for (int i = 1; i<=L.length(); i++)
					lista.addItem((L.getCommissionamento(i)).toString());
			}
			else
				msg = new AvvisoDialog(this, ""Agenzia ""+nome_agenzia.getText()+"" non trovata!"");
		}
		else
			msg = new MessageDialog(this, ""Problemi con il database!"");
	}
	
	void aggiornaDisp(Commissionamento comm, char tipo)
	{
		Disponibilita disp_da_cambiare = new Disponibilita();
		ListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();
		if (elenco_disp == null)
		{
			Frame msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return;
		}
		
		disp_da_cambiare = Utils.getDispOfRoom(elenco_disp,comm.getNumStanza(),true);
		if (tipo == Flag.COMMISSIONATA)
			disp_da_cambiare.setDisponibilita(comm.getInizioComm(), comm.getFineComm(), tipo, Flag.DISPONIBILE);
		else
			disp_da_cambiare.setDisponibilita(comm.getInizioComm(), comm.getFineComm(), tipo, Flag.COMMISSIONATA);			
		(Principale.db).changeDisponibilita( disp_da_cambiare.getNumStanza(), 
											disp_da_cambiare.getDispAnnoCorr(),
											disp_da_cambiare.getDispAnnoProx() );
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ac', 'om', 'mission', 'i', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁text', 'field', '▁num', '_', 'stan', 'za', ',', '▁n', 'ome', '_', 'agen', 'z', 'ia', ',', '▁in', 'iz', 'io', '_', 'com', 'm', ',', '▁fine', '_', 'com', 'm', ',', '▁sc', 'ad', 'en', 'za', '_', 'com', 'm', '▁,', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', ';', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7', ';', '\n', '▁pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3,', '▁pan', 'el', '4,', '▁pan', 'el', '5', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁az', 'ion', 'e', ',', '▁cer', 'ca', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁sub', 'com', 'mission', 'i', '▁pad', 're', '▁=', '▁new', '▁sub', 'com', 'mission', 'i', '(', ');', '\n', '▁list', 'ac', 'om', 'mission', 'ament', 'i', '▁l', ';', '\n', '▁int', '▁call', 'er', ';', '\n', '▁public', '▁m', 'asc', 'her', 'ac', 'om', 'mission', 'i', '(', 'str', 'ing', '▁data', '1,', '▁string', '▁data', '2,', '▁string', '▁title', ',', '▁string', '▁capt', 'ion', ',', '▁int', '▁c', ')', '\n', '▁{', '\n', '▁super', '(', 't', 'it', 'le', ');', '\n', '▁call', 'er', '▁=', '▁c', ';', '\n', '▁set', 'up', 'pan', 'els', '(', 'd', 'ata', '1,', '▁data', '2,', '▁capt', 'ion', ');', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁', '\t', 'v', 'oid', '▁set', 'up', 'pan', 'els', '(', 'str', 'ing', '▁data', '1,', '▁string', '▁data', '2,', '▁string', '▁capt', 'ion', ')', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁', '\t', '//', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁', '\t', 'etic', 'he', 'tt', 'a', '3', '▁=', '▁new', '▁label', '(', '""', 'ins', 'er', 'iment', 'o', '▁d', 'ati', '▁d', 'ella', '▁commission', 'e', '"")', ';', '\n', '▁', '\t', 'etic', 'he', 'tt', 'a', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '▁ag', 'enz', 'ia', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁stan', 'za', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁in', 'iz', 'io', '▁commission', 'e', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁fine', '▁commission', 'e', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁sc', 'ad', 'en', 'za', '▁commission', 'e', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁tele', 'f', 'on', 'ico', '▁ag', 'enz', 'ia', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(', '""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', '"")', ';', '\n\t\t', 'et', 'ich', '7.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁al', 'c', 'un', 'i', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁n', 'ome', '_', 'agen', 'z', 'ia', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '20', ');', '\n', '▁num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁in', 'iz', 'io', '_', 'com', 'm', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '2)', ';', '\n', '▁fine', '_', 'com', 'm', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '2)', ';', '\n', '▁sc', 'ad', 'en', 'za', '_', 'com', 'm', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '2)', ';', '\n', '▁num', '_', 't', 'el', '_', 'agen', 'z', 'ia', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '6)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n', '▁az', 'ion', 'e', '▁=', '▁new', '▁but', 'ton', '(', 'c', 'apt', 'ion', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'n', 'ome', '_', 'agen', 'z', 'ia', '▁,', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'n', 'um', '_', 'stan', 'za', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '3,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'in', 'iz', 'io', '_', 'com', 'm', '▁,', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '4,', '▁2,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'f', 'ine', '_', 'com', 'm', '▁,', '▁3,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '5,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'sc', 'ad', 'en', 'za', '_', 'com', 'm', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '6,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '▁,', '▁1,', '▁4,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁pan', 'el', '4', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '4.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁az', 'ion', 'e', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁(', '(', 'c', 'all', 'er', '▁=', '=', '▁2', ')', '▁||', '▁(', 'c', 'all', 'er', '▁=', '=', '▁3', ')', '▁)', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', 'cer', 'ca', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t\n\t\t\n\t\t', 'list', 'a', '▁=', '▁new', '▁list', '(', '1', '0,', '▁fal', 'se', ');', '\n\t\t', 'list', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n\t\t\n\t\t', 'pan', 'el', '5', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '5.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁et', 'ich', '7,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', 'list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', '▁', '\n', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁', '0,', '▁6,', '▁5,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '4,', '▁', '0,', '▁5,', '▁6,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '5,', '▁', '0,', '▁6,', '▁6,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t', 'p', 'ack', '(', ');', '\t', '▁', '\t\t\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'com', 'mission', 'ament', 'o', '▁read', 'd', 'atic', 'omm', '(', ')', '\n\t', '{', '\n\t\t', 'com', 'mission', 'ament', 'o', '▁comm', '▁=', '▁new', '▁commission', 'ament', 'o', '(', ');', '\n\t\t', 'com', 'm', '.', 'set', 'id', 'com', 'mission', 'ament', 'o', '(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'id', 'com', 'mission', 'ament', 'o', '(', ')', ');', '\n\t\t', 'com', 'm', '.', 'set', 'n', 'ome', 'agen', 'z', 'ia', '(', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'com', 'm', '.', 'set', 'n', 'um', 'stan', 'za', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'com', 'm', '.', 'set', 'in', 'iz', 'i', 'oc', 'omm', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'in', 'iz', 'io', '_', 'com', 'm', '.', 'get', 'text', '(', ')', ')', ');', '\n\t\t', 'com', 'm', '.', 'set', 'fin', 'ec', 'omm', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'f', 'ine', '_', 'com', 'm', '.', 'get', 'text', '(', ')', ')', ');', '\n\t\t', 'com', 'm', '.', 'set', 'sc', 'ad', 'enz', 'ac', 'omm', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 'get', 'text', '(', ')', ')', ');', '\n\t\t', 'com', 'm', '.', 'set', 'n', 'um', 't', 'el', '(', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'ret', 'urn', '▁comm', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁writ', 'ed', 'atic', 'omm', '(', 'com', 'mission', 'ament', 'o', '▁comm', ')', '\n\t', '{', '\n\t\t', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 's', 'ette', 'xt', '(', 'com', 'm', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', ')', ');', '\n\t\t', 'n', 'um', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'com', 'm', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 'in', 'iz', 'io', '_', 'com', 'm', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'com', 'm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', ')', ')', ');', '\t\t\t\t\t\t\t\n\t\t', 'f', 'ine', '_', 'com', 'm', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'com', 'm', '.', 'get', 'fin', 'ec', 'omm', '(', ')', ')', ');', '\n\t\t', 'sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'com', 'm', '.', 'get', 'sc', 'ad', 'enz', 'ac', 'omm', '(', ')', ')', ');', '\n\t\t', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 's', 'ette', 'xt', '(', 'com', 'm', '.', 'get', 'n', 'um', 't', 'el', '(', ')', ');', '\n\t', '}', '\n\n\t', 'pro', 't', 'ected', '▁bo', 'ole', 'an', '▁er', 'ror', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '!', '(', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁4', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁d', 'ella', '▁stan', 'za', '▁de', 've', '▁aver', 'e', '▁al', '▁p', 'i', 'u', ""'"", '▁4', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁di', '▁stan', 'za', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁n', 'ome', '▁d', 'ell', ""'"", 'agen', 'z', 'ia', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁20', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁n', 'ome', '▁d', 'ell', ""'"", 'agen', 'z', 'ia', '▁de', 've', '▁aver', 'e', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁data', '▁di', '▁sc', 'ad', 'en', 'za', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', 'd', 'ate', 'ut', 'ils', '.', 'd', 'at', 'ac', 'or', 'ret', 'ta', '(', 'sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 'get', 'text', '(', ')', ')', '▁)', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁sc', 'ad', 'en', 'za', '▁e', ""'"", '▁non', '▁cor', 'ret', 'ta', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁di', '▁tele', 'f', 'on', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁16', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁tele', 'f', 'on', 'o', '▁de', 've', '▁aver', 'e', '▁al', '▁p', 'i', 'u', ""'"", '▁16', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁clean', 'field', 's', '(', ')', '\n\t', '{', '\n\t', '▁n', 'ome', '_', 'agen', 'z', 'ia', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁in', 'iz', 'io', '_', 'com', 'm', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁fine', '_', 'com', 'm', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁num', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t', '}', '\n\n\t', '//', '▁proced', 'ura', '▁util', 'iz', 'z', 'ata', '▁da', '▁mod', 'ific', 'a', '▁e', '▁canc', 'ella', '\n\t', 'v', 'oid', '▁cre', 'al', 'ista', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'com', 'mission', 'ament', 'o', '▁c', ';', '\n\t\t', 'l', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'com', 'mission', 'ament', 'i', '(', 'new', '▁string', '(', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'get', 'text', '(', ')', ')', ');', '\n\t\t', 'if', '▁(', 'l', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'p', 'ack', '(', ');', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', '(', 'l', '.', 'get', 'com', 'mission', 'ament', 'o', '(', 'i', ')', ').', 't', 'ost', 'ring', '(', ')', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'agen', 'z', 'ia', '▁""', '+', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'get', 'text', '(', ')', '+', '""', '▁non', '▁tro', 'v', 'ata', '!', '"")', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '!', '"")', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'com', 'mission', 'ament', 'o', '▁comm', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'fr', 'ame', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'com', 'm', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', 'tr', 'ue', ');', '\n\t\t', 'if', '▁(', 't', 'ip', 'o', '▁=', '=', '▁flag', '.', 'com', 'mission', 'ata', ')', '\n\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'com', 'm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'com', 'm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'com', 'mission', 'ata', ');', '\t\t\t\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'anged', 'is', 'pon', 'ib', 'il', 'ita', '(', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '(', ')', '▁', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'acom', 'mission', 'i', '▁extends', '▁frame', '\n', '{', '\n', '▁text', 'field', '▁num', '_', 'stan', 'za', ',', '▁n', 'ome', '_', 'agen', 'zia', ',', '▁in', 'izio', '_', 'comm', ',', '▁fine', '_', 'comm', ',', '▁sc', 'ad', 'enza', '_', 'comm', '▁,', 'num', '_', 'tel', '_', 'agen', 'zia', ';', '\n', '▁label', '▁et', 'iche', 'tta', '3,', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7', ';', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4,', '▁panel', '5', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁az', 'ione', ',', '▁cer', 'ca', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁sub', 'com', 'mission', 'i', '▁pad', 're', '▁=', '▁new', '▁sub', 'com', 'mission', 'i', '();', '\n', '▁list', 'acom', 'mission', 'ament', 'i', '▁l', ';', '\n', '▁int', '▁call', 'er', ';', '\n', '▁public', '▁masc', 'her', 'acom', 'mission', 'i', '(', 'string', '▁data', '1,', '▁string', '▁data', '2,', '▁string', '▁title', ',', '▁string', '▁capt', 'ion', ',', '▁int', '▁c', ')', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n', '▁call', 'er', '▁=', '▁c', ';', '\n', '▁setup', 'pan', 'els', '(', 'data', '1,', '▁data', '2,', '▁capt', 'ion', ');', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁', '\t', 'v', 'oid', '▁setup', 'pan', 'els', '(', 'string', '▁data', '1,', '▁string', '▁data', '2,', '▁string', '▁capt', 'ion', ')', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁', '\t', 'etic', 'he', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'ins', 'er', 'iment', 'o', '▁d', 'ati', '▁della', '▁commission', 'e', '"");', '\n', '▁', '\t', 'etic', 'he', 'tta', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁ag', 'enz', 'ia', '"");', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stan', 'za', '"");', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', '▁commission', 'e', '"");', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'data', '▁fine', '▁commission', 'e', '"");', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'data', '▁sc', 'ad', 'enza', '▁commission', 'e', '"");', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁tele', 'f', 'on', 'ico', '▁ag', 'enz', 'ia', '"");', '\n', '▁', '\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', '"");', '\n\t\t', 'et', 'ich', '7.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁n', 'ome', '_', 'agen', 'zia', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁in', 'izio', '_', 'comm', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '2)', ';', '\n', '▁fine', '_', 'comm', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '2)', ';', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '2)', ';', '\n', '▁num', '_', 'tel', '_', 'agen', 'zia', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '6)', ';', '\n\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁az', 'ione', '▁=', '▁new', '▁button', '(', 'capt', 'ion', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'iche', 'tta', '3,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'n', 'ome', '_', 'agen', 'zia', '▁,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'num', '_', 'stan', 'za', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '3,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'in', 'izio', '_', 'comm', '▁,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '4,', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'f', 'ine', '_', 'comm', '▁,', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '5,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'sc', 'ad', 'enza', '_', 'comm', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ich', '6,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'num', '_', 'tel', '_', 'agen', 'zia', '▁,', '▁1,', '▁4,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁panel', '4', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '4.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁az', 'ione', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁(', '(', 'call', 'er', '▁==', '▁2)', '▁||', '▁(', 'call', 'er', '▁==', '▁3)', '▁)', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', 'cer', 'ca', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t\n\t\t\n\t\t', 'list', 'a', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\t\t', 'list', 'a', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\t\t\n\t\t', 'pan', 'el', '5', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '5.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁et', 'ich', '7,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', 'list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁', '0,', '▁6,', '▁5,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '4,', '▁', '0,', '▁5,', '▁6,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '5,', '▁', '0,', '▁6,', '▁6,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t', 'pack', '();', '\t', '▁', '\t\t\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'com', 'mission', 'amento', '▁read', 'd', 'atic', 'omm', '()', '\n\t', '{', '\n\t\t', 'com', 'mission', 'amento', '▁comm', '▁=', '▁new', '▁commission', 'amento', '();', '\n\t\t', 'comm', '.', 'set', 'id', 'com', 'mission', 'amento', '(', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'id', 'com', 'mission', 'amento', '());', '\n\t\t', 'comm', '.', 'set', 'n', 'ome', 'agen', 'zia', '(', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '());', '\n\t\t', 'comm', '.', 'set', 'num', 'stan', 'za', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '());', '\n\t\t', 'comm', '.', 'set', 'in', 'iz', 'i', 'oc', 'omm', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'in', 'izio', '_', 'comm', '.', 'get', 'text', '())', ');', '\n\t\t', 'comm', '.', 'set', 'fin', 'ec', 'omm', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'f', 'ine', '_', 'comm', '.', 'get', 'text', '())', ');', '\n\t\t', 'comm', '.', 'set', 'sc', 'ad', 'enz', 'ac', 'omm', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'sc', 'ad', 'enza', '_', 'comm', '.', 'get', 'text', '())', ');', '\n\t\t', 'comm', '.', 'set', 'num', 'tel', '(', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'get', 'text', '());', '\n\t\t', 'return', '▁comm', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁writ', 'ed', 'atic', 'omm', '(', 'com', 'mission', 'amento', '▁comm', ')', '\n\t', '{', '\n\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 's', 'ette', 'xt', '(', 'comm', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'comm', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'in', 'izio', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'comm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '())', ');', '\t\t\t\t\t\t\t\n\t\t', 'f', 'ine', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'comm', '.', 'get', 'fin', 'ec', 'omm', '())', ');', '\n\t\t', 'sc', 'ad', 'enza', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'comm', '.', 'get', 'sc', 'ad', 'enz', 'ac', 'omm', '())', ');', '\n\t\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 's', 'ette', 'xt', '(', 'comm', '.', 'get', 'num', 'tel', '());', '\n\t', '}', '\n\n\t', 'protected', '▁bo', 'olean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '!', '(', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁4', '))', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁della', '▁stan', 'za', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁4', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁di', '▁stan', 'za', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁n', 'ome', '▁dell', ""'"", 'agen', 'zia', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', '))', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁n', 'ome', '▁dell', ""'"", 'agen', 'zia', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'sc', 'ad', 'enza', '_', 'comm', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁data', '▁di', '▁sc', 'ad', 'enza', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', 'date', 'ut', 'ils', '.', 'dat', 'ac', 'or', 'ret', 'ta', '(', 'sc', 'ad', 'enza', '_', 'comm', '.', 'get', 'text', '())', '▁)', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁sc', 'ad', 'enza', '▁e', ""'"", '▁non', '▁cor', 'ret', 'ta', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁di', '▁tele', 'f', 'ono', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁16', '))', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁tele', 'f', 'ono', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁16', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁clean', 'fields', '()', '\n\t', '{', '\n\t', '▁n', 'ome', '_', 'agen', 'zia', '.', 's', 'ette', 'xt', '(""', '"");', '\n', '▁num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(""', '"");', '\n', '▁in', 'izio', '_', 'comm', '.', 's', 'ette', 'xt', '(""', '"");', '\n', '▁fine', '_', 'comm', '.', 's', 'ette', 'xt', '(""', '"");', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 's', 'ette', 'xt', '(""', '"");', '\n', '▁num', '_', 'tel', '_', 'agen', 'zia', '.', 's', 'ette', 'xt', '(""', '"");', '\n\t', '}', '\n\n\t', '//', '▁proced', 'ura', '▁util', 'izz', 'ata', '▁da', '▁mod', 'ific', 'a', '▁e', '▁canc', 'ella', '\n\t', 'v', 'oid', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'com', 'mission', 'amento', '▁c', ';', '\n\t\t', 'l', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'com', 'mission', 'ament', 'i', '(', 'new', '▁string', '(', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '())', ');', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(', '(', 'l', '.', 'get', 'com', 'mission', 'amento', '(', 'i', ')', ').', 't', 'ost', 'ring', '());', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'agen', 'zia', '▁""', '+', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '()', '+', '""', '▁non', '▁tro', 'v', 'ata', '!', '"");', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ag', 'gi', 'orn', 'ad', 'isp', '(', 'com', 'mission', 'amento', '▁comm', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'comm', '.', 'get', 'num', 'stan', 'za', '(', '),', 'true', ');', '\n\t\t', 'if', '▁(', 'tip', 'o', '▁==', '▁flag', '.', 'com', 'mission', 'ata', ')', '\n\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'comm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'comm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'com', 'mission', 'ata', ');', '\t\t\t\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'changed', 'is', 'pon', 'ib', 'il', 'ita', '(', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '()', '▁', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'acom', 'mission', 'i', '▁extends', '▁frame', '\n', '{', '\n', '▁text', 'field', '▁num', '_', 'stan', 'za', ',', '▁nome', '_', 'agen', 'zia', ',', '▁in', 'izio', '_', 'comm', ',', '▁fine', '_', 'comm', ',', '▁sc', 'ad', 'enza', '_', 'comm', '▁,', 'num', '_', 'tel', '_', 'agen', 'zia', ';', '\n', '▁label', '▁et', 'iche', 'tta', '3,', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7;', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4,', '▁panel', '5;', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁az', 'ione', ',', '▁cer', 'ca', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁sub', 'commission', 'i', '▁padre', '▁=', '▁new', '▁sub', 'commission', 'i', '();', '\n', '▁list', 'acom', 'mission', 'amenti', '▁l', ';', '\n', '▁int', '▁caller', ';', '\n', '▁public', '▁masc', 'her', 'acom', 'mission', 'i', '(', 'string', '▁data', '1,', '▁string', '▁data', '2,', '▁string', '▁title', ',', '▁string', '▁caption', ',', '▁int', '▁c', ')', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n', '▁caller', '▁=', '▁c', ';', '\n', '▁setup', 'pan', 'els', '(', 'data', '1,', '▁data', '2,', '▁caption', ');', '\n', '▁in', 'iz', 'ial', 'izza', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁', '\t', 'void', '▁setup', 'pan', 'els', '(', 'string', '▁data', '1,', '▁string', '▁data', '2,', '▁string', '▁caption', ')', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁', '\t', 'etic', 'he', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'ins', 'er', 'imento', '▁d', 'ati', '▁della', '▁commission', 'e', '"");', '\n', '▁', '\t', 'etic', 'he', 'tta', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁ag', 'enzia', '"");', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stanza', '"");', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', '▁commission', 'e', '"");', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'data', '▁fine', '▁commission', 'e', '"");', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'data', '▁sc', 'ad', 'enza', '▁commission', 'e', '"");', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁telef', 'on', 'ico', '▁ag', 'enzia', '"");', '\n', '▁', '\t', 'et', 'ich', '7', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', '"");', '\n\t\t', 'et', 'ich', '7.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁nome', '_', 'agen', 'zia', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁in', 'izio', '_', 'comm', '▁=', '▁new', '▁text', 'field', '(""', '"",', '12)', ';', '\n', '▁fine', '_', 'comm', '▁=', '▁new', '▁text', 'field', '(""', '"",', '12)', ';', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '▁=', '▁new', '▁text', 'field', '(""', '"",', '12)', ';', '\n', '▁num', '_', 'tel', '_', 'agen', 'zia', '▁=', '▁new', '▁text', 'field', '(""', '"",', '1', '6);', '\n\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁az', 'ione', '▁=', '▁new', '▁button', '(', 'caption', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'iche', 'tta', '3,', '▁0,', '▁0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'ich', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'n', 'ome', '_', 'agen', 'zia', '▁,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'ich', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'num', '_', 'stan', 'za', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'ich', '3,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'in', 'izio', '_', 'comm', '▁,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'ich', '4,', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'fine', '_', 'comm', '▁,', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'ich', '5,', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'sc', 'ad', 'enza', '_', 'comm', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'ich', '6,', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'num', '_', 'tel', '_', 'agen', 'zia', '▁,', '▁1,', '▁4,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁panel', '4', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '4.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁az', 'ione', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁((', 'call', 'er', '▁==', '▁2)', '▁||', '▁(', 'call', 'er', '▁==', '▁3)', '▁)', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', 'cer', 'ca', ',', '▁2,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\t\n\t\t\n\t\t', 'lista', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\t\t', 'lista', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\t\t\n\t\t', 'panel', '5', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '5.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '5,', '▁et', 'ich', '7,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '5,', 'lista', ',', '▁0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.0,', '▁3.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁0,', '▁6,', '▁5,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '4,', '▁0,', '▁5,', '▁6,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '5,', '▁0,', '▁6,', '▁6,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', 'panel', '5.', 'set', 'visible', '(', 'false', ');', '\n\t', 'pack', '();', '\t', '▁', '\t\t\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'commission', 'amento', '▁read', 'd', 'atic', 'omm', '()', '\n\t', '{', '\n\t\t', 'commission', 'amento', '▁comm', '▁=', '▁new', '▁commission', 'amento', '();', '\n\t\t', 'comm', '.', 'set', 'id', 'commission', 'amento', '((', 'princip', 'ale', '.', 'config', ').', 'getid', 'commission', 'amento', '());', '\n\t\t', 'comm', '.', 'set', 'n', 'ome', 'agen', 'zia', '(', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '());', '\n\t\t', 'comm', '.', 'set', 'num', 'stan', 'za', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '());', '\n\t\t', 'comm', '.', 'set', 'in', 'izi', 'oc', 'omm', '(', 'date', 'utils', '.', 'convert', 'date', '(', 'in', 'izio', '_', 'comm', '.', 'get', 'text', '())', ');', '\n\t\t', 'comm', '.', 'set', 'fin', 'ec', 'omm', '(', 'date', 'utils', '.', 'convert', 'date', '(', 'fine', '_', 'comm', '.', 'get', 'text', '())', ');', '\n\t\t', 'comm', '.', 'set', 'sc', 'ad', 'enz', 'ac', 'omm', '(', 'date', 'utils', '.', 'convert', 'date', '(', 'sc', 'ad', 'enza', '_', 'comm', '.', 'get', 'text', '())', ');', '\n\t\t', 'comm', '.', 'set', 'num', 'tel', '(', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'get', 'text', '());', '\n\t\t', 'return', '▁comm', ';', '\n\t', '}', '\n\n\t', 'void', '▁writ', 'ed', 'atic', 'omm', '(', 'commission', 'amento', '▁comm', ')', '\n\t', '{', '\n\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 's', 'ette', 'xt', '(', 'comm', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'comm', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'in', 'izio', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'comm', '.', 'get', 'in', 'izi', 'oc', 'omm', '())', ');', '\t\t\t\t\t\t\t\n\t\t', 'fine', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'comm', '.', 'get', 'fin', 'ec', 'omm', '())', ');', '\n\t\t', 'sc', 'ad', 'enza', '_', 'comm', '.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'comm', '.', 'get', 'sc', 'ad', 'enz', 'ac', 'omm', '())', ');', '\n\t\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 's', 'ette', 'xt', '(', 'comm', '.', 'get', 'num', 'tel', '());', '\n\t', '}', '\n\n\t', 'protected', '▁boolean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(!', '((', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁4', '))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁numero', '▁della', '▁stanza', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁4', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁((', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁numero', '▁di', '▁stanza', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁((', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁nome', '▁dell', ""'"", 'agen', 'zia', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(!', '((', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', '))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁nome', '▁dell', ""'"", 'agen', 'zia', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁((', 'sc', 'ad', 'enza', '_', 'comm', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁data', '▁di', '▁sc', 'ad', 'enza', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(!', '(', 'date', 'utils', '.', 'dat', 'acor', 'retta', '(', 'sc', 'ad', 'enza', '_', 'comm', '.', 'get', 'text', '())', '▁))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁sc', 'ad', 'enza', '▁e', ""'"", '▁non', '▁cor', 'retta', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁((', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁numero', '▁di', '▁telef', 'ono', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(!', '((', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁16', '))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁numero', '▁di', '▁telef', 'ono', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁16', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n\t', 'void', '▁clean', 'fields', '()', '\n\t', '{', '\n\t', '▁nome', '_', 'agen', 'zia', '.', 's', 'ette', 'xt', '("""");', '\n', '▁num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '("""");', '\n', '▁in', 'izio', '_', 'comm', '.', 's', 'ette', 'xt', '("""");', '\n', '▁fine', '_', 'comm', '.', 's', 'ette', 'xt', '("""");', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 's', 'ette', 'xt', '("""");', '\n', '▁num', '_', 'tel', '_', 'agen', 'zia', '.', 's', 'ette', 'xt', '("""");', '\n\t', '}', '\n\n\t', '//', '▁proced', 'ura', '▁util', 'izz', 'ata', '▁da', '▁mod', 'ific', 'a', '▁e', '▁canc', 'ella', '\n\t', 'void', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'commission', 'amento', '▁c', ';', '\n\t\t', 'l', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'commission', 'amenti', '(', 'new', '▁string', '(', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '())', ');', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t', 'lista', '.', 'remove', 'all', '();', '\n\t\t\t', 'if', '▁(!', 'l', '.', 'isempty', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'panel', '5.', 'set', 'visible', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '<', '=', 'l', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t\t', 'lista', '.', 'add', 'item', '((', 'l', '.', 'get', 'commission', 'amento', '(', 'i', ')).', 'tostring', '());', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'agen', 'zia', '▁""+', 'n', 'ome', '_', 'agen', 'zia', '.', 'get', 'text', '()', '+""', '▁non', '▁trov', 'ata', '!', '"");', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t', '}', '\n\t\n\t', 'void', '▁ag', 'gi', 'orn', 'ad', 'isp', '(', 'commission', 'amento', '▁comm', ',', '▁char', '▁tipo', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '_', 'da', '_', 'camb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁elenco', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁(', 'elen', 'co', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'disp', 'of', 'room', '(', 'elen', 'co', '_', 'disp', ',', 'comm', '.', 'get', 'num', 'stan', 'za', '(),', 'true', ');', '\n\t\t', 'if', '▁(', 'tip', 'o', '▁==', '▁flag', '.', 'commission', 'ata', ')', '\n\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'comm', '.', 'get', 'in', 'izi', 'oc', 'omm', '(),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(),', '▁tipo', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t', 'else', '\n\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'comm', '.', 'get', 'in', 'izi', 'oc', 'omm', '(),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(),', '▁tipo', ',', '▁flag', '.', 'commission', 'ata', ');', '\t\t\t\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'changed', 'is', 'pon', 'ibil', 'ita', '(', '▁disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'num', 'stan', 'za', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'disp', 'ann', 'oc', 'orr', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'disp', 'ann', 'op', 'rox', '()', '▁);', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli public class maschera commissioni extend frame text field num stanza nome agenzia inizio comm fine comm scadenza comm num tel agenzia label etichetta etich etich etich etich etich etich etich panel panel panel panel panel panel list lista button annulla azion cerca grid bag layout gridbag new grid bag layout sub commissioni padr new sub commissioni lista commissionamenti int caller public maschera commissioni string data string data string titl string caption int super titl caller setup panel data data caption inizializza pack void setup panel string data string data string caption set font configurazion sistema font base creo etichett etichetta new label inserimento dati della commission etichetta set font configurazion sistema font titolo etich new label nome agenzia etich new label numero stanza etich new label data inizio commission etich new label data fine commission etich new label data scadenza commission etich new label numero telefonico agenzia etich new label risultato della ricerca etich set font configurazion sistema font titolo creo text field rendo alcuni non editabili nome agenzia new text field num stanza new text field inizio comm new text field fine comm new text field scadenza comm new text field num tel agenzia new text field creo pulsanti annulla new button fine azion new button caption cerca new button cerca ""); creo pannello panel3 new panel (); panel3 set layout gridbag util constrain panel3 etichetta3 grid bag constraint none grid bag constraint northwest util constrain panel3 etich1 grid bag constraint none grid bag constraint northwest util constrain panel3 nome_agenzia grid bag constraint none grid bag constraint northwest util constrain panel3 etich2 grid bag constraint none grid bag constraint northwest util constrain panel3 num_stanza grid bag constraint none grid bag constraint northwest util constrain panel3 etich3 grid bag constraint none grid bag constraint northwest util constrain panel3 inizio_comm grid bag constraint none grid bag constraint northwest util constrain panel3 etich4 grid bag constraint none grid bag constraint northwest util constrain panel3 fine_comm grid bag constraint none grid bag constraint northwest util constrain panel3 etich5 grid bag constraint none grid bag constraint northwest util constrain panel3 scadenza_comm grid bag constraint none grid bag constraint northwest util constrain panel3 etich6 grid bag constraint none grid bag constraint northwest util constrain panel3 num_tel_agenzia grid bag constraint none grid bag constraint northwest panel4 new panel (); panel4 set layout gridbag util constrain panel4 annulla grid bag constraint none grid bag constraint center util constrain panel4 azion grid bag constraint none grid bag constraint center caller caller util constrain panel4 cerca grid bag constraint none grid bag constraint center lista new list fals lista set font configurazion sistema font_allineato panel5 new panel (); panel5 set layout gridbag util constrain panel5 etich7 grid bag constraint none grid bag constraint west util constrain panel5 lista grid bag constraint grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel3 grid bag constraint none grid bag constraint west util constrain panel4 grid bag constraint horizont grid bag constraint west util constrain panel5 grid bag constraint horizont grid bag constraint west panel5 set visibl fals pack (); public void inizializza annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); commissionamento read dati comm commissionamento comm new commissionamento (); comm set commissionamento principal config get commissionamento ()); comm set nome agenzia nome_agenzia get text ()); comm set num stanza num_stanza get text ()); comm set inizio comm date util convert date inizio_comm get text ())); comm set fine comm date util convert date fine_comm get text ())); comm set scadenza comm date util convert date scadenza_comm get text ())); comm set num tel num_tel_agenzia get text ()); return comm void write dati comm commissionamento comm nome_agenzia set text comm get nome agenzia ()); num_stanza set text comm get num stanza ()); inizio_comm set text date util give string date comm get inizio comm ())); fine_comm set text date util give string date comm get fine comm ())); scadenza_comm set text date util give string date comm get scadenza comm ())); num_tel_agenzia set text comm get num tel ()); protect boolean errori frame msg (!(( num_stanza get text ()). length msg new messag dialog numero della stanza deve aver piu caratteri ""); return true num_stanza get text ()). equal ("""")) msg new messag dialog manca numero stanza ""); return true nome_agenzia get text ()). equal ("""")) msg new messag dialog manca nome dell agenzia ""); return true (!(( nome_agenzia get text ()). length msg new messag dialog nome dell agenzia deve aver piu caratteri ""); return true scadenza_comm get text ()). equal ("""")) msg new messag dialog manca data scadenza ""); return true (!( date util data corretta scadenza_comm get text ()) msg new messag dialog data scadenza non corretta ""); return true num_tel_agenzia get text ()). equal ("""")) msg new messag dialog manca numero telefono ""); return true (!(( num_tel_agenzia get text ()). length msg new messag dialog numero telefono deve aver piu caratteri ""); return true return fals void clean field nome_agenzia set text (""""); num_stanza set text (""""); inizio_comm set text (""""); fine_comm set text (""""); scadenza_comm set text (""""); num_tel_agenzia set text (""""); procedura utilizzata modifica cancella void crea lista frame msg commissionamento principal found commissionamenti new string nome_agenzia get text ())); null lista get item count lista remov (); empti ()) panel5 set visibl true pack (); int length (); ++) lista add item get commissionamento )). string ()); els msg new avviso dialog agenzia nome_agenzia get text ()+"" non trovata !""); els msg new messag dialog problemi con databas !""); void aggiorna disp commissionamento comm char tipo disponibilita disp_da_cambiar new disponibilita (); lista disponibilita elenco_disp principal elenco disponibilita (); elenco_disp null frame msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return disp_da_cambiar util get disp room elenco_disp comm get num stanza (), true tipo flag commissionata disp_da_cambiar set disponibilita comm get inizio comm (), comm get fine comm (), tipo flag disponibil els disp_da_cambiar set disponibilita comm get inizio comm (), comm get fine comm (), tipo flag commissionata principal chang disponibilita disp_da_cambiar get num stanza (), disp_da_cambiar get disp anno corr (), disp_da_cambiar get disp anno prox"
36~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/InserisciPrenotazione.java~InserisciPrenotazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class InserisciPrenotazione extends MascheraPrenotazione
{  
    MascheraRicercaStanza mask_ricerca = new MascheraRicercaStanza("""",2); 
    String agenzia;
    public InserisciPrenotazione(Stanza room, String data_i , String data_f, String nome_ag)
    {
        super(room, data_i, data_f, ""Inserimento dei dati della prenotazione"", ""Inserisci"",1, Flag.PENSIONE_COMPLETA);
        agenzia = new String(nome_ag);
        init(room, data_i, data_f);
    }
                     
	public void init(Stanza room, String data_i, String data_f)
 	{     	
        testo[0].setText(room.getNumStanza());
        testo[0].setEditable(false);
        testo[4].setText(DateUtils.parseDate(data_i));
        testo[5].setText(DateUtils.parseDate(data_f));
        testo[4].setEditable(false);
        testo[5].setEditable(false);
        testo[7].setText(room.getDescrizione());
    	testo[9].setText(DateUtils.parseDate(DateUtils.giveStringOfDate(new Date())));    
		testo[8].setText(agenzia);	      	
		testo[8].setEditable(false);
		if (!agenzia.equals(""""))
		{
			testo[6].setEditable(false);
			myCheckbox1.setState(true);
		}
		      	
      	Annulla.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				dispose();
				mask_ricerca.setEnabled(true);
			}
      });

      Azione.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				startAzione();	
      		}
      });
   }

	void startAzione()
	{
		Frame msg;
		AskDialog ask;
		int answer = 0;
		
		if ( !errori() )
		{
			Prenotazione pren = readDatiPren();
			pren.setDataPren(new Date());
			int j;
			if ( (j = (Principale.db).newIdPrenotazione()) == DataBase.OK )
			{
				(Principale.config).updateIdPrenotazione();
				if ((j = (Principale.db).writePrenotazione(pren)) == DataBase.OK)
				{
					if (!myCheckbox1.getState())
						ask = new AskDialog(this, "" Assegnare la stanza o Bloccarla fino al ricevimento della caparra? "", "" Assegnare "", "" Bloccare "", pren);
					else
			            startAggiornaDisp(pren, Flag.ASSEGNATA);
				}
				else
				 	msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j) );
			}
			else
				msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j) );
		}
	}
	
	void startAggiornaDisp(Prenotazione p, char tipo)
	{
		aggiornaDisp(p, tipo);
		dispose();
		mask_ricerca.restartAvvio();
		mask_ricerca.setEnabled(true);
	} 
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁ins', 'er', 'isc', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '▁ext', 'ends', '▁m', 'asc', 'her', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '\n', '{', '▁', '\n', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '▁m', 'ask', '_', 'ric', 'er', 'ca', '▁=', '▁new', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '(', '""', '"",', '2)', ';', '▁', '\n', '▁string', '▁ag', 'enz', 'ia', ';', '\n', '▁public', '▁ins', 'er', 'isc', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', 'stan', 'za', '▁room', ',', '▁string', '▁data', '_', 'i', '▁,', '▁string', '▁data', '_', 'f', ',', '▁string', '▁n', 'ome', '_', 'ag', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',', '▁data', '_', 'i', ',', '▁data', '_', 'f', ',', '▁""', 'ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '1,', '▁flag', '.', 'p', 'ension', 'e', '_', 'com', 'p', 'let', 'a', ');', '\n', '▁ag', 'enz', 'ia', '▁=', '▁new', '▁string', '(', 'n', 'ome', '_', 'ag', ');', '\n', '▁init', '(', 'room', ',', '▁data', '_', 'i', ',', '▁data', '_', 'f', ');', '\n', '▁}', '\n', '▁', '\n\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', 'stan', 'za', '▁room', ',', '▁string', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ')', '\n', '▁', '\t', '{', '▁', '\t\n', '▁test', 'o', '[', '0', ']', '.', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁test', 'o', '[', '0', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '[', '4', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ata', '_', 'i', ')', ');', '\n', '▁test', 'o', '[', '5', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ata', '_', 'f', ')', ');', '\n', '▁test', 'o', '[', '4', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '[', '5', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '[', '7', ']', '.', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', ');', '\n', '▁', '\t', 't', 'est', 'o', '[', '9', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'new', '▁date', '(', ')', ')', ')', ');', '▁', '\n\t\t', 't', 'est', 'o', '[', '8', ']', '.', 's', 'ette', 'xt', '(', 'agen', 'z', 'ia', ');', '\t', '▁', '\t\n\t\t', 't', 'est', 'o', '[', '8', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'if', '▁(', '!', 'agen', 'z', 'ia', '.', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 't', 'est', 'o', '[', '6', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'my', 'che', 'ck', 'box', '1.', 'set', 'state', '(', 'tr', 'ue', ');', '\n\t\t', '}', '\n\t\t', '▁', '\t\n', '▁', '\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'm', 'ask', '_', 'ric', 'er', 'ca', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n', '▁}', ');', '\n\n', '▁az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\t\n', '▁', '\t\t', '}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'ask', 'd', 'ial', 'og', '▁as', 'k', ';', '\n\t\t', 'int', '▁answ', 'er', '▁=', '▁0', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'er', 'ror', 'i', '(', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', '▁=', '▁read', 'd', 'at', 'ip', 'ren', '(', ');', '\n\t\t\t', 'p', 'ren', '.', 'set', 'd', 'at', 'ap', 'ren', '(', 'new', '▁date', '(', ')', ');', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'new', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ')', '▁=', '=', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'up', 'd', 'ate', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ');', '\n\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'ep', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '!', 'my', 'che', 'ck', 'box', '1.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t\t\t', 'ask', '▁=', '▁new', '▁as', 'k', 'd', 'ial', 'og', '(', 'this', ',', '▁""', '▁as', 'se', 'gn', 'are', '▁la', '▁stan', 'za', '▁o', '▁bl', 'oc', 'car', 'la', '▁fin', 'o', '▁al', '▁rice', 'v', 'iment', 'o', '▁d', 'ella', '▁cap', 'ar', 'ra', '?', '▁""', ',', '▁""', '▁as', 'se', 'gn', 'are', '▁""', ',', '▁""', '▁bl', 'oc', 'c', 'are', '▁""', ',', '▁p', 'ren', ');', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t', '▁start', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'p', 'ren', ',', '▁flag', '.', 'as', 'se', 'gn', 'ata', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '▁', '\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\n\t\t', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'p', ',', '▁tip', 'o', ');', '\n\t\t', 'dis', 'pose', '(', ');', '\n\t\t', 'm', 'ask', '_', 'ric', 'er', 'ca', '.', 'rest', 'art', 'av', 'v', 'io', '(', ');', '\n\t\t', 'm', 'ask', '_', 'ric', 'er', 'ca', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'ip', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '▁mask', '_', 'ric', 'er', 'ca', '▁=', '▁new', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '(""', '"",', '2)', ';', '▁', '\n', '▁string', '▁ag', 'enz', 'ia', ';', '\n', '▁public', '▁ins', 'er', 'isc', 'ip', 'ren', 'ot', 'azione', '(', 'stan', 'za', '▁room', ',', '▁string', '▁data', '_', 'i', '▁,', '▁string', '▁data', '_', 'f', ',', '▁string', '▁n', 'ome', '_', 'ag', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',', '▁data', '_', 'i', ',', '▁data', '_', 'f', ',', '▁""', 'ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '1,', '▁flag', '.', 'p', 'ension', 'e', '_', 'comp', 'let', 'a', ');', '\n', '▁ag', 'enz', 'ia', '▁=', '▁new', '▁string', '(', 'n', 'ome', '_', 'ag', ');', '\n', '▁init', '(', 'room', ',', '▁data', '_', 'i', ',', '▁data', '_', 'f', ');', '\n', '▁}', '\n', '▁', '\n\t', 'public', '▁void', '▁init', '(', 'stan', 'za', '▁room', ',', '▁string', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ')', '\n', '▁', '\t', '{', '▁', '\t\n', '▁test', 'o', '[', '0', '].', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁test', 'o', '[', '0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '[', '4', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'data', '_', 'i', ')', ');', '\n', '▁test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'data', '_', 'f', ')', ');', '\n', '▁test', 'o', '[', '4', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '[', '5', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '[', '7', '].', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'desc', 'riz', 'ione', '());', '\n', '▁', '\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'new', '▁date', '()', '))', ');', '▁', '\n\t\t', 'test', 'o', '[', '8', '].', 's', 'ette', 'xt', '(', 'agen', 'zia', ');', '\t', '▁', '\t\n\t\t', 'test', 'o', '[', '8', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'if', '▁(', '!', 'agen', 'zia', '.', 'equ', 'als', '(""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '[', '6', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'my', 'check', 'box', '1.', 'set', 'state', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', '▁', '\t\n', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁}', ');', '\n\n', '▁az', 'ione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\t\n', '▁', '\t\t', '}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'ask', 'd', 'ial', 'og', '▁ask', ';', '\n\t\t', 'int', '▁answer', '▁=', '▁0', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', '▁=', '▁read', 'dat', 'ip', 'ren', '();', '\n\t\t\t', 'p', 'ren', '.', 'set', 'dat', 'ap', 'ren', '(', 'new', '▁date', '());', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'new', 'id', 'p', 'ren', 'ot', 'azione', '())', '▁==', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'up', 'date', 'id', 'p', 'ren', 'ot', 'azione', '();', '\n\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'writ', 'ep', 'ren', 'ot', 'azione', '(', 'p', 'ren', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '!', 'my', 'check', 'box', '1.', 'get', 'state', '())', '\n\t\t\t\t\t\t', 'ask', '▁=', '▁new', '▁ask', 'd', 'ial', 'og', '(', 'this', ',', '▁""', '▁as', 'se', 'gn', 'are', '▁la', '▁stan', 'za', '▁o', '▁bloc', 'car', 'la', '▁fin', 'o', '▁al', '▁rice', 'v', 'iment', 'o', '▁della', '▁cap', 'arra', '?', '▁""', ',', '▁""', '▁as', 'se', 'gn', 'are', '▁""', ',', '▁""', '▁bloc', 'care', '▁""', ',', '▁pren', ');', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t', '▁start', 'aggi', 'orn', 'ad', 'isp', '(', 'p', 'ren', ',', '▁flag', '.', 'asse', 'gn', 'ata', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '▁', '\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'aggi', 'orn', 'ad', 'isp', '(', 'p', 'ren', 'ot', 'azione', '▁p', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\n\t\t', 'aggi', 'orn', 'ad', 'isp', '(', 'p', ',', '▁tip', 'o', ');', '\n\t\t', 'dis', 'pose', '();', '\n\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'rest', 'art', 'av', 'v', 'io', '();', '\n\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'iscip', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '▁mask', '_', 'ric', 'er', 'ca', '▁=', '▁new', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '(""', '"",', '2);', '▁', '\n', '▁string', '▁ag', 'enzia', ';', '\n', '▁public', '▁ins', 'er', 'iscip', 'ren', 'ot', 'azione', '(', 'stan', 'za', '▁room', ',', '▁string', '▁data', '_', 'i', '▁,', '▁string', '▁data', '_', 'f', ',', '▁string', '▁nome', '_', 'ag', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',', '▁data', '_', 'i', ',', '▁data', '_', 'f', ',', '▁""', 'ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '1,', '▁flag', '.', 'pension', 'e', '_', 'comp', 'leta', ');', '\n', '▁ag', 'enzia', '▁=', '▁new', '▁string', '(', 'n', 'ome', '_', 'ag', ');', '\n', '▁init', '(', 'room', ',', '▁data', '_', 'i', ',', '▁data', '_', 'f', ');', '\n', '▁}', '\n', '▁', '\n\t', 'public', '▁void', '▁init', '(', 'stan', 'za', '▁room', ',', '▁string', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ')', '\n', '▁', '\t', '{', '▁', '\t\n', '▁testo', '[0', '].', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁testo', '[0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '[', '4', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'data', '_', 'i', '));', '\n', '▁testo', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'data', '_', 'f', '));', '\n', '▁testo', '[', '4', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '[', '5', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '[', '7', '].', 's', 'ette', 'xt', '(', 'room', '.', 'get', 'desc', 'riz', 'ione', '());', '\n', '▁', '\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'new', '▁date', '()))', ');', '▁', '\n\t\t', 'test', 'o', '[', '8', '].', 's', 'ette', 'xt', '(', 'agen', 'zia', ');', '\t', '▁', '\t\n\t\t', 'test', 'o', '[', '8', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'if', '▁(!', 'agen', 'zia', '.', 'equals', '(""', '""))', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '[', '6', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'my', 'check', 'box', '1.', 'set', 'state', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', '▁', '\t\n', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁}', ');', '\n\n', '▁az', 'ione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\t\n', '▁', '\t\t', '}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'ask', 'dial', 'og', '▁ask', ';', '\n\t\t', 'int', '▁answer', '▁=', '▁0;', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', '▁=', '▁read', 'dat', 'ip', 'ren', '();', '\n\t\t\t', 'p', 'ren', '.', 'set', 'dat', 'ap', 'ren', '(', 'new', '▁date', '());', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'new', 'id', 'p', 'ren', 'ot', 'azione', '())', '▁==', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'princip', 'ale', '.', 'config', ').', 'update', 'id', 'p', 'ren', 'ot', 'azione', '();', '\n\t\t\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'writ', 'ep', 'ren', 'ot', 'azione', '(', 'p', 'ren', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(!', 'my', 'check', 'box', '1.', 'get', 'state', '())', '\n\t\t\t\t\t\t', 'ask', '▁=', '▁new', '▁ask', 'dial', 'og', '(', 'this', ',', '▁""', '▁as', 'se', 'gn', 'are', '▁la', '▁stanza', '▁o', '▁bloc', 'car', 'la', '▁fino', '▁al', '▁rice', 'v', 'imento', '▁della', '▁cap', 'arra', '?', '▁"",', '▁""', '▁as', 'se', 'gn', 'are', '▁"",', '▁""', '▁bloc', 'care', '▁"",', '▁pren', ');', '\n\t\t\t\t\t', 'else', '\n\t\t\t', '▁start', 'aggi', 'orn', 'ad', 'isp', '(', 'p', 'ren', ',', '▁flag', '.', 'asse', 'gn', 'ata', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t', '▁', '\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁);', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', '▁);', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'aggi', 'orn', 'ad', 'isp', '(', 'p', 'ren', 'ot', 'azione', '▁p', ',', '▁char', '▁tipo', ')', '\n\t', '{', '\n\t\t', 'aggi', 'orn', 'ad', 'isp', '(', 'p', ',', '▁tipo', ');', '\n\t\t', 'dis', 'pose', '();', '\n\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'rest', 'art', 'av', 'vio', '();', '\n\t\t', 'mask', '_', 'ric', 'er', 'ca', '.', 'set', 'enabled', '(', 'true', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class inserisci prenotazion extend maschera prenotazion maschera ricerca stanza mask ricerca new maschera ricerca stanza string agenzia public inserisci prenotazion stanza room string data string data string nome super room data data inserimento dei dati della prenotazion inserisci flag pension completa agenzia new string nome init room data data public void init stanza room string data string data testo set text room get num stanza testo set edit fals testo set text date util pars date data testo set text date util pars date data testo set edit fals testo set edit fals testo set text room get descrizion testo set text date util pars date date util give string date new date testo set text agenzia testo set edit fals agenzia equal testo set edit fals checkbox set state true annulla add action listen new action listen public void action perform action event dispos mask ricerca set enabl true azion add action listen new action listen public void action perform action event start azion void start azion frame msg ask dialog ask int answer errori prenotazion pren read dati pren pren set data pren new date int principal new prenotazion ()) data base principal config updat prenotazion (); principal write prenotazion pren data base checkbox1 get state ()) ask new ask dialog assegnar stanza bloccarla fino ricevimento della caparra assegnar bloccar pren els start aggiorna disp pren flag assegnata els msg new messag dialog problemi con databas data base str error els msg new messag dialog problemi con databas data base str error void start aggiorna disp prenotazion char tipo aggiorna disp tipo dispos (); mask_ricerca restart avvio (); mask_ricerca set enabl true
37~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/CancellaStanze.java~CancellaStanze.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class CancellaStanze extends DescrittoreStanze
{
	public CancellaStanze()
	{
		super(""Cancellazione delle stanze"", ""Cancella"", 3);
		init();
	}

	public void init()
	{
		testo1.setEditable(true);
		testo2.setEditable(false);
		testo3.setEditable(false);
		testo4.setEditable(false);
		mycheckboxes.setEnabled(false);
		Azione.setEnabled(false);

		Azione.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startAzione();
			}
		});
		
		testo1.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startTesto1();
			}
		});
		
		Cerca.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startTesto1();
			}
		});
	} // init
	
	void startAzione()
	{
		MessageDialog msg;
		
		int j;
		if ( (j = (Principale.db).delStanza(testo1.getText())) != DataBase.OK )
			msg = new MessageDialog(this, ""Problemi con il data base: ""+DataBase.strErrore(j));
		else
		{
			cleanFields();
			Azione.setEnabled(false);
		}
		testo1.setEditable(true);
	}
	
	void startTesto1()
	{
		MessageDialog msg;
		
		Stanza room;
		if ((room = (Principale.db).readStanza(testo1.getText())) != null)
		{
			writeDatiStanza(room);
			testo1.setEditable(false);
			Azione.setEnabled(true);
		}
		else
			msg = new MessageDialog(this, ""Stanza inesistente!"");
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁canc', 'ell', 'ast', 'an', 'ze', '▁ext', 'ends', '▁desc', 'rit', 'tor', 'est', 'an', 'ze', '\n', '{', '\n\t', 'publ', 'ic', '▁canc', 'ell', 'ast', 'an', 'ze', '(', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', '""', 'c', 'anc', 'ell', 'az', 'ion', 'e', '▁del', 'le', '▁stan', 'ze', '"",', '▁""', 'c', 'anc', 'ella', '"",', '▁3', ');', '\n\t\t', 'in', 'it', '(', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t', 't', 'est', 'o', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'my', 'che', 'ck', 'box', 'es', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\n\t\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 't', 'est', 'o', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 't', 'est', 'o', '1', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 't', 'est', 'o', '1', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\t\n\t', 'v', 'oid', '▁start', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'int', '▁j', ';', '\n\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'stan', 'za', '(', 't', 'est', 'o', '1.', 'get', 'text', '(', ')', ')', ')', '▁!', '=', '▁database', '.', 'ok', '▁)', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'cle', 'an', 'field', 's', '(', ');', '\n\t\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', '}', '\n\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 't', 'est', 'o', '1', '(', ')', '\n\t', '{', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁(', '(', 'room', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 't', 'est', 'o', '1.', 'get', 'text', '(', ')', ')', ')', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁canc', 'ell', 'ast', 'an', 'ze', '▁extends', '▁desc', 'rit', 'tor', 'estan', 'ze', '\n', '{', '\n\t', 'public', '▁canc', 'ell', 'ast', 'an', 'ze', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'canc', 'ell', 'azione', '▁delle', '▁stan', 'ze', '"",', '▁""', 'canc', 'ella', '"",', '▁3', ');', '\n\t\t', 'init', '();', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'my', 'check', 'box', 'es', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\n\t\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 'test', 'o', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'test', 'o', '1', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'test', 'o', '1', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\t\n\t', 'v', 'oid', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'int', '▁j', ';', '\n\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '()', '))', '▁!=', '▁database', '.', 'ok', '▁)', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'cle', 'an', 'fields', '();', '\n\t\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', '}', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'test', 'o', '1', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁(', '(', 'room', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '()', '))', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁in', 'es', 'ist', 'ente', '!', '"");', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁canc', 'ell', 'ast', 'anze', '▁extends', '▁desc', 'rit', 'tor', 'estan', 'ze', '\n', '{', '\n\t', 'public', '▁canc', 'ell', 'ast', 'anze', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'canc', 'ell', 'azione', '▁delle', '▁stan', 'ze', '"",', '▁""', 'canc', 'ella', '"",', '▁3', ');', '\n\t\t', 'init', '();', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'my', 'check', 'boxes', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'azione', '.', 'set', 'enabled', '(', 'false', ');', '\n\n\t\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 'test', 'o', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'test', 'o', '1', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'test', 'o', '1', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\t\n\t', 'void', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\n\t\t', 'int', '▁j', ';', '\n\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'del', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '()))', '▁!=', '▁database', '.', 'ok', '▁)', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'clean', 'fields', '();', '\n\t\t\t', 'azione', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', '}', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'test', 'o', '1', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁((', 'room', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '()))', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'azione', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁ines', 'ist', 'ente', '!', '"");', '\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import moduli public class cancella stanz extend descrittor stanz public cancella stanz super cancellazion dell stanz cancella init public void init testo set edit true testo set edit fals testo set edit fals testo set edit fals mycheckbox set enabl fals azion set enabl fals azion add action listen new action listen public void action perform action event start azion testo add action listen new action listen public void action perform action event start testo cerca add action listen new action listen public void action perform action event start testo init void start azion messag dialog msg int principal del stanza testo get text data base msg new messag dialog problemi con data base data base str error els clean field azion set enabl fals testo set edit true void start testo messag dialog msg stanza room room principal read stanza testo get text null write dati stanza room testo set edit fals azion set enabl true els msg new messag dialog stanza inesistent
38~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/ControllaPrenotazione.java~ControllaPrenotazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class ControllaPrenotazione extends MascheraPrenotazione
{  
	Prenotazione p;	   
   	PrenotazioniScadute parent;
   
   	public ControllaPrenotazione(Prenotazione pren, Stanza room, PrenotazioniScadute papa)
    {
        super(room,"""","""",""Controlla dei dati della prenotazione"","" Rinnova "",5,pren.getPensionamento());
        p = pren;
        parent = papa;
        init();
    }
        
    public void init()
    {
    	writeDatiPren(p);
    	for(int i=0; i<11; i++)
    		testo[i].setEditable(false);
    	testo[9].setText(DateUtils.parseDate(DateUtils.giveStringOfDate(p.getDataPren())));	    
     
    
    	Azione.addActionListener(new ActionListener()
    	{
            public void actionPerformed(ActionEvent e)
            {
				startRinnova();
            	dispose();
            	parent.dispose();
            	startUpdate();

            }       
    	});
    	
    	Cancella.addActionListener(new ActionListener()
    	{
            public void actionPerformed(ActionEvent e)
            {
				startCancella();
				dispose();
            	parent.dispose();
            	startUpdate();

            }       
    	});

    } 

	void startUpdate()
	{
          	Frame supp = (parent.padre).p;
           	((Principale) supp).updateBloccate();
	}

	void startCancella()
	{
		Frame msg;
		ListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();
		if (elenco_disp != null)
		{
			(Principale.db).delPrenotazione(p.getIdPrenotazione());
    	  	Utils.aggiornaDisp(elenco_disp, p.getNumStanza(), p.getInizioSogg(), p.getFineSogg(), Flag.DISPONIBILE, Flag.BLOCCATA, true);
       		if (p.getTramiteAgenzia() == Const.SI)
	       		Utils.restoreCommissioni(p.getNumStanza());
    	   	dispose();
       		padre.setEnabled(true);
       	}
       	else
       		msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita! "");
	} 
	
	void startRinnova()
	{
		p.setDataPren(new Date());
		(Principale.db).changePrenotazione(p.getIdPrenotazione(), p.getNumStanza(), 
														p.getNumPers(),p.getNome(),p.getCognome(), 
														p.getNumTel(), p.getInizioSogg(), p.getFineSogg(), p.getDataPren(),
														p.getCaparra(), p.getRichLettoAgg(), p.getPensionamento(),
														p.getTramiteAgenzia(), p.getNomeAgenzia(), p.getRichParticolari());	
		dispose();
		parent.setEnabled(true);		
	
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁controll', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁ext', 'ends', '▁m', 'asc', 'her', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'p', 'ren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁paren', 't', ';', '\n', '▁', '\n', '▁', '\t', 'publ', 'ic', '▁controll', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ',', '▁stan', 'za', '▁room', ',', '▁p', 'ren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁pap', 'a', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",', '""', '"",', '""', 'cont', 'roll', 'a', '▁de', 'i', '▁d', 'ati', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '"",', '""', '▁r', 'inn', 'ova', '▁""', ',', '5,', 'p', 'ren', '.', 'get', 'p', 'ension', 'ament', 'o', '(', ')', ');', '\n', '▁p', '▁=', '▁p', 'ren', ';', '\n', '▁paren', 't', '▁=', '▁pap', 'a', ';', '\n', '▁init', '(', ');', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=', '0', ';', '▁i', '<', '11', ';', '▁i', '+', '+', ')', '\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 't', 'est', 'o', '[', '9', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', '.', 'get', 'd', 'at', 'ap', 'ren', '(', ')', ')', ')', ');', '\t', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'st', 'art', 'r', 'inn', 'ova', '(', ');', '\n', '▁', '\t', 'dis', 'pose', '(', ');', '\n', '▁', '\t', 'p', 'arent', '.', 'dis', 'pose', '(', ');', '\n', '▁', '\t', 'st', 'art', 'up', 'd', 'ate', '(', ');', '\n\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'c', 'anc', 'ella', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'st', 'art', 'c', 'anc', 'ella', '(', ');', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n', '▁', '\t', 'p', 'arent', '.', 'dis', 'pose', '(', ');', '\n', '▁', '\t', 'st', 'art', 'up', 'd', 'ate', '(', ');', '\n\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'up', 'd', 'ate', '(', ')', '\n\t', '{', '\n', '▁', '\t', 'fr', 'ame', '▁supp', '▁=', '▁(', 'p', 'arent', '.', 'p', 'ad', 're', ').', 'p', ';', '\n', '▁', '\t', '(', '(', 'pr', 'inc', 'ip', 'ale', ')', '▁supp', ').', 'up', 'd', 'ate', 'bl', 'oc', 'c', 'ate', '(', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'c', 'anc', 'ella', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n', '▁', '\t', '▁', '\t', 'ut', 'ils', '.', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁p', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'bl', 'oc', 'c', 'ata', ',', '▁true', ');', '\n', '▁', '\t\t', 'if', '▁(', 'p', '.', 'get', 'tr', 'am', 'ite', 'agen', 'z', 'ia', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n\t', '▁', '\t\t', 'ut', 'ils', '.', 'rest', 'or', 'ec', 'om', 'mission', 'i', '(', 'p', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁', '\t', '▁', '\t', 'dis', 'pose', '(', ');', '\n', '▁', '\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', 'el', 'se', '\n', '▁', '\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', '!', '▁""', ');', '\n\t', '}', '▁', '\n\t\n\t', 'v', 'oid', '▁start', 'r', 'inn', 'ova', '(', ')', '\n\t', '{', '\n\t\t', 'p', '.', 'set', 'd', 'at', 'ap', 'ren', '(', 'new', '▁date', '(', ')', ');', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'change', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '),', '▁p', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'n', 'ump', 'ers', '(', '),', 'p', '.', 'get', 'n', 'ome', '(', '),', 'p', '.', 'get', 'c', 'ogn', 'ome', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'n', 'um', 't', 'el', '(', '),', '▁p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁p', '.', 'get', 'd', 'at', 'ap', 'ren', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'c', 'ap', 'ar', 'ra', '(', '),', '▁p', '.', 'get', 'rich', 'let', 'to', 'ag', 'g', '(', '),', '▁p', '.', 'get', 'p', 'ension', 'ament', 'o', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'tr', 'am', 'ite', 'agen', 'z', 'ia', '(', '),', '▁p', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', '),', '▁p', '.', 'get', 'rich', 'part', 'ic', 'ol', 'ari', '(', ')', ');', '\t\n\t\t', 'dis', 'pose', '(', ');', '\n\t\t', 'p', 'arent', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\t\t\n\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁controll', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'p', 'ren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁parent', ';', '\n', '▁', '\n', '▁', '\t', 'public', '▁controll', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁stan', 'za', '▁room', ',', '▁pren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁papa', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",', '""', '"",', '""', 'controll', 'a', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', '"",', '""', '▁r', 'inn', 'ova', '▁""', ',', '5,', 'p', 'ren', '.', 'get', 'p', 'ension', 'amento', '());', '\n', '▁p', '▁=', '▁pren', ';', '\n', '▁parent', '▁=', '▁papa', ';', '\n', '▁init', '();', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=0', ';', '▁i', '<', '11', ';', '▁i', '++', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '()', '))', ');', '\t', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'start', 'r', 'inn', 'ova', '();', '\n', '▁', '\t', 'dis', 'pose', '();', '\n', '▁', '\t', 'p', 'arent', '.', 'dis', 'pose', '();', '\n', '▁', '\t', 'start', 'up', 'date', '();', '\n\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'canc', 'ella', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'start', 'canc', 'ella', '();', '\n\t\t\t\t', 'dis', 'pose', '();', '\n', '▁', '\t', 'p', 'arent', '.', 'dis', 'pose', '();', '\n', '▁', '\t', 'start', 'up', 'date', '();', '\n\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁startup', 'date', '()', '\n\t', '{', '\n', '▁', '\t', 'frame', '▁supp', '▁=', '▁(', 'p', 'arent', '.', 'pad', 're', ').', 'p', ';', '\n', '▁', '\t', '(', '(', 'princ', 'ip', 'ale', ')', '▁supp', ').', 'up', 'date', 'bl', 'occ', 'ate', '();', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'canc', 'ella', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'p', 'ren', 'ot', 'azione', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n', '▁', '\t', '▁', '\t', 'ut', 'ils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁p', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'bl', 'occ', 'ata', ',', '▁true', ');', '\n', '▁', '\t\t', 'if', '▁(', 'p', '.', 'get', 'tr', 'am', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t', '▁', '\t\t', 'ut', 'ils', '.', 'rest', 'or', 'ec', 'om', 'mission', 'i', '(', 'p', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', '▁', '\t', 'dis', 'pose', '();', '\n', '▁', '\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', 'el', 'se', '\n', '▁', '\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', '!', '▁""', ');', '\n\t', '}', '▁', '\n\t\n\t', 'v', 'oid', '▁start', 'r', 'inn', 'ova', '()', '\n\t', '{', '\n\t\t', 'p', '.', 'set', 'dat', 'ap', 'ren', '(', 'new', '▁date', '());', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'change', 'p', 'ren', 'ot', 'azione', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '(', '),', '▁p', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'n', 'ump', 'ers', '(', '),', 'p', '.', 'get', 'n', 'ome', '(', '),', 'p', '.', 'get', 'c', 'ogn', 'ome', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'num', 'tel', '(', '),', '▁p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁p', '.', 'get', 'dat', 'ap', 'ren', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'cap', 'arra', '(', '),', '▁p', '.', 'get', 'rich', 'let', 'to', 'agg', '(', '),', '▁p', '.', 'get', 'p', 'ension', 'amento', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'tr', 'am', 'ite', 'agen', 'zia', '(', '),', '▁p', '.', 'get', 'n', 'ome', 'agen', 'zia', '(', '),', '▁p', '.', 'get', 'rich', 'part', 'icol', 'ari', '());', '\t\n\t\t', 'dis', 'pose', '();', '\n\t\t', 'p', 'arent', '.', 'set', 'en', 'abled', '(', 'true', ');', '\t\t\n\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁controll', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'p', 'ren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁parent', ';', '\n', '▁', '\n', '▁', '\t', 'public', '▁controll', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁stanza', '▁room', ',', '▁pren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁papa', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",""', '"",""', 'controll', 'a', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', '"",""', '▁r', 'inn', 'ova', '▁"",', '5,', 'p', 'ren', '.', 'get', 'pension', 'amento', '());', '\n', '▁p', '▁=', '▁pren', ';', '\n', '▁parent', '▁=', '▁papa', ';', '\n', '▁init', '();', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=0;', '▁i', '<', '11', ';', '▁i', '++)', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '()))', ');', '\t', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'start', 'r', 'inn', 'ova', '();', '\n', '▁', '\t', 'dis', 'pose', '();', '\n', '▁', '\t', 'parent', '.', 'dis', 'pose', '();', '\n', '▁', '\t', 'start', 'update', '();', '\n\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'canc', 'ella', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'start', 'canc', 'ella', '();', '\n\t\t\t\t', 'dis', 'pose', '();', '\n', '▁', '\t', 'parent', '.', 'dis', 'pose', '();', '\n', '▁', '\t', 'start', 'update', '();', '\n\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n\n', '▁}', '▁', '\n\n\t', 'void', '▁startup', 'date', '()', '\n\t', '{', '\n', '▁', '\t', 'frame', '▁supp', '▁=', '▁(', 'parent', '.', 'pad', 're', ').', 'p', ';', '\n', '▁', '\t', '((', 'princip', 'ale', ')', '▁supp', ').', 'update', 'bl', 'occ', 'ate', '();', '\n\t', '}', '\n\n\t', 'void', '▁start', 'canc', 'ella', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁elenco', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁(', 'elen', 'co', '_', 'disp', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'del', 'p', 'ren', 'ot', 'azione', '(', 'p', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n', '▁', '\t', '▁', '\t', 'utils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'elen', 'co', '_', 'disp', ',', '▁p', '.', 'get', 'num', 'stan', 'za', '(),', '▁p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁p', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'bl', 'occ', 'ata', ',', '▁true', ');', '\n', '▁', '\t\t', 'if', '▁(', 'p', '.', 'get', 'tram', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t', '▁', '\t\t', 'utils', '.', 'rest', 'orec', 'om', 'mission', 'i', '(', 'p', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', '▁', '\t', 'dis', 'pose', '();', '\n', '▁', '\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', 'else', '\n', '▁', '\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', '!', '▁""', ');', '\n\t', '}', '▁', '\n\t\n\t', 'void', '▁start', 'r', 'inn', 'ova', '()', '\n\t', '{', '\n\t\t', 'p', '.', 'set', 'dat', 'ap', 'ren', '(', 'new', '▁date', '());', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'change', 'p', 'ren', 'ot', 'azione', '(', 'p', '.', 'getid', 'p', 'ren', 'ot', 'azione', '(),', '▁p', '.', 'get', 'num', 'stan', 'za', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'n', 'ump', 'ers', '(),', 'p', '.', 'get', 'n', 'ome', '(),', 'p', '.', 'get', 'cogn', 'ome', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'num', 'tel', '(),', '▁p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁p', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁p', '.', 'get', 'dat', 'ap', 'ren', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'cap', 'arra', '(),', '▁p', '.', 'get', 'rich', 'letto', 'agg', '(),', '▁p', '.', 'get', 'pension', 'amento', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', '.', 'get', 'tram', 'ite', 'agen', 'zia', '(),', '▁p', '.', 'get', 'n', 'ome', 'agen', 'zia', '(),', '▁p', '.', 'get', 'rich', 'part', 'icol', 'ari', '());', '\t\n\t\t', 'dis', 'pose', '();', '\n\t\t', 'parent', '.', 'set', 'enabled', '(', 'true', ');', '\t\t\n\t\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class controlla prenotazion extend maschera prenotazion prenotazion prenotazioni scadut parent public controlla prenotazion prenotazion pren stanza room prenotazioni scadut papa super room controlla dei dati della prenotazion rinnova pren get pensionamento pren parent papa init public void init write dati pren int testo set edit fals testo set text date util pars date date util give string date get data pren azion add action listen new action listen public void action perform action event start rinnova dispos parent dispos start updat cancella add action listen new action listen public void action perform action event start cancella dispos parent dispos start updat void start updat frame supp parent padr principal supp updat bloccat void start cancella frame msg lista disponibilita elenco disp principal elenco disponibilita elenco disp null principal del prenotazion get prenotazion util aggiorna disp elenco disp get num stanza get inizio sogg get fine sogg flag disponibil flag bloccata true get tramit agenzia const util restor commissioni get num stanza dispos padr set enabl true els msg new messag dialog problemi con databas nella lettura dell disponibilita void start rinnova set data pren new date )); principal chang prenotazion get prenotazion (), get num stanza (), get num per (), get nome (), get cognom (), get num tel (), get inizio sogg (), get fine sogg (), get data pren (), get caparra (), get rich letto agg (), get pensionamento (), get tramit agenzia (), get nome agenzia (), get rich particolari ()); dispos (); parent set enabl true
39~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/VediCommissione.java~VediCommissione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;
import moduli.Commissionamento;

public class VediCommissione extends MascheraCommissioni
{
	Commissionamento commissione;
   	
   	public VediCommissione()
   	{
      	super("""","""",""Visualizzazione dati delle commissioni"","" Cerca "",4);
      	init();
   	}

 	public void init()
 	{     	
      	nome_agenzia.setEditable(true);
      	num_stanza.setEditable(false);
      	num_tel_agenzia.setEditable(false);
        inizio_comm.setEditable(false);
        fine_comm.setEditable(false);
        scadenza_comm.setEditable(false); 
       	num_stanza.setEditable(false);
      	
		lista.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		commissione = L.getCommissionamento((lista.getSelectedIndexes())[0]+1);
				writeDatiComm(commissione);
				Azione.setEnabled(true);
				pack();
         	}
      });
   
		nome_agenzia.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				creaLista();
			}			      	
		});

	   	Azione.addActionListener(new ActionListener()
   		{
    	    public void actionPerformed(ActionEvent e)
        	{
				creaLista();
			}
		});	
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'com', 'mission', 'ament', 'o', ';', '\n\n', 'publ', 'ic', '▁class', '▁v', 'ed', 'ic', 'om', 'mission', 'e', '▁ext', 'ends', '▁m', 'asc', 'her', 'ac', 'om', 'mission', 'i', '\n', '{', '\n\t', 'com', 'mission', 'ament', 'o', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁v', 'ed', 'ic', 'om', 'mission', 'e', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', '"",', '""', '"",', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁d', 'ati', '▁del', 'le', '▁commission', 'i', '"",', '""', '▁cer', 'ca', '▁""', ',', '4)', ';', '\n', '▁', '\t', 'in', 'it', '(', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁in', 'iz', 'io', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁fine', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '▁', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\n\t\t', 'list', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'com', 'mission', 'e', '▁=', '▁l', '.', 'get', 'com', 'mission', 'ament', 'o', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'com', 'mission', 'e', ');', '\n\t\t\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', '}', '\n', '▁}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n\t', '▁', '\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t\t', '{', '\n', '▁', '\t', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'com', 'mission', 'amento', ';', '\n\n', 'public', '▁class', '▁ved', 'icom', 'mission', 'e', '▁extends', '▁masc', 'her', 'acom', 'mission', 'i', '\n', '{', '\n\t', 'com', 'mission', 'amento', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ved', 'icom', 'mission', 'e', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', '"",', '""', '"",', '""', 'vis', 'ual', 'izz', 'azione', '▁d', 'ati', '▁delle', '▁commission', 'i', '"",', '""', '▁cer', 'ca', '▁""', ',', '4)', ';', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁in', 'izio', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁fine', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '▁', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\n\t\t', 'list', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'com', 'mission', 'e', '▁=', '▁l', '.', 'get', 'com', 'mission', 'amento', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'com', 'mission', 'e', ');', '\n\t\t\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n', '▁', '\t', '}', '\n', '▁}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n\t', '▁', '\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t\t', '{', '\n', '▁', '\t', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'commission', 'amento', ';', '\n\n', 'public', '▁class', '▁ved', 'icom', 'mission', 'e', '▁extends', '▁masc', 'her', 'acom', 'mission', 'i', '\n', '{', '\n\t', 'commission', 'amento', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ved', 'icom', 'mission', 'e', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', '"",""', '"",""', 'visual', 'izz', 'azione', '▁d', 'ati', '▁delle', '▁commission', 'i', '"",""', '▁cer', 'ca', '▁"",', '4);', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁in', 'izio', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁fine', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '▁', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\n\t\t', 'lista', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'commission', 'e', '▁=', '▁l', '.', 'get', 'commission', 'amento', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'commission', 'e', ');', '\n\t\t\t\t', 'azione', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n', '▁', '\t', '}', '\n', '▁}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n\t', '▁', '\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t\t', '{', '\n', '▁', '\t', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\t\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import moduli import moduli commissionamento public class vedi commission extend maschera commissioni commissionamento commission public vedi commission super visualizzazion dati dell commissioni cerca init public void init nome agenzia set edit true num stanza set edit fals num tel agenzia set edit fals inizio comm set edit fals fine comm set edit fals scadenza comm set edit fals num stanza set edit fals lista add action listen new action listen public void action perform action event commission get commissionamento lista get select index write dati comm commission azion set enabl true pack nome agenzia add action listen new action listen public void action perform action event crea lista azion add action listen new action listen public void action perform action event crea lista
40~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraAddebiti.java~MascheraAddebiti.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class MascheraAddebiti extends MascheraPerAddebitare
{
        // variabili per il travaso del database in memoria
        String stanza_prec = new String("""");

        // oggetti per la costruzione della finestra
        Label etich1, etich2, etich3;
        TextField num_stanza;

		
        public MascheraAddebiti(Frame parent)
        {
                super(""Addebito spese e servizi extra"", ""Conferma l'addebito"");
                padre = parent;
                padre.setEnabled(false);
                inizExtra();
                setupPanello();
                inizializza();
                pack();
                setVisible(true);
        }

        // Travaso dati degli extra nelle strutture dati apposite
        void inizExtra()
        {
				MessageDialog msg;
				
				elenco_extra = (Principale.db).elencoSenzaSuppRid();
                if (elenco_extra != null)
                {
                	if (extra.getItemCount() > 0)
                    	extra.removeAll();
                    int i=1;
                    while (i <= elenco_extra.length())
                    {
	                    extra.addItem( (elenco_extra.getBeneServizio(i)).toString() );
                        i++;
                    }
                }
        }

        // Creazione della finestra
        void setupPanello()
        {
                num_stanza = new TextField("""", 4);
                num_stanza.setEditable(true);

                // creo le label
                etich1 = new Label(""Gestione degli addebiti              "");
                etich1.setFont(ConfigurazioneSistema.font_titolo);
                etich2 = new Label(""Scegliere l'extra da addebitare "");
                etich3 = new Label(""Addebitare alla stanza numero "");

                // creo pannello di sinistra
                this.remove(panel1);
                panel1 = new Panel();
                panel1.setLayout(gridbag);
                Utils.constrain(panel1, etich1, 0, 0, 6, 1);
                Utils.constrain(panel1, etich2, 0, 1, 6, 1, 10, 0, 0, 0);
                Utils.constrain(panel1, extra, 0, 2, 6, 4, GridBagConstraints.BOTH,
                                GridBagConstraints.WEST, 1.0, 1.0, 0, 20, 0, 20);

				this.remove(panel4);
				panel4 = new Panel();
				panel4.setLayout(gridbag);
                Utils.constrain(panel4, etich3, 0, 0, 1, 1, 5, 5, 5, 5);
                Utils.constrain(panel4, num_stanza, 1, 0, 1, 1, GridBagConstraints.NONE,
                                GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);

                // aggiungo i pannelli appena creati al resto
                Utils.constrain(this, panel1, 0, 0, 1, 1, GridBagConstraints.VERTICAL,
                                        GridBagConstraints.WEST, 0.5, 0.5, 5, 5, 5, 5);
                Utils.constrain(this, panel4, 0, 2, 1, 1, GridBagConstraints.VERTICAL,
                                        GridBagConstraints.WEST, 0.5, 0.5, 5, 5, 5, 5);
        }

        // Per la gestione degli eventi della finestra
        void inizializza()
        {
                conferma.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                scriviSuDB(num_stanza.getText());
                                dispose();
                                padre.setEnabled(true);
                        }
                });

                addebita.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                if (!errore())
                                {
                                		addebito = true;
                                        aggiornaAddebiti();
                                }
                        }
                });

                deaddebita.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                if (!errore())
                                {
                                		addebito = false;
                                        aggiornaAddebiti();
                                }
                        }
                });

                num_stanza.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                if (!errore())
                                {
                                		addebito = true;
                                        aggiornaAddebiti();
                                }
                        }
                });

                extra.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                if (!errore())
                                {
                                		addebito = true;
                                        aggiornaAddebiti();
                                }
                        }
                });
        }

        // Ritorna false se si sta' cercando di addebitare un extra in
        // mancanza dei dati necessari per l'addebito: num_stanza e extra.
        boolean errore()
        {
                if ((num_stanza.getText()).equals("""") && (extra.getSelectedIndex() == -1))
                {
                        MessageDialog p = new MessageDialog(this, ""Manca stanza e selezione!"");
                        return true;
                }
                else if ((num_stanza.getText()).equals(""""))
                {
                        MessageDialog p = new MessageDialog(this, ""Manca stanza!"");
                        return true;
                }
                else if (extra.getSelectedIndex() == -1)
                {
                        MessageDialog p = new MessageDialog(this, ""Manca selezione!"");
                        return true;
                }
                else if ( (num_stanza.getText()).length() > 4 )
                {
                        MessageDialog p = new MessageDialog(this, ""Errore nel numero di stanza!"");
                        return true;
                }
                else
                        return false;
        }

        void annullaAddebitiStanzaPrec()
        {
                stanza_prec = new String(num_stanza.getText());
   	        	aggiornaAvideo();
        }

        // Aggiorna il panel2, che e' quello di informazione sugli addebiti
        // di una data stanza, in modo che contenga le informazioni
        // aggiornate sugli addebiti.
        void aggiornaAddebiti()
        {
                if ( !(stanza_prec.equals(num_stanza.getText())) )
					AltraStanza();
                else
					aggiornaAvideo();
        }

		boolean thereIsModifiche()
		{
			boolean modifiche = false;
			for (int i = 0; i < quantita_mod.length; i++)
				modifiche = modifiche || (quantita_mod[i] != 0);
			return modifiche;
		}
		
        // Reinizzializza l'array degli addebiti in quanto si cambia stanza
        // e chiede se gli addebiti fatti alla stanza precedente vanno
        // confermati o meno.
        void AltraStanza()
        {
                Frame msg;
                FinModifiche p;

                if ( (Principale.db).readStanza(num_stanza.getText()) != null )
                {
                	ListaSoggiornanti L;
					if ( (L = (Principale.db).foundSoggiornanti(num_stanza.getText(), false) ) != null )
					{
						if (!L.isEmpty())
						{
	                        if (!stanza_prec.equals("""") && thereIsModifiche())
							{
           	                    p = new FinModifiche(this, ""Attenzione: cambio di stanza!"");
           	                }
            	            else
            	            {
								riscriviElencoAddebiti();
								annullaAddebitiStanzaPrec();
							}
						}
						else
						{
							msg = new AvvisoDialog(this, ""Nessun soggiornante occupa la stanza!"");
							num_stanza.setText(stanza_prec);
						}
					}
					else
					{
						msg = new MessageDialog(this, ""Problemi con il database: errore."");
					}
				}
                else
                {
	                msg = new MessageDialog(this, ""Stanza inesistente!"");
                    num_stanza.setText(stanza_prec);
                }
        }

		void riscriviElencoAddebiti()
		{
			MessageDialog msg;
			
			elenco_addebiti = (Principale.db).foundAddebiti(num_stanza.getText());
			elenco_extra_addebitati = new ListaBeniServizi();
            if (elenco_addebiti != null)
            {
            	// inizializzo l'array delle modifiche e degli extra addebitati
                quantita_mod = new int[elenco_addebiti.length()];
                BeneServizio extra;
                for (int i=0; i<quantita_mod.length; i++)
                {
                	quantita_mod[i] = 0;
                	extra = (Principale.db).readBeneServizio( (elenco_addebiti.getAddebito(i+1)).getCodExtra() );
                	if (extra == null)
	                {
	                	msg = new MessageDialog(this, ""Uno degli extra addebitati non e' stato trovato!"");
	                	extra = new BeneServizio( (elenco_addebiti.getAddebito(i+1)).getCodExtra(), ""Sconosciuto"", 0 );
	                }
                	elenco_extra_addebitati.addBeneServizio( extra );
                }
            }
            else
                msg = new MessageDialog(this, ""Errore nel database!"");
		}
 		
        int posExtraInAddebiti(BeneServizio b)
        {
                for (int i = 1; i <= elenco_addebiti.length(); i++)
                        if ( ((elenco_addebiti.getAddebito(i)).getCodExtra()).equals(b.getCodExtra()) )
                                return i;
                return -1;
        }

        void aggiornaAvideo()
        {
        		Frame msg;
                int supp[];

                BeneServizio extra_scelto = elenco_extra.getBeneServizio( extra.getSelectedIndex() + 1 );
                int pos;
                if ((pos = posExtraInAddebiti(extra_scelto)) < 0 && addebito)
                {
                        Addebito a = new Addebito(num_stanza.getText(), extra_scelto.getCodExtra(), 0, 0);
                        elenco_addebiti.addAddebito( a );
                        elenco_extra_addebitati.addBeneServizio( extra_scelto );

                        // allungo l'array delle quantita' modificate
                        supp = new int[elenco_addebiti.length()];
                        for (int i = 0; i<quantita_mod.length; i++)
                                supp[i] = quantita_mod[i];
                        supp[supp.length - 1] = 1;
                        quantita_mod = supp;
                        pos = quantita_mod.length;
                        extra_add.setText(extra.getSelectedItem());
                        continuaAggiornamento();
                }
                else
                {
                        if (pos < 0)
                        {
                                // sto cercando di togliere da un addebito inesistente
                                msg = new AvvisoDialog(this, ""Stai cercando di togliere da un addebito ormai inesistente!"");
                        }
                        else
                        {
                                // aggiorno tale array per contenere l'addebito appena effettuato
                                if (addebito)
                                {
                                        quantita_mod[pos - 1]++;
                                        extra_add.setText(extra.getSelectedItem());
                                        continuaAggiornamento();
                                }
                                else
                                        if ( (quantita_mod[pos - 1]+(elenco_addebiti.getAddebito(pos)).getQuantita()) > 0)
                                        {
                                                quantita_mod[pos - 1]--;
                                                extra_add.setText(extra.getSelectedItem());
                                                continuaAggiornamento();
                                        }
                                        else
			                                msg = new AvvisoDialog(this, ""Stai cercando di togliere da un addebito ormai inesistente!"");
                        }
                }
        }

        void continuaAggiornamento()
        {
                int i = 1;
                BeneServizio e;
                float conto = 0;
                if (addebiti.getItemCount() > 0)
                        addebiti.removeAll();
                while ( i <= elenco_addebiti.length() )
                {
					if ( ((elenco_addebiti.getAddebito(i)).getQuantita() + quantita_mod[i-1]) > 0 )
					{
                        e = elenco_extra_addebitati.getBeneServizio(i);
                        if ( Integer.parseInt(e.getCodExtra()) >= 40000000 && Integer.parseInt(e.getCodExtra()) < 50000000)
                                addebiti.addItem(""S ""+Utils.completaStringa(e.getDescrizione(), 32)+"" ""+(Principale.config).getValuta()+"".""+(elenco_addebiti.getAddebito(i)).getTotAddebito());
                        else if ( Integer.parseInt(e.getCodExtra()) >= 50000000)
                                addebiti.addItem(""R ""+Utils.completaStringa(e.getDescrizione(), 32)+"" ""+(Principale.config).getValuta()+"".""+(elenco_addebiti.getAddebito(i)).getTotAddebito());
                        else
                                addebiti.addItem(Utils.completaStringa(e.getDescrizione(), 10)+
                                				Utils.completaStringa("" x ""+(elenco_addebiti.getAddebito(i)).getQuantita(), 5)+"" +(""+quantita_mod[i-1]+"")"");
                        conto = conto + (elenco_addebiti.getAddebito(i)).getTotAddebito() + quantita_mod[i-1]*e.getPxUnitario();
                    }
                    i++;
                }
                totale.setText((Principale.config).getValuta()+"".""+conto);
        }

        void scriviSuDB(String stanza)
        {
                for (int i = 1; i <= elenco_addebiti.length(); i++)
                {
                        if (quantita_mod[i-1] != 0)
                        {
                                if ( (quantita_mod[i - 1]+(elenco_addebiti.getAddebito(i)).getQuantita()) > 0)
                                {
                                        int j = (Principale.db).addAddebito(stanza, (elenco_addebiti.getAddebito(i)).getCodExtra(), quantita_mod[i-1] );
                                        if (j < 0)
                                                DataBase.visErrore(j);
                                }
                                else
                                {
                                        int j = (Principale.db).delAddebito(stanza, (elenco_addebiti.getAddebito(i)).getCodExtra() );
                                        if (j < 0)
                                                DataBase.visErrore(j);
                                }
                        }
                }
        }
}

/****************************************************************************/
class FinModifiche extends Frame
{
        Button ok, annulla;
        Label msg = new Label(""Si vogliono salvare le modifiche degli addebiti della stanza precedente?"");
        GridBagLayout gridbag = new GridBagLayout();
        String titolo;

        MascheraAddebiti padre = null;

        public FinModifiche(MascheraAddebiti parent, String title)
        {
                super(title);

				padre = parent;
				padre.setEnabled(false);

                titolo = new String(title);

                this.setLayout(gridbag);
                ok = new Button(""Salva le modifiche"");
                annulla = new Button(""Annulla le modifiche"");
                Utils.constrain(this, msg, 0, 0, 5, 2, GridBagConstraints.BOTH,
                                        GridBagConstraints.CENTER, 1.0, 1.0, 20, 20, 20, 20);
                Utils.constrain(this, annulla, 1, 2, 1, 1, GridBagConstraints.NONE,
                                        GridBagConstraints.CENTER, 1.0, 1.0, 20, 20, 20, 20);
                Utils.constrain(this, ok, 3, 2, 1, 1, GridBagConstraints.NONE,
                                        GridBagConstraints.CENTER, 1.0, 1.0, 20, 20, 20, 20);
                this.pack();
                init();
                setVisible(true);
        }

        public void init()
        {
                ok.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                padre.scriviSuDB(padre.stanza_prec);
                                inComune();
                        }
                });

                annulla.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                inComune();
                        }
                });
        }

        void inComune()
        {
                padre.riscriviElencoAddebiti();
                padre.annullaAddebitiStanzaPrec();
                padre.setEnabled(true);
                dispose();
        }
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', '▁ext', 'ends', '▁m', 'asc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '\n', '{', '\n', '▁/', '/', '▁vari', 'ab', 'ili', '▁per', '▁il', '▁trav', 'as', 'o', '▁del', '▁database', '▁in', '▁mem', 'oria', '\n', '▁string', '▁stan', 'za', '_', 'p', 'rec', '▁=', '▁new', '▁string', '(', '""', '"")', ';', '\n\n', '▁/', '/', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uz', 'ion', 'e', '▁d', 'ella', '▁fin', 'est', 'ra', '\n', '▁label', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3', ';', '\n', '▁text', 'field', '▁num', '_', 'stan', 'za', ';', '\n\n\t\t\n', '▁public', '▁m', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', '(', 'fr', 'ame', '▁paren', 't', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'ad', 'de', 'bit', 'o', '▁sp', 'ese', '▁e', '▁serv', 'iz', 'i', '▁extra', '"",', '▁""', 'con', 'fer', 'ma', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁in', 'ize', 'xt', 'ra', '(', ');', '\n', '▁set', 'up', 'pan', 'ello', '(', ');', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁/', '/', '▁trav', 'as', 'o', '▁d', 'ati', '▁deg', 'li', '▁extra', '▁n', 'elle', '▁str', 'utt', 'ure', '▁d', 'ati', '▁app', 'os', 'ite', '\n', '▁vo', 'id', '▁in', 'ize', 'xt', 'ra', '(', ')', '\n', '▁{', '\n\t\t\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t\t\n\t\t\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'osen', 'z', 'as', 'up', 'pr', 'id', '(', ');', '\n', '▁if', '▁(', 'el', 'en', 'co', '_', 'ext', 'ra', '▁!', '=', '▁n', 'ull', ')', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'ext', 'ra', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n', '▁', '\t', 'ext', 'ra', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁int', '▁i', '=', '1', ';', '\n', '▁while', '▁(', 'i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'ext', 'ra', '.', 'l', 'ength', '(', ')', ')', '\n', '▁{', '\n\t', '▁extra', '.', 'ad', 'd', 'it', 'em', '(', '▁(', 'el', 'en', 'co', '_', 'ext', 'ra', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'i', ')', ').', 't', 'ost', 'ring', '(', ')', '▁', ');', '\n', '▁i', '+', '+', ';', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁/', '/', '▁cre', 'az', 'ion', 'e', '▁d', 'ella', '▁fin', 'est', 'ra', '\n', '▁vo', 'id', '▁set', 'up', 'pan', 'ello', '(', ')', '\n', '▁{', '\n', '▁num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\n', '▁/', '/', '▁cre', 'o', '▁le', '▁label', '\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(', '""', 'gest', 'ion', 'e', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁""', ');', '\n', '▁et', 'ich', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(', '""', 's', 'ce', 'g', 'li', 'ere', '▁l', ""'"", 'ext', 'ra', '▁da', '▁add', 'e', 'bit', 'are', '▁""', ');', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(', '""', 'ad', 'de', 'bit', 'are', '▁all', 'a', '▁stan', 'za', '▁num', 'ero', '▁""', ');', '\n\n', '▁/', '/', '▁cre', 'o', '▁p', 'ann', 'ello', '▁di', '▁sin', 'ist', 'ra', '\n', '▁this', '.', 'rem', 'ove', '(', 'pan', 'el', '1)', ';', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1,', '▁', '0,', '▁', '0,', '▁6,', '▁1', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2,', '▁', '0,', '▁1,', '▁6,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁extra', ',', '▁', '0,', '▁2,', '▁6,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁20,', '▁', '0,', '▁20', ');', '\n\n\t\t\t\t', 'this', '.', 'rem', 'ove', '(', 'pan', 'el', '4)', ';', '\n\t\t\t\t', 'pan', 'el', '4', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t\t\t', 'pan', 'el', '4.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁et', 'ich', '3,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁num', '_', 'stan', 'za', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁/', '/', '▁ag', 'gi', 'ung', 'o', '▁i', '▁p', 'ann', 'elli', '▁app', 'ena', '▁cre', 'ati', '▁al', '▁rest', 'o', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '4,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁/', '/', '▁per', '▁la', '▁g', 'est', 'ion', 'e', '▁deg', 'li', '▁event', 'i', '▁d', 'ella', '▁fin', 'est', 'ra', '\n', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n', '▁{', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁scr', 'iv', 'is', 'ud', 'b', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ');', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁add', 'e', 'b', 'ita', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orn', 'a', 'ad', 'de', 'bit', 'i', '(', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁dead', 'de', 'b', 'ita', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁fal', 'se', ';', '\n', '▁ag', 'gi', 'orn', 'a', 'ad', 'de', 'bit', 'i', '(', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁num', '_', 'stan', 'za', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orn', 'a', 'ad', 'de', 'bit', 'i', '(', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁extra', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orn', 'a', 'ad', 'de', 'bit', 'i', '(', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁/', '/', '▁rit', 'orn', 'a', '▁fal', 'se', '▁se', '▁si', '▁st', 'a', ""'"", '▁cer', 'c', 'ando', '▁di', '▁add', 'e', 'bit', 'are', '▁un', '▁extra', '▁in', '\n', '▁/', '/', '▁man', 'can', 'za', '▁de', 'i', '▁d', 'ati', '▁necess', 'ari', '▁per', '▁l', ""'"", 'ad', 'de', 'bit', 'o', ':', '▁num', '_', 'stan', 'za', '▁e', '▁extra', '.', '\n', '▁bo', 'ole', 'an', '▁er', 'r', 'ore', '(', ')', '\n', '▁{', '\n', '▁if', '▁(', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁&', '&', '▁(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁=', '=', '▁-', '1)', ')', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁stan', 'za', '▁e', '▁se', 'le', 'z', 'ion', 'e', '!', '"")', ';', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁stan', 'za', '!', '"")', ';', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁=', '=', '▁-', '1)', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁se', 'le', 'z', 'ion', 'e', '!', '"")', ';', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', '▁(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '>', '▁4', '▁)', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nel', '▁num', 'ero', '▁di', '▁stan', 'za', '!', '"")', ';', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '\n', '▁return', '▁fal', 'se', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁ann', 'ull', 'a', 'ad', 'de', 'bit', 'istan', 'z', 'ap', 'rec', '(', ')', '\n', '▁{', '\n', '▁stan', 'za', '_', 'p', 'rec', '▁=', '▁new', '▁string', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ');', '\n', '▁', '\t', '▁', '\t', 'ag', 'gi', 'orn', 'a', 'av', 'ide', 'o', '(', ');', '\n', '▁}', '\n\n', '▁/', '/', '▁ag', 'gi', 'orn', 'a', '▁il', '▁pan', 'el', '2,', '▁che', '▁e', ""'"", '▁qu', 'ello', '▁di', '▁inform', 'az', 'ion', 'e', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '\n', '▁/', '/', '▁di', '▁un', 'a', '▁data', '▁stan', 'za', ',', '▁in', '▁mod', 'o', '▁che', '▁cont', 'eng', 'a', '▁le', '▁inform', 'az', 'ion', 'i', '\n', '▁/', '/', '▁ag', 'gi', 'orn', 'ate', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '.', '\n', '▁vo', 'id', '▁ag', 'gi', 'orn', 'a', 'ad', 'de', 'bit', 'i', '(', ')', '\n', '▁{', '\n', '▁if', '▁(', '▁!', '(', 'stan', 'za', '_', 'p', 'rec', '.', 'equ', 'als', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ')', ')', '▁)', '\n\t\t\t\t\t', 'al', 'tr', 'ast', 'an', 'za', '(', ');', '\n', '▁else', '\n\t\t\t\t\t', 'ag', 'gi', 'orn', 'a', 'av', 'ide', 'o', '(', ');', '\n', '▁}', '\n\n\t\t', 'bo', 'ole', 'an', '▁there', 'ism', 'od', 'ific', 'he', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'bo', 'ole', 'an', '▁mod', 'ific', 'he', '▁=', '▁fal', 'se', ';', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁', '<', '▁quant', 'ita', '_', 'mod', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t\t', 'mod', 'ific', 'he', '▁=', '▁mod', 'ific', 'he', '▁||', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', '▁!', '=', '▁', '0)', ';', '\n\t\t\t', 'ret', 'urn', '▁mod', 'ific', 'he', ';', '\n\t\t', '}', '\n\t\t\n', '▁/', '/', '▁rein', 'iz', 'z', 'ial', 'iz', 'za', '▁l', ""'"", 'ar', 'ray', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁in', '▁quant', 'o', '▁si', '▁c', 'amb', 'ia', '▁stan', 'za', '\n', '▁/', '/', '▁e', '▁ch', 'ied', 'e', '▁se', '▁gl', 'i', '▁add', 'e', 'bit', 'i', '▁f', 'att', 'i', '▁all', 'a', '▁stan', 'za', '▁preced', 'ent', 'e', '▁v', 'ann', 'o', '\n', '▁/', '/', '▁con', 'fer', 'm', 'ati', '▁o', '▁men', 'o', '.', '\n', '▁vo', 'id', '▁al', 'tr', 'ast', 'an', 'za', '(', ')', '\n', '▁{', '\n', '▁frame', '▁ms', 'g', ';', '\n', '▁fin', 'mod', 'ific', 'he', '▁p', ';', '\n\n', '▁if', '▁(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ')', '▁!', '=', '▁n', 'ull', '▁)', '\n', '▁{', '\n', '▁', '\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', ';', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'l', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', '),', '▁fal', 'se', ')', '▁)', '▁!', '=', '▁n', 'ull', '▁)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t\t\t\t', '{', '\n\t', '▁if', '▁(', '!', 'stan', 'za', '_', 'p', 'rec', '.', 'equ', 'als', '(', '""', '"")', '▁&', '&', '▁there', 'ism', 'od', 'ific', 'he', '(', ')', ')', '\n\t\t\t\t\t\t\t', '{', '\n', '▁', '\t', '▁p', '▁=', '▁new', '▁fin', 'mod', 'ific', 'he', '(', 'this', ',', '▁""', 'att', 'enz', 'ion', 'e', ':', '▁c', 'amb', 'io', '▁di', '▁stan', 'za', '!', '"")', ';', '\n', '▁', '\t', '▁}', '\n', '▁', '\t', '▁else', '\n', '▁', '\t', '▁{', '\n\t\t\t\t\t\t\t\t', 'r', 'isc', 'r', 'iv', 'iel', 'en', 'co', 'ad', 'de', 'bit', 'i', '(', ');', '\n\t\t\t\t\t\t\t\t', 'ann', 'ull', 'a', 'ad', 'de', 'bit', 'istan', 'z', 'ap', 'rec', '(', ');', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'ness', 'un', '▁s', 'og', 'gi', 'orn', 'ante', '▁occup', 'a', '▁la', '▁stan', 'za', '!', '"")', ';', '\n\t\t\t\t\t\t\t', 'n', 'um', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '_', 'p', 'rec', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁er', 'r', 'ore', '.""', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n', '▁else', '\n', '▁{', '\n\t', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n', '▁num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '_', 'p', 'rec', ');', '\n', '▁}', '\n', '▁}', '\n\n\t\t', 'v', 'oid', '▁r', 'isc', 'r', 'iv', 'iel', 'en', 'co', 'ad', 'de', 'bit', 'i', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t\n\t\t\t', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'ad', 'de', 'bit', 'i', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '▁=', '▁new', '▁list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '(', ');', '\n', '▁if', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '▁!', '=', '▁n', 'ull', ')', '\n', '▁{', '\n', '▁', '\t', '//', '▁in', 'iz', 'ial', 'iz', 'zo', '▁l', ""'"", 'ar', 'ray', '▁del', 'le', '▁mod', 'ific', 'he', '▁e', '▁deg', 'li', '▁extra', '▁add', 'e', 'bit', 'ati', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁new', '▁int', '[', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ')', ']', ';', '\n', '▁ben', 'es', 'erv', 'iz', 'io', '▁extra', ';', '\n', '▁for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'qu', 'ant', 'ita', '_', 'mod', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n', '▁{', '\n', '▁', '\t', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁0', ';', '\n', '▁', '\t', 'ext', 'ra', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', '+', '1)', ').', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', '▁', ');', '\n', '▁', '\t', 'if', '▁(', 'ext', 'ra', '▁=', '=', '▁n', 'ull', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'un', 'o', '▁deg', 'li', '▁extra', '▁add', 'e', 'bit', 'ati', '▁non', '▁e', ""'"", '▁stat', 'o', '▁tro', 'v', 'ato', '!', '"")', ';', '\n\t', '▁', '\t', 'ext', 'ra', '▁=', '▁new', '▁ben', 'es', 'erv', 'iz', 'io', '(', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', '+', '1)', ').', 'get', 'c', 'ode', 'xt', 'ra', '(', '),', '▁""', 's', 'con', 'os', 'ci', 'ut', 'o', '"",', '▁0', '▁', ');', '\n\t', '▁}', '\n', '▁', '\t', 'el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'ad', 'd', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '▁extra', '▁', ');', '\n', '▁}', '\n', '▁}', '\n', '▁else', '\n', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nel', '▁database', '!', '"")', ';', '\n\t\t', '}', '\n', '▁', '\t\t\n', '▁int', '▁p', 'ose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁b', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n', '▁if', '▁(', '▁(', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ').', 'equ', 'als', '(', 'b', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', '▁)', '\n', '▁return', '▁i', ';', '\n', '▁return', '▁-', '1', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁ag', 'gi', 'orn', 'a', 'av', 'ide', 'o', '(', ')', '\n', '▁{', '\n', '▁', '\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n', '▁int', '▁supp', '[', ']', ';', '\n\n', '▁ben', 'es', 'erv', 'iz', 'io', '▁extra', '_', 'sc', 'el', 'to', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '▁extra', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁+', '▁1', '▁', ');', '\n', '▁int', '▁pos', ';', '\n', '▁if', '▁(', '(', 'pos', '▁=', '▁p', 'ose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'ext', 'ra', '_', 'sc', 'el', 'to', ')', ')', '▁', '<', '▁0', '▁&', '&', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'o', '▁a', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', '),', '▁extra', '_', 'sc', 'el', 'to', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', '),', '▁', '0,', '▁', '0)', ';', '\n', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'ad', 'd', 'ad', 'de', 'bit', 'o', '(', '▁a', '▁', ');', '\n', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'ad', 'd', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '▁extra', '_', 'sc', 'el', 'to', '▁', ');', '\n\n', '▁/', '/', '▁all', 'ung', 'o', '▁l', ""'"", 'ar', 'ray', '▁del', 'le', '▁quant', 'ita', ""'"", '▁mod', 'ific', 'ate', '\n', '▁supp', '▁=', '▁new', '▁int', '[', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ')', ']', ';', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'qu', 'ant', 'ita', '_', 'mod', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n', '▁supp', '[', 'i', ']', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', ']', ';', '\n', '▁supp', '[', 'sup', 'p', '.', 'l', 'ength', '▁-', '▁1', ']', '▁=', '▁1', ';', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁supp', ';', '\n', '▁pos', '▁=', '▁quant', 'ita', '_', 'mod', '.', 'l', 'ength', ';', '\n', '▁extra', '_', 'ad', 'd', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'it', 'em', '(', ')', ');', '\n', '▁contin', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ');', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁if', '▁(', 'pos', '▁', '<', '▁', '0)', '\n', '▁{', '\n', '▁/', '/', '▁st', 'o', '▁cer', 'c', 'ando', '▁di', '▁to', 'g', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁in', 'es', 'ist', 'ent', 'e', '\n', '▁ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁to', 'g', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'm', 'ai', '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁/', '/', '▁ag', 'gi', 'orn', 'o', '▁t', 'ale', '▁arr', 'ay', '▁per', '▁cont', 'en', 'ere', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '▁app', 'ena', '▁eff', 'ett', 'u', 'ato', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'o', ')', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '+', '+', ';', '\n', '▁extra', '_', 'ad', 'd', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'it', 'em', '(', ')', ');', '\n', '▁contin', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ');', '\n', '▁}', '\n', '▁else', '\n', '▁if', '▁(', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'pos', ')', ').', 'get', 'qu', 'ant', 'ita', '(', ')', ')', '▁', '>', '▁', '0)', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '-', '-', ';', '\n', '▁extra', '_', 'ad', 'd', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'it', 'em', '(', ')', ');', '\n', '▁contin', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ');', '\n', '▁}', '\n', '▁else', '\n\t\t\t', '▁ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁to', 'g', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'm', 'ai', '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁vo', 'id', '▁contin', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ')', '\n', '▁{', '\n', '▁int', '▁i', '▁=', '▁1', ';', '\n', '▁ben', 'es', 'erv', 'iz', 'io', '▁e', ';', '\n', '▁flo', 'at', '▁cont', 'o', '▁=', '▁0', ';', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n', '▁add', 'e', 'bit', 'i', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁while', '▁(', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ')', '▁)', '\n', '▁{', '\n\t\t\t\t\t', 'if', '▁(', '▁(', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'qu', 'ant', 'ita', '(', ')', '▁+', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', ')', '▁', '>', '▁0', '▁)', '\n\t\t\t\t\t', '{', '\n', '▁e', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'i', ');', '\n', '▁if', '▁(', '▁inte', 'ger', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', '▁', '>', '=', '▁400', '00', '000', '▁&', '&', '▁inte', 'ger', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', '▁', '<', '▁500', '00', '000', ')', '\n', '▁add', 'e', 'bit', 'i', '.', 'ad', 'd', 'it', 'em', '(', '""', 's', '▁""', '+', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', '),', '▁3', '2)', '+', '""', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 't', 'ot', 'ad', 'de', 'bit', 'o', '(', ')', ');', '\n', '▁else', '▁if', '▁(', '▁inte', 'ger', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', '▁', '>', '=', '▁500', '00', '000', ')', '\n', '▁add', 'e', 'bit', 'i', '.', 'ad', 'd', 'it', 'em', '(', '""', 'r', '▁""', '+', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', '),', '▁3', '2)', '+', '""', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 't', 'ot', 'ad', 'de', 'bit', 'o', '(', ')', ');', '\n', '▁else', '\n', '▁add', 'e', 'bit', 'i', '.', 'ad', 'd', 'it', 'em', '(', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', '),', '▁10', ')', '+', '\n', '▁', '\t\t\t\t', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', '""', '▁x', '▁""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'qu', 'ant', 'ita', '(', '),', '▁5', ')', '+', '""', '▁+', '(', '""', '+', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '+', '"")', '"")', ';', '\n', '▁cont', 'o', '▁=', '▁cont', 'o', '▁+', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 't', 'ot', 'ad', 'de', 'bit', 'o', '(', ')', '▁+', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '*', 'e', '.', 'get', 'p', 'x', 'un', 'itar', 'io', '(', ');', '\n', '▁}', '\n', '▁i', '+', '+', ';', '\n', '▁}', '\n', '▁to', 't', 'ale', '.', 's', 'ette', 'xt', '(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', 'c', 'onto', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁scr', 'iv', 'is', 'ud', 'b', '(', 'str', 'ing', '▁stan', 'za', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n', '▁{', '\n', '▁if', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '▁!', '=', '▁', '0)', '\n', '▁{', '\n', '▁if', '▁(', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '▁-', '▁1', ']', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'qu', 'ant', 'ita', '(', ')', ')', '▁', '>', '▁', '0)', '\n', '▁{', '\n', '▁int', '▁j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ad', 'd', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ',', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'c', 'ode', 'xt', 'ra', '(', '),', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '▁', ');', '\n', '▁if', '▁(', 'j', '▁', '<', '▁', '0)', '\n', '▁database', '.', 'v', 'iser', 'r', 'ore', '(', 'j', ');', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁int', '▁j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ',', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', '▁', ');', '\n', '▁if', '▁(', 'j', '▁', '<', '▁', '0)', '\n', '▁database', '.', 'v', 'iser', 'r', 'ore', '(', 'j', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n', '}', '\n\n', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '\n', 'class', '▁fin', 'mod', 'ific', 'he', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁but', 'ton', '▁ok', ',', '▁ann', 'ull', 'a', ';', '\n', '▁label', '▁ms', 'g', '▁=', '▁new', '▁label', '(', '""', 'si', '▁v', 'og', 'l', 'ion', 'o', '▁salv', 'are', '▁le', '▁mod', 'ific', 'he', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁d', 'ella', '▁stan', 'za', '▁preced', 'ent', 'e', '?', '"")', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁string', '▁tit', 'olo', ';', '\n\n', '▁m', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', '▁pad', 're', '▁=', '▁n', 'ull', ';', '\n\n', '▁public', '▁fin', 'mod', 'ific', 'he', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', '▁paren', 't', ',', '▁string', '▁title', ')', '\n', '▁{', '\n', '▁super', '(', 't', 'it', 'le', ');', '\n\n\t\t\t\t', 'p', 'ad', 're', '▁=', '▁paren', 't', ';', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\n', '▁tit', 'olo', '▁=', '▁new', '▁string', '(', 't', 'it', 'le', ');', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ok', '▁=', '▁new', '▁but', 'ton', '(', '""', 'sal', 'va', '▁le', '▁mod', 'ific', 'he', '"")', ';', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '▁le', '▁mod', 'ific', 'he', '"")', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁ms', 'g', ',', '▁', '0,', '▁', '0,', '▁5,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁ann', 'ull', 'a', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁ok', ',', '▁3,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁this', '.', 'p', 'ack', '(', ');', '\n', '▁init', '(', ');', '\n', '▁set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ok', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁pad', 're', '.', 'sc', 'r', 'iv', 'is', 'ud', 'b', '(', 'p', 'ad', 're', '.', 'stan', 'za', '_', 'p', 'rec', ');', '\n', '▁inc', 'om', 'une', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁inc', 'om', 'une', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁inc', 'om', 'une', '(', ')', '\n', '▁{', '\n', '▁pad', 're', '.', 'r', 'isc', 'r', 'iv', 'iel', 'en', 'co', 'ad', 'de', 'bit', 'i', '(', ');', '\n', '▁pad', 're', '.', 'ann', 'ull', 'a', 'ad', 'de', 'bit', 'istan', 'z', 'ap', 'rec', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁dis', 'pose', '(', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'hera', 'ad', 'de', 'bit', 'i', '▁extends', '▁masc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '\n', '{', '\n', '▁//', '▁vari', 'ab', 'ili', '▁per', '▁il', '▁trav', 'as', 'o', '▁del', '▁database', '▁in', '▁mem', 'oria', '\n', '▁string', '▁stan', 'za', '_', 'p', 'rec', '▁=', '▁new', '▁string', '(""', '"");', '\n\n', '▁//', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uz', 'ione', '▁della', '▁finest', 'ra', '\n', '▁label', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3', ';', '\n', '▁text', 'field', '▁num', '_', 'stan', 'za', ';', '\n\n\t\t\n', '▁public', '▁masc', 'hera', 'ad', 'de', 'bit', 'i', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'ad', 'de', 'bit', 'o', '▁sp', 'ese', '▁e', '▁serv', 'iz', 'i', '▁extra', '"",', '▁""', 'con', 'fer', 'ma', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁in', 'ize', 'xt', 'ra', '();', '\n', '▁setup', 'pan', 'ello', '();', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '();', '\n', '▁pack', '();', '\n', '▁set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁//', '▁trav', 'as', 'o', '▁d', 'ati', '▁deg', 'li', '▁extra', '▁n', 'elle', '▁str', 'utt', 'ure', '▁d', 'ati', '▁app', 'os', 'ite', '\n', '▁void', '▁in', 'ize', 'xt', 'ra', '()', '\n', '▁{', '\n\t\t\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t\t\n\t\t\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'osen', 'z', 'as', 'up', 'pr', 'id', '();', '\n', '▁if', '▁(', 'el', 'en', 'co', '_', 'ext', 'ra', '▁!=', '▁null', ')', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'ext', 'ra', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n', '▁', '\t', 'ext', 'ra', '.', 'rem', 'ove', 'all', '();', '\n', '▁int', '▁i', '=1', ';', '\n', '▁while', '▁(', 'i', '▁<', '=', '▁el', 'en', 'co', '_', 'ext', 'ra', '.', 'length', '())', '\n', '▁{', '\n\t', '▁extra', '.', 'add', 'it', 'em', '(', '▁(', 'el', 'en', 'co', '_', 'ext', 'ra', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ')', ').', 't', 'ost', 'ring', '()', '▁', ');', '\n', '▁i', '++', ';', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁//', '▁cre', 'azione', '▁della', '▁finest', 'ra', '\n', '▁void', '▁setup', 'pan', 'ello', '()', '\n', '▁{', '\n', '▁num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\n', '▁//', '▁cre', 'o', '▁le', '▁label', '\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'gest', 'ione', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁""', ');', '\n', '▁et', 'ich', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'g', 'li', 'ere', '▁l', ""'"", 'ext', 'ra', '▁da', '▁add', 'e', 'bit', 'are', '▁""', ');', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'ad', 'de', 'bit', 'are', '▁alla', '▁stan', 'za', '▁num', 'ero', '▁""', ');', '\n\n', '▁//', '▁cre', 'o', '▁pann', 'ello', '▁di', '▁sin', 'ist', 'ra', '\n', '▁this', '.', 'rem', 'ove', '(', 'pan', 'el', '1)', ';', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1,', '▁', '0,', '▁', '0,', '▁6,', '▁1', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2,', '▁', '0,', '▁1,', '▁6,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁extra', ',', '▁', '0,', '▁2,', '▁6,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁20,', '▁', '0,', '▁20', ');', '\n\n\t\t\t\t', 'this', '.', 'rem', 'ove', '(', 'pan', 'el', '4)', ';', '\n\t\t\t\t', 'pan', 'el', '4', '▁=', '▁new', '▁panel', '();', '\n\t\t\t\t', 'pan', 'el', '4.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁et', 'ich', '3,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁num', '_', 'stan', 'za', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁//', '▁ag', 'gi', 'ung', 'o', '▁i', '▁pann', 'elli', '▁app', 'ena', '▁cre', 'ati', '▁al', '▁rest', 'o', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '4,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁//', '▁per', '▁la', '▁gest', 'ione', '▁deg', 'li', '▁event', 'i', '▁della', '▁finest', 'ra', '\n', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n', '▁{', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁scr', 'iv', 'is', 'ud', 'b', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '());', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁add', 'eb', 'ita', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '();', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁dead', 'de', 'b', 'ita', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁false', ';', '\n', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '();', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁num', '_', 'stan', 'za', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '();', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁extra', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '();', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁//', '▁rit', 'orna', '▁false', '▁se', '▁si', '▁sta', ""'"", '▁cer', 'c', 'ando', '▁di', '▁add', 'e', 'bit', 'are', '▁un', '▁extra', '▁in', '\n', '▁//', '▁man', 'can', 'za', '▁dei', '▁d', 'ati', '▁necess', 'ari', '▁per', '▁l', ""'"", 'ad', 'de', 'bit', 'o', ':', '▁num', '_', 'stan', 'za', '▁e', '▁extra', '.', '\n', '▁bo', 'olean', '▁err', 'ore', '()', '\n', '▁{', '\n', '▁if', '▁(', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁&', '&', '▁(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'index', '()', '▁==', '▁-', '1)', ')', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁stan', 'za', '▁e', '▁se', 'lez', 'ione', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁stan', 'za', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'index', '()', '▁==', '▁-', '1)', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁se', 'lez', 'ione', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', '▁(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁4', '▁)', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nel', '▁num', 'ero', '▁di', '▁stan', 'za', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '\n', '▁return', '▁false', ';', '\n', '▁}', '\n\n', '▁void', '▁ann', 'ulla', 'ad', 'de', 'bit', 'istan', 'z', 'ap', 'rec', '()', '\n', '▁{', '\n', '▁stan', 'za', '_', 'p', 'rec', '▁=', '▁new', '▁string', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '());', '\n', '▁', '\t', '▁', '\t', 'aggi', 'orna', 'av', 'ide', 'o', '();', '\n', '▁}', '\n\n', '▁//', '▁ag', 'gi', 'orna', '▁il', '▁panel', '2,', '▁che', '▁e', ""'"", '▁qu', 'ello', '▁di', '▁inform', 'azione', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '\n', '▁//', '▁di', '▁una', '▁data', '▁stan', 'za', ',', '▁in', '▁mod', 'o', '▁che', '▁cont', 'eng', 'a', '▁le', '▁inform', 'az', 'ioni', '\n', '▁//', '▁ag', 'gi', 'orn', 'ate', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '.', '\n', '▁void', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '()', '\n', '▁{', '\n', '▁if', '▁(', '▁!', '(', 'stan', 'za', '_', 'p', 'rec', '.', 'equ', 'als', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', '))', '▁)', '\n\t\t\t\t\t', 'al', 'tr', 'ast', 'anza', '();', '\n', '▁else', '\n\t\t\t\t\t', 'aggi', 'orna', 'av', 'ide', 'o', '();', '\n', '▁}', '\n\n\t\t', 'bo', 'olean', '▁there', 'ism', 'od', 'ific', 'he', '()', '\n\t\t', '{', '\n\t\t\t', 'bo', 'olean', '▁mod', 'ific', 'he', '▁=', '▁false', ';', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁<', '▁quant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t\t', 'mod', 'ific', 'he', '▁=', '▁mod', 'ific', 'he', '▁||', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', '▁!=', '▁', '0)', ';', '\n\t\t\t', 'return', '▁mod', 'ific', 'he', ';', '\n\t\t', '}', '\n\t\t\n', '▁//', '▁rein', 'izz', 'ial', 'iz', 'za', '▁l', ""'"", 'array', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁in', '▁quant', 'o', '▁si', '▁camb', 'ia', '▁stan', 'za', '\n', '▁//', '▁e', '▁ch', 'ied', 'e', '▁se', '▁gl', 'i', '▁add', 'e', 'bit', 'i', '▁f', 'atti', '▁alla', '▁stan', 'za', '▁preced', 'ente', '▁v', 'ann', 'o', '\n', '▁//', '▁con', 'fer', 'm', 'ati', '▁o', '▁men', 'o', '.', '\n', '▁void', '▁al', 'tr', 'ast', 'anza', '()', '\n', '▁{', '\n', '▁frame', '▁ms', 'g', ';', '\n', '▁fin', 'mod', 'ific', 'he', '▁p', ';', '\n\n', '▁if', '▁(', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '())', '▁!=', '▁null', '▁)', '\n', '▁{', '\n', '▁', '\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', ';', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'l', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '(', '),', '▁false', ')', '▁)', '▁!=', '▁null', '▁)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '())', '\n\t\t\t\t\t\t', '{', '\n\t', '▁if', '▁(', '!', 'stan', 'za', '_', 'p', 'rec', '.', 'equ', 'als', '(""', '"")', '▁&', '&', '▁there', 'ism', 'od', 'ific', 'he', '())', '\n\t\t\t\t\t\t\t', '{', '\n', '▁', '\t', '▁p', '▁=', '▁new', '▁fin', 'mod', 'ific', 'he', '(', 'this', ',', '▁""', 'att', 'enz', 'ione', ':', '▁camb', 'io', '▁di', '▁stan', 'za', '!', '"");', '\n', '▁', '\t', '▁}', '\n', '▁', '\t', '▁else', '\n', '▁', '\t', '▁{', '\n\t\t\t\t\t\t\t\t', 'r', 'isc', 'riv', 'iel', 'en', 'co', 'ad', 'de', 'bit', 'i', '();', '\n\t\t\t\t\t\t\t\t', 'ann', 'ulla', 'ad', 'de', 'bit', 'istan', 'z', 'ap', 'rec', '();', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'ness', 'un', '▁s', 'og', 'gi', 'orn', 'ante', '▁occup', 'a', '▁la', '▁stan', 'za', '!', '"");', '\n\t\t\t\t\t\t\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '_', 'p', 'rec', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁err', 'ore', '.""', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n', '▁else', '\n', '▁{', '\n\t', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁in', 'es', 'ist', 'ente', '!', '"");', '\n', '▁num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '_', 'p', 'rec', ');', '\n', '▁}', '\n', '▁}', '\n\n\t\t', 'v', 'oid', '▁r', 'isc', 'riv', 'iel', 'en', 'co', 'ad', 'de', 'bit', 'i', '()', '\n\t\t', '{', '\n\t\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t\n\t\t\t', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'ad', 'de', 'bit', 'i', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '());', '\n\t\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '▁=', '▁new', '▁list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '();', '\n', '▁if', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '▁!=', '▁null', ')', '\n', '▁{', '\n', '▁', '\t', '//', '▁in', 'iz', 'ial', 'iz', 'zo', '▁l', ""'"", 'array', '▁delle', '▁mod', 'ific', 'he', '▁e', '▁deg', 'li', '▁extra', '▁add', 'e', 'bit', 'ati', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁new', '▁int', '[', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', ']', ';', '\n', '▁ben', 'es', 'erv', 'izio', '▁extra', ';', '\n', '▁for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'qu', 'ant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++', ')', '\n', '▁{', '\n', '▁', '\t', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁0', ';', '\n', '▁', '\t', 'ext', 'ra', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'ben', 'es', 'erv', 'izio', '(', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', '+', '1)', ').', 'get', 'code', 'xt', 'ra', '()', '▁', ');', '\n', '▁', '\t', 'if', '▁(', 'ext', 'ra', '▁==', '▁null', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'uno', '▁deg', 'li', '▁extra', '▁add', 'e', 'bit', 'ati', '▁non', '▁e', ""'"", '▁stat', 'o', '▁tro', 'v', 'ato', '!', '"");', '\n\t', '▁', '\t', 'ext', 'ra', '▁=', '▁new', '▁ben', 'es', 'erv', 'izio', '(', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', '+', '1)', ').', 'get', 'code', 'xt', 'ra', '(', '),', '▁""', 's', 'con', 'os', 'ci', 'uto', '"",', '▁0', '▁', ');', '\n\t', '▁}', '\n', '▁', '\t', 'el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'add', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '▁', ');', '\n', '▁}', '\n', '▁}', '\n', '▁else', '\n', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nel', '▁database', '!', '"");', '\n\t\t', '}', '\n', '▁', '\t\t\n', '▁int', '▁pose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'ben', 'es', 'erv', 'izio', '▁b', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '();', '▁i', '++', ')', '\n', '▁if', '▁(', '▁(', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'code', 'xt', 'ra', '()', ').', 'equ', 'als', '(', 'b', '.', 'get', 'code', 'xt', 'ra', '())', '▁)', '\n', '▁return', '▁i', ';', '\n', '▁return', '▁-', '1', ';', '\n', '▁}', '\n\n', '▁void', '▁ag', 'gi', 'orna', 'av', 'ide', 'o', '()', '\n', '▁{', '\n', '▁', '\t\t', 'frame', '▁ms', 'g', ';', '\n', '▁int', '▁supp', '[]', ';', '\n\n', '▁ben', 'es', 'erv', 'izio', '▁extra', '_', 'sc', 'el', 'to', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '.', 'get', 'se', 'lected', 'index', '()', '▁+', '▁1', '▁', ');', '\n', '▁int', '▁pos', ';', '\n', '▁if', '▁(', '(', 'pos', '▁=', '▁pose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'ext', 'ra', '_', 'sc', 'el', 'to', '))', '▁<', '▁0', '▁&', '&', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'o', '▁a', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '(', '),', '▁extra', '_', 'sc', 'el', 'to', '.', 'get', 'code', 'xt', 'ra', '(', '),', '▁', '0,', '▁', '0)', ';', '\n', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'add', 'ad', 'de', 'bit', 'o', '(', '▁a', '▁', ');', '\n', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'add', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '_', 'sc', 'el', 'to', '▁', ');', '\n\n', '▁//', '▁all', 'ung', 'o', '▁l', ""'"", 'array', '▁delle', '▁quant', 'ita', ""'"", '▁mod', 'ific', 'ate', '\n', '▁supp', '▁=', '▁new', '▁int', '[', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', ']', ';', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'qu', 'ant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++', ')', '\n', '▁supp', '[', 'i', ']', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', ']', ';', '\n', '▁supp', '[', 'sup', 'p', '.', 'length', '▁-', '▁1', ']', '▁=', '▁1', ';', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁supp', ';', '\n', '▁pos', '▁=', '▁quant', 'ita', '_', 'mod', '.', 'length', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'it', 'em', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁if', '▁(', 'pos', '▁<', '▁', '0)', '\n', '▁{', '\n', '▁//', '▁sto', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁in', 'es', 'ist', 'ente', '\n', '▁ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'm', 'ai', '▁in', 'es', 'ist', 'ente', '!', '"");', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁//', '▁ag', 'gi', 'orno', '▁tale', '▁array', '▁per', '▁cont', 'en', 'ere', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '▁app', 'ena', '▁eff', 'ett', 'u', 'ato', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'o', ')', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '++', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'it', 'em', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n', '▁if', '▁(', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'pos', ')', ').', 'get', 'qu', 'ant', 'ita', '())', '▁>', '▁', '0)', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '--', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'it', 'em', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n\t\t\t', '▁ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'm', 'ai', '▁in', 'es', 'ist', 'ente', '!', '"");', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁void', '▁contin', 'ua', 'aggi', 'orn', 'amento', '()', '\n', '▁{', '\n', '▁int', '▁i', '▁=', '▁1', ';', '\n', '▁ben', 'es', 'erv', 'izio', '▁e', ';', '\n', '▁float', '▁cont', 'o', '▁=', '▁0', ';', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'i', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n', '▁add', 'e', 'bit', 'i', '.', 'rem', 'ove', 'all', '();', '\n', '▁while', '▁(', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '▁)', '\n', '▁{', '\n\t\t\t\t\t', 'if', '▁(', '▁(', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'qu', 'ant', 'ita', '()', '▁+', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', '])', '▁>', '▁0', '▁)', '\n\t\t\t\t\t', '{', '\n', '▁e', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ');', '\n', '▁if', '▁(', '▁integer', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁>', '=', '▁400', '00', '000', '▁&', '&', '▁integer', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁<', '▁500', '00', '000', ')', '\n', '▁add', 'e', 'bit', 'i', '.', 'add', 'it', 'em', '(""', 's', '▁""', '+', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(', '),', '▁3', '2)', '+', '""', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁else', '▁if', '▁(', '▁integer', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁>', '=', '▁500', '00', '000', ')', '\n', '▁add', 'e', 'bit', 'i', '.', 'add', 'it', 'em', '(""', 'r', '▁""', '+', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(', '),', '▁3', '2)', '+', '""', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁else', '\n', '▁add', 'e', 'bit', 'i', '.', 'add', 'it', 'em', '(', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(', '),', '▁10)', '+', '\n', '▁', '\t\t\t\t', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(""', '▁x', '▁""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'qu', 'ant', 'ita', '(', '),', '▁5)', '+', '""', '▁+', '(""', '+', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '+', '"")', '"");', '\n', '▁cont', 'o', '▁=', '▁cont', 'o', '▁+', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '()', '▁+', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '*', 'e', '.', 'get', 'px', 'un', 'itar', 'io', '();', '\n', '▁}', '\n', '▁i', '++', ';', '\n', '▁}', '\n', '▁tot', 'ale', '.', 's', 'ette', 'xt', '(', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', 'c', 'onto', ');', '\n', '▁}', '\n\n', '▁void', '▁scr', 'iv', 'is', 'ud', 'b', '(', 'string', '▁stan', 'za', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '();', '▁i', '++', ')', '\n', '▁{', '\n', '▁if', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '▁!=', '▁', '0)', '\n', '▁{', '\n', '▁if', '▁(', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '▁-', '▁1', ']', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'qu', 'ant', 'ita', '())', '▁>', '▁', '0)', '\n', '▁{', '\n', '▁int', '▁j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'add', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ',', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'code', 'xt', 'ra', '(', '),', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '▁', ');', '\n', '▁if', '▁(', 'j', '▁<', '▁', '0)', '\n', '▁database', '.', 'v', 'iser', 'r', 'ore', '(', 'j', ');', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁int', '▁j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ',', '▁(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'code', 'xt', 'ra', '()', '▁', ');', '\n', '▁if', '▁(', 'j', '▁<', '▁', '0)', '\n', '▁database', '.', 'v', 'iser', 'r', 'ore', '(', 'j', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n', '}', '\n\n', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '\n', 'class', '▁fin', 'mod', 'ific', 'he', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ok', ',', '▁ann', 'ulla', ';', '\n', '▁label', '▁ms', 'g', '▁=', '▁new', '▁label', '(""', 'si', '▁vog', 'l', 'ion', 'o', '▁salv', 'are', '▁le', '▁mod', 'ific', 'he', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁della', '▁stan', 'za', '▁preced', 'ente', '?', '"");', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁string', '▁tit', 'olo', ';', '\n\n', '▁masc', 'hera', 'ad', 'de', 'bit', 'i', '▁pad', 're', '▁=', '▁null', ';', '\n\n', '▁public', '▁fin', 'mod', 'ific', 'he', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', '▁parent', ',', '▁string', '▁title', ')', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n\n\t\t\t\t', 'pad', 're', '▁=', '▁parent', ';', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\n', '▁tit', 'olo', '▁=', '▁new', '▁string', '(', 'title', ');', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', 'sal', 'va', '▁le', '▁mod', 'ific', 'he', '"");', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '▁le', '▁mod', 'ific', 'he', '"");', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁ms', 'g', ',', '▁', '0,', '▁', '0,', '▁5,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁ann', 'ulla', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁ok', ',', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁this', '.', 'pack', '();', '\n', '▁init', '();', '\n', '▁set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁pad', 're', '.', 'sc', 'riv', 'is', 'ud', 'b', '(', 'pad', 're', '.', 'stan', 'za', '_', 'p', 'rec', ');', '\n', '▁incom', 'une', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁incom', 'une', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁void', '▁incom', 'une', '()', '\n', '▁{', '\n', '▁pad', 're', '.', 'r', 'isc', 'riv', 'iel', 'en', 'co', 'ad', 'de', 'bit', 'i', '();', '\n', '▁pad', 're', '.', 'ann', 'ulla', 'ad', 'de', 'bit', 'istan', 'z', 'ap', 'rec', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁dis', 'pose', '();', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁maschera', 'ad', 'de', 'bit', 'i', '▁extends', '▁masc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '\n', '{', '\n', '▁//', '▁vari', 'ab', 'ili', '▁per', '▁il', '▁trav', 'aso', '▁del', '▁database', '▁in', '▁memoria', '\n', '▁string', '▁stanza', '_', 'prec', '▁=', '▁new', '▁string', '("""");', '\n\n', '▁//', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uzione', '▁della', '▁finest', 'ra', '\n', '▁label', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3;', '\n', '▁text', 'field', '▁num', '_', 'stan', 'za', ';', '\n\n\t\t\n', '▁public', '▁maschera', 'ad', 'de', 'bit', 'i', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'ad', 'de', 'bit', 'o', '▁sp', 'ese', '▁e', '▁serv', 'izi', '▁extra', '"",', '▁""', 'con', 'fer', 'ma', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁in', 'ize', 'xt', 'ra', '();', '\n', '▁setup', 'pan', 'ello', '();', '\n', '▁in', 'iz', 'ial', 'izza', '();', '\n', '▁pack', '();', '\n', '▁set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁//', '▁trav', 'aso', '▁d', 'ati', '▁degli', '▁extra', '▁nelle', '▁strutt', 'ure', '▁d', 'ati', '▁app', 'os', 'ite', '\n', '▁void', '▁in', 'ize', 'xt', 'ra', '()', '\n', '▁{', '\n\t\t\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\t\t\n\t\t\t\t', 'elen', 'co', '_', 'extra', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'osen', 'zas', 'up', 'pr', 'id', '();', '\n', '▁if', '▁(', 'elen', 'co', '_', 'extra', '▁!=', '▁null', ')', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'extra', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n', '▁', '\t', 'extra', '.', 'remove', 'all', '();', '\n', '▁int', '▁i', '=1', ';', '\n', '▁while', '▁(', 'i', '▁<', '=', '▁elenco', '_', 'extra', '.', 'length', '())', '\n', '▁{', '\n\t', '▁extra', '.', 'add', 'item', '(', '▁(', 'elen', 'co', '_', 'extra', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ')).', 'tostring', '()', '▁);', '\n', '▁i', '++;', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁//', '▁cre', 'azione', '▁della', '▁finest', 'ra', '\n', '▁void', '▁setup', 'pan', 'ello', '()', '\n', '▁{', '\n', '▁num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\n', '▁//', '▁cre', 'o', '▁le', '▁label', '\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'gest', 'ione', '▁degli', '▁add', 'e', 'bit', 'i', '▁""', ');', '\n', '▁et', 'ich', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'gli', 'ere', '▁l', ""'"", 'extra', '▁da', '▁add', 'e', 'bit', 'are', '▁""', ');', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'ad', 'de', 'bit', 'are', '▁alla', '▁stanza', '▁numero', '▁""', ');', '\n\n', '▁//', '▁cre', 'o', '▁pann', 'ello', '▁di', '▁sin', 'istra', '\n', '▁this', '.', 'remove', '(', 'panel', '1);', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '1,', '▁0,', '▁0,', '▁6,', '▁1);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '2,', '▁0,', '▁1,', '▁6,', '▁1,', '▁10,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁extra', ',', '▁0,', '▁2,', '▁6,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁20,', '▁0,', '▁20', ');', '\n\n\t\t\t\t', 'this', '.', 'remove', '(', 'panel', '4);', '\n\t\t\t\t', 'panel', '4', '▁=', '▁new', '▁panel', '();', '\n\t\t\t\t', 'panel', '4.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁et', 'ich', '3,', '▁0,', '▁0,', '▁1,', '▁1,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁num', '_', 'stan', 'za', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁//', '▁ag', 'gi', 'ungo', '▁i', '▁pann', 'elli', '▁app', 'ena', '▁cre', 'ati', '▁al', '▁rest', 'o', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '4,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁//', '▁per', '▁la', '▁gest', 'ione', '▁degli', '▁event', 'i', '▁della', '▁finest', 'ra', '\n', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n', '▁{', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁scr', 'ivis', 'ud', 'b', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '());', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁add', 'eb', 'ita', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '();', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁dead', 'deb', 'ita', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁false', ';', '\n', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '();', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁num', '_', 'stan', 'za', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '();', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁extra', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁', '\t\t', 'ad', 'de', 'bit', 'o', '▁=', '▁true', ';', '\n', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '();', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁//', '▁rit', 'orna', '▁false', '▁se', '▁si', '▁sta', ""'"", '▁cer', 'c', 'ando', '▁di', '▁add', 'e', 'bit', 'are', '▁un', '▁extra', '▁in', '\n', '▁//', '▁man', 'can', 'za', '▁dei', '▁d', 'ati', '▁necess', 'ari', '▁per', '▁l', ""'"", 'ad', 'de', 'bit', 'o', ':', '▁num', '_', 'stan', 'za', '▁e', '▁extra', '.', '\n', '▁boolean', '▁err', 'ore', '()', '\n', '▁{', '\n', '▁if', '▁((', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁&&', '▁(', 'extra', '.', 'get', 'selected', 'index', '()', '▁==', '▁-', '1))', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁stanza', '▁e', '▁se', 'lez', 'ione', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁((', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁stanza', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', 'extra', '.', 'get', 'selected', 'index', '()', '▁==', '▁-', '1)', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁se', 'lez', 'ione', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', '▁(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁4', '▁)', '\n', '▁{', '\n', '▁mess', 'aged', 'ial', 'og', '▁p', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nel', '▁numero', '▁di', '▁stanza', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '\n', '▁return', '▁false', ';', '\n', '▁}', '\n\n', '▁void', '▁ann', 'ulla', 'ad', 'de', 'bit', 'istan', 'zap', 'rec', '()', '\n', '▁{', '\n', '▁stanza', '_', 'prec', '▁=', '▁new', '▁string', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '());', '\n', '▁', '\t', '▁', '\t', 'aggi', 'orna', 'av', 'ideo', '();', '\n', '▁}', '\n\n', '▁//', '▁ag', 'gi', 'orna', '▁il', '▁panel', '2,', '▁che', '▁e', ""'"", '▁qu', 'ello', '▁di', '▁inform', 'azione', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '\n', '▁//', '▁di', '▁una', '▁data', '▁stanza', ',', '▁in', '▁modo', '▁che', '▁cont', 'enga', '▁le', '▁inform', 'azioni', '\n', '▁//', '▁ag', 'gi', 'orn', 'ate', '▁sug', 'li', '▁add', 'e', 'bit', 'i', '.', '\n', '▁void', '▁ag', 'gi', 'orna', 'ad', 'de', 'bit', 'i', '()', '\n', '▁{', '\n', '▁if', '▁(', '▁!', '(', 'stan', 'za', '_', 'prec', '.', 'equals', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()))', '▁)', '\n\t\t\t\t\t', 'al', 'tr', 'ast', 'anza', '();', '\n', '▁else', '\n\t\t\t\t\t', 'aggi', 'orna', 'av', 'ideo', '();', '\n', '▁}', '\n\n\t\t', 'boolean', '▁there', 'ism', 'od', 'ific', 'he', '()', '\n\t\t', '{', '\n\t\t\t', 'boolean', '▁mod', 'ific', 'he', '▁=', '▁false', ';', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁quant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++)', '\n\t\t\t\t', 'mod', 'ific', 'he', '▁=', '▁mod', 'ific', 'he', '▁||', '▁(', 'quant', 'ita', '_', 'mod', '[', 'i', ']', '▁!=', '▁', '0);', '\n\t\t\t', 'return', '▁mod', 'ific', 'he', ';', '\n\t\t', '}', '\n\t\t\n', '▁//', '▁rein', 'izz', 'ial', 'izza', '▁l', ""'"", 'array', '▁degli', '▁add', 'e', 'bit', 'i', '▁in', '▁quant', 'o', '▁si', '▁camb', 'ia', '▁stanza', '\n', '▁//', '▁e', '▁ch', 'ied', 'e', '▁se', '▁gli', '▁add', 'e', 'bit', 'i', '▁f', 'atti', '▁alla', '▁stanza', '▁preced', 'ente', '▁v', 'anno', '\n', '▁//', '▁confer', 'mati', '▁o', '▁meno', '.', '\n', '▁void', '▁altr', 'ast', 'anza', '()', '\n', '▁{', '\n', '▁frame', '▁msg', ';', '\n', '▁fin', 'mod', 'ific', 'he', '▁p', ';', '\n\n', '▁if', '▁(', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '())', '▁!=', '▁null', '▁)', '\n', '▁{', '\n', '▁', '\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', ';', '\n\t\t\t\t\t', 'if', '▁(', '▁(', 'l', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '(),', '▁false', ')', '▁)', '▁!=', '▁null', '▁)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(!', 'l', '.', 'isempty', '())', '\n\t\t\t\t\t\t', '{', '\n\t', '▁if', '▁(!', 'stan', 'za', '_', 'prec', '.', 'equals', '(""', '"")', '▁&&', '▁there', 'ism', 'od', 'ific', 'he', '())', '\n\t\t\t\t\t\t\t', '{', '\n', '▁', '\t', '▁p', '▁=', '▁new', '▁fin', 'mod', 'ific', 'he', '(', 'this', ',', '▁""', 'att', 'enz', 'ione', ':', '▁cambio', '▁di', '▁stanza', '!', '"");', '\n', '▁', '\t', '▁}', '\n', '▁', '\t', '▁else', '\n', '▁', '\t', '▁{', '\n\t\t\t\t\t\t\t\t', 'risc', 'riv', 'iel', 'enco', 'ad', 'de', 'bit', 'i', '();', '\n\t\t\t\t\t\t\t\t', 'ann', 'ulla', 'ad', 'de', 'bit', 'istan', 'zap', 'rec', '();', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'ness', 'un', '▁sog', 'gi', 'orn', 'ante', '▁occup', 'a', '▁la', '▁stanza', '!', '"");', '\n\t\t\t\t\t\t\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '_', 'prec', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁err', 'ore', '."");', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n', '▁else', '\n', '▁{', '\n\t', '▁msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁ines', 'ist', 'ente', '!', '"");', '\n', '▁num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'stan', 'za', '_', 'prec', ');', '\n', '▁}', '\n', '▁}', '\n\n\t\t', 'void', '▁risc', 'riv', 'iel', 'enco', 'ad', 'de', 'bit', 'i', '()', '\n\t\t', '{', '\n\t\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\t\n\t\t\t', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'ad', 'de', 'bit', 'i', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '());', '\n\t\t\t', 'elen', 'co', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', '▁=', '▁new', '▁list', 'ab', 'enis', 'erv', 'izi', '();', '\n', '▁if', '▁(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '▁!=', '▁null', ')', '\n', '▁{', '\n', '▁', '\t', '//', '▁in', 'iz', 'ial', 'iz', 'zo', '▁l', ""'"", 'array', '▁delle', '▁mod', 'ific', 'he', '▁e', '▁degli', '▁extra', '▁add', 'e', 'bit', 'ati', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁new', '▁int', '[', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '];', '\n', '▁benes', 'erv', 'izio', '▁extra', ';', '\n', '▁for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'quant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++)', '\n', '▁{', '\n', '▁', '\t', 'quant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁0;', '\n', '▁', '\t', 'extra', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'ben', 'es', 'erv', 'izio', '(', '▁(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', '+1)', ').', 'get', 'code', 'xt', 'ra', '()', '▁);', '\n', '▁', '\t', 'if', '▁(', 'extra', '▁==', '▁null', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'uno', '▁degli', '▁extra', '▁add', 'e', 'bit', 'ati', '▁non', '▁e', ""'"", '▁stato', '▁trov', 'ato', '!', '"");', '\n\t', '▁', '\t', 'extra', '▁=', '▁new', '▁benes', 'erv', 'izio', '(', '▁(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', '+1)', ').', 'get', 'code', 'xt', 'ra', '(),', '▁""', 's', 'con', 'osci', 'uto', '"",', '▁0', '▁);', '\n\t', '▁}', '\n', '▁', '\t', 'elen', 'co', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', '.', 'add', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '▁);', '\n', '▁}', '\n', '▁}', '\n', '▁else', '\n', '▁msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nel', '▁database', '!', '"");', '\n\t\t', '}', '\n', '▁', '\t\t\n', '▁int', '▁pose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'ben', 'es', 'erv', 'izio', '▁b', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '();', '▁i', '++)', '\n', '▁if', '▁(', '▁((', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'get', 'code', 'xt', 'ra', '()', ').', 'equals', '(', 'b', '.', 'get', 'code', 'xt', 'ra', '())', '▁)', '\n', '▁return', '▁i', ';', '\n', '▁return', '▁-', '1;', '\n', '▁}', '\n\n', '▁void', '▁ag', 'gi', 'orna', 'av', 'ideo', '()', '\n', '▁{', '\n', '▁', '\t\t', 'frame', '▁msg', ';', '\n', '▁int', '▁supp', '[]', ';', '\n\n', '▁benes', 'erv', 'izio', '▁extra', '_', 'sc', 'el', 'to', '▁=', '▁elenco', '_', 'extra', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '.', 'get', 'selected', 'index', '()', '▁+', '▁1', '▁);', '\n', '▁int', '▁pos', ';', '\n', '▁if', '▁((', 'pos', '▁=', '▁pose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'extra', '_', 'sc', 'el', 'to', '))', '▁<', '▁0', '▁&&', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'o', '▁a', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(', 'num', '_', 'stan', 'za', '.', 'get', 'text', '(),', '▁extra', '_', 'sc', 'el', 'to', '.', 'get', 'code', 'xt', 'ra', '(),', '▁0,', '▁', '0);', '\n', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '.', 'add', 'ad', 'de', 'bit', 'o', '(', '▁a', '▁);', '\n', '▁elenco', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', '.', 'add', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '_', 'sc', 'el', 'to', '▁);', '\n\n', '▁//', '▁all', 'ungo', '▁l', ""'"", 'array', '▁delle', '▁quant', 'ita', ""'"", '▁mod', 'ificate', '\n', '▁supp', '▁=', '▁new', '▁int', '[', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '];', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '<', 'quant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++)', '\n', '▁supp', '[', 'i', ']', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', '];', '\n', '▁supp', '[', 'supp', '.', 'length', '▁-', '▁1]', '▁=', '▁1;', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁supp', ';', '\n', '▁pos', '▁=', '▁quant', 'ita', '_', 'mod', '.', 'length', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'selected', 'item', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁if', '▁(', 'pos', '▁<', '▁0)', '\n', '▁{', '\n', '▁//', '▁sto', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁ines', 'ist', 'ente', '\n', '▁msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'mai', '▁ines', 'ist', 'ente', '!', '"");', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁//', '▁ag', 'gi', 'orno', '▁tale', '▁array', '▁per', '▁cont', 'en', 'ere', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '▁app', 'ena', '▁eff', 'ettu', 'ato', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'o', ')', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1]', '++;', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'selected', 'item', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n', '▁if', '▁(', '▁(', 'quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1]', '+', '(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'pos', ')).', 'get', 'quant', 'ita', '())', '▁>', '▁0)', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1]', '--', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'selected', 'item', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n\t\t\t', '▁msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'mai', '▁ines', 'ist', 'ente', '!', '"");', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁void', '▁contin', 'ua', 'aggi', 'orn', 'amento', '()', '\n', '▁{', '\n', '▁int', '▁i', '▁=', '▁1;', '\n', '▁benes', 'erv', 'izio', '▁e', ';', '\n', '▁float', '▁cont', 'o', '▁=', '▁0;', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'i', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n', '▁add', 'e', 'bit', 'i', '.', 'remove', 'all', '();', '\n', '▁while', '▁(', '▁i', '▁<', '=', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '▁)', '\n', '▁{', '\n\t\t\t\t\t', 'if', '▁(', '▁((', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'get', 'quant', 'ita', '()', '▁+', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', '])', '▁>', '▁0', '▁)', '\n\t\t\t\t\t', '{', '\n', '▁e', '▁=', '▁elenco', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ');', '\n', '▁if', '▁(', '▁integer', '.', 'parse', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁>=', '▁400', '00', '000', '▁&&', '▁integer', '.', 'parse', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁<', '▁500', '00', '000)', '\n', '▁add', 'e', 'bit', 'i', '.', 'add', 'item', '(""', 's', '▁""+', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(),', '▁3', '2)', '+""', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', '(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁else', '▁if', '▁(', '▁integer', '.', 'parse', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁>=', '▁500', '00', '000)', '\n', '▁add', 'e', 'bit', 'i', '.', 'add', 'item', '(""', 'r', '▁""+', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(),', '▁3', '2)', '+""', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', '(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁else', '\n', '▁add', 'e', 'bit', 'i', '.', 'add', 'item', '(', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(),', '▁10)', '+', '\n', '▁', '\t\t\t\t', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(""', '▁x', '▁""+', '(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'get', 'quant', 'ita', '(),', '▁5)', '+""', '▁+', '(""', '+', 'quant', 'ita', '_', 'mod', '[', 'i', '-1]', '+', '"")', '"");', '\n', '▁cont', 'o', '▁=', '▁cont', 'o', '▁+', '▁(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '()', '▁+', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1]', '*', 'e', '.', 'get', 'px', 'un', 'itario', '();', '\n', '▁}', '\n', '▁i', '++;', '\n', '▁}', '\n', '▁tot', 'ale', '.', 's', 'ette', 'xt', '((', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', 'c', 'onto', ');', '\n', '▁}', '\n\n', '▁void', '▁scr', 'ivis', 'ud', 'b', '(', 'string', '▁stanza', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '();', '▁i', '++)', '\n', '▁{', '\n', '▁if', '▁(', 'quant', 'ita', '_', 'mod', '[', 'i', '-1]', '▁!=', '▁0)', '\n', '▁{', '\n', '▁if', '▁(', '▁(', 'quant', 'ita', '_', 'mod', '[', 'i', '▁-', '▁1]', '+', '(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'get', 'quant', 'ita', '())', '▁>', '▁0)', '\n', '▁{', '\n', '▁int', '▁j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'add', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ',', '▁(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'get', 'code', 'xt', 'ra', '(),', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1]', '▁);', '\n', '▁if', '▁(', 'j', '▁<', '▁0)', '\n', '▁database', '.', 'v', 'iser', 'r', 'ore', '(', 'j', ');', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁int', '▁j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'del', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ',', '▁(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'get', 'code', 'xt', 'ra', '()', '▁);', '\n', '▁if', '▁(', 'j', '▁<', '▁0)', '\n', '▁database', '.', 'v', 'iser', 'r', 'ore', '(', 'j', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n', '}', '\n\n', '/', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '/', '\n', 'class', '▁fin', 'mod', 'ific', 'he', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ok', ',', '▁ann', 'ulla', ';', '\n', '▁label', '▁msg', '▁=', '▁new', '▁label', '(""', 'si', '▁vog', 'lion', 'o', '▁salv', 'are', '▁le', '▁mod', 'ific', 'he', '▁degli', '▁add', 'e', 'bit', 'i', '▁della', '▁stanza', '▁preced', 'ente', '?', '"");', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁string', '▁tit', 'olo', ';', '\n\n', '▁maschera', 'ad', 'de', 'bit', 'i', '▁padre', '▁=', '▁null', ';', '\n\n', '▁public', '▁fin', 'mod', 'ific', 'he', '(', 'masc', 'hera', 'ad', 'de', 'bit', 'i', '▁parent', ',', '▁string', '▁title', ')', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n\n\t\t\t\t', 'pad', 're', '▁=', '▁parent', ';', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'false', ');', '\n\n', '▁tit', 'olo', '▁=', '▁new', '▁string', '(', 'title', ');', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', 'sal', 'va', '▁le', '▁mod', 'ific', 'he', '"");', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '▁le', '▁mod', 'ific', 'he', '"");', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁msg', ',', '▁0,', '▁0,', '▁5,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁1.0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁ann', 'ulla', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁1.0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁ok', ',', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁1.0,', '▁20,', '▁20,', '▁20,', '▁20', ');', '\n', '▁this', '.', 'pack', '();', '\n', '▁init', '();', '\n', '▁set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁padre', '.', 'sc', 'riv', 'is', 'ud', 'b', '(', 'pad', 're', '.', 'stan', 'za', '_', 'prec', ');', '\n', '▁incom', 'une', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁incom', 'une', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁void', '▁incom', 'une', '()', '\n', '▁{', '\n', '▁padre', '.', 'risc', 'riv', 'iel', 'enco', 'ad', 'de', 'bit', 'i', '();', '\n', '▁padre', '.', 'ann', 'ulla', 'ad', 'de', 'bit', 'istan', 'zap', 'rec', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁dispose', '();', '\n', '▁}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli public class maschera addeb extend maschera per addebitar variabili per travaso del databas memoria string stanza prec new string oggetti per costruzion della finestra label etich etich etich text field num stanza public maschera addeb frame parent super addebito spese servizi extra conferma addebito padr parent padr set enabl fals iniz extra setup panello inizializza pack set visibl true travaso dati deg extra nell struttur dati apposit void iniz extra messag dialog msg elenco extra principal elenco senza supp rid elenco extra null extra get item count extra remov int elenco extra length extra add item elenco extra get bene servizio string creazion della finestra void setup panello num stanza new text field num stanza set edit true creo label etich new label gestion deg addeb etich set font configurazion sistema font titolo etich new label sceglier extra addebitar etich new label addebitar alla stanza numero creo pannello sinistra remov panel panel new panel panel set layout gridbag util constrain panel etich util constrain panel etich util constrain panel extra grid bag constraint grid bag constraint west remov panel4 panel4 new panel (); panel4 set layout gridbag util constrain panel4 etich3 util constrain panel4 num_stanza grid bag constraint none grid bag constraint west aggiungo pannelli appena creati resto util constrain panel1 grid bag constraint vertic grid bag constraint west util constrain panel4 grid bag constraint vertic grid bag constraint west per gestion deg eventi della finestra void inizializza conferma add action listen new action listen public void action perform action event scrivi num_stanza get text ()); dispos (); padr set enabl true }); addebita add action listen new action listen public void action perform action event error ()) addebito true aggiorna addeb (); }); deaddebita add action listen new action listen public void action perform action event error ()) addebito fals aggiorna addeb (); }); num_stanza add action listen new action listen public void action perform action event error ()) addebito true aggiorna addeb (); }); extra add action listen new action listen public void action perform action event error ()) addebito true aggiorna addeb (); }); ritorna fals sta cercando addebitar extra mancanza dei dati necessari per addebito num_stanza extra boolean error num_stanza get text ()). equal ("""") extra get select index messag dialog new messag dialog manca stanza selezion !""); return true els num_stanza get text ()). equal ("""")) messag dialog new messag dialog manca stanza !""); return true els extra get select index messag dialog new messag dialog manca selezion !""); return true els num_stanza get text ()). length messag dialog new messag dialog error nel numero stanza !""); return true els return fals void annulla addeb stanza prec stanza_prec new string num_stanza get text ()); aggiorna avideo (); aggiorna panel2 che quello informazion sug addeb una data stanza modo che contenga informazioni aggiorn sug addeb void aggiorna addeb stanza_prec equal num_stanza get text ())) altra stanza (); els aggiorna avideo (); boolean modifich boolean modifich fals int quantita_mod length ++) modifich modifich quantita_mod return modifich reinizzializza array deg addeb quanto cambia stanza chied gli addeb fatti alla stanza precedent vanno confermati meno void altra stanza frame msg fin modifich principal read stanza num_stanza get text ()) null lista soggiornanti principal found soggiornanti num_stanza get text (), fals null empti ()) stanza_prec equal ("""") modifich ()) new fin modifich attenzion cambio stanza !""); els riscrivi elenco addeb (); annulla addeb stanza prec (); els msg new avviso dialog nessun soggiornant occupa stanza !""); num_stanza set text stanza_prec els msg new messag dialog problemi con databas error .""); els msg new messag dialog stanza inesistent !""); num_stanza set text stanza_prec void riscrivi elenco addeb messag dialog msg elenco_addeb principal found addeb num_stanza get text ()); new lista beni servizi (); elenco_addeb null inizializzo array dell modifich deg extra addebitati quantita_mod new int elenco_addeb length ()]; bene servizio extra int quantita_mod length ++) quantita_mod extra principal read bene servizio elenco_addeb get addebito )). get cod extra extra null msg new messag dialog uno deg extra addebitati non stato trovato !""); extra new bene servizio elenco_addeb get addebito )). get cod extra (), sconosciuto add bene servizio extra els msg new messag dialog error nel databas !""); int pos extra addeb bene servizio int elenco_addeb length (); ++) elenco_addeb get addebito )). get cod extra ()). equal get cod extra ()) return return void aggiorna avideo frame msg int supp []; bene servizio extra_scelto elenco_extra get bene servizio extra get select index int pos pos pos extra addeb extra_scelto addebito addebito new addebito num_stanza get text (), extra_scelto get cod extra (), elenco_addeb add addebito add bene servizio extra_scelto allungo array dell quantita modif supp new int elenco_addeb length ()]; int quantita_mod length ++) supp quantita_mod supp supp length quantita_mod supp pos quantita_mod length extra_add set text extra get select item ()); continua aggiornamento (); els pos sto cercando toglier addebito inesistent msg new avviso dialog stai cercando toglier addebito ormai inesistent !""); els aggiorno tale array per contener addebito appena effettuato addebito quantita_mod pos ]++; extra_add set text extra get select item ()); continua aggiornamento (); els quantita_mod pos ]+( elenco_addeb get addebito pos )). get quantita ()) quantita_mod pos ]--; extra_add set text extra get select item ()); continua aggiornamento (); els msg new avviso dialog stai cercando toglier addebito ormai inesistent !""); void continua aggiornamento int bene servizio float conto addeb get item count addeb remov (); elenco_addeb length elenco_addeb get addebito )). get quantita quantita_mod get bene servizio integ pars int get cod extra ()) 40000000 integ pars int get cod extra ()) 50000000 addeb add item util completa stringa get descrizion (), )+"" ""+( principal config get valuta ()+"".""+( elenco_addeb get addebito )). get tot addebito ()); els integ pars int get cod extra ()) 50000000 addeb add item util completa stringa get descrizion (), )+"" ""+( principal config get valuta ()+"".""+( elenco_addeb get addebito )). get tot addebito ()); els addeb add item util completa stringa get descrizion (), util completa stringa ""+( elenco_addeb get addebito )). get quantita (), )+"" +(""+ quantita_mod ]+"")""); conto conto elenco_addeb get addebito )). get tot addebito quantita_mod get unitario (); ++; total set text principal config get valuta ()+"".""+ conto void scrivi string stanza int elenco_addeb length (); ++) quantita_mod quantita_mod ]+( elenco_addeb get addebito )). get quantita ()) int principal add addebito stanza elenco_addeb get addebito )). get cod extra (), quantita_mod data base vis error els int principal del addebito stanza elenco_addeb get addebito )). get cod extra data base vis error class fin modifich extend frame button annulla label msg new label vogliono salvar modifich deg addeb della stanza precedent ?""); grid bag layout gridbag new grid bag layout (); string titolo maschera addeb padr null public fin modifich maschera addeb parent string titl super titl padr parent padr set enabl fals titolo new string titl set layout gridbag new button salva modifich ""); annulla new button annulla modifich ""); util constrain msg grid bag constraint grid bag constraint center util constrain annulla grid bag constraint none grid bag constraint center util constrain grid bag constraint none grid bag constraint center pack (); init (); set visibl true public void init add action listen new action listen public void action perform action event padr scrivi padr stanza_prec comun (); }); annulla add action listen new action listen public void action perform action event comun (); }); void comun padr riscrivi elenco addeb (); padr annulla addeb stanza prec (); padr set enabl true dispos ();"
41~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/CancellaPrenotazione.java~CancellaPrenotazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class CancellaPrenotazione extends MascheraPrenotazione
{  
	Prenotazione p;	   
   	RicercaPrenotazione parent;
   
   	public CancellaPrenotazione(Prenotazione pren, Stanza room, RicercaPrenotazione papa)
    {
        super(room,"""","""",""Cancellazione della prenotazione"",""Cancella"",3, pren.getPensionamento());
        p = pren;
        parent = papa;
        init();
    }
        
    public void init()
    {
    	writeDatiPren(p);
    	for(int i=0; i<11; i++)
    		testo[i].setEditable(false);
    	myCheckbox.setEnabled(false);
    	myCheckbox1.setEnabled(false);
    	for (int i=0; i<checkboxes.length; i++)
    		checkboxes[i].setEnabled(false);
    	testo[9].setText(DateUtils.parseDate(DateUtils.giveStringOfDate(p.getDataPren())));	    
     
    
    	Azione.addActionListener(new ActionListener()
    	{
            public void actionPerformed(ActionEvent e)
            {
				startCancella();
            }       
    	});

    } 

	void startCancella()
	{
		Frame msg;
		(Principale.db).delPrenotazione(p.getIdPrenotazione());	
       	aggiornaDisp(p, Flag.DISPONIBILE);
       	Utils.restoreCommissioni(p.getNumStanza());
       	parent.creaLista(1);
        dispose();
        padre.setEnabled(true);
	} 
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁canc', 'ell', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁ext', 'ends', '▁m', 'asc', 'her', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁paren', 't', ';', '\n', '▁', '\n', '▁', '\t', 'publ', 'ic', '▁canc', 'ell', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ',', '▁stan', 'za', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁pap', 'a', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",', '""', '"",', '""', 'c', 'anc', 'ell', 'az', 'ion', 'e', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '"",', '""', 'c', 'anc', 'ella', '"",', '3,', '▁p', 'ren', '.', 'get', 'p', 'ension', 'ament', 'o', '(', ')', ');', '\n', '▁p', '▁=', '▁p', 'ren', ';', '\n', '▁paren', 't', '▁=', '▁pap', 'a', ';', '\n', '▁init', '(', ');', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=', '0', ';', '▁i', '<', '11', ';', '▁i', '+', '+', ')', '\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'my', 'che', 'ck', 'box', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'my', 'che', 'ck', 'box', '1.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'che', 'ck', 'box', 'es', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n', '▁', '\t\t', 'che', 'ck', 'box', 'es', '[', 'i', ']', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 't', 'est', 'o', '[', '9', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', '.', 'get', 'd', 'at', 'ap', 'ren', '(', ')', ')', ')', ');', '\t', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'st', 'art', 'c', 'anc', 'ella', '(', ');', '\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'c', 'anc', 'ella', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\t\n', '▁', '\t', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'p', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'rest', 'or', 'ec', 'om', 'mission', 'i', '(', 'p', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁', '\t', 'p', 'arent', '.', 'c', 'real', 'ista', '(', '1)', ';', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁canc', 'ell', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ';', '\n', '▁', '\n', '▁', '\t', 'public', '▁canc', 'ell', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁stan', 'za', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁papa', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",', '""', '"",', '""', 'canc', 'ell', 'azione', '▁della', '▁pren', 'ot', 'azione', '"",', '""', 'canc', 'ella', '"",', '3,', '▁pren', '.', 'get', 'p', 'ension', 'amento', '());', '\n', '▁p', '▁=', '▁pren', ';', '\n', '▁parent', '▁=', '▁papa', ';', '\n', '▁init', '();', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=0', ';', '▁i', '<', '11', ';', '▁i', '++', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'my', 'check', 'box', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'my', 'check', 'box', '1.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'check', 'box', 'es', '.', 'length', ';', '▁i', '++', ')', '\n', '▁', '\t\t', 'check', 'box', 'es', '[', 'i', '].', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '()', '))', ');', '\t', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'start', 'canc', 'ella', '();', '\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'canc', 'ella', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'p', 'ren', 'ot', 'azione', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\t\n', '▁', '\t', 'aggi', 'orn', 'ad', 'isp', '(', 'p', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'rest', 'or', 'ec', 'om', 'mission', 'i', '(', 'p', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', 'p', 'arent', '.', 'c', 'real', 'ista', '(1)', ';', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁canc', 'ell', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t', '▁', '\n', '▁', '\t', 'ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ';', '\n', '▁', '\n', '▁', '\t', 'public', '▁canc', 'ell', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁stanza', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁papa', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",""', '"",""', 'canc', 'ell', 'azione', '▁della', '▁pren', 'ot', 'azione', '"",""', 'canc', 'ella', '"",', '3,', '▁pren', '.', 'get', 'pension', 'amento', '());', '\n', '▁p', '▁=', '▁pren', ';', '\n', '▁parent', '▁=', '▁papa', ';', '\n', '▁init', '();', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁', '\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n', '▁', '\t', 'for', '(', 'int', '▁i', '=0;', '▁i', '<', '11', ';', '▁i', '++)', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'my', 'check', 'box', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'my', 'check', 'box', '1.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'check', 'boxes', '.', 'length', ';', '▁i', '++)', '\n', '▁', '\t\t', 'check', 'boxes', '[', 'i', '].', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '()))', ');', '\t', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'start', 'canc', 'ella', '();', '\n', '▁}', '▁', '\n', '▁', '\t', '}', ');', '\n\n', '▁}', '▁', '\n\n\t', 'void', '▁start', 'canc', 'ella', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'del', 'p', 'ren', 'ot', 'azione', '(', 'p', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\t\n', '▁', '\t', 'aggi', 'orn', 'ad', 'isp', '(', 'p', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n', '▁', '\t', 'utils', '.', 'rest', 'orec', 'om', 'mission', 'i', '(', 'p', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', 'parent', '.', 'c', 'real', 'ista', '(1)', ';', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class cancella prenotazion extend maschera prenotazion prenotazion ricerca prenotazion parent public cancella prenotazion prenotazion pren stanza room ricerca prenotazion papa super room cancellazion della prenotazion cancella pren get pensionamento pren parent papa init public void init write dati pren int testo set edit fals checkbox set enabl fals checkbox set enabl fals int checkbox length checkbox set enabl fals testo set text date util pars date date util give string date get data pren azion add action listen new action listen public void action perform action event start cancella void start cancella frame msg principal del prenotazion get prenotazion aggiorna disp flag disponibil util restor commissioni get num stanza parent crea lista dispos padr set enabl true
42~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraBeneServizio.java~MascheraBeneServizio.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import moduli.BeneServizio;
import moduli.ListaBeniServizi;

public class MascheraBeneServizio extends Frame
{
	//Dichiarazioni di oggetti che ci serviranno per definire la finestra
	protected Label label, label1, label2, label3, label4, label5, label6, label7, label8,
		label9, label12, label13;
	protected TextField testo3, testo4;
	protected Panel panel[], buttons;
	protected Button annulla, conferma;
	protected CheckboxGroup tipi, bar, ristorante, servizi, bevande, cibi, antipasti,
				primi, secondi, contorni;
	protected Checkbox[] prima_scelta, scelta_bar, scelta_piatto, scelta_servizio, 
				scelta_bevanda, scelta_cibo, scelta_antipasto, scelta_primo, 
				scelta_secondo,	scelta_contorno;
	protected GridLayout grid = new GridLayout(4,1);
	protected GridLayout grid1 = new GridLayout(7,1);
	protected GridBagLayout gridbag = new GridBagLayout();

	// i seguenti due campi sono condivisi da cancellazione e modifica
	protected List elenco = new List(3, false); 
	protected ListaBeniServizi L;
	
	// il seguente attributo e' necessario per la gerarchia delle finestre
	Frame padre = new Frame();
	
	// i seguenti gestiscono la formazione dei primi tre caratteri del cod_extra
	int level = -1;
	char codice[] = new char[3];
 	 	  
	public MascheraBeneServizio(String title)
	{
		super(title);
		setup();
		init();
		setSize(350,600);
	}

	void setup()
	{
		this.setFont(ConfigurazioneSistema.font_base);
		elenco.setFont(ConfigurazioneSistema.font_allineato);
		//Creo i pannelli
		panel = new Panel[13];
		for(int i=0;i<10;++i)
		{
			panel[i] = new Panel();
			panel[i].setLayout(grid1);
			panel[i].setVisible(false);
		}
		for(int i=10; i<13; ++i)
		{
			panel[i] = new Panel();
			panel[i].setVisible(false);
		}

		//Creo il pannello in alto
		label = new Label(""Tipi"");
		label.setFont(ConfigurazioneSistema.font_titolo);
		tipi = new CheckboxGroup();
		prima_scelta = new Checkbox[5]; // mi serve piu' lungo per l'aggiungi
		prima_scelta[0] = new Checkbox(""BAR"", tipi, false);
		prima_scelta[1] = new Checkbox(""RISTORANTE"", tipi, false);
		prima_scelta[2] = new Checkbox(""SERVIZI"", tipi, false);
		prima_scelta[3] = new Checkbox(""SUPPLEMENTI"", tipi, false);
		prima_scelta[4] = new Checkbox(""RIDUZIONI"", tipi, false);
		panel[0].add(label);
		panel[0].add(prima_scelta[0]);
		panel[0].add(prima_scelta[1]);
		panel[0].add(prima_scelta[2]);
		panel[0].setVisible(true);

		//Attacco il pannello in alto al frame
		this.setLayout(grid);
		this.add(panel[0]);

		//Creo il pannello del bar
		label1 = new Label(""Bar"");
		label1.setFont(ConfigurazioneSistema.font_titolo);
		bar = new CheckboxGroup();
		scelta_bar = new Checkbox[2];
		scelta_bar[0] = new Checkbox(""Bevande"", bar, false);
		scelta_bar[1] = new Checkbox(""Cibi"", bar, false);
		panel[1].add(label1);
		panel[1].add(scelta_bar[0]);
		panel[1].add(scelta_bar[1]);

		//Creo il pannello dal ristorante
		label2 = new Label(""Ristorante"");
		label2.setFont(ConfigurazioneSistema.font_titolo);
		ristorante = new CheckboxGroup();
		scelta_piatto = new Checkbox[6];
		scelta_piatto[0] = new Checkbox(""Antipasti"", ristorante, false);
		scelta_piatto[1] = new Checkbox(""Primi"", ristorante, false);
		scelta_piatto[2] = new Checkbox(""Secondi"", ristorante, false);
		scelta_piatto[3] = new Checkbox(""Contorni"", ristorante, false);
		scelta_piatto[4] = new Checkbox(""Dessert"", ristorante, false);
		scelta_piatto[5] = new Checkbox(""Frutta"", ristorante, false);
		panel[2].add(label2);
		panel[2].add(scelta_piatto[0]);
		panel[2].add(scelta_piatto[1]);
		panel[2].add(scelta_piatto[2]);
		panel[2].add(scelta_piatto[3]);
		panel[2].add(scelta_piatto[4]);
		panel[2].add(scelta_piatto[5]);
		label3 = new Label(""Servizi"");
		label3.setFont(ConfigurazioneSistema.font_titolo);
		servizi = new CheckboxGroup();
		scelta_servizio = new Checkbox[2];
		scelta_servizio[0] = new Checkbox(""Ricreativi"", servizi, false);
		scelta_servizio[1] = new Checkbox(""Altro"", servizi, false);
		panel[3].add(label3);
		panel[3].add(scelta_servizio[0]);
		panel[3].add(scelta_servizio[1]);
		label4 = new Label(""Bevande"");
		label4.setFont(ConfigurazioneSistema.font_titolo);
		bevande = new CheckboxGroup();
		scelta_bevanda = new Checkbox[3];
		scelta_bevanda[0] = new Checkbox(""Caffetteria"", bevande, false);
		scelta_bevanda[1] = new Checkbox(""Analcolici"", bevande, false);
		scelta_bevanda[2] = new Checkbox(""Alcolici"", bevande, false);
		panel[4].add(label4);
		panel[4].add(scelta_bevanda[0]);
		panel[4].add(scelta_bevanda[1]);
		panel[4].add(scelta_bevanda[2]);

		//Creo il pannello dei cibi
		label5 = new Label(""Cibi"");
		label5.setFont(ConfigurazioneSistema.font_titolo);
		cibi = new CheckboxGroup();
		scelta_cibo = new Checkbox[3];
		scelta_cibo[0] = new Checkbox(""Dolci"", cibi, false);
		scelta_cibo[1]= new Checkbox(""Salati"", cibi, false); 
		panel[5].add(label5);
		panel[5].add(scelta_cibo[0]);
		panel[5].add(scelta_cibo[1]);

		//Creo il pannello degli antipasti
		label6 = new Label(""Antipasti"");
		label6.setFont(ConfigurazioneSistema.font_titolo);
		antipasti = new CheckboxGroup();
		scelta_antipasto = new Checkbox[3];
		scelta_antipasto[0] = new Checkbox(""Freddi"", antipasti, false);
		scelta_antipasto[1] = new Checkbox(""Caldi"", antipasti, false); 
		panel[6].add(label6);
		panel[6].add(scelta_antipasto[0]);
		panel[6].add(scelta_antipasto[1]);

		//Creo il pannello dei primi
		label7=new Label(""Primi"");
		label7.setFont(ConfigurazioneSistema.font_titolo);
		primi=new CheckboxGroup();
		scelta_primo=new Checkbox[3];
		scelta_primo[0]=new Checkbox(""Solidi"",primi,false);
		scelta_primo[1]=new Checkbox(""Liquidi"",primi,false); 
		panel[7].add(label7);
		panel[7].add(scelta_primo[0]);
		panel[7].add(scelta_primo[1]);

		//Creo il pannello dei secondi
		label8=new Label(""Secondi"");
		label8.setFont(ConfigurazioneSistema.font_titolo);
		secondi=new CheckboxGroup();
		scelta_secondo=new Checkbox[3];
		scelta_secondo[0]=new Checkbox(""Carne"",secondi,false);
		scelta_secondo[1]=new Checkbox(""Pesce"",secondi,false); 
		panel[8].add(label8);
		panel[8].add(scelta_secondo[0]);
		panel[8].add(scelta_secondo[1]);

		//Creo il pannello dei contorni
		label9 = new Label(""Contorni"");
		label9.setFont(ConfigurazioneSistema.font_titolo);
		contorni = new CheckboxGroup();
		scelta_contorno = new Checkbox[3];
		scelta_contorno[0] = new Checkbox(""Verdura cotta"", contorni, false);
		scelta_contorno[1] = new Checkbox(""Verdura cruda"", contorni, false); 
		scelta_contorno[2] = new Checkbox(""Formaggio"", contorni, false);
		panel[9].add(label9);
		panel[9].add(scelta_contorno[0]);
		panel[9].add(scelta_contorno[1]);
		panel[9].add(scelta_contorno[2]);

		//Creo il pannello BAR-Bevande
		panel[10].setLayout(gridbag);
		label12 = new Label(""Nome del bene"");
		label13 = new Label(""Prezzo del bene ""+(Principale.config).getValuta()+""."");
		testo3 = new TextField("""",40);
		testo4 = new TextField("""",10);
		annulla = new Button(""Annulla"");
		conferma = new Button(""Conferma"");
		Utils.constrain(panel[10], label12, 0, 0, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[10], testo3, 1, 0, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[10], label13, 0, 1, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 5, 5, 5, 0);
		Utils.constrain(panel[10], testo4, 1, 1, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 0);
		Utils.constrain(panel[10], annulla, 1, 2, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.EAST, 1.0, 0.0, 5, 5, 0, 5);
		Utils.constrain(panel[10], conferma, 2, 2, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 0, 5);
	}
              
	public void init()
	{
		prima_scelta[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(prima_scelta[0].getState())
				{
					inComuneABC(scelta_bar, 1, BeneServizio.BAR);
				}
			}
		});

		prima_scelta[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(prima_scelta[1].getState())
				{
					inComuneABC(scelta_piatto, 2, BeneServizio.RISTORANTE);
				}
			}
		});

		prima_scelta[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(prima_scelta[2].getState())
				{
					inComuneABC(scelta_servizio, 3, BeneServizio.SERVIZI);
				}
			}
		});


		scelta_bar[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bar[0].getState())
				{
					inComuneGH(scelta_bevanda, 4, BeneServizio.BEVANDE);
				}
			}
		});

		scelta_bar[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bar[1].getState())
				{
					inComuneGH(scelta_cibo, 5, BeneServizio.CIBI);
				}
			}
		});

		scelta_piatto[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[0].getState())
				{
					inComuneILMN(scelta_antipasto, 6, BeneServizio.ANTIPASTI);
				}
			}
		});

		scelta_piatto[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[1].getState())
				{
					inComuneILMN(scelta_primo, 7, BeneServizio.PRIMI);
				}
			}
		});

		scelta_piatto[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[2].getState())
				{
					inComuneILMN(scelta_secondo, 8, BeneServizio.SECONDI);
				}
			}
		});
	
		scelta_piatto[3].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[3].getState())
				{
					inComuneILMN(scelta_contorno, 9, BeneServizio.CONTORNI);
				}
			}
		});

		annulla.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				padre.setEnabled(true);
			}
		});
	} // init

	void inComuneABC(Checkbox[] scelte, int numero_pannello, char c)
	{
		level = 0;
		for(int i=1;i<13;++i)
		{
			if(panel[i].isVisible())
				remove(panel[i]);
		}
		this.add(panel[numero_pannello]);
		panel[numero_pannello].setVisible(true);
		setVisible(true);
		codice = composeCode(level, c);
	}
	
	void inComuneGH(Checkbox[] scelte, int numero_pannello, char c)
	{
		level = 1;
		for(int i=2;i<13;++i)
		{
			if(panel[i].isVisible())
				remove(panel[i]);
		}
		this.add(panel[numero_pannello]);
		panel[numero_pannello].setVisible(true);
		setVisible(true);
		codice = composeCode(level, c);
	}
	
	void inComuneILMN(Checkbox[] scelte, int numero_pannello, char c)
	{
		level = 1;
		if (panel[1].isVisible())
			remove(panel[1]);
		for (int i = 3; i < 13; i++)
			if (panel[i].isVisible())
				remove(panel[i]);
		this.add(panel[numero_pannello]);
 		panel[numero_pannello].setVisible(true);
		setVisible(true);
		codice = composeCode(level, c);
	}
	
	boolean errore()
	{
		Frame msg;
		
		if ( !((testo3.getText()).length() < 33 ) )
		{
			msg = new MessageDialog(this, "" La descrizione del bene o servizio deve essere di al piu' 32 caratteri! "");
			return true;
		}
		if ( (testo3.getText()).equals("""") )
		{
			msg = new MessageDialog(this, "" Manca la descrizione del bene o servizio! "");
			return true;
		}
		if ( (testo4.getText()).equals("""") )
		{
			msg = new MessageDialog(this, "" Manca il prezzo del bene o servizio! "");
			return true;
		}
		if ( !(Utils.isFloatPos(testo4.getText())) )
		{
			msg = new MessageDialog(this, "" Il prezzo deve essere un numero positivo! "");
			return true;
		}
		return false;
	}
	
	char[] composeCode(int index, char tipo)
	{	
		codice[index] = tipo;
		for ( int i = index+1; i < 3; ++i)
			codice[i] = ' ';
		return codice;
	}		
		
	char[] completeCode()
	{
		if (codice[1] == ' ')
			codice[1] = '0'; 
		if (codice[2] == ' ')
			codice[2] = '0'; 
		return codice;
	}

	void o()
	{
		if (panel[10].isVisible()) // necessario nella finestra di modifica
			remove(panel[10]);
		if (panel[12].isVisible()) // necessario nella finestra di cancellazione
			remove(panel[12]);
		inComuneOP();
	}
   
	void p() // Frutta o dessert
	{
		if(panel[1].isVisible())
			remove(panel[1]);
		for(int i=3;i<13;++i)
		{
			if(panel[i].isVisible())
				remove(panel[i]);
		}
		inComuneOP();
	}

	void inComuneOP()
	{
		completeCode();
		if (elenco.getItemCount() > 0)  //per evitare warning
			elenco.removeAll();
		creaLista(); 
		this.add(panel[11]);
		panel[11].setVisible(true);
		setVisible(true);
	}
	
	void creaLista()
	{
		int i=1;
		BeneServizio b;		
		
		L = (Principale.db).elencoBeniServizi(new String(codice));
		if (L != null)
		{
			while (i <= L.length())
			{
				b = L.getBeneServizio(i);
				elenco.addItem(b.toString());
				i++;
			}
		}
	}
}"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'b', 'en', 'es', 'erv', 'iz', 'io', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ab', 'en', 'es', 'erv', 'iz', 'io', '▁ext', 'ends', '▁frame', '\n', '{', '\n\t', '//', 'd', 'ich', 'i', 'ar', 'az', 'ion', 'i', '▁di', '▁og', 'get', 'ti', '▁che', '▁c', 'i', '▁serv', 'ir', 'ann', 'o', '▁per', '▁defin', 'ire', '▁la', '▁fin', 'est', 'ra', '\n\t', 'pro', 't', 'ected', '▁label', '▁label', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '▁label', '6,', '▁label', '7,', '▁label', '8,', '\n\t\t', 'l', 'ab', 'el', '9,', '▁label', '1', '2,', '▁label', '13', ';', '\n\t', 'pro', 't', 'ected', '▁text', 'field', '▁test', 'o', '3,', '▁test', 'o', '4', ';', '\n\t', 'pro', 't', 'ected', '▁pan', 'el', '▁pan', 'el', '[', ']', ',', '▁but', 'ton', 's', ';', '\n\t', 'pro', 't', 'ected', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁con', 'fer', 'ma', ';', '\n\t', 'pro', 't', 'ected', '▁check', 'box', 'gro', 'up', '▁tip', 'i', ',', '▁bar', ',', '▁r', 'ist', 'or', 'ante', ',', '▁serv', 'iz', 'i', ',', '▁be', 'v', 'and', 'e', ',', '▁c', 'ib', 'i', ',', '▁ant', 'ip', 'ast', 'i', ',', '\n\t\t\t\t', 'pr', 'im', 'i', ',', '▁second', 'i', ',', '▁cont', 'orn', 'i', ';', '\n\t', 'pro', 't', 'ected', '▁check', 'box', '[', ']', '▁prim', 'a', '_', 'sc', 'el', 'ta', ',', '▁sc', 'el', 'ta', '_', 'bar', ',', '▁sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', ',', '▁sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', ',', '▁', '\n\t\t\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', ',', '▁sc', 'el', 'ta', '_', 'c', 'ib', 'o', ',', '▁sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', ',', '▁sc', 'el', 'ta', '_', 'pr', 'im', 'o', ',', '▁', '\n\t\t\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', ',', '\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', ';', '\n\t', 'pro', 't', 'ected', '▁gr', 'id', 'l', 'ay', 'out', '▁gr', 'id', '▁=', '▁new', '▁gr', 'id', 'l', 'ay', 'out', '(', '4,', '1)', ';', '\n\t', 'pro', 't', 'ected', '▁gr', 'id', 'l', 'ay', 'out', '▁gr', 'id', '1', '▁=', '▁new', '▁gr', 'id', 'l', 'ay', 'out', '(', '7,', '1)', ';', '\n\t', 'pro', 't', 'ected', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\n\t', '//', '▁i', '▁se', 'gu', 'ent', 'i', '▁due', '▁camp', 'i', '▁son', 'o', '▁cond', 'iv', 'is', 'i', '▁da', '▁canc', 'ell', 'az', 'ion', 'e', '▁e', '▁mod', 'ific', 'a', '\n\t', 'pro', 't', 'ected', '▁list', '▁el', 'en', 'co', '▁=', '▁new', '▁list', '(', '3,', '▁fal', 'se', ');', '▁', '\n\t', 'pro', 't', 'ected', '▁list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁l', ';', '\n\t\n\t', '//', '▁il', '▁se', 'gu', 'ent', 'e', '▁att', 'ribut', 'o', '▁e', ""'"", '▁necess', 'ario', '▁per', '▁la', '▁ger', 'arch', 'ia', '▁del', 'le', '▁fin', 'est', 're', '\n\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '\n\t\n\t', '//', '▁i', '▁se', 'gu', 'ent', 'i', '▁g', 'est', 'is', 'con', 'o', '▁la', '▁form', 'az', 'ion', 'e', '▁de', 'i', '▁prim', 'i', '▁tre', '▁car', 'at', 'ter', 'i', '▁del', '▁co', 'd', '_', 'ext', 'ra', '\n\t', 'int', '▁level', '▁=', '▁-', '1', ';', '\n\t', 'char', '▁co', 'd', 'ice', '[', ']', '▁=', '▁new', '▁char', '[', '3', ']', ';', '\n', '▁', '\t', '▁', '\t', '▁', '\n\t', 'publ', 'ic', '▁m', 'asc', 'her', 'ab', 'en', 'es', 'erv', 'iz', 'io', '(', 'str', 'ing', '▁title', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', 't', 'it', 'le', ');', '\n\t\t', 'set', 'up', '(', ');', '\n\t\t', 'in', 'it', '(', ');', '\n\t\t', 's', 'ets', 'ize', '(', '35', '0,', '6', '00', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁set', 'up', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n\t\t', 'el', 'en', 'co', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n\t\t', '//', 'c', 're', 'o', '▁i', '▁p', 'ann', 'elli', '\n\t\t', 'pan', 'el', '▁=', '▁new', '▁pan', 'el', '[', '13', ']', ';', '\n\t\t', 'for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', '10', ';', '+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'pan', 'el', '[', 'i', ']', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t\t', 'pan', 'el', '[', 'i', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', '1)', ';', '\n\t\t\t', 'pan', 'el', '[', 'i', ']', '.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t\t', '}', '\n\t\t', 'for', '(', 'int', '▁i', '=', '10', ';', '▁i', '<', '13', ';', '▁+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'pan', 'el', '[', 'i', ']', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t\t', 'pan', 'el', '[', 'i', ']', '.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t\t', '}', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '\n\t\t', 'l', 'ab', 'el', '▁=', '▁new', '▁label', '(', '""', 't', 'ip', 'i', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 't', 'ip', 'i', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '▁=', '▁new', '▁check', 'box', '[', '5', ']', ';', '▁/', '/', '▁mi', '▁serve', '▁p', 'i', 'u', ""'"", '▁l', 'ung', 'o', '▁per', '▁l', ""'"", 'ag', 'gi', 'ung', 'i', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'bar', '"",', '▁tip', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'rist', 'or', 'ante', '"",', '▁tip', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 's', 'erv', 'iz', 'i', '"",', '▁tip', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'sup', 'p', 'lement', 'i', '"",', '▁tip', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '4', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'rid', 'uz', 'ion', 'i', '"",', '▁tip', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\n\t\t', '//', 'att', 'ac', 'co', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '0', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁del', '▁bar', '\n\t\t', 'l', 'ab', 'el', '1', '▁=', '▁new', '▁label', '(', '""', 'bar', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'bar', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'be', 'v', 'and', 'e', '"",', '▁bar', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'c', 'ib', 'i', '"",', '▁bar', ',', '▁fal', 'se', ');', '\n\t\t', 'pan', 'el', '[', '1', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '1)', ';', '\n\t\t', 'pan', 'el', '[', '1', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'bar', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '1', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'bar', '[', '1', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁dal', '▁r', 'ist', 'or', 'ante', '\n\t\t', 'l', 'ab', 'el', '2', '▁=', '▁new', '▁label', '(', '""', 'rist', 'or', 'ante', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '2.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'rist', 'or', 'ante', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '▁=', '▁new', '▁check', 'box', '[', '6', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ant', 'ip', 'ast', 'i', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'pr', 'im', 'i', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'second', 'i', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'cont', 'orn', 'i', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'd', 'ess', 'ert', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'fr', 'ut', 'ta', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁fal', 'se', ');', '\n\t\t', 'pan', 'el', '[', '2', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '2)', ';', '\n\t\t', 'pan', 'el', '[', '2', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '1', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '2', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '3', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', ');', '\n\t\t', 'l', 'ab', 'el', '3', '▁=', '▁new', '▁label', '(', '""', 's', 'erv', 'iz', 'i', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 's', 'erv', 'iz', 'i', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ric', 'reat', 'iv', 'i', '"",', '▁serv', 'iz', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'al', 't', 'ro', '"",', '▁serv', 'iz', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'pan', 'el', '[', '3', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '3)', ';', '\n\t\t', 'pan', 'el', '[', '3', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '3', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', ');', '\n\t\t', 'l', 'ab', 'el', '4', '▁=', '▁new', '▁label', '(', '""', 'be', 'v', 'and', 'e', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '4.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'be', 'v', 'and', 'e', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'c', 'aff', 'et', 'ter', 'ia', '"",', '▁be', 'v', 'and', 'e', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'an', 'al', 'col', 'ici', '"",', '▁be', 'v', 'and', 'e', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'al', 'col', 'ici', '"",', '▁be', 'v', 'and', 'e', ',', '▁fal', 'se', ');', '\n\t\t', 'pan', 'el', '[', '4', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '4)', ';', '\n\t\t', 'pan', 'el', '[', '4', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '4', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', ');', '\n\t\t', 'pan', 'el', '[', '4', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁de', 'i', '▁c', 'ib', 'i', '\n\t\t', 'l', 'ab', 'el', '5', '▁=', '▁new', '▁label', '(', '""', 'c', 'ib', 'i', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '5.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'c', 'ib', 'i', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'd', 'ol', 'ci', '"",', '▁c', 'ib', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '=', '▁new', '▁check', 'box', '(', '""', 'sal', 'ati', '"",', '▁c', 'ib', 'i', ',', '▁fal', 'se', ');', '▁', '\n\t\t', 'pan', 'el', '[', '5', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '5)', ';', '\n\t\t', 'pan', 'el', '[', '5', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '5', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁deg', 'li', '▁ant', 'ip', 'ast', 'i', '\n\t\t', 'l', 'ab', 'el', '6', '▁=', '▁new', '▁label', '(', '""', 'ant', 'ip', 'ast', 'i', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '6.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'ant', 'ip', 'ast', 'i', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'f', 'red', 'di', '"",', '▁ant', 'ip', 'ast', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'c', 'ald', 'i', '"",', '▁ant', 'ip', 'ast', 'i', ',', '▁fal', 'se', ');', '▁', '\n\t\t', 'pan', 'el', '[', '6', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '6)', ';', '\n\t\t', 'pan', 'el', '[', '6', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '6', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁de', 'i', '▁prim', 'i', '\n\t\t', 'l', 'ab', 'el', '7', '=', 'new', '▁label', '(', '""', 'pr', 'im', 'i', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '7.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'pr', 'im', 'i', '=', 'new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '=', 'new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '=', 'new', '▁check', 'box', '(', '""', 's', 'ol', 'idi', '"",', 'pr', 'im', 'i', ',', 'f', 'al', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '=', 'new', '▁check', 'box', '(', '""', 'li', 'qu', 'idi', '"",', 'pr', 'im', 'i', ',', 'f', 'al', 'se', ');', '▁', '\n\t\t', 'pan', 'el', '[', '7', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '7)', ';', '\n\t\t', 'pan', 'el', '[', '7', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '7', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁de', 'i', '▁second', 'i', '\n\t\t', 'l', 'ab', 'el', '8', '=', 'new', '▁label', '(', '""', 'second', 'i', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '8.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'second', 'i', '=', 'new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '=', 'new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '=', 'new', '▁check', 'box', '(', '""', 'car', 'ne', '"",', 'second', 'i', ',', 'f', 'al', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '=', 'new', '▁check', 'box', '(', '""', 'p', 'es', 'ce', '"",', 'second', 'i', ',', 'f', 'al', 'se', ');', '▁', '\n\t\t', 'pan', 'el', '[', '8', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '8)', ';', '\n\t\t', 'pan', 'el', '[', '8', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '8', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁de', 'i', '▁cont', 'orn', 'i', '\n\t\t', 'l', 'ab', 'el', '9', '▁=', '▁new', '▁label', '(', '""', 'cont', 'orn', 'i', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '9.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'cont', 'orn', 'i', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ver', 'd', 'ura', '▁c', 'ott', 'a', '"",', '▁cont', 'orn', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ver', 'd', 'ura', '▁cr', 'uda', '"",', '▁cont', 'orn', 'i', ',', '▁fal', 'se', ');', '▁', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'form', 'ag', 'gio', '"",', '▁cont', 'orn', 'i', ',', '▁fal', 'se', ');', '\n\t\t', 'pan', 'el', '[', '9', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', '9)', ';', '\n\t\t', 'pan', 'el', '[', '9', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '9', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', ');', '\n\t\t', 'pan', 'el', '[', '9', ']', '.', 'ad', 'd', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁bar', '-', 'be', 'v', 'and', 'e', '\n\t\t', 'pan', 'el', '[', '10', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'l', 'ab', 'el', '12', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '▁del', '▁bene', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '13', '▁=', '▁new', '▁label', '(', '""', 'pre', 'z', 'zo', '▁del', '▁bene', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '"")', ';', '\n\t\t', 't', 'est', 'o', '3', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4', '0)', ';', '\n\t\t', 't', 'est', 'o', '4', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '0)', ';', '\n\t\t', 'ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', ']', ',', '▁label', '1', '2,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', ']', ',', '▁test', 'o', '3,', '▁1,', '▁', '0,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', ']', ',', '▁label', '1', '3,', '▁', '0,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', ']', ',', '▁test', 'o', '4,', '▁1,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', ']', ',', '▁ann', 'ull', 'a', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', ']', ',', '▁con', 'fer', 'ma', ',', '▁2,', '▁2,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t', '}', '\n', '▁', '\n\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n\t', '{', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'ab', 'c', '(', 'sc', 'el', 'ta', '_', 'bar', ',', '▁1,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'bar', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'ab', 'c', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', ',', '▁2,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'rist', 'or', 'ante', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'ab', 'c', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', ',', '▁3,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 's', 'erv', 'iz', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'bar', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'eg', 'h', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', ',', '▁4,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'be', 'v', 'and', 'e', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'bar', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'eg', 'h', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', ',', '▁5,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'ib', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'm', 'n', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', ',', '▁6,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ant', 'ip', 'ast', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'm', 'n', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', ',', '▁7,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'pr', 'im', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'm', 'n', '(', 'sc', 'el', 'ta', '_', 'second', 'o', ',', '▁8,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'second', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '3', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'm', 'n', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', ',', '▁9,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'cont', 'orn', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\n\t', 'v', 'oid', '▁inc', 'om', 'une', 'ab', 'c', '(', 'che', 'ck', 'box', '[', ']', '▁sc', 'el', 'te', ',', '▁int', '▁num', 'ero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁0', ';', '\n\t\t', 'for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '13', ';', '+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', 'n', 'um', 'ero', '_', 'p', 'ann', 'ello', ']', ');', '\n\t\t', 'pan', 'el', '[', 'n', 'um', 'ero', '_', 'p', 'ann', 'ello', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁inc', 'om', 'un', 'eg', 'h', '(', 'che', 'ck', 'box', '[', ']', '▁sc', 'el', 'te', ',', '▁int', '▁num', 'ero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁1', ';', '\n\t\t', 'for', '(', 'int', '▁i', '=', '2', ';', 'i', '<', '13', ';', '+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', 'n', 'um', 'ero', '_', 'p', 'ann', 'ello', ']', ');', '\n\t\t', 'pan', 'el', '[', 'n', 'um', 'ero', '_', 'p', 'ann', 'ello', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁inc', 'om', 'une', 'il', 'm', 'n', '(', 'che', 'ck', 'box', '[', ']', '▁sc', 'el', 'te', ',', '▁int', '▁num', 'ero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁1', ';', '\n\t\t', 'if', '▁(', 'pan', 'el', '[', '1', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '1', ']', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁3', ';', '▁i', '▁', '<', '▁13', ';', '▁i', '+', '+', ')', '\n\t\t\t', 'if', '▁(', 'pan', 'el', '[', 'i', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', 'n', 'um', 'ero', '_', 'p', 'ann', 'ello', ']', ');', '\n', '▁', '\t\t', 'pan', 'el', '[', 'n', 'um', 'ero', '_', 'p', 'ann', 'ello', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'bo', 'ole', 'an', '▁er', 'r', 'ore', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁desc', 'ri', 'z', 'ion', 'e', '▁del', '▁bene', '▁o', '▁serv', 'iz', 'io', '▁de', 've', '▁ess', 'ere', '▁di', '▁al', '▁p', 'i', 'u', ""'"", '▁32', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁desc', 'ri', 'z', 'ion', 'e', '▁del', '▁bene', '▁o', '▁serv', 'iz', 'io', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '4.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁pre', 'z', 'zo', '▁del', '▁bene', '▁o', '▁serv', 'iz', 'io', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 't', 'est', 'o', '4.', 'get', 'text', '(', ')', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁pre', 'z', 'zo', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'iv', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n\t\n\t', 'char', '[', ']', '▁compos', 'ec', 'ode', '(', 'int', '▁index', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\t\n\t\t', 'c', 'od', 'ice', '[', 'ind', 'ex', ']', '▁=', '▁tip', 'o', ';', '\n\t\t', 'for', '▁(', '▁int', '▁i', '▁=', '▁index', '+', '1', ';', '▁i', '▁', '<', '▁3', ';', '▁+', '+', 'i', ')', '\n\t\t\t', 'c', 'od', 'ice', '[', 'i', ']', '▁=', ""▁'"", ""▁'"", ';', '\n\t\t', 'ret', 'urn', '▁co', 'd', 'ice', ';', '\n\t', '}', '\t\t\n\t\t\n\t', 'char', '[', ']', '▁complet', 'ec', 'ode', '(', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', 'c', 'od', 'ice', '[', '1', ']', '▁=', '=', ""▁'"", ""▁'"", ')', '\n\t\t\t', 'c', 'od', 'ice', '[', '1', ']', '▁=', ""▁'"", '0', ""'"", ';', '▁', '\n\t\t', 'if', '▁(', 'c', 'od', 'ice', '[', '2', ']', '▁=', '=', ""▁'"", ""▁'"", ')', '\n\t\t\t', 'c', 'od', 'ice', '[', '2', ']', '▁=', ""▁'"", '0', ""'"", ';', '▁', '\n\t\t', 'ret', 'urn', '▁co', 'd', 'ice', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁o', '(', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', 'pan', 'el', '[', '10', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '▁/', '/', '▁necess', 'ario', '▁n', 'ella', '▁fin', 'est', 'ra', '▁di', '▁mod', 'ific', 'a', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '10', ']', ');', '\n\t\t', 'if', '▁(', 'pan', 'el', '[', '12', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '▁/', '/', '▁necess', 'ario', '▁n', 'ella', '▁fin', 'est', 'ra', '▁di', '▁canc', 'ell', 'az', 'ion', 'e', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'in', 'com', 'une', 'op', '(', ');', '\n\t', '}', '\n', '▁', '\n\t', 'v', 'oid', '▁p', '(', ')', '▁/', '/', '▁fr', 'ut', 'ta', '▁o', '▁d', 'ess', 'ert', '\n\t', '{', '\n\t\t', 'if', '(', 'pan', 'el', '[', '1', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '1', ']', ');', '\n\t\t', 'for', '(', 'int', '▁i', '=', '3', ';', 'i', '<', '13', ';', '+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'in', 'com', 'une', 'op', '(', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁inc', 'om', 'une', 'op', '(', ')', '\n\t', '{', '\n\t\t', 'com', 'p', 'let', 'ec', 'ode', '(', ');', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '▁/', '/', 'per', '▁ev', 'it', 'are', '▁war', 'ning', '\n\t\t\t', 'el', 'en', 'co', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t', 'c', 'real', 'ista', '(', ');', '▁', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'pan', 'el', '[', '11', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁cre', 'al', 'ista', '(', ')', '\n\t', '{', '\n\t\t', 'int', '▁i', '=', '1', ';', '\n\t\t', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁b', ';', '\t\t\n\t\t\n\t\t', 'l', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'en', 'co', 'b', 'en', 'is', 'erv', 'iz', 'i', '(', 'new', '▁string', '(', 'c', 'od', 'ice', ')', ');', '\n\t\t', 'if', '▁(', 'l', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'while', '▁(', 'i', '▁', '<', '=', '▁l', '.', 'l', 'ength', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'b', '▁=', '▁l', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'i', ');', '\n\t\t\t\t', 'el', 'en', 'co', '.', 'ad', 'd', 'it', 'em', '(', 'b', '.', 't', 'ost', 'ring', '(', ')', ');', '\n\t\t\t\t', 'i', '+', '+', ';', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '▁extends', '▁frame', '\n', '{', '\n\t', '//', 'd', 'ichi', 'ar', 'az', 'ioni', '▁di', '▁og', 'get', 'ti', '▁che', '▁ci', '▁serv', 'ir', 'ann', 'o', '▁per', '▁defin', 'ire', '▁la', '▁finest', 'ra', '\n\t', 'protected', '▁label', '▁label', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '▁label', '6,', '▁label', '7,', '▁label', '8,', '\n\t\t', 'l', 'abel', '9,', '▁label', '1', '2,', '▁label', '13', ';', '\n\t', 'protected', '▁text', 'field', '▁test', 'o', '3,', '▁test', 'o', '4', ';', '\n\t', 'protected', '▁panel', '▁panel', '[', '],', '▁buttons', ';', '\n\t', 'protected', '▁button', '▁ann', 'ulla', ',', '▁con', 'fer', 'ma', ';', '\n\t', 'protected', '▁check', 'box', 'group', '▁tip', 'i', ',', '▁bar', ',', '▁r', 'ist', 'or', 'ante', ',', '▁serv', 'iz', 'i', ',', '▁be', 'v', 'ande', ',', '▁c', 'ibi', ',', '▁antip', 'ast', 'i', ',', '\n\t\t\t\t', 'pr', 'imi', ',', '▁second', 'i', ',', '▁cont', 'orn', 'i', ';', '\n\t', 'protected', '▁check', 'box', '[]', '▁prima', '_', 'sc', 'el', 'ta', ',', '▁sc', 'el', 'ta', '_', 'bar', ',', '▁sc', 'el', 'ta', '_', 'pi', 'att', 'o', ',', '▁sc', 'el', 'ta', '_', 'serv', 'izio', ',', '▁', '\n\t\t\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', ',', '▁sc', 'el', 'ta', '_', 'c', 'ibo', ',', '▁sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', ',', '▁sc', 'el', 'ta', '_', 'pr', 'imo', ',', '▁', '\n\t\t\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', ',', '\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', ';', '\n\t', 'protected', '▁grid', 'lay', 'out', '▁grid', '▁=', '▁new', '▁grid', 'lay', 'out', '(', '4,', '1)', ';', '\n\t', 'protected', '▁grid', 'lay', 'out', '▁grid', '1', '▁=', '▁new', '▁grid', 'lay', 'out', '(', '7,', '1)', ';', '\n\t', 'protected', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\n\t', '//', '▁i', '▁se', 'gu', 'ent', 'i', '▁due', '▁camp', 'i', '▁son', 'o', '▁cond', 'iv', 'isi', '▁da', '▁canc', 'ell', 'azione', '▁e', '▁mod', 'ific', 'a', '\n\t', 'protected', '▁list', '▁el', 'en', 'co', '▁=', '▁new', '▁list', '(', '3,', '▁false', ');', '▁', '\n\t', 'protected', '▁list', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁l', ';', '\n\t\n\t', '//', '▁il', '▁se', 'gu', 'ente', '▁attribut', 'o', '▁e', ""'"", '▁necess', 'ario', '▁per', '▁la', '▁ger', 'arch', 'ia', '▁delle', '▁finest', 're', '\n\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '\n\t\n\t', '//', '▁i', '▁se', 'gu', 'ent', 'i', '▁gest', 'is', 'con', 'o', '▁la', '▁form', 'azione', '▁dei', '▁prim', 'i', '▁tre', '▁car', 'atter', 'i', '▁del', '▁cod', '_', 'ext', 'ra', '\n\t', 'int', '▁level', '▁=', '▁-', '1', ';', '\n\t', 'char', '▁cod', 'ice', '[]', '▁=', '▁new', '▁char', '[', '3', ']', ';', '\n', '▁', '\t', '▁', '\t', '▁', '\n\t', 'public', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '(', 'string', '▁title', ')', '\n\t', '{', '\n\t\t', 'super', '(', 'title', ');', '\n\t\t', 'set', 'up', '();', '\n\t\t', 'init', '();', '\n\t\t', 's', 'ets', 'ize', '(', '35', '0,', '600', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁setup', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n\t\t', 'el', 'en', 'co', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\t\t', '//', 'cre', 'o', '▁i', '▁pann', 'elli', '\n\t\t', 'pan', 'el', '▁=', '▁new', '▁panel', '[', '13', ']', ';', '\n\t\t', 'for', '(', 'int', '▁i', '=0', ';', 'i', '<', '10', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'pan', 'el', '[', 'i', ']', '▁=', '▁new', '▁panel', '();', '\n\t\t\t', 'pan', 'el', '[', 'i', '].', 'set', 'lay', 'out', '(', 'grid', '1)', ';', '\n\t\t\t', 'pan', 'el', '[', 'i', '].', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t\t', '}', '\n\t\t', 'for', '(', 'int', '▁i', '=', '10', ';', '▁i', '<', '13', ';', '▁+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'pan', 'el', '[', 'i', ']', '▁=', '▁new', '▁panel', '();', '\n\t\t\t', 'pan', 'el', '[', 'i', '].', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t\t', '}', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '\n\t\t', 'l', 'abel', '▁=', '▁new', '▁label', '(""', 'tip', 'i', '"");', '\n\t\t', 'l', 'abel', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'tip', 'i', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '▁=', '▁new', '▁check', 'box', '[', '5', ']', ';', '▁//', '▁mi', '▁serve', '▁pi', 'u', ""'"", '▁lung', 'o', '▁per', '▁l', ""'"", 'aggi', 'ung', 'i', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'bar', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'rist', 'or', 'ante', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', 'serv', 'iz', 'i', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', 'sup', 'p', 'lement', 'i', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '4', ']', '▁=', '▁new', '▁check', 'box', '(""', 'rid', 'uz', 'ioni', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'l', 'abel', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1]', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\n\t\t', '//', 'att', 'acco', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'lay', 'out', '(', 'grid', ');', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '0', ']', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁del', '▁bar', '\n\t\t', 'l', 'abel', '1', '▁=', '▁new', '▁label', '(""', 'bar', '"");', '\n\t\t', 'l', 'abel', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'bar', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'be', 'v', 'ande', '"",', '▁bar', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'c', 'ibi', '"",', '▁bar', ',', '▁false', ');', '\n\t\t', 'pan', 'el', '[', '1', '].', 'add', '(', 'l', 'abel', '1)', ';', '\n\t\t', 'pan', 'el', '[', '1', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'bar', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '1', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'bar', '[', '1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dal', '▁r', 'ist', 'or', 'ante', '\n\t\t', 'l', 'abel', '2', '▁=', '▁new', '▁label', '(""', 'rist', 'or', 'ante', '"");', '\n\t\t', 'l', 'abel', '2.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'rist', 'or', 'ante', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '▁=', '▁new', '▁check', 'box', '[', '6', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'ant', 'ip', 'ast', 'i', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'pr', 'imi', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', 'second', 'i', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', 'cont', 'orn', 'i', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', ']', '▁=', '▁new', '▁check', 'box', '(""', 'd', 'ess', 'ert', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', ']', '▁=', '▁new', '▁check', 'box', '(""', 'fr', 'utta', '"",', '▁r', 'ist', 'or', 'ante', ',', '▁false', ');', '\n\t\t', 'pan', 'el', '[', '2', '].', 'add', '(', 'l', 'abel', '2)', ';', '\n\t\t', 'pan', 'el', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '1]', ');', '\n\t\t', 'pan', 'el', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '2', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '3', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', ']', ');', '\n\t\t', 'pan', 'el', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', ']', ');', '\n\t\t', 'l', 'abel', '3', '▁=', '▁new', '▁label', '(""', 'serv', 'iz', 'i', '"");', '\n\t\t', 'l', 'abel', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'serv', 'iz', 'i', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'reat', 'iv', 'i', '"",', '▁serv', 'iz', 'i', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'alt', 'ro', '"",', '▁serv', 'iz', 'i', ',', '▁false', ');', '\n\t\t', 'pan', 'el', '[', '3', '].', 'add', '(', 'l', 'abel', '3)', ';', '\n\t\t', 'pan', 'el', '[', '3', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '3', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1]', ');', '\n\t\t', 'l', 'abel', '4', '▁=', '▁new', '▁label', '(""', 'be', 'v', 'ande', '"");', '\n\t\t', 'l', 'abel', '4.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'be', 'v', 'ande', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'c', 'aff', 'etter', 'ia', '"",', '▁be', 'v', 'ande', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'an', 'al', 'col', 'ici', '"",', '▁be', 'v', 'ande', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', 'al', 'col', 'ici', '"",', '▁be', 'v', 'ande', ',', '▁false', ');', '\n\t\t', 'pan', 'el', '[', '4', '].', 'add', '(', 'l', 'abel', '4)', ';', '\n\t\t', 'pan', 'el', '[', '4', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '4', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1]', ');', '\n\t\t', 'pan', 'el', '[', '4', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁c', 'ibi', '\n\t\t', 'l', 'abel', '5', '▁=', '▁new', '▁label', '(""', 'c', 'ibi', '"");', '\n\t\t', 'l', 'abel', '5.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'c', 'ibi', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'd', 'ol', 'ci', '"",', '▁c', 'ibi', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1]', '=', '▁new', '▁check', 'box', '(""', 'sal', 'ati', '"",', '▁c', 'ibi', ',', '▁false', ');', '▁', '\n\t\t', 'pan', 'el', '[', '5', '].', 'add', '(', 'l', 'abel', '5)', ';', '\n\t\t', 'pan', 'el', '[', '5', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '5', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁deg', 'li', '▁antip', 'ast', 'i', '\n\t\t', 'l', 'abel', '6', '▁=', '▁new', '▁label', '(""', 'ant', 'ip', 'ast', 'i', '"");', '\n\t\t', 'l', 'abel', '6.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'ant', 'ip', 'ast', 'i', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'fred', 'di', '"",', '▁antip', 'ast', 'i', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'c', 'aldi', '"",', '▁antip', 'ast', 'i', ',', '▁false', ');', '▁', '\n\t\t', 'pan', 'el', '[', '6', '].', 'add', '(', 'l', 'abel', '6)', ';', '\n\t\t', 'pan', 'el', '[', '6', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '6', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁prim', 'i', '\n\t\t', 'l', 'abel', '7', '=', 'new', '▁label', '(""', 'pr', 'imi', '"");', '\n\t\t', 'l', 'abel', '7.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'pr', 'imi', '=', 'new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '=', 'new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', ']', '=', 'new', '▁check', 'box', '(""', 'sol', 'idi', '"",', 'pr', 'imi', ',', 'false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1]', '=', 'new', '▁check', 'box', '(""', 'li', 'qu', 'idi', '"",', 'pr', 'imi', ',', 'false', ');', '▁', '\n\t\t', 'pan', 'el', '[', '7', '].', 'add', '(', 'l', 'abel', '7)', ';', '\n\t\t', 'pan', 'el', '[', '7', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '7', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁second', 'i', '\n\t\t', 'l', 'abel', '8', '=', 'new', '▁label', '(""', 'second', 'i', '"");', '\n\t\t', 'l', 'abel', '8.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'second', 'i', '=', 'new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '=', 'new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '=', 'new', '▁check', 'box', '(""', 'car', 'ne', '"",', 'second', 'i', ',', 'false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1]', '=', 'new', '▁check', 'box', '(""', 'pes', 'ce', '"",', 'second', 'i', ',', 'false', ');', '▁', '\n\t\t', 'pan', 'el', '[', '8', '].', 'add', '(', 'l', 'abel', '8)', ';', '\n\t\t', 'pan', 'el', '[', '8', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '8', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁cont', 'orn', 'i', '\n\t\t', 'l', 'abel', '9', '▁=', '▁new', '▁label', '(""', 'cont', 'orn', 'i', '"");', '\n\t\t', 'l', 'abel', '9.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'cont', 'orn', 'i', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '▁=', '▁new', '▁check', 'box', '[', '3', ']', ';', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'ver', 'd', 'ura', '▁cott', 'a', '"",', '▁cont', 'orn', 'i', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'ver', 'd', 'ura', '▁cr', 'uda', '"",', '▁cont', 'orn', 'i', ',', '▁false', ');', '▁', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', 'form', 'aggio', '"",', '▁cont', 'orn', 'i', ',', '▁false', ');', '\n\t\t', 'pan', 'el', '[', '9', '].', 'add', '(', 'l', 'abel', '9)', ';', '\n\t\t', 'pan', 'el', '[', '9', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '9', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1]', ');', '\n\t\t', 'pan', 'el', '[', '9', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', ']', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁bar', '-', 'be', 'v', 'ande', '\n\t\t', 'pan', 'el', '[', '10', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'l', 'abel', '12', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁del', '▁bene', '"");', '\n\t\t', 'l', 'abel', '13', '▁=', '▁new', '▁label', '(""', 'pre', 'z', 'zo', '▁del', '▁bene', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n\t\t', 'test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4', '0)', ';', '\n\t\t', 'test', 'o', '4', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n\t\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', '],', '▁label', '1', '2,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', '],', '▁test', 'o', '3,', '▁1,', '▁', '0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', '],', '▁label', '1', '3,', '▁', '0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', '],', '▁test', 'o', '4,', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', '],', '▁ann', 'ulla', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '10', '],', '▁con', 'fer', 'ma', ',', '▁2,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t', '}', '\n', '▁', '\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'abc', '(', 'sc', 'el', 'ta', '_', 'bar', ',', '▁1,', '▁ben', 'es', 'erv', 'izio', '.', 'bar', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'abc', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', ',', '▁2,', '▁ben', 'es', 'erv', 'izio', '.', 'rist', 'or', 'ante', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'abc', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', ',', '▁3,', '▁ben', 'es', 'erv', 'izio', '.', 'serv', 'iz', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'bar', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'eg', 'h', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', ',', '▁4,', '▁ben', 'es', 'erv', 'izio', '.', 'be', 'v', 'ande', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'bar', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'eg', 'h', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', ',', '▁5,', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'ibi', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'mn', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', ',', '▁6,', '▁ben', 'es', 'erv', 'izio', '.', 'ant', 'ip', 'ast', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'mn', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', ',', '▁7,', '▁ben', 'es', 'erv', 'izio', '.', 'pr', 'imi', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'mn', '(', 'sc', 'el', 'ta', '_', 'second', 'o', ',', '▁8,', '▁ben', 'es', 'erv', 'izio', '.', 'second', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '3', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'mn', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', ',', '▁9,', '▁ben', 'es', 'erv', 'izio', '.', 'cont', 'orn', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'v', 'oid', '▁incom', 'une', 'abc', '(', 'check', 'box', '[]', '▁sc', 'el', 'te', ',', '▁int', '▁num', 'ero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁0', ';', '\n\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', ']', ');', '\n\t\t', 'pan', 'el', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁incom', 'un', 'eg', 'h', '(', 'check', 'box', '[]', '▁sc', 'el', 'te', ',', '▁int', '▁num', 'ero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁1', ';', '\n\t\t', 'for', '(', 'int', '▁i', '=2', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', ']', ');', '\n\t\t', 'pan', 'el', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁incom', 'une', 'il', 'mn', '(', 'check', 'box', '[]', '▁sc', 'el', 'te', ',', '▁int', '▁num', 'ero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁1', ';', '\n\t\t', 'if', '▁(', 'pan', 'el', '[', '1', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '1]', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁3', ';', '▁i', '▁<', '▁13', ';', '▁i', '++', ')', '\n\t\t\t', 'if', '▁(', 'pan', 'el', '[', 'i', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', ']', ');', '\n', '▁', '\t\t', 'pan', 'el', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'bo', 'olean', '▁err', 'ore', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '3.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁desc', 'riz', 'ione', '▁del', '▁bene', '▁o', '▁serv', 'izio', '▁de', 've', '▁ess', 'ere', '▁di', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', 'test', 'o', '3.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁desc', 'riz', 'ione', '▁del', '▁bene', '▁o', '▁serv', 'izio', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', 'test', 'o', '4.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁pre', 'z', 'zo', '▁del', '▁bene', '▁o', '▁serv', 'izio', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'test', 'o', '4.', 'get', 'text', '()', '))', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁pre', 'z', 'zo', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\t\n\t', 'char', '[]', '▁compos', 'ec', 'ode', '(', 'int', '▁index', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\t\n\t\t', 'c', 'od', 'ice', '[', 'index', ']', '▁=', '▁tip', 'o', ';', '\n\t\t', 'for', '▁(', '▁int', '▁i', '▁=', '▁index', '+', '1', ';', '▁i', '▁<', '▁3', ';', '▁+', '+', 'i', ')', '\n\t\t\t', 'c', 'od', 'ice', '[', 'i', ']', '▁=', ""▁'"", ""▁'"", ';', '\n\t\t', 'return', '▁cod', 'ice', ';', '\n\t', '}', '\t\t\n\t\t\n\t', 'char', '[]', '▁complet', 'ec', 'ode', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'c', 'od', 'ice', '[', '1]', '▁==', ""▁'"", ""▁'"", ')', '\n\t\t\t', 'c', 'od', 'ice', '[', '1]', '▁=', ""▁'"", '0', ""';"", '▁', '\n\t\t', 'if', '▁(', 'c', 'od', 'ice', '[', '2', ']', '▁==', ""▁'"", ""▁'"", ')', '\n\t\t\t', 'c', 'od', 'ice', '[', '2', ']', '▁=', ""▁'"", '0', ""';"", '▁', '\n\t\t', 'return', '▁cod', 'ice', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁o', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'pan', 'el', '[', '10', '].', 'is', 'vis', 'ible', '())', '▁//', '▁necess', 'ario', '▁n', 'ella', '▁finest', 'ra', '▁di', '▁mod', 'ific', 'a', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '10', ']', ');', '\n\t\t', 'if', '▁(', 'pan', 'el', '[', '12', '].', 'is', 'vis', 'ible', '())', '▁//', '▁necess', 'ario', '▁n', 'ella', '▁finest', 'ra', '▁di', '▁canc', 'ell', 'azione', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'in', 'com', 'une', 'op', '();', '\n\t', '}', '\n', '▁', '\n\t', 'v', 'oid', '▁p', '()', '▁//', '▁fr', 'utta', '▁o', '▁dess', 'ert', '\n\t', '{', '\n\t\t', 'if', '(', 'pan', 'el', '[', '1', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '1]', ');', '\n\t\t', 'for', '(', 'int', '▁i', '=3', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'in', 'com', 'une', 'op', '();', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁incom', 'une', 'op', '()', '\n\t', '{', '\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '▁//', 'per', '▁ev', 'it', 'are', '▁warning', '\n\t\t\t', 'el', 'en', 'co', '.', 'rem', 'ove', 'all', '();', '\n\t\t', 'c', 'real', 'ista', '();', '▁', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'pan', 'el', '[', '11', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'int', '▁i', '=1', ';', '\n\t\t', 'ben', 'es', 'erv', 'izio', '▁b', ';', '\t\t\n\t\t\n\t\t', 'l', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'en', 'co', 'ben', 'is', 'erv', 'iz', 'i', '(', 'new', '▁string', '(', 'c', 'od', 'ice', ')', ');', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'while', '▁(', 'i', '▁<', '=', '▁l', '.', 'length', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'b', '▁=', '▁l', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ');', '\n\t\t\t\t', 'el', 'en', 'co', '.', 'add', 'it', 'em', '(', 'b', '.', 't', 'ost', 'ring', '());', '\n\t\t\t\t', 'i', '++', ';', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'import', '▁mod', 'uli', '.', 'list', 'ab', 'enis', 'erv', 'izi', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '▁extends', '▁frame', '\n', '{', '\n\t', '//', 'd', 'ichi', 'ar', 'azioni', '▁di', '▁og', 'get', 'ti', '▁che', '▁ci', '▁serv', 'ir', 'anno', '▁per', '▁defin', 'ire', '▁la', '▁finest', 'ra', '\n\t', 'protected', '▁label', '▁label', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '▁label', '6,', '▁label', '7,', '▁label', '8,', '\n\t\t', 'label', '9,', '▁label', '12,', '▁label', '13', ';', '\n\t', 'protected', '▁text', 'field', '▁testo', '3,', '▁testo', '4;', '\n\t', 'protected', '▁panel', '▁panel', '[', '],', '▁buttons', ';', '\n\t', 'protected', '▁button', '▁ann', 'ulla', ',', '▁confer', 'ma', ';', '\n\t', 'protected', '▁check', 'box', 'group', '▁tip', 'i', ',', '▁bar', ',', '▁r', 'istor', 'ante', ',', '▁serv', 'izi', ',', '▁bev', 'ande', ',', '▁c', 'ibi', ',', '▁antip', 'asti', ',', '\n\t\t\t\t', 'pr', 'imi', ',', '▁second', 'i', ',', '▁cont', 'orn', 'i', ';', '\n\t', 'protected', '▁check', 'box', '[]', '▁prima', '_', 'sc', 'el', 'ta', ',', '▁scel', 'ta', '_', 'bar', ',', '▁scel', 'ta', '_', 'pi', 'atto', ',', '▁scel', 'ta', '_', 'serv', 'izio', ',', '▁', '\n\t\t\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', ',', '▁scel', 'ta', '_', 'c', 'ibo', ',', '▁scel', 'ta', '_', 'ant', 'ip', 'asto', ',', '▁scel', 'ta', '_', 'pr', 'imo', ',', '▁', '\n\t\t\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', ',', '\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', ';', '\n\t', 'protected', '▁grid', 'layout', '▁grid', '▁=', '▁new', '▁grid', 'layout', '(', '4,', '1);', '\n\t', 'protected', '▁grid', 'layout', '▁grid', '1', '▁=', '▁new', '▁grid', 'layout', '(', '7,', '1);', '\n\t', 'protected', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\n\t', '//', '▁i', '▁segu', 'enti', '▁due', '▁camp', 'i', '▁sono', '▁cond', 'iv', 'isi', '▁da', '▁canc', 'ell', 'azione', '▁e', '▁mod', 'ific', 'a', '\n\t', 'protected', '▁list', '▁elenco', '▁=', '▁new', '▁list', '(3,', '▁false', ');', '▁', '\n\t', 'protected', '▁list', 'ab', 'enis', 'erv', 'izi', '▁l', ';', '\n\t\n\t', '//', '▁il', '▁segu', 'ente', '▁attribut', 'o', '▁e', ""'"", '▁necess', 'ario', '▁per', '▁la', '▁ger', 'arch', 'ia', '▁delle', '▁finest', 're', '\n\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '\n\t\n\t', '//', '▁i', '▁segu', 'enti', '▁gest', 'is', 'con', 'o', '▁la', '▁form', 'azione', '▁dei', '▁prim', 'i', '▁tre', '▁car', 'atter', 'i', '▁del', '▁cod', '_', 'extra', '\n\t', 'int', '▁level', '▁=', '▁-', '1;', '\n\t', 'char', '▁codice', '[]', '▁=', '▁new', '▁char', '[', '3', '];', '\n', '▁', '\t', '▁', '\t', '▁', '\n\t', 'public', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '(', 'string', '▁title', ')', '\n\t', '{', '\n\t\t', 'super', '(', 'title', ');', '\n\t\t', 'set', 'up', '();', '\n\t\t', 'init', '();', '\n\t\t', 'sets', 'ize', '(', '35', '0,', '600', ');', '\n\t', '}', '\n\n\t', 'void', '▁setup', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n\t\t', 'elen', 'co', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\t\t', '//', 'cre', 'o', '▁i', '▁pann', 'elli', '\n\t\t', 'panel', '▁=', '▁new', '▁panel', '[', '13', '];', '\n\t\t', 'for', '(', 'int', '▁i', '=0;', 'i', '<', '10;', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'panel', '[', 'i', ']', '▁=', '▁new', '▁panel', '();', '\n\t\t\t', 'panel', '[', 'i', '].', 'set', 'layout', '(', 'grid', '1);', '\n\t\t\t', 'panel', '[', 'i', '].', 'set', 'visible', '(', 'false', ');', '\n\t\t', '}', '\n\t\t', 'for', '(', 'int', '▁i', '=10', ';', '▁i', '<', '13', ';', '▁+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'panel', '[', 'i', ']', '▁=', '▁new', '▁panel', '();', '\n\t\t\t', 'panel', '[', 'i', '].', 'set', 'visible', '(', 'false', ');', '\n\t\t', '}', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '\n\t\t', 'label', '▁=', '▁new', '▁label', '(""', 'tip', 'i', '"");', '\n\t\t', 'label', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'tip', 'i', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '▁=', '▁new', '▁check', 'box', '[', '5', '];', '▁//', '▁mi', '▁serve', '▁pi', 'u', ""'"", '▁lung', 'o', '▁per', '▁l', ""'"", 'aggi', 'ungi', '\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'bar', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'rist', 'or', 'ante', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', 'serv', 'izi', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', 'supplement', 'i', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[', '4]', '▁=', '▁new', '▁check', 'box', '(""', 'rid', 'uzioni', '"",', '▁tip', 'i', ',', '▁false', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'label', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'prima', '_', 'sc', 'el', 'ta', '[0]', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'prima', '_', 'sc', 'el', 'ta', '[1]', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'prima', '_', 'sc', 'el', 'ta', '[', '2]', ');', '\n\t\t', 'panel', '[0', '].', 'set', 'visible', '(', 'true', ');', '\n\n\t\t', '//', 'att', 'acco', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'layout', '(', 'grid', ');', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[0]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁del', '▁bar', '\n\t\t', 'label', '1', '▁=', '▁new', '▁label', '(""', 'bar', '"");', '\n\t\t', 'label', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'bar', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '▁=', '▁new', '▁check', 'box', '[', '2', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'be', 'v', 'ande', '"",', '▁bar', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'c', 'ibi', '"",', '▁bar', ',', '▁false', ');', '\n\t\t', 'panel', '[1', '].', 'add', '(', 'label', '1);', '\n\t\t', 'panel', '[1', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'bar', '[0]', ');', '\n\t\t', 'panel', '[1', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'bar', '[1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dal', '▁r', 'istor', 'ante', '\n\t\t', 'label', '2', '▁=', '▁new', '▁label', '(""', 'rist', 'or', 'ante', '"");', '\n\t\t', 'label', '2.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'rist', 'or', 'ante', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '▁=', '▁new', '▁check', 'box', '[', '6', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'ant', 'ip', 'asti', '"",', '▁r', 'istor', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'pr', 'imi', '"",', '▁r', 'istor', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', 'second', 'i', '"",', '▁r', 'istor', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', 'cont', 'orn', 'i', '"",', '▁r', 'istor', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4]', '▁=', '▁new', '▁check', 'box', '(""', 'dess', 'ert', '"",', '▁r', 'istor', 'ante', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5]', '▁=', '▁new', '▁check', 'box', '(""', 'fr', 'utta', '"",', '▁r', 'istor', 'ante', ',', '▁false', ');', '\n\t\t', 'panel', '[', '2', '].', 'add', '(', 'label', '2);', '\n\t\t', 'panel', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[0]', ');', '\n\t\t', 'panel', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[1]', ');', '\n\t\t', 'panel', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '2]', ');', '\n\t\t', 'panel', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '3]', ');', '\n\t\t', 'panel', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4]', ');', '\n\t\t', 'panel', '[', '2', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5]', ');', '\n\t\t', 'label', '3', '▁=', '▁new', '▁label', '(""', 'serv', 'izi', '"");', '\n\t\t', 'label', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'serv', 'izi', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '▁=', '▁new', '▁check', 'box', '[', '2', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'reat', 'ivi', '"",', '▁serv', 'izi', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'alt', 'ro', '"",', '▁serv', 'izi', ',', '▁false', ');', '\n\t\t', 'panel', '[', '3', '].', 'add', '(', 'label', '3);', '\n\t\t', 'panel', '[', '3', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0]', ');', '\n\t\t', 'panel', '[', '3', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1]', ');', '\n\t\t', 'label', '4', '▁=', '▁new', '▁label', '(""', 'be', 'v', 'ande', '"");', '\n\t\t', 'label', '4.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'be', 'v', 'ande', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '▁=', '▁new', '▁check', 'box', '[', '3', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'c', 'aff', 'etter', 'ia', '"",', '▁bev', 'ande', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'anal', 'col', 'ici', '"",', '▁bev', 'ande', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', 'al', 'col', 'ici', '"",', '▁bev', 'ande', ',', '▁false', ');', '\n\t\t', 'panel', '[', '4', '].', 'add', '(', 'label', '4);', '\n\t\t', 'panel', '[', '4', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0]', ');', '\n\t\t', 'panel', '[', '4', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1]', ');', '\n\t\t', 'panel', '[', '4', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁c', 'ibi', '\n\t\t', 'label', '5', '▁=', '▁new', '▁label', '(""', 'c', 'ibi', '"");', '\n\t\t', 'label', '5.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'c', 'ibi', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '▁=', '▁new', '▁check', 'box', '[', '3', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'dol', 'ci', '"",', '▁c', 'ibi', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1]', '=', '▁new', '▁check', 'box', '(""', 'sal', 'ati', '"",', '▁c', 'ibi', ',', '▁false', ');', '▁', '\n\t\t', 'panel', '[', '5', '].', 'add', '(', 'label', '5);', '\n\t\t', 'panel', '[', '5', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0]', ');', '\n\t\t', 'panel', '[', '5', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁degli', '▁antip', 'asti', '\n\t\t', 'label', '6', '▁=', '▁new', '▁label', '(""', 'ant', 'ip', 'asti', '"");', '\n\t\t', 'label', '6.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'ant', 'ip', 'asti', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '▁=', '▁new', '▁check', 'box', '[', '3', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'fred', 'di', '"",', '▁antip', 'asti', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'c', 'aldi', '"",', '▁antip', 'asti', ',', '▁false', ');', '▁', '\n\t\t', 'panel', '[', '6', '].', 'add', '(', 'label', '6);', '\n\t\t', 'panel', '[', '6', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0]', ');', '\n\t\t', 'panel', '[', '6', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁prim', 'i', '\n\t\t', 'label', '7', '=', 'new', '▁label', '(""', 'pr', 'imi', '"");', '\n\t\t', 'label', '7.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'pr', 'imi', '=', 'new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '=', 'new', '▁check', 'box', '[', '3', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0]', '=', 'new', '▁check', 'box', '(""', 'sol', 'idi', '"",', 'pr', 'imi', ',', 'false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1]', '=', 'new', '▁check', 'box', '(""', 'li', 'qu', 'idi', '"",', 'pr', 'imi', ',', 'false', ');', '▁', '\n\t\t', 'panel', '[', '7', '].', 'add', '(', 'label', '7);', '\n\t\t', 'panel', '[', '7', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0]', ');', '\n\t\t', 'panel', '[', '7', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁second', 'i', '\n\t\t', 'label', '8', '=', 'new', '▁label', '(""', 'second', 'i', '"");', '\n\t\t', 'label', '8.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'second', 'i', '=', 'new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '=', 'new', '▁check', 'box', '[', '3', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[0]', '=', 'new', '▁check', 'box', '(""', 'carne', '"",', 'second', 'i', ',', 'false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[1]', '=', 'new', '▁check', 'box', '(""', 'pes', 'ce', '"",', 'second', 'i', ',', 'false', ');', '▁', '\n\t\t', 'panel', '[', '8', '].', 'add', '(', 'label', '8);', '\n\t\t', 'panel', '[', '8', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[0]', ');', '\n\t\t', 'panel', '[', '8', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[1]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁cont', 'orn', 'i', '\n\t\t', 'label', '9', '▁=', '▁new', '▁label', '(""', 'cont', 'orn', 'i', '"");', '\n\t\t', 'label', '9.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'cont', 'orn', 'i', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '▁=', '▁new', '▁check', 'box', '[', '3', '];', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'ver', 'd', 'ura', '▁cotta', '"",', '▁cont', 'orn', 'i', ',', '▁false', ');', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'ver', 'd', 'ura', '▁cr', 'uda', '"",', '▁cont', 'orn', 'i', ',', '▁false', ');', '▁', '\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', 'form', 'aggio', '"",', '▁cont', 'orn', 'i', ',', '▁false', ');', '\n\t\t', 'panel', '[', '9', '].', 'add', '(', 'label', '9);', '\n\t\t', 'panel', '[', '9', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0]', ');', '\n\t\t', 'panel', '[', '9', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1]', ');', '\n\t\t', 'panel', '[', '9', '].', 'add', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁bar', '-', 'be', 'v', 'ande', '\n\t\t', 'panel', '[', '10', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'label', '12', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁del', '▁bene', '"");', '\n\t\t', 'label', '13', '▁=', '▁new', '▁label', '(""', 'pre', 'zzo', '▁del', '▁bene', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n\t\t', 'test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4', '0);', '\n\t\t', 'test', 'o', '4', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n\t\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '10', '],', '▁label', '12,', '▁0,', '▁0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '10', '],', '▁testo', '3,', '▁1,', '▁0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '10', '],', '▁label', '13,', '▁0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '10', '],', '▁testo', '4,', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '10', '],', '▁ann', 'ulla', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁0,', '▁5', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '10', '],', '▁confer', 'ma', ',', '▁2,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁0,', '▁5', ');', '\n\t', '}', '\n', '▁', '\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'prima', '_', 'sc', 'el', 'ta', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'abc', '(', 'sc', 'el', 'ta', '_', 'bar', ',', '▁1,', '▁benes', 'erv', 'izio', '.', 'bar', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'prima', '_', 'sc', 'el', 'ta', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'abc', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', ',', '▁2,', '▁benes', 'erv', 'izio', '.', 'rist', 'or', 'ante', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'prima', '_', 'sc', 'el', 'ta', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'abc', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', ',', '▁3,', '▁benes', 'erv', 'izio', '.', 'serv', 'izi', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'bar', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'uneg', 'h', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', ',', '▁4,', '▁benes', 'erv', 'izio', '.', 'be', 'v', 'ande', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'bar', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'bar', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'uneg', 'h', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', ',', '▁5,', '▁benes', 'erv', 'izio', '.', 'c', 'ibi', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'mn', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', ',', '▁6,', '▁benes', 'erv', 'izio', '.', 'ant', 'ip', 'asti', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'mn', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', ',', '▁7,', '▁benes', 'erv', 'izio', '.', 'pr', 'imi', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'mn', '(', 'sc', 'el', 'ta', '_', 'second', 'o', ',', '▁8,', '▁benes', 'erv', 'izio', '.', 'second', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '3', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'une', 'il', 'mn', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', ',', '▁9,', '▁benes', 'erv', 'izio', '.', 'cont', 'orn', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'void', '▁incom', 'une', 'abc', '(', 'check', 'box', '[]', '▁scel', 'te', ',', '▁int', '▁numero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁0;', '\n\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'panel', '[', 'i', '].', 'is', 'visible', '())', '\n\t\t\t\t', 'remove', '(', 'panel', '[', 'i', ']);', '\n\t\t', '}', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', ']);', '\n\t\t', 'panel', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁incom', 'uneg', 'h', '(', 'check', 'box', '[]', '▁scel', 'te', ',', '▁int', '▁numero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁1;', '\n\t\t', 'for', '(', 'int', '▁i', '=2', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'panel', '[', 'i', '].', 'is', 'visible', '())', '\n\t\t\t\t', 'remove', '(', 'panel', '[', 'i', ']);', '\n\t\t', '}', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', ']);', '\n\t\t', 'panel', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁incom', 'une', 'il', 'mn', '(', 'check', 'box', '[]', '▁scel', 'te', ',', '▁int', '▁numero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁1;', '\n\t\t', 'if', '▁(', 'panel', '[1', '].', 'is', 'visible', '())', '\n\t\t\t', 'remove', '(', 'panel', '[1]', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁3;', '▁i', '▁<', '▁13', ';', '▁i', '++)', '\n\t\t\t', 'if', '▁(', 'panel', '[', 'i', '].', 'is', 'visible', '())', '\n\t\t\t\t', 'remove', '(', 'panel', '[', 'i', ']);', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', ']);', '\n', '▁', '\t\t', 'panel', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'boolean', '▁err', 'ore', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '3.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁desc', 'riz', 'ione', '▁del', '▁bene', '▁o', '▁serv', 'izio', '▁de', 've', '▁ess', 'ere', '▁di', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', 'test', 'o', '3.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁desc', 'riz', 'ione', '▁del', '▁bene', '▁o', '▁serv', 'izio', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁(', 'test', 'o', '4.', 'get', 'text', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁pre', 'zzo', '▁del', '▁bene', '▁o', '▁serv', 'izio', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', 'utils', '.', 'is', 'float', 'pos', '(', 'test', 'o', '4.', 'get', 'text', '()))', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁pre', 'zzo', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁posit', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\t\n\t', 'char', '[]', '▁compos', 'ec', 'ode', '(', 'int', '▁index', ',', '▁char', '▁tipo', ')', '\n\t', '{', '\t\n\t\t', 'cod', 'ice', '[', 'index', ']', '▁=', '▁tipo', ';', '\n\t\t', 'for', '▁(', '▁int', '▁i', '▁=', '▁index', '+', '1;', '▁i', '▁<', '▁3;', '▁+', '+', 'i', ')', '\n\t\t\t', 'cod', 'ice', '[', 'i', ']', '▁=', ""▁'"", ""▁'"", ';', '\n\t\t', 'return', '▁codice', ';', '\n\t', '}', '\t\t\n\t\t\n\t', 'char', '[]', '▁complet', 'ec', 'ode', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'cod', 'ice', '[1]', '▁==', ""▁'"", ""▁'"", ')', '\n\t\t\t', 'cod', 'ice', '[1]', '▁=', ""▁'0"", ""';"", '▁', '\n\t\t', 'if', '▁(', 'cod', 'ice', '[', '2]', '▁==', ""▁'"", ""▁'"", ')', '\n\t\t\t', 'cod', 'ice', '[', '2]', '▁=', ""▁'0"", ""';"", '▁', '\n\t\t', 'return', '▁codice', ';', '\n\t', '}', '\n\n\t', 'void', '▁o', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'panel', '[', '10', '].', 'is', 'visible', '())', '▁//', '▁necess', 'ario', '▁nella', '▁finest', 'ra', '▁di', '▁mod', 'ific', 'a', '\n\t\t\t', 'remove', '(', 'panel', '[', '10]', ');', '\n\t\t', 'if', '▁(', 'panel', '[', '12', '].', 'is', 'visible', '())', '▁//', '▁necess', 'ario', '▁nella', '▁finest', 'ra', '▁di', '▁canc', 'ell', 'azione', '\n\t\t\t', 'remove', '(', 'panel', '[', '12', ']);', '\n\t\t', 'in', 'com', 'une', 'op', '();', '\n\t', '}', '\n', '▁', '\n\t', 'void', '▁p', '()', '▁//', '▁fr', 'utta', '▁o', '▁dessert', '\n\t', '{', '\n\t\t', 'if', '(', 'panel', '[1', '].', 'is', 'visible', '())', '\n\t\t\t', 'remove', '(', 'panel', '[1]', ');', '\n\t\t', 'for', '(', 'int', '▁i', '=3;', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'panel', '[', 'i', '].', 'is', 'visible', '())', '\n\t\t\t\t', 'remove', '(', 'panel', '[', 'i', ']);', '\n\t\t', '}', '\n\t\t', 'in', 'com', 'une', 'op', '();', '\n\t', '}', '\n\n\t', 'void', '▁incom', 'une', 'op', '()', '\n\t', '{', '\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'if', '▁(', 'elen', 'co', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '▁//', 'per', '▁ev', 'it', 'are', '▁warning', '\n\t\t\t', 'elen', 'co', '.', 'remove', 'all', '();', '\n\t\t', 'c', 'real', 'ista', '();', '▁', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', '11', ']);', '\n\t\t', 'panel', '[', '11', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'int', '▁i', '=1', ';', '\n\t\t', 'ben', 'es', 'erv', 'izio', '▁b', ';', '\t\t\n\t\t\n\t\t', 'l', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'elen', 'co', 'ben', 'is', 'erv', 'izi', '(', 'new', '▁string', '(', 'cod', 'ice', '));', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'while', '▁(', 'i', '▁<', '=', '▁l', '.', 'length', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'b', '▁=', '▁l', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ');', '\n\t\t\t\t', 'elen', 'co', '.', 'add', 'item', '(', 'b', '.', 'tostring', '());', '\n\t\t\t\t', 'i', '++;', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n', '}']"~"packag interfacc import java awt import java awt event import common util import moduli bene servizio import moduli lista beni servizi public class maschera bene servizio extend frame dichiarazioni oggetti che serviranno per definir finestra protect label label label label label label label label label label label label label protect text field testo testo protect panel panel button protect button annulla conferma protect checkbox group tipi bar ristorant servizi bevand cibi antipasti primi secondi contorni protect checkbox prima scelta scelta bar scelta piatto scelta servizio scelta bevanda scelta cibo scelta antipasto scelta primo scelta secondo scelta contorno protect grid layout grid new grid layout protect grid layout grid new grid layout protect grid bag layout gridbag new grid bag layout seguenti due campi sono condivisi cancellazion modifica protect list elenco new list fals protect lista beni servizi seguent attributo necessario per gerarchia dell finestr frame padr new frame seguenti gestiscono formazion dei primi tre caratteri del cod extra int level char codic new char public maschera bene servizio string titl super titl setup init set size void setup set font configurazion sistema font base elenco set font configurazion sistema font allineato creo pannelli panel new panel int panel new panel panel set layout grid panel set visibl fals int panel new panel panel set visibl fals creo pannello alto label new label tipi label set font configurazion sistema font titolo tipi new checkbox group prima_scelta new checkbox serv piu lungo per aggiungi prima_scelta new checkbox bar tipi fals prima_scelta new checkbox ristorant tipi fals prima_scelta new checkbox servizi tipi fals prima_scelta new checkbox supplementi tipi fals prima_scelta new checkbox riduzioni tipi fals panel add label panel add prima_scelta ]); panel add prima_scelta ]); panel add prima_scelta ]); panel set visibl true attacco pannello alto frame set layout grid add panel ]); creo pannello del bar label1 new label bar ""); label1 set font configurazion sistema font_titolo bar new checkbox group (); scelta_bar new checkbox scelta_bar new checkbox bevand bar fals scelta_bar new checkbox cibi bar fals panel add label1 panel add scelta_bar ]); panel add scelta_bar ]); creo pannello dal ristorant label2 new label ristorant ""); label2 set font configurazion sistema font_titolo ristorant new checkbox group (); scelta_piatto new checkbox scelta_piatto new checkbox antipasti ristorant fals scelta_piatto new checkbox primi ristorant fals scelta_piatto new checkbox secondi ristorant fals scelta_piatto new checkbox contorni ristorant fals scelta_piatto new checkbox dessert ristorant fals scelta_piatto new checkbox frutta ristorant fals panel add label2 panel add scelta_piatto ]); panel add scelta_piatto ]); panel add scelta_piatto ]); panel add scelta_piatto ]); panel add scelta_piatto ]); panel add scelta_piatto ]); label3 new label servizi ""); label3 set font configurazion sistema font_titolo servizi new checkbox group (); scelta_servizio new checkbox scelta_servizio new checkbox ricreativi servizi fals scelta_servizio new checkbox altro servizi fals panel add label3 panel add scelta_servizio ]); panel add scelta_servizio ]); label4 new label bevand ""); label4 set font configurazion sistema font_titolo bevand new checkbox group (); scelta_bevanda new checkbox scelta_bevanda new checkbox caffetteria bevand fals scelta_bevanda new checkbox analcolici bevand fals scelta_bevanda new checkbox alcolici bevand fals panel add label4 panel add scelta_bevanda ]); panel add scelta_bevanda ]); panel add scelta_bevanda ]); creo pannello dei cibi label5 new label cibi ""); label5 set font configurazion sistema font_titolo cibi new checkbox group (); scelta_cibo new checkbox scelta_cibo new checkbox dolci cibi fals scelta_cibo new checkbox salati cibi fals panel add label5 panel add scelta_cibo ]); panel add scelta_cibo ]); creo pannello deg antipasti label6 new label antipasti ""); label6 set font configurazion sistema font_titolo antipasti new checkbox group (); scelta_antipasto new checkbox scelta_antipasto new checkbox freddi antipasti fals scelta_antipasto new checkbox caldi antipasti fals panel add label6 panel add scelta_antipasto ]); panel add scelta_antipasto ]); creo pannello dei primi label7 new label primi ""); label7 set font configurazion sistema font_titolo primi new checkbox group (); scelta_primo new checkbox scelta_primo new checkbox solidi primi fals scelta_primo new checkbox liquidi primi fals panel add label7 panel add scelta_primo ]); panel add scelta_primo ]); creo pannello dei secondi label8 new label secondi ""); label8 set font configurazion sistema font_titolo secondi new checkbox group (); scelta_secondo new checkbox scelta_secondo new checkbox carn secondi fals scelta_secondo new checkbox pesc secondi fals panel add label8 panel add scelta_secondo ]); panel add scelta_secondo ]); creo pannello dei contorni label9 new label contorni ""); label9 set font configurazion sistema font_titolo contorni new checkbox group (); scelta_contorno new checkbox scelta_contorno new checkbox verdura cotta contorni fals scelta_contorno new checkbox verdura cruda contorni fals scelta_contorno new checkbox formaggio contorni fals panel add label9 panel add scelta_contorno ]); panel add scelta_contorno ]); panel add scelta_contorno ]); creo pannello bar bevand panel set layout gridbag label12 new label nome del bene ""); label13 new label prezzo del bene ""+( principal config get valuta ()+"".""); testo3 new text field ("""", testo4 new text field ("""", annulla new button annulla ""); conferma new button conferma ""); util constrain panel label12 grid bag constraint none grid bag constraint west util constrain panel testo3 grid bag constraint none grid bag constraint west util constrain panel label13 grid bag constraint none grid bag constraint west util constrain panel testo4 grid bag constraint none grid bag constraint west util constrain panel annulla grid bag constraint none grid bag constraint east util constrain panel conferma grid bag constraint none grid bag constraint west public void init prima_scelta add item listen new item listen public void item state chang item event prima_scelta get state ()) comun abc scelta_bar bene servizio bar }); prima_scelta add item listen new item listen public void item state chang item event prima_scelta get state ()) comun abc scelta_piatto bene servizio ristorant }); prima_scelta add item listen new item listen public void item state chang item event prima_scelta get state ()) comun abc scelta_servizio bene servizio servizi }); scelta_bar add item listen new item listen public void item state chang item event scelta_bar get state ()) comun scelta_bevanda bene servizio bevand }); scelta_bar add item listen new item listen public void item state chang item event scelta_bar get state ()) comun scelta_cibo bene servizio cibi }); scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) comun ilmn scelta_antipasto bene servizio antipasti }); scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) comun ilmn scelta_primo bene servizio primi }); scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) comun ilmn scelta_secondo bene servizio secondi }); scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) comun ilmn scelta_contorno bene servizio contorni }); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); init void comun abc checkbox scelt int numero_pannello char level int ;++ panel visibl ()) remov panel ]); add panel numero_pannello ]); panel numero_pannello set visibl true set visibl true codic compos code level void comun checkbox scelt int numero_pannello char level int ;++ panel visibl ()) remov panel ]); add panel numero_pannello ]); panel numero_pannello set visibl true set visibl true codic compos code level void comun ilmn checkbox scelt int numero_pannello char level panel visibl ()) remov panel ]); int ++) panel visibl ()) remov panel ]); add panel numero_pannello ]); panel numero_pannello set visibl true set visibl true codic compos code level boolean error frame msg !(( testo3 get text ()). length msg new messag dialog descrizion del bene servizio deve esser piu caratteri ""); return true testo3 get text ()). equal ("""") msg new messag dialog manca descrizion del bene servizio ""); return true testo4 get text ()). equal ("""") msg new messag dialog manca prezzo del bene servizio ""); return true util float pos testo4 get text ())) msg new messag dialog prezzo deve esser numero positivo ""); return true return fals char compos code int index char tipo codic index tipo int index codic return codic char complet code codic codic codic codic return codic void panel visibl ()) necessario nella finestra modifica remov panel ]); panel visibl ()) necessario nella finestra cancellazion remov panel ]); comun (); void frutta dessert panel visibl ()) remov panel ]); int ;++ panel visibl ()) remov panel ]); comun (); void comun complet code (); elenco get item count per evitar warn elenco remov (); crea lista (); add panel ]); panel set visibl true set visibl true void crea lista int bene servizio principal elenco beni servizi new string codic )); null length ()) get bene servizio elenco add item string ()); ++;"
43~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/VediCliente.java~VediCliente.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import moduli.*;
import common.utility.*;
import common.def.*;
import java.util.Date;

public class VediCliente extends MascheraSoggiorno
{
	Frame padre;   
   	public VediCliente(Frame p, Cliente cli)
   	{
      	super(""Visualizzazione dei dati del cliente"","" Fine "",' ',' ');
      	padre=p;
      	padre.setEnabled(false);
      	inizializza(cli);
      	pack();
      	
   	}

   public void inizializza(Cliente cli)
   {
      remove(panel2);
      Utils.constrain(panel1, label13, 0, 8, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, testo13, 1, 8, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, label14, 2, 8, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, testo14, 3, 8, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      panel3.remove(Annulla);
      pack();
      disableFields();
      writeDatiCliente(cli);
      this.setVisible(true);
      
      Conferma.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            padre.setEnabled(true);
         }
      });
	}
	
	void disableFields()
	{
		testo1.setEditable(false);
		testo2.setEditable(false);
		testo3.setEditable(false);
		testo4.setEditable(false);
		testo5.setEditable(false);
		testo6.setEditable(false);
		testo7.setEditable(false);
		testo8.setEditable(false);
		testo9.setEditable(false);
		testo10.setEditable(false);
		testo11.setEditable(false);
		testo12.setEditable(false);
		testo13.setEditable(false);
		testo14.setEditable(false);
	}
	
	public void writeDatiCliente(Cliente cliente)
	{
		testo1.setText(cliente.getNumStanza());
		testo2.setText(cliente.getCognome());
		testo3.setText(cliente.getNome());
		testo4.setText(cliente.getLuogoNasc());
		testo5.setText(DateUtils.giveStringOfDate(cliente.getDataNasc()));
		testo6.setText(cliente.getNumDoc());
		testo7.setText(cliente.getNumTel());
		testo8.setText(cliente.getIndirizzo());
		testo9.setText(cliente.getCap());
		testo10.setText(cliente.getComune());
		testo11.setText(cliente.getCitta());
		testo12.setText(cliente.getNazione());
		testo13.setText(DateUtils.giveStringOfDate(cliente.getInizioSogg()));
		testo14.setText(DateUtils.giveStringOfDate(cliente.getFineSogg()));
	}

}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n\n', 'publ', 'ic', '▁class', '▁v', 'ed', 'ic', 'l', 'ient', 'e', '▁ext', 'ends', '▁m', 'asc', 'her', 'as', 'og', 'gi', 'orn', 'o', '\n', '{', '\n\t', 'fr', 'ame', '▁pad', 're', ';', '▁', '\n', '▁', '\t', 'publ', 'ic', '▁v', 'ed', 'ic', 'l', 'ient', 'e', '(', 'fr', 'ame', '▁p', ',', '▁cl', 'ient', 'e', '▁cl', 'i', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁de', 'i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '"",', '""', '▁fine', '▁""', ',', ""'"", ""▁'"", ',', ""'"", ""▁'"", ');', '\n', '▁', '\t', 'p', 'ad', 're', '=', 'p', ';', '\n', '▁', '\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '(', 'cl', 'i', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\t\n', '▁', '\t', '}', '\n\n', '▁public', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', 'cl', 'ient', 'e', '▁cl', 'i', ')', '\n', '▁{', '\n', '▁rem', 'ove', '(', 'pan', 'el', '2)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '3,', '▁', '0,', '▁8,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '3,', '▁1,', '▁8,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '4,', '▁2,', '▁8,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '4,', '▁3,', '▁8,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁pan', 'el', '3.', 'rem', 'ove', '(', 'ann', 'ull', 'a', ');', '\n', '▁pack', '(', ');', '\n', '▁dis', 'able', 'field', 's', '(', ');', '\n', '▁writ', 'ed', 'atic', 'l', 'ient', 'e', '(', 'cl', 'i', ');', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁dis', 'able', 'field', 's', '(', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '5.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '6.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '7.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '8.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '9.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '0.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '1', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t', '}', '\n\t\n\t', 'publ', 'ic', '▁vo', 'id', '▁writ', 'ed', 'atic', 'l', 'ient', 'e', '(', 'cl', 'ient', 'e', '▁cl', 'ient', 'e', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '2.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'c', 'ogn', 'ome', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '3.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'n', 'ome', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '4.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'l', 'u', 'og', 'on', 'asc', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '5.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'cl', 'ient', 'e', '.', 'get', 'd', 'at', 'an', 'asc', '(', ')', ')', ');', '\n\t\t', 't', 'est', 'o', '6.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'n', 'um', 'd', 'oc', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '7.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'n', 'um', 't', 'el', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '8.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'ind', 'ir', 'iz', 'zo', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '9.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'c', 'ap', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '0.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'com', 'une', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '1.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'c', 'itt', 'a', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '2.', 's', 'ette', 'xt', '(', 'cl', 'ient', 'e', '.', 'get', 'n', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '3.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'cl', 'ient', 'e', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '4.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'cl', 'ient', 'e', '.', 'get', 'f', 'ines', 'og', 'g', '(', ')', ')', ');', '\n\t', '}', '\n\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n\n', 'public', '▁class', '▁vedic', 'l', 'iente', '▁extends', '▁masc', 'her', 'as', 'og', 'gi', 'orno', '\n', '{', '\n\t', 'frame', '▁pad', 're', ';', '▁', '\n', '▁', '\t', 'public', '▁vedic', 'l', 'iente', '(', 'frame', '▁p', ',', '▁client', 'e', '▁cl', 'i', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'vis', 'ual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '"",', '""', '▁fine', '▁""', "",'"", ""▁'"", "",'"", ""▁'"", ');', '\n', '▁', '\t', 'pad', 're', '=', 'p', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '(', 'cl', 'i', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t\n', '▁', '\t', '}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '(', 'cl', 'iente', '▁cl', 'i', ')', '\n', '▁{', '\n', '▁remove', '(', 'pan', 'el', '2)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '3,', '▁', '0,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '3,', '▁1,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '4,', '▁2,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '4,', '▁3,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁panel', '3.', 'rem', 'ove', '(', 'ann', 'ulla', ');', '\n', '▁pack', '();', '\n', '▁dis', 'able', 'fields', '();', '\n', '▁writ', 'ed', 'atic', 'l', 'iente', '(', 'cl', 'i', ');', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁dis', 'able', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '5.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '6.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '7.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '8.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '9.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '10.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '11.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '12.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '1', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '1', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t', '}', '\n\t\n\t', 'public', '▁void', '▁writ', 'ed', 'atic', 'l', 'iente', '(', 'cl', 'iente', '▁client', 'e', ')', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'c', 'ogn', 'ome', '());', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'n', 'ome', '());', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'lu', 'ogon', 'asc', '());', '\n\t\t', 'test', 'o', '5.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'cl', 'iente', '.', 'get', 'dat', 'an', 'asc', '())', ');', '\n\t\t', 'test', 'o', '6.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'num', 'doc', '());', '\n\t\t', 'test', 'o', '7.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'num', 'tel', '());', '\n\t\t', 'test', 'o', '8.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'ind', 'ir', 'iz', 'zo', '());', '\n\t\t', 'test', 'o', '9.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'cap', '());', '\n\t\t', 'test', 'o', '10.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'com', 'une', '());', '\n\t\t', 'test', 'o', '11.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'c', 'itta', '());', '\n\t\t', 'test', 'o', '12.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'n', 'azione', '());', '\n\t\t', 'test', 'o', '1', '3.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'cl', 'iente', '.', 'get', 'in', 'iz', 'ios', 'ogg', '())', ');', '\n\t\t', 'test', 'o', '1', '4.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'cl', 'iente', '.', 'get', 'f', 'ines', 'ogg', '())', ');', '\n\t', '}', '\n\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n\n', 'public', '▁class', '▁vedic', 'l', 'iente', '▁extends', '▁masc', 'her', 'as', 'oggi', 'orno', '\n', '{', '\n\t', 'frame', '▁padre', ';', '▁', '\n', '▁', '\t', 'public', '▁vedic', 'l', 'iente', '(', 'frame', '▁p', ',', '▁client', 'e', '▁cl', 'i', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'visual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '"",""', '▁fine', '▁""', "",'"", ""▁'"", "",'"", ""▁'"", ');', '\n', '▁', '\t', 'pad', 're', '=', 'p', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'in', 'iz', 'ial', 'izza', '(', 'cl', 'i', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t\n', '▁', '\t', '}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'izza', '(', 'cl', 'iente', '▁cl', 'i', ')', '\n', '▁{', '\n', '▁remove', '(', 'panel', '2);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '13,', '▁0,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '13,', '▁1,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '14,', '▁2,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '14,', '▁3,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁panel', '3.', 'remove', '(', 'ann', 'ulla', ');', '\n', '▁pack', '();', '\n', '▁disable', 'fields', '();', '\n', '▁writ', 'ed', 'atic', 'l', 'iente', '(', 'cl', 'i', ');', '\n', '▁this', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁disable', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '5.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '6.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '7.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '8.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '9.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '10.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '11.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '12.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '13.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '14.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t', '}', '\n\t\n\t', 'public', '▁void', '▁writ', 'ed', 'atic', 'l', 'iente', '(', 'cl', 'iente', '▁client', 'e', ')', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'cogn', 'ome', '());', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'n', 'ome', '());', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'lu', 'ogon', 'asc', '());', '\n\t\t', 'test', 'o', '5.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'cl', 'iente', '.', 'get', 'dat', 'an', 'asc', '())', ');', '\n\t\t', 'test', 'o', '6.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'num', 'doc', '());', '\n\t\t', 'test', 'o', '7.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'num', 'tel', '());', '\n\t\t', 'test', 'o', '8.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'ind', 'ir', 'iz', 'zo', '());', '\n\t\t', 'test', 'o', '9.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'cap', '());', '\n\t\t', 'test', 'o', '10.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'com', 'une', '());', '\n\t\t', 'test', 'o', '11.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'c', 'itta', '());', '\n\t\t', 'test', 'o', '12.', 's', 'ette', 'xt', '(', 'cl', 'iente', '.', 'get', 'n', 'azione', '());', '\n\t\t', 'test', 'o', '13.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'cl', 'iente', '.', 'get', 'in', 'iz', 'ios', 'ogg', '())', ');', '\n\t\t', 'test', 'o', '14.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'cl', 'iente', '.', 'get', 'f', 'ines', 'ogg', '())', ');', '\n\t', '}', '\n\n', '}', '\n']"~packag interfacc import java awt import java awt event import moduli import common util import common def import java util date public class vedi client extend maschera soggiorno frame padr public vedi client frame client cli super visualizzazion dei dati del client fine padr padr set enabl fals inizializza cli pack public void inizializza client cli remov panel util constrain panel label grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest util constrain panel label grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest panel remov annulla pack disabl field write dati client cli set visibl true conferma add action listen new action listen public void action perform action event dispos padr set enabl true void disabl field testo set edit fals testo set edit fals testo3 set edit fals testo4 set edit fals testo5 set edit fals testo6 set edit fals testo7 set edit fals testo8 set edit fals testo9 set edit fals testo10 set edit fals testo11 set edit fals testo12 set edit fals testo13 set edit fals testo14 set edit fals public void write dati client client client testo1 set text client get num stanza ()); testo2 set text client get cognom ()); testo3 set text client get nome ()); testo4 set text client get luogo nasc ()); testo5 set text date util give string date client get data nasc ())); testo6 set text client get num doc ()); testo7 set text client get num tel ()); testo8 set text client get indirizzo ()); testo9 set text client get cap ()); testo10 set text client get comun ()); testo11 set text client get citta ()); testo12 set text client get nazion ()); testo13 set text date util give string date client get inizio sogg ())); testo14 set text date util give string date client get fine sogg ()));
44~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/AggiungiBeneServizio.java~AggiungiBeneServizio.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import moduli.*;


public class AggiungiBeneServizio extends InserisciBeniServizi
{
	Button annulla1, annulla2, conferma1, conferma2;
	TextField tf_supp, tf_rid, tf_stanza_supp, tf_stanza_rid, tf_mot_supp, tf_mot_rid;
	Label label_supp, label_rid, label_stanza_supp, label_stanza_rid, label_mot_supp, label_mot_rid;
	
	public AggiungiBeneServizio(Frame parent)
	{
		super(""Creazione di un nuovo bene/servizio/riduzione/supplemento"");
		padre = parent;
		padre.setEnabled(false);
		setupNuovi();
		inizializza();
		setSize(450,600);
		setVisible(true);
	}

	void setupNuovi()
	{
		//Creo i pannelli
		remove(panel[0]);
		panel[0] = new Panel();
		panel[0].setLayout(grid1);
		panel[0].setVisible(false);

		//Creo il pannello in alto
		label = new Label(""Tipi"");
		label.setFont(ConfigurazioneSistema.font_titolo);
		tipi = new CheckboxGroup();
		panel[0].add(label);
		panel[0].add(prima_scelta[0]);
		panel[0].add(prima_scelta[1]);
		panel[0].add(prima_scelta[2]);
		panel[0].add(prima_scelta[3]);
		panel[0].add(prima_scelta[4]);
		panel[0].setVisible(true);

		//Attacco il pannello in alto al frame
		this.setLayout(grid);
		this.add(panel[0]);

		//Creo il pannello supplemento
		panel[11].setLayout(gridbag);
		label_supp = new Label(""Ammontare del supplemento ""+(Principale.config).getValuta()+""."");
		tf_supp = new TextField("""", 10);
		label_stanza_supp = new Label(""A carico della stanza numero"");
		tf_stanza_supp = new TextField("""", 6);
		if (padre instanceof MascheraContoRistorazione)
			tf_stanza_supp.setEnabled(false);
		label_mot_supp = new Label(""Motivazione"");
		tf_mot_supp = new TextField("""", 35);
		annulla1 = new Button(""Annulla"");
		conferma1 = new Button(""Conferma"");
		Utils.constrain(panel[11], label_supp, 0, 0, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], tf_supp, 1, 0, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], label_stanza_supp, 0, 1, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], tf_stanza_supp, 1, 1, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], label_mot_supp, 0, 2, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], tf_mot_supp, 1, 2, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], annulla1, 1, 3, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.EAST, 0.0, 0.0, 5, 0, 5, 10);
		Utils.constrain(panel[11], conferma1, 3, 3, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 5, 10, 5, 0);

		//Creo il pannello riduzione
		panel[12].setLayout(gridbag);
		label_rid = new Label(""Ammontare della riduzione ""+(Principale.config).getValuta()+""."");
		tf_rid = new TextField("""",10);
		label_stanza_rid = new Label(""A carico della stanza numero"");
		tf_stanza_rid = new TextField("""", 6);
		if (padre instanceof MascheraContoRistorazione)
			tf_stanza_rid.setEnabled(false);
		label_mot_rid = new Label(""Motivazione"");
		tf_mot_rid = new TextField("""", 35);
		annulla2 = new Button(""Annulla"");
		conferma2 = new Button(""Conferma"");
		Utils.constrain(panel[12], label_rid, 0, 0, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], tf_rid, 1, 0, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], label_stanza_rid, 0, 1, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], tf_stanza_rid, 1, 1, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], label_mot_rid, 0, 2, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], tf_mot_rid, 1, 2, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], annulla2, 1, 3, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.EAST, 0.0, 0.0, 5, 5, 5, 0);
		Utils.constrain(panel[12], conferma2, 2, 3, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 0);
	}
              
	public void inizializza()
	{
		prima_scelta[3].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(prima_scelta[3].getState())
				{
					inComuneDE(11, BeneServizio.SUPPLEMENTI);
				}
			}
		});

		prima_scelta[4].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(prima_scelta[4].getState())
				{
					inComuneDE(12, BeneServizio.RIDUZIONI);
				}
			}
		});

		annulla1.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				padre.setEnabled(true);
			}
		});

		annulla2.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				padre.setEnabled(true);
			}
		});

		conferma1.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				scriviSuDB( tf_supp.getText(), tf_stanza_supp.getText(), tf_mot_supp.getText() );
			}           
		});

		conferma2.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				scriviSuDB( new String(""-""+tf_rid.getText()), tf_stanza_rid.getText(), tf_mot_rid.getText() );
			}
		});
	} // init

	void inComuneDE(int numero_pannello, char c)
	{
		level = 0;
		for(int i=1;i<13;++i)
		{
			if(panel[i].isVisible())
				remove(panel[i]);
		}
		this.add(panel[numero_pannello]);
		panel[numero_pannello].setVisible(true);
		setVisible(true);
		codice = composeCode(level, c);
	}
	
	void scriviSuDB(String sup_rid, String stanza, String mot)
	{
		MessageDialog msg;
		
		completeCode();
		Float px = Float.valueOf(sup_rid);
		extra = new BeneServizio((new String(codice)) + tornaCodId((Principale.config).getIdBeneservizio()), 
							mot, px.floatValue());
		if (padre instanceof MascheraAddebiti)
		{
			if ( ((Principale.db).readStanza(stanza) != null) && Utils.isFloatPos(sup_rid) && (mot.length() < 33) )
			{
				ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(stanza, false);
				if (L_sogg != null)
				{
					if (!L_sogg.isEmpty())
					{
						int j;
						if ((j = (Principale.db).newIdBeneservizio()) == DataBase.OK)
						{
							(Principale.config).updateIdBeneservizio();
							if ((j = (Principale.db).writeBeneServizio(extra)) == DataBase.OK)
							{
								Addebito da_addebitare = new Addebito(stanza, extra.getCodExtra(), 
																	  1, px.floatValue());
								if ((j = (Principale.db).writeAddebito(da_addebitare)) == DataBase.OK)
								{
									dispose();
									if ( stanza.equals(((MascheraAddebiti) padre).stanza_prec) )
									{
										(((MascheraAddebiti) padre).elenco_addebiti).addAddebito(da_addebitare);
										(((MascheraAddebiti) padre).elenco_extra_addebitati).addBeneServizio(extra);
			
						                /* travaso delle quantita modificate nel nuovo array per poi 
						                   aggiungere il supplemento o riduzione appena inseriti */
				    		            int nuove_quantita_mod[] = new int[((MascheraAddebiti) padre).elenco_addebiti.length()];
		    	        		    
	            					    for (int i = 0; i < ((MascheraAddebiti) padre).quantita_mod.length; i++)
						                	nuove_quantita_mod[i] = ((MascheraAddebiti) padre).quantita_mod[i];
						                nuove_quantita_mod[nuove_quantita_mod.length-1] = 0;
						                ((MascheraAddebiti) padre).quantita_mod = nuove_quantita_mod;
		    			            
										((MascheraAddebiti) padre).continuaAggiornamento();
		
										/* se il numero di stanza era stato cambiato senza addebiti
										   allora rimetto il precedente numero di stanza nel textfield
										   della finestra Addebiti */
									}
									if ( !(((MascheraAddebiti) padre).num_stanza.getText()).equals(((MascheraAddebiti) padre).stanza_prec) )
										((MascheraAddebiti) padre).num_stanza.setText( ((MascheraAddebiti) padre).stanza_prec );
									padre.setEnabled(true);
								}
								else
									msg = new MessageDialog(this, ""Errore nell'addebitare: ""+DataBase.strErrore(j));
							}
							else
								msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j));
						}
						else
							msg = new MessageDialog(this, ""Errore nell'aggiornamento: ""+DataBase.strErrore(j));
					}
					else
						msg = new MessageDialog(this, "" La stanza inserita non e' occupata! "");
				}
				else
					msg = new MessageDialog(this, "" Problemi con il database! "");
			}
			else
				msg = new MessageDialog(this, ""Errore nei parametri!"");
		}
		else
		{ // si tratta della maschera del conto ristorazione
			dispose();
			Addebito da_addebitare = new Addebito(""RIST"", extra.getCodExtra(),
												  1, px.floatValue());
			(((MascheraContoRistorazione) padre).elenco_addebiti).addAddebito(da_addebitare);
			(((MascheraContoRistorazione) padre).elenco_extra_addebitati).addBeneServizio(extra);

            /* travaso delle quantita modificate nel nuovo array per poi 
               aggiungere il supplemento o riduzione appena inseriti */

			int nuove_quantita_mod[] = new int[((MascheraContoRistorazione) padre).elenco_addebiti.length()];
			for (int i = 0; i < ((MascheraContoRistorazione) padre).quantita_mod.length; i++)
				nuove_quantita_mod[i] = ((MascheraContoRistorazione) padre).quantita_mod[i];
            nuove_quantita_mod[nuove_quantita_mod.length-1] = 1;
            ((MascheraContoRistorazione) padre).quantita_mod = nuove_quantita_mod;
            
			((MascheraContoRistorazione) padre).continuaAggiornamento();
			padre.setEnabled(true);
		}
	}
}"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n\n', 'publ', 'ic', '▁class', '▁ag', 'gi', 'ung', 'ib', 'en', 'es', 'erv', 'iz', 'io', '▁ext', 'ends', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '\n', '{', '\n\t', 'but', 'ton', '▁ann', 'ull', 'a', '1,', '▁ann', 'ull', 'a', '2,', '▁con', 'fer', 'ma', '1,', '▁con', 'fer', 'ma', '2', ';', '\n\t', 'text', 'field', '▁t', 'f', '_', 'sup', 'p', ',', '▁t', 'f', '_', 'rid', ',', '▁t', 'f', '_', 'stan', 'za', '_', 'sup', 'p', ',', '▁t', 'f', '_', 'stan', 'za', '_', 'rid', ',', '▁t', 'f', '_', 'm', 'ot', '_', 'sup', 'p', ',', '▁t', 'f', '_', 'm', 'ot', '_', 'rid', ';', '\n\t', 'l', 'ab', 'el', '▁label', '_', 'sup', 'p', ',', '▁label', '_', 'rid', ',', '▁label', '_', 'stan', 'za', '_', 'sup', 'p', ',', '▁label', '_', 'stan', 'za', '_', 'rid', ',', '▁label', '_', 'm', 'ot', '_', 'sup', 'p', ',', '▁label', '_', 'm', 'ot', '_', 'rid', ';', '\n\t\n\t', 'publ', 'ic', '▁ag', 'gi', 'ung', 'ib', 'en', 'es', 'erv', 'iz', 'io', '(', 'fr', 'ame', '▁paren', 't', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', '""', 'c', 're', 'az', 'ion', 'e', '▁di', '▁un', '▁n', 'u', 'ovo', '▁bene', '/', 's', 'erv', 'iz', 'io', '/', 'rid', 'uz', 'ion', 'e', '/', 'sup', 'p', 'lement', 'o', '"")', ';', '\n\t\t', 'p', 'ad', 're', '▁=', '▁paren', 't', ';', '\n\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'set', 'up', 'n', 'u', 'ov', 'i', '(', ');', '\n\t\t', 'in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n\t\t', 's', 'ets', 'ize', '(', '45', '0,', '6', '00', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁set', 'up', 'n', 'u', 'ov', 'i', '(', ')', '\n\t', '{', '\n\t\t', '//', 'c', 're', 'o', '▁i', '▁p', 'ann', 'elli', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', '1)', ';', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '\n\t\t', 'l', 'ab', 'el', '▁=', '▁new', '▁label', '(', '""', 't', 'ip', 'i', '"")', ';', '\n\t\t', 'l', 'ab', 'el', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 't', 'ip', 'i', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'l', 'ab', 'el', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '3', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'ad', 'd', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '4', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\n\t\t', '//', 'att', 'ac', 'co', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '0', ']', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁supp', 'lement', 'o', '\n\t\t', 'pan', 'el', '[', '11', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'l', 'ab', 'el', '_', 'sup', 'p', '▁=', '▁new', '▁label', '(', '""', 'am', 'mont', 'are', '▁del', '▁supp', 'lement', 'o', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '"")', ';', '\n\t\t', 't', 'f', '_', 'sup', 'p', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁10', ');', '\n\t\t', 'l', 'ab', 'el', '_', 'stan', 'za', '_', 'sup', 'p', '▁=', '▁new', '▁label', '(', '""', 'a', '▁car', 'ico', '▁d', 'ella', '▁stan', 'za', '▁num', 'ero', '"")', ';', '\n\t\t', 't', 'f', '_', 'stan', 'za', '_', 'sup', 'p', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁6', ');', '\n\t\t', 'if', '▁(', 'p', 'ad', 're', '▁instance', 'of', '▁m', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '\n\t\t\t', 't', 'f', '_', 'stan', 'za', '_', 'sup', 'p', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'l', 'ab', 'el', '_', 'm', 'ot', '_', 'sup', 'p', '▁=', '▁new', '▁label', '(', '""', 'm', 'ot', 'iv', 'az', 'ion', 'e', '"")', ';', '\n\t\t', 't', 'f', '_', 'm', 'ot', '_', 'sup', 'p', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁3', '5)', ';', '\n\t\t', 'ann', 'ull', 'a', '1', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n\t\t', 'con', 'fer', 'ma', '1', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁label', '_', 'sup', 'p', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁t', 'f', '_', 'sup', 'p', ',', '▁1,', '▁', '0,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁label', '_', 'stan', 'za', '_', 'sup', 'p', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁t', 'f', '_', 'stan', 'za', '_', 'sup', 'p', ',', '▁1,', '▁1,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁label', '_', 'm', 'ot', '_', 'sup', 'p', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁t', 'f', '_', 'm', 'ot', '_', 'sup', 'p', ',', '▁1,', '▁2,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁ann', 'ull', 'a', '1,', '▁1,', '▁3,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁', '0,', '▁5,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁con', 'fer', 'ma', '1,', '▁3,', '▁3,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁10,', '▁5,', '▁', '0)', ';', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁rid', 'uz', 'ion', 'e', '\n\t\t', 'pan', 'el', '[', '12', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'l', 'ab', 'el', '_', 'rid', '▁=', '▁new', '▁label', '(', '""', 'am', 'mont', 'are', '▁d', 'ella', '▁rid', 'uz', 'ion', 'e', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '"")', ';', '\n\t\t', 't', 'f', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '0)', ';', '\n\t\t', 'l', 'ab', 'el', '_', 'stan', 'za', '_', 'rid', '▁=', '▁new', '▁label', '(', '""', 'a', '▁car', 'ico', '▁d', 'ella', '▁stan', 'za', '▁num', 'ero', '"")', ';', '\n\t\t', 't', 'f', '_', 'stan', 'za', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁6', ');', '\n\t\t', 'if', '▁(', 'p', 'ad', 're', '▁instance', 'of', '▁m', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '\n\t\t\t', 't', 'f', '_', 'stan', 'za', '_', 'rid', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'l', 'ab', 'el', '_', 'm', 'ot', '_', 'rid', '▁=', '▁new', '▁label', '(', '""', 'm', 'ot', 'iv', 'az', 'ion', 'e', '"")', ';', '\n\t\t', 't', 'f', '_', 'm', 'ot', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁3', '5)', ';', '\n\t\t', 'ann', 'ull', 'a', '2', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n\t\t', 'con', 'fer', 'ma', '2', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁label', '_', 'rid', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁t', 'f', '_', 'rid', ',', '▁1,', '▁', '0,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁label', '_', 'stan', 'za', '_', 'rid', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁t', 'f', '_', 'stan', 'za', '_', 'rid', ',', '▁1,', '▁1,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁label', '_', 'm', 'ot', '_', 'rid', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁t', 'f', '_', 'm', 'ot', '_', 'rid', ',', '▁1,', '▁2,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁ann', 'ull', 'a', '2,', '▁1,', '▁3,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁con', 'fer', 'ma', '2,', '▁2,', '▁3,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t', '}', '\n', '▁', '\n\t', 'publ', 'ic', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '3', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'ed', 'e', '(', '1', '1,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'sup', 'p', 'lement', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '4', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '4', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'ed', 'e', '(', '1', '2,', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'rid', 'uz', 'ion', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '2.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'sc', 'r', 'iv', 'is', 'ud', 'b', '(', '▁t', 'f', '_', 'sup', 'p', '.', 'get', 'text', '(', '),', '▁t', 'f', '_', 'stan', 'za', '_', 'sup', 'p', '.', 'get', 'text', '(', '),', '▁t', 'f', '_', 'm', 'ot', '_', 'sup', 'p', '.', 'get', 'text', '(', ')', '▁', ');', '\n\t\t\t', '}', '▁', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '2.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'sc', 'r', 'iv', 'is', 'ud', 'b', '(', '▁new', '▁string', '(', '""', '-', '""', '+', 't', 'f', '_', 'rid', '.', 'get', 'text', '(', ')', '),', '▁t', 'f', '_', 'stan', 'za', '_', 'rid', '.', 'get', 'text', '(', '),', '▁t', 'f', '_', 'm', 'ot', '_', 'rid', '.', 'get', 'text', '(', ')', '▁', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\n\t', 'v', 'oid', '▁inc', 'om', 'un', 'ed', 'e', '(', 'int', '▁num', 'ero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁0', ';', '\n\t\t', 'for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '13', ';', '+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', 'n', 'um', 'ero', '_', 'p', 'ann', 'ello', ']', ');', '\n\t\t', 'pan', 'el', '[', 'n', 'um', 'ero', '_', 'p', 'ann', 'ello', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁scr', 'iv', 'is', 'ud', 'b', '(', 'str', 'ing', '▁sup', '_', 'rid', ',', '▁string', '▁stan', 'za', ',', '▁string', '▁mot', ')', '\n\t', '{', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'com', 'p', 'let', 'ec', 'ode', '(', ');', '\n\t\t', 'fl', 'o', 'at', '▁p', 'x', '▁=', '▁flo', 'at', '.', 'value', 'of', '(', 'sup', '_', 'rid', ');', '\n\t\t', 'ext', 'ra', '▁=', '▁new', '▁ben', 'es', 'erv', 'iz', 'io', '(', '(', 'new', '▁string', '(', 'c', 'od', 'ice', ')', ')', '▁+', '▁t', 'orn', 'ac', 'od', 'id', '(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'id', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ')', '),', '▁', '\n\t\t\t\t\t\t\t', 'm', 'ot', ',', '▁p', 'x', '.', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n\t\t', 'if', '▁(', 'p', 'ad', 're', '▁instance', 'of', '▁m', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'stan', 'za', ')', '▁!', '=', '▁n', 'ull', ')', '▁&', '&', '▁ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'sup', '_', 'rid', ')', '▁&', '&', '▁(', 'm', 'ot', '.', 'l', 'ength', '(', ')', '▁', '<', '▁3', '3)', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'stan', 'za', ',', '▁fal', 'se', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '!', 'l', '_', 'so', 'g', 'g', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'new', 'id', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'up', 'd', 'ate', 'id', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ');', '\n\t\t\t\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'e', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'ext', 'ra', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁da', '_', 'ad', 'de', 'bit', 'are', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(', 'stan', 'za', ',', '▁extra', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t', '▁1,', '▁p', 'x', '.', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n\t\t\t\t\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'ead', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t\t\t\t\t\t', 'if', '▁(', '▁stan', 'za', '.', 'equ', 'als', '(', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'stan', 'za', '_', 'p', 'rec', ')', '▁)', '\n\t\t\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t\t\t', '(', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', ').', 'ad', 'd', 'ad', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', ');', '\n\t\t\t\t\t\t\t\t\t\t', '(', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', ').', 'ad', 'd', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'ext', 'ra', ');', '\n\t\t\t\n\t\t\t\t\t\t', '▁/', '*', '▁trav', 'as', 'o', '▁del', 'le', '▁quant', 'ita', '▁mod', 'ific', 'ate', '▁nel', '▁n', 'u', 'ovo', '▁arr', 'ay', '▁per', '▁po', 'i', '▁', '\n\t\t\t\t\t\t', '▁ag', 'gi', 'ung', 'ere', '▁il', '▁supp', 'lement', 'o', '▁o', '▁rid', 'uz', 'ion', 'e', '▁app', 'ena', '▁ins', 'er', 'iti', '▁*', '/', '\n\t\t\t\t', '▁', '\t\t', '▁int', '▁n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', ']', '▁=', '▁new', '▁int', '[', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ')', ']', ';', '\n\t\t', '▁', '\t', '▁', '\t\t', '▁', '\n\t', '▁', '\t\t\t\t\t', '▁for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁', '<', '▁(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t\t\t\t', '▁', '\t', 'n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', ';', '\n\t\t\t\t\t\t', '▁n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', 'n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '.', 'l', 'ength', '-1', ']', '▁=', '▁0', ';', '\n\t\t\t\t\t\t', '▁(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '▁=', '▁n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', ';', '\n\t\t', '▁', '\t\t\t', '▁', '\n\t\t\t\t\t\t\t\t\t\t', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'cont', 'in', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ');', '\n\t\t\n\t\t\t\t\t\t\t\t\t\t', '/', '*', '▁se', '▁il', '▁num', 'ero', '▁di', '▁stan', 'za', '▁era', '▁stat', 'o', '▁c', 'amb', 'i', 'ato', '▁sen', 'za', '▁add', 'e', 'bit', 'i', '\n\t\t\t\t\t\t\t\t\t\t', '▁all', 'ora', '▁r', 'im', 'et', 'to', '▁il', '▁preced', 'ent', 'e', '▁num', 'ero', '▁di', '▁stan', 'za', '▁nel', '▁text', 'field', '\n\t\t\t\t\t\t\t\t\t\t', '▁d', 'ella', '▁fin', 'est', 'ra', '▁add', 'e', 'bit', 'i', '▁*', '/', '\n\t\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t\t\t', 'if', '▁(', '▁!', '(', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'n', 'um', '_', 'stan', 'za', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'stan', 'za', '_', 'p', 'rec', ')', '▁)', '\n\t\t\t\t\t\t\t\t\t\t', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'n', 'um', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', '▁(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'stan', 'za', '_', 'p', 'rec', '▁', ');', '\n\t\t\t\t\t\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁n', 'ell', ""'"", 'ad', 'de', 'bit', 'are', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁n', 'ell', ""'"", 'ag', 'gi', 'orn', 'ament', 'o', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁non', '▁e', ""'"", '▁occup', 'ata', '!', '▁""', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁ne', 'i', '▁param', 'et', 'ri', '!', '"")', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '▁/', '/', '▁si', '▁tr', 'att', 'a', '▁d', 'ella', '▁m', 'asc', 'her', 'a', '▁del', '▁cont', 'o', '▁r', 'ist', 'or', 'az', 'ion', 'e', '\n\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t', 'ad', 'de', 'bit', 'o', '▁da', '_', 'ad', 'de', 'bit', 'are', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(', '""', 'rist', '"",', '▁extra', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t', '▁1,', '▁p', 'x', '.', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n\t\t\t', '(', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', ').', 'ad', 'd', 'ad', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', ');', '\n\t\t\t', '(', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', ').', 'ad', 'd', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'ext', 'ra', ');', '\n\n', '▁/', '*', '▁trav', 'as', 'o', '▁del', 'le', '▁quant', 'ita', '▁mod', 'ific', 'ate', '▁nel', '▁n', 'u', 'ovo', '▁arr', 'ay', '▁per', '▁po', 'i', '▁', '\n', '▁ag', 'gi', 'ung', 'ere', '▁il', '▁supp', 'lement', 'o', '▁o', '▁rid', 'uz', 'ion', 'e', '▁app', 'ena', '▁ins', 'er', 'iti', '▁*', '/', '\n\n\t\t\t', 'int', '▁n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', ']', '▁=', '▁new', '▁int', '[', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ')', ']', ';', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁', '<', '▁(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t\t', 'n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', ';', '\n', '▁n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', 'n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '.', 'l', 'ength', '-1', ']', '▁=', '▁1', ';', '\n', '▁(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '▁=', '▁n', 'u', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', ';', '\n', '▁', '\n\t\t\t', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '▁pad', 're', ').', 'cont', 'in', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ');', '\n\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n\n', 'public', '▁class', '▁ag', 'gi', 'ung', 'ib', 'enes', 'erv', 'izio', '▁extends', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '\n', '{', '\n\t', 'but', 'ton', '▁ann', 'ulla', '1,', '▁ann', 'ulla', '2,', '▁con', 'fer', 'ma', '1,', '▁con', 'fer', 'ma', '2', ';', '\n\t', 'text', 'field', '▁tf', '_', 'sup', 'p', ',', '▁tf', '_', 'rid', ',', '▁tf', '_', 'stan', 'za', '_', 'sup', 'p', ',', '▁tf', '_', 'stan', 'za', '_', 'rid', ',', '▁tf', '_', 'mot', '_', 'sup', 'p', ',', '▁tf', '_', 'mot', '_', 'rid', ';', '\n\t', 'l', 'abel', '▁label', '_', 'sup', 'p', ',', '▁label', '_', 'rid', ',', '▁label', '_', 'stan', 'za', '_', 'sup', 'p', ',', '▁label', '_', 'stan', 'za', '_', 'rid', ',', '▁label', '_', 'mot', '_', 'sup', 'p', ',', '▁label', '_', 'mot', '_', 'rid', ';', '\n\t\n\t', 'public', '▁ag', 'gi', 'ung', 'ib', 'enes', 'erv', 'izio', '(', 'frame', '▁parent', ')', '\n\t', '{', '\n\t\t', 'super', '(""', 'cre', 'azione', '▁di', '▁un', '▁nu', 'ovo', '▁bene', '/', 'serv', 'izio', '/', 'rid', 'uz', 'ione', '/', 'sup', 'p', 'lement', 'o', '"");', '\n\t\t', 'pad', 're', '▁=', '▁parent', ';', '\n\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'set', 'up', 'nu', 'ovi', '();', '\n\t\t', 'in', 'iz', 'ial', 'iz', 'za', '();', '\n\t\t', 's', 'ets', 'ize', '(', '45', '0,', '600', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁setup', 'nu', 'ovi', '()', '\n\t', '{', '\n\t\t', '//', 'cre', 'o', '▁i', '▁pann', 'elli', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', ']', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '[', '0', '].', 'set', 'lay', 'out', '(', 'grid', '1)', ';', '\n\t\t', 'pan', 'el', '[', '0', '].', 'set', 'vis', 'ible', '(', 'false', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '\n\t\t', 'l', 'abel', '▁=', '▁new', '▁label', '(""', 'tip', 'i', '"");', '\n\t\t', 'l', 'abel', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'tip', 'i', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'l', 'abel', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '0', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '1]', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '2', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '3', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'add', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '4', ']', ');', '\n\t\t', 'pan', 'el', '[', '0', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\n\t\t', '//', 'att', 'acco', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'lay', 'out', '(', 'grid', ');', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '0', ']', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁supplement', 'o', '\n\t\t', 'pan', 'el', '[', '11', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'l', 'abel', '_', 'sup', 'p', '▁=', '▁new', '▁label', '(""', 'am', 'mont', 'are', '▁del', '▁supplement', 'o', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n\t\t', 'tf', '_', 'sup', 'p', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10', ');', '\n\t\t', 'l', 'abel', '_', 'stan', 'za', '_', 'sup', 'p', '▁=', '▁new', '▁label', '(""', 'a', '▁car', 'ico', '▁della', '▁stan', 'za', '▁num', 'ero', '"");', '\n\t\t', 'tf', '_', 'stan', 'za', '_', 'sup', 'p', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁6', ');', '\n\t\t', 'if', '▁(', 'pad', 're', '▁instance', 'of', '▁masc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '\n\t\t\t', 'tf', '_', 'stan', 'za', '_', 'sup', 'p', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'l', 'abel', '_', 'mot', '_', 'sup', 'p', '▁=', '▁new', '▁label', '(""', 'mot', 'iv', 'azione', '"");', '\n\t\t', 'tf', '_', 'mot', '_', 'sup', 'p', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '5)', ';', '\n\t\t', 'ann', 'ulla', '1', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '1', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁label', '_', 'sup', 'p', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁tf', '_', 'sup', 'p', ',', '▁1,', '▁', '0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁label', '_', 'stan', 'za', '_', 'sup', 'p', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁tf', '_', 'stan', 'za', '_', 'sup', 'p', ',', '▁1,', '▁1,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁label', '_', 'mot', '_', 'sup', 'p', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁tf', '_', 'mot', '_', 'sup', 'p', ',', '▁1,', '▁2,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁ann', 'ulla', '1,', '▁1,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁', '0,', '▁5,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁con', 'fer', 'ma', '1,', '▁3,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁10,', '▁5,', '▁', '0)', ';', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁rid', 'uz', 'ione', '\n\t\t', 'pan', 'el', '[', '12', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'l', 'abel', '_', 'rid', '▁=', '▁new', '▁label', '(""', 'am', 'mont', 'are', '▁della', '▁rid', 'uz', 'ione', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n\t\t', 'tf', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n\t\t', 'l', 'abel', '_', 'stan', 'za', '_', 'rid', '▁=', '▁new', '▁label', '(""', 'a', '▁car', 'ico', '▁della', '▁stan', 'za', '▁num', 'ero', '"");', '\n\t\t', 'tf', '_', 'stan', 'za', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁6', ');', '\n\t\t', 'if', '▁(', 'pad', 're', '▁instance', 'of', '▁masc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '\n\t\t\t', 'tf', '_', 'stan', 'za', '_', 'rid', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'l', 'abel', '_', 'mot', '_', 'rid', '▁=', '▁new', '▁label', '(""', 'mot', 'iv', 'azione', '"");', '\n\t\t', 'tf', '_', 'mot', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '5)', ';', '\n\t\t', 'ann', 'ulla', '2', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '2', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁label', '_', 'rid', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁tf', '_', 'rid', ',', '▁1,', '▁', '0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁label', '_', 'stan', 'za', '_', 'rid', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁tf', '_', 'stan', 'za', '_', 'rid', ',', '▁1,', '▁1,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁label', '_', 'mot', '_', 'rid', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁tf', '_', 'mot', '_', 'rid', ',', '▁1,', '▁2,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁ann', 'ulla', '2,', '▁1,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁con', 'fer', 'ma', '2,', '▁2,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t', '}', '\n', '▁', '\n\t', 'public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n\t', '{', '\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '3', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'ede', '(', '1', '1,', '▁ben', 'es', 'erv', 'izio', '.', 'sup', 'p', 'lement', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '4', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'pr', 'ima', '_', 'sc', 'el', 'ta', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'ede', '(', '1', '2,', '▁ben', 'es', 'erv', 'izio', '.', 'rid', 'uz', 'ioni', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '2.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'sc', 'riv', 'is', 'ud', 'b', '(', '▁tf', '_', 'sup', 'p', '.', 'get', 'text', '(', '),', '▁tf', '_', 'stan', 'za', '_', 'sup', 'p', '.', 'get', 'text', '(', '),', '▁tf', '_', 'mot', '_', 'sup', 'p', '.', 'get', 'text', '()', '▁', ');', '\n\t\t\t', '}', '▁', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '2.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'sc', 'riv', 'is', 'ud', 'b', '(', '▁new', '▁string', '(""', '-', '""', '+', 'tf', '_', 'rid', '.', 'get', 'text', '()', '),', '▁tf', '_', 'stan', 'za', '_', 'rid', '.', 'get', 'text', '(', '),', '▁tf', '_', 'mot', '_', 'rid', '.', 'get', 'text', '()', '▁', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'v', 'oid', '▁incom', 'un', 'ede', '(', 'int', '▁num', 'ero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁0', ';', '\n\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', ']', ');', '\n\t\t', 'pan', 'el', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁scr', 'iv', 'is', 'ud', 'b', '(', 'string', '▁sup', '_', 'rid', ',', '▁string', '▁stan', 'za', ',', '▁string', '▁mot', ')', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'flo', 'at', '▁p', 'x', '▁=', '▁float', '.', 'value', 'of', '(', 'sup', '_', 'rid', ');', '\n\t\t', 'ext', 'ra', '▁=', '▁new', '▁ben', 'es', 'erv', 'izio', '(', '(', 'new', '▁string', '(', 'c', 'od', 'ice', '))', '▁+', '▁torn', 'ac', 'od', 'id', '(', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'id', 'ben', 'es', 'erv', 'izio', '()', '),', '▁', '\n\t\t\t\t\t\t\t', 'mot', ',', '▁p', 'x', '.', 'flo', 'at', 'value', '());', '\n\t\t', 'if', '▁(', 'pad', 're', '▁instance', 'of', '▁masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁(', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', ')', '▁!=', '▁null', ')', '▁&', '&', '▁ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'sup', '_', 'rid', ')', '▁&', '&', '▁(', 'mot', '.', 'length', '()', '▁<', '▁3', '3)', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'stan', 'za', ',', '▁false', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '!', 'l', '_', 'so', 'gg', '.', 'is', 'empt', 'y', '())', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'new', 'id', 'ben', 'es', 'erv', 'izio', '())', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'up', 'date', 'id', 'ben', 'es', 'erv', 'izio', '();', '\n\t\t\t\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'write', 'ben', 'es', 'erv', 'izio', '(', 'ext', 'ra', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁da', '_', 'ad', 'de', 'bit', 'are', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(', 'stan', 'za', ',', '▁extra', '.', 'get', 'code', 'xt', 'ra', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t', '▁1,', '▁p', 'x', '.', 'flo', 'at', 'value', '());', '\n\t\t\t\t\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'writ', 'ead', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t\t\t\t\t', 'if', '▁(', '▁stan', 'za', '.', 'equ', 'als', '(', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'stan', 'za', '_', 'p', 'rec', ')', '▁)', '\n\t\t\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t\t\t', '(', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', ').', 'add', 'ad', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', ');', '\n\t\t\t\t\t\t\t\t\t\t', '(', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', ').', 'add', 'ben', 'es', 'erv', 'izio', '(', 'ext', 'ra', ');', '\n\t\t\t\n\t\t\t\t\t\t', '▁/', '*', '▁trav', 'as', 'o', '▁delle', '▁quant', 'ita', '▁mod', 'ific', 'ate', '▁nel', '▁nu', 'ovo', '▁array', '▁per', '▁po', 'i', '▁', '\n\t\t\t\t\t\t', '▁ag', 'gi', 'ung', 'ere', '▁il', '▁supplement', 'o', '▁o', '▁rid', 'uz', 'ione', '▁app', 'ena', '▁ins', 'er', 'iti', '▁*', '/', '\n\t\t\t\t', '▁', '\t\t', '▁int', '▁nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[]', '▁=', '▁new', '▁int', '[', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', ']', ';', '\n\t\t', '▁', '\t', '▁', '\t\t', '▁', '\n\t', '▁', '\t\t\t\t\t', '▁for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁<', '▁(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t\t\t\t', '▁', '\t', 'nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', ';', '\n\t\t\t\t\t\t', '▁nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', 'nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '.', 'length', '-1', ']', '▁=', '▁0', ';', '\n\t\t\t\t\t\t', '▁(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '▁=', '▁nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', ';', '\n\t\t', '▁', '\t\t\t', '▁', '\n\t\t\t\t\t\t\t\t\t\t', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n\t\t\n\t\t\t\t\t\t\t\t\t\t', '/', '*', '▁se', '▁il', '▁num', 'ero', '▁di', '▁stan', 'za', '▁era', '▁stat', 'o', '▁camb', 'i', 'ato', '▁sen', 'za', '▁add', 'e', 'bit', 'i', '\n\t\t\t\t\t\t\t\t\t\t', '▁all', 'ora', '▁rim', 'etto', '▁il', '▁preced', 'ente', '▁num', 'ero', '▁di', '▁stan', 'za', '▁nel', '▁text', 'field', '\n\t\t\t\t\t\t\t\t\t\t', '▁della', '▁finest', 'ra', '▁add', 'e', 'bit', 'i', '▁*', '/', '\n\t\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t\t\t', 'if', '▁(', '▁!', '(', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'equ', 'als', '(', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'stan', 'za', '_', 'p', 'rec', ')', '▁)', '\n\t\t\t\t\t\t\t\t\t\t', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', '▁(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'stan', 'za', '_', 'p', 'rec', '▁', ');', '\n\t\t\t\t\t\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nell', ""'"", 'ad', 'de', 'bit', 'are', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nell', ""'"", 'aggi', 'orn', 'amento', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁non', '▁e', ""'"", '▁occup', 'ata', '!', '▁""', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁ne', 'i', '▁param', 'et', 'ri', '!', '"");', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '▁//', '▁si', '▁tr', 'atta', '▁della', '▁masc', 'hera', '▁del', '▁cont', 'o', '▁r', 'ist', 'or', 'azione', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'ad', 'de', 'bit', 'o', '▁da', '_', 'ad', 'de', 'bit', 'are', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(""', 'rist', '"",', '▁extra', '.', 'get', 'code', 'xt', 'ra', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t', '▁1,', '▁p', 'x', '.', 'flo', 'at', 'value', '());', '\n\t\t\t', '(', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', ').', 'add', 'ad', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', ');', '\n\t\t\t', '(', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', ').', 'add', 'ben', 'es', 'erv', 'izio', '(', 'ext', 'ra', ');', '\n\n', '▁/', '*', '▁trav', 'as', 'o', '▁delle', '▁quant', 'ita', '▁mod', 'ific', 'ate', '▁nel', '▁nu', 'ovo', '▁array', '▁per', '▁po', 'i', '▁', '\n', '▁ag', 'gi', 'ung', 'ere', '▁il', '▁supplement', 'o', '▁o', '▁rid', 'uz', 'ione', '▁app', 'ena', '▁ins', 'er', 'iti', '▁*', '/', '\n\n\t\t\t', 'int', '▁nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[]', '▁=', '▁new', '▁int', '[', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '▁pad', 're', ').', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', ']', ';', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁<', '▁(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t\t', 'nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', ']', ';', '\n', '▁nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '[', 'nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', '.', 'length', '-1', ']', '▁=', '▁1', ';', '\n', '▁(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '▁pad', 're', ').', 'qu', 'ant', 'ita', '_', 'mod', '▁=', '▁nu', 'ove', '_', 'qu', 'ant', 'ita', '_', 'mod', ';', '\n', '▁', '\n\t\t\t', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '▁pad', 're', ').', 'contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n\n', 'public', '▁class', '▁ag', 'gi', 'ung', 'ib', 'enes', 'erv', 'izio', '▁extends', '▁ins', 'er', 'isc', 'iben', 'is', 'erv', 'izi', '\n', '{', '\n\t', 'button', '▁ann', 'ulla', '1,', '▁ann', 'ulla', '2,', '▁confer', 'ma', '1,', '▁confer', 'ma', '2;', '\n\t', 'text', 'field', '▁tf', '_', 'supp', ',', '▁tf', '_', 'rid', ',', '▁tf', '_', 'stan', 'za', '_', 'supp', ',', '▁tf', '_', 'stan', 'za', '_', 'rid', ',', '▁tf', '_', 'mot', '_', 'supp', ',', '▁tf', '_', 'mot', '_', 'rid', ';', '\n\t', 'label', '▁label', '_', 'supp', ',', '▁label', '_', 'rid', ',', '▁label', '_', 'stan', 'za', '_', 'supp', ',', '▁label', '_', 'stan', 'za', '_', 'rid', ',', '▁label', '_', 'mot', '_', 'supp', ',', '▁label', '_', 'mot', '_', 'rid', ';', '\n\t\n\t', 'public', '▁ag', 'gi', 'ung', 'ib', 'enes', 'erv', 'izio', '(', 'frame', '▁parent', ')', '\n\t', '{', '\n\t\t', 'super', '(""', 'cre', 'azione', '▁di', '▁un', '▁nuovo', '▁bene', '/', 'serv', 'izio', '/', 'rid', 'uzione', '/', 'supplement', 'o', '"");', '\n\t\t', 'pad', 're', '▁=', '▁parent', ';', '\n\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'set', 'up', 'nu', 'ovi', '();', '\n\t\t', 'in', 'iz', 'ial', 'izza', '();', '\n\t\t', 'sets', 'ize', '(', '450,', '600', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n\n\t', 'void', '▁setup', 'nu', 'ovi', '()', '\n\t', '{', '\n\t\t', '//', 'cre', 'o', '▁i', '▁pann', 'elli', '\n\t\t', 'remove', '(', 'panel', '[0]', ');', '\n\t\t', 'panel', '[0]', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '[0', '].', 'set', 'layout', '(', 'grid', '1);', '\n\t\t', 'panel', '[0', '].', 'set', 'visible', '(', 'false', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '\n\t\t', 'label', '▁=', '▁new', '▁label', '(""', 'tip', 'i', '"");', '\n\t\t', 'label', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'tip', 'i', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'label', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'prima', '_', 'sc', 'el', 'ta', '[0]', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'prima', '_', 'sc', 'el', 'ta', '[1]', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'prima', '_', 'sc', 'el', 'ta', '[', '2]', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'prima', '_', 'sc', 'el', 'ta', '[', '3]', ');', '\n\t\t', 'panel', '[0', '].', 'add', '(', 'prima', '_', 'sc', 'el', 'ta', '[', '4]', ');', '\n\t\t', 'panel', '[0', '].', 'set', 'visible', '(', 'true', ');', '\n\n\t\t', '//', 'att', 'acco', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'layout', '(', 'grid', ');', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[0]', ');', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁supplement', 'o', '\n\t\t', 'panel', '[', '11', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'label', '_', 'supp', '▁=', '▁new', '▁label', '(""', 'am', 'mont', 'are', '▁del', '▁supplement', 'o', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n\t\t', 'tf', '_', 'supp', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10);', '\n\t\t', 'label', '_', 'stan', 'za', '_', 'supp', '▁=', '▁new', '▁label', '(""', 'a', '▁car', 'ico', '▁della', '▁stanza', '▁numero', '"");', '\n\t\t', 'tf', '_', 'stan', 'za', '_', 'supp', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁6', ');', '\n\t\t', 'if', '▁(', 'pad', 're', '▁instanceof', '▁masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '\n\t\t\t', 'tf', '_', 'stan', 'za', '_', 'supp', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'label', '_', 'mot', '_', 'supp', '▁=', '▁new', '▁label', '(""', 'mot', 'iv', 'azione', '"");', '\n\t\t', 'tf', '_', 'mot', '_', 'supp', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '5);', '\n\t\t', 'ann', 'ulla', '1', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '1', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁label', '_', 'supp', ',', '▁0,', '▁0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁tf', '_', 'supp', ',', '▁1,', '▁0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁label', '_', 'stan', 'za', '_', 'supp', ',', '▁0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁tf', '_', 'stan', 'za', '_', 'supp', ',', '▁1,', '▁1,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁label', '_', 'mot', '_', 'supp', ',', '▁0,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁tf', '_', 'mot', '_', 'supp', ',', '▁1,', '▁2,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁ann', 'ulla', '1,', '▁1,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁0,', '▁5,', '▁10);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁confer', 'ma', '1,', '▁3,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁10,', '▁5,', '▁', '0);', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁rid', 'uzione', '\n\t\t', 'panel', '[', '12', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'label', '_', 'rid', '▁=', '▁new', '▁label', '(""', 'am', 'mont', 'are', '▁della', '▁rid', 'uzione', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n\t\t', 'tf', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n\t\t', 'label', '_', 'stan', 'za', '_', 'rid', '▁=', '▁new', '▁label', '(""', 'a', '▁car', 'ico', '▁della', '▁stanza', '▁numero', '"");', '\n\t\t', 'tf', '_', 'stan', 'za', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁6', ');', '\n\t\t', 'if', '▁(', 'pad', 're', '▁instanceof', '▁masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '\n\t\t\t', 'tf', '_', 'stan', 'za', '_', 'rid', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'label', '_', 'mot', '_', 'rid', '▁=', '▁new', '▁label', '(""', 'mot', 'iv', 'azione', '"");', '\n\t\t', 'tf', '_', 'mot', '_', 'rid', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '5);', '\n\t\t', 'ann', 'ulla', '2', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '2', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁label', '_', 'rid', ',', '▁0,', '▁0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁tf', '_', 'rid', ',', '▁1,', '▁0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁label', '_', 'stan', 'za', '_', 'rid', ',', '▁0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁tf', '_', 'stan', 'za', '_', 'rid', ',', '▁1,', '▁1,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁label', '_', 'mot', '_', 'rid', ',', '▁0,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁tf', '_', 'mot', '_', 'rid', ',', '▁1,', '▁2,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁ann', 'ulla', '2,', '▁1,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁confer', 'ma', '2,', '▁2,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0);', '\n\t', '}', '\n', '▁', '\n\t', 'public', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n\t', '{', '\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[', '3', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'prima', '_', 'sc', 'el', 'ta', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'ede', '(', '11,', '▁benes', 'erv', 'izio', '.', 'supplement', 'i', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'prima', '_', 'sc', 'el', 'ta', '[', '4', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'prima', '_', 'sc', 'el', 'ta', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'com', 'un', 'ede', '(', '12,', '▁benes', 'erv', 'izio', '.', 'rid', 'uzioni', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '2.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'sc', 'riv', 'is', 'ud', 'b', '(', '▁tf', '_', 'supp', '.', 'get', 'text', '(),', '▁tf', '_', 'stan', 'za', '_', 'supp', '.', 'get', 'text', '(),', '▁tf', '_', 'mot', '_', 'supp', '.', 'get', 'text', '()', '▁);', '\n\t\t\t', '}', '▁', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '2.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'sc', 'riv', 'is', 'ud', 'b', '(', '▁new', '▁string', '(""', '-""', '+', 'tf', '_', 'rid', '.', 'get', 'text', '()),', '▁tf', '_', 'stan', 'za', '_', 'rid', '.', 'get', 'text', '(),', '▁tf', '_', 'mot', '_', 'rid', '.', 'get', 'text', '()', '▁);', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'void', '▁incom', 'un', 'ede', '(', 'int', '▁numero', '_', 'p', 'ann', 'ello', ',', '▁char', '▁c', ')', '\n\t', '{', '\n\t\t', 'level', '▁=', '▁0;', '\n\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'panel', '[', 'i', '].', 'is', 'visible', '())', '\n\t\t\t\t', 'remove', '(', 'panel', '[', 'i', ']);', '\n\t\t', '}', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', ']);', '\n\t\t', 'panel', '[', 'num', 'ero', '_', 'p', 'ann', 'ello', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁c', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁scr', 'ivis', 'ud', 'b', '(', 'string', '▁sup', '_', 'rid', ',', '▁string', '▁stanza', ',', '▁string', '▁mot', ')', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'float', '▁px', '▁=', '▁float', '.', 'value', 'of', '(', 'sup', '_', 'rid', ');', '\n\t\t', 'extra', '▁=', '▁new', '▁benes', 'erv', 'izio', '((', 'new', '▁string', '(', 'cod', 'ice', '))', '▁+', '▁torn', 'ac', 'od', 'id', '((', 'princip', 'ale', '.', 'config', ').', 'getid', 'ben', 'es', 'erv', 'izio', '()),', '▁', '\n\t\t\t\t\t\t\t', 'mot', ',', '▁px', '.', 'float', 'value', '());', '\n\t\t', 'if', '▁(', 'pad', 're', '▁instanceof', '▁maschera', 'ad', 'de', 'bit', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁((', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', ')', '▁!=', '▁null', ')', '▁&&', '▁ut', 'ils', '.', 'is', 'float', 'pos', '(', 'sup', '_', 'rid', ')', '▁&&', '▁(', 'mot', '.', 'length', '()', '▁<', '▁3', '3)', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'stan', 'za', ',', '▁false', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(!', 'l', '_', 'so', 'gg', '.', 'isempty', '())', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'new', 'id', 'ben', 'es', 'erv', 'izio', '())', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', '(', 'princip', 'ale', '.', 'config', ').', 'update', 'id', 'ben', 'es', 'erv', 'izio', '();', '\n\t\t\t\t\t\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'write', 'ben', 'es', 'erv', 'izio', '(', 'extra', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁da', '_', 'ad', 'de', 'bit', 'are', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(', 'stan', 'za', ',', '▁extra', '.', 'get', 'code', 'xt', 'ra', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t', '▁1,', '▁px', '.', 'float', 'value', '());', '\n\t\t\t\t\t\t\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'writ', 'ead', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t\t\t\t\t', 'if', '▁(', '▁stanza', '.', 'equals', '((', '(', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'stan', 'za', '_', 'prec', ')', '▁)', '\n\t\t\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t\t\t', '((', '(', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', ').', 'add', 'ad', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', ');', '\n\t\t\t\t\t\t\t\t\t\t', '((', '(', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'elen', 'co', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', ').', 'add', 'ben', 'es', 'erv', 'izio', '(', 'extra', ');', '\n\t\t\t\n\t\t\t\t\t\t', '▁/*', '▁trav', 'aso', '▁delle', '▁quant', 'ita', '▁mod', 'ificate', '▁nel', '▁nuovo', '▁array', '▁per', '▁po', 'i', '▁', '\n\t\t\t\t\t\t', '▁ag', 'gi', 'ung', 'ere', '▁il', '▁supplement', 'o', '▁o', '▁rid', 'uzione', '▁app', 'ena', '▁ins', 'er', 'iti', '▁*/', '\n\t\t\t\t', '▁', '\t\t', '▁int', '▁nu', 'ove', '_', 'quant', 'ita', '_', 'mod', '[]', '▁=', '▁new', '▁int', '[', '((', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '];', '\n\t\t', '▁', '\t', '▁', '\t\t', '▁', '\n\t', '▁', '\t\t\t\t\t', '▁for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁((', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'quant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++)', '\n\t\t\t\t\t\t', '▁', '\t', 'nu', 'ove', '_', 'quant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁((', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'quant', 'ita', '_', 'mod', '[', 'i', '];', '\n\t\t\t\t\t\t', '▁nu', 'ove', '_', 'quant', 'ita', '_', 'mod', '[', 'nu', 'ove', '_', 'quant', 'ita', '_', 'mod', '.', 'length', '-1]', '▁=', '▁0;', '\n\t\t\t\t\t\t', '▁((', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'quant', 'ita', '_', 'mod', '▁=', '▁nu', 'ove', '_', 'quant', 'ita', '_', 'mod', ';', '\n\t\t', '▁', '\t\t\t', '▁', '\n\t\t\t\t\t\t\t\t\t\t', '((', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n\t\t\n\t\t\t\t\t\t\t\t\t\t', '/*', '▁se', '▁il', '▁numero', '▁di', '▁stanza', '▁era', '▁stato', '▁camb', 'iato', '▁senza', '▁add', 'e', 'bit', 'i', '\n\t\t\t\t\t\t\t\t\t\t', '▁all', 'ora', '▁rim', 'etto', '▁il', '▁preced', 'ente', '▁numero', '▁di', '▁stanza', '▁nel', '▁text', 'field', '\n\t\t\t\t\t\t\t\t\t\t', '▁della', '▁finest', 'ra', '▁add', 'e', 'bit', 'i', '▁*/', '\n\t\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t\t\t', 'if', '▁(', '▁!', '((', '(', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'num', '_', 'stan', 'za', '.', 'get', 'text', '()', ').', 'equals', '((', '(', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'stan', 'za', '_', 'prec', ')', '▁)', '\n\t\t\t\t\t\t\t\t\t\t', '((', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', '▁((', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'stan', 'za', '_', 'prec', '▁);', '\n\t\t\t\t\t\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nell', ""'"", 'ad', 'de', 'bit', 'are', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nell', ""'"", 'aggi', 'orn', 'amento', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stanza', '▁ins', 'er', 'ita', '▁non', '▁e', ""'"", '▁occup', 'ata', '!', '▁""', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nei', '▁paramet', 'ri', '!', '"");', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '▁//', '▁si', '▁tr', 'atta', '▁della', '▁maschera', '▁del', '▁cont', 'o', '▁r', 'istor', 'azione', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'ad', 'de', 'bit', 'o', '▁da', '_', 'ad', 'de', 'bit', 'are', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(""', 'rist', '"",', '▁extra', '.', 'get', 'code', 'xt', 'ra', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t\t', '▁1,', '▁px', '.', 'float', 'value', '());', '\n\t\t\t', '((', '(', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '▁padre', ').', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', ').', 'add', 'ad', 'de', 'bit', 'o', '(', 'da', '_', 'ad', 'de', 'bit', 'are', ');', '\n\t\t\t', '((', '(', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '▁padre', ').', 'elen', 'co', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', ').', 'add', 'ben', 'es', 'erv', 'izio', '(', 'extra', ');', '\n\n', '▁/*', '▁trav', 'aso', '▁delle', '▁quant', 'ita', '▁mod', 'ificate', '▁nel', '▁nuovo', '▁array', '▁per', '▁po', 'i', '▁', '\n', '▁ag', 'gi', 'ung', 'ere', '▁il', '▁supplement', 'o', '▁o', '▁rid', 'uzione', '▁app', 'ena', '▁ins', 'er', 'iti', '▁*/', '\n\n\t\t\t', 'int', '▁nu', 'ove', '_', 'quant', 'ita', '_', 'mod', '[]', '▁=', '▁new', '▁int', '[', '((', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '▁padre', ').', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '];', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁((', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '▁padre', ').', 'quant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++)', '\n\t\t\t\t', 'nu', 'ove', '_', 'quant', 'ita', '_', 'mod', '[', 'i', ']', '▁=', '▁((', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '▁padre', ').', 'quant', 'ita', '_', 'mod', '[', 'i', '];', '\n', '▁nu', 'ove', '_', 'quant', 'ita', '_', 'mod', '[', 'nu', 'ove', '_', 'quant', 'ita', '_', 'mod', '.', 'length', '-1]', '▁=', '▁1;', '\n', '▁((', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '▁padre', ').', 'quant', 'ita', '_', 'mod', '▁=', '▁nu', 'ove', '_', 'quant', 'ita', '_', 'mod', ';', '\n', '▁', '\n\t\t\t', '((', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '▁padre', ').', 'contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}']"~"packag interfacc import java awt import java awt event import common util import moduli public class aggiungi bene servizio extend inserisci beni servizi button annulla annulla conferma conferma text field supp rid stanza supp stanza rid mot supp mot rid label label supp label rid label stanza supp label stanza rid label mot supp label mot rid public aggiungi bene servizio frame parent super creazion nuovo bene servizio riduzion supplemento padr parent padr set enabl fals setup nuovi inizializza set size set visibl true void setup nuovi creo pannelli remov panel panel new panel panel set layout grid panel set visibl fals creo pannello alto label new label tipi label set font configurazion sistema font titolo tipi new checkbox group panel add label panel add prima scelta panel add prima scelta panel add prima scelta panel add prima scelta panel add prima scelta panel set visibl true attacco pannello alto frame set layout grid add panel creo pannello supplemento panel set layout gridbag label supp new label ammontar del supplemento principal config get valuta supp new text field ("""", label_stanza_supp new label carico della stanza numero ""); tf_stanza_supp new text field ("""", padr instanceof maschera conto ristorazion tf_stanza_supp set enabl fals label_mot_supp new label motivazion ""); tf_mot_supp new text field ("""", annulla1 new button annulla ""); conferma1 new button conferma ""); util constrain panel label_supp grid bag constraint none grid bag constraint west util constrain panel tf_supp grid bag constraint none grid bag constraint west util constrain panel label_stanza_supp grid bag constraint none grid bag constraint west util constrain panel tf_stanza_supp grid bag constraint none grid bag constraint west util constrain panel label_mot_supp grid bag constraint none grid bag constraint west util constrain panel tf_mot_supp grid bag constraint none grid bag constraint west util constrain panel annulla1 grid bag constraint none grid bag constraint east util constrain panel conferma1 grid bag constraint none grid bag constraint west creo pannello riduzion panel set layout gridbag label_rid new label ammontar della riduzion ""+( principal config get valuta ()+"".""); tf_rid new text field ("""", label_stanza_rid new label carico della stanza numero ""); tf_stanza_rid new text field ("""", padr instanceof maschera conto ristorazion tf_stanza_rid set enabl fals label_mot_rid new label motivazion ""); tf_mot_rid new text field ("""", annulla2 new button annulla ""); conferma2 new button conferma ""); util constrain panel label_rid grid bag constraint none grid bag constraint west util constrain panel tf_rid grid bag constraint none grid bag constraint west util constrain panel label_stanza_rid grid bag constraint none grid bag constraint west util constrain panel tf_stanza_rid grid bag constraint none grid bag constraint west util constrain panel label_mot_rid grid bag constraint none grid bag constraint west util constrain panel tf_mot_rid grid bag constraint none grid bag constraint west util constrain panel annulla2 grid bag constraint none grid bag constraint east util constrain panel conferma2 grid bag constraint none grid bag constraint west public void inizializza prima_scelta add item listen new item listen public void item state chang item event prima_scelta get state ()) comun bene servizio supplementi }); prima_scelta add item listen new item listen public void item state chang item event prima_scelta get state ()) comun bene servizio riduzioni }); annulla1 add action listen new action listen public void action perform action event dispos (); padr set enabl true }); annulla2 add action listen new action listen public void action perform action event dispos (); padr set enabl true }); conferma1 add action listen new action listen public void action perform action event scrivi tf_supp get text (), tf_stanza_supp get text (), tf_mot_supp get text }); conferma2 add action listen new action listen public void action perform action event scrivi new string (""-""+ tf_rid get text ()), tf_stanza_rid get text (), tf_mot_rid get text }); init void comun int numero_pannello char level int ;++ panel visibl ()) remov panel ]); add panel numero_pannello ]); panel numero_pannello set visibl true set visibl true codic compos code level void scrivi string sup_rid string stanza string mot messag dialog msg complet code (); float float valu sup_rid extra new bene servizio new string codic torna cod principal config get beneservizio ()), mot float valu ()); padr instanceof maschera addeb principal read stanza stanza null util float pos sup_rid mot length lista soggiornanti l_sogg principal found soggiornanti stanza fals l_sogg null l_sogg empti ()) int principal new beneservizio ()) data base principal config updat beneservizio (); principal write bene servizio extra data base addebito da_addebitar new addebito stanza extra get cod extra (), float valu ()); principal write addebito da_addebitar data base dispos (); stanza equal ((( maschera addeb padr stanza_prec ((( maschera addeb padr elenco_addeb add addebito da_addebitar ((( maschera addeb padr add bene servizio extra travaso dell quantita modif nel nuovo array per poi aggiunger supplemento riduzion appena inser int nuove_quantita_mod new int [(( maschera addeb padr elenco_addeb length ()]; int maschera addeb padr quantita_mod length ++) nuove_quantita_mod maschera addeb padr quantita_mod nuove_quantita_mod nuove_quantita_mod length maschera addeb padr quantita_mod nuove_quantita_mod maschera addeb padr continua aggiornamento (); numero stanza era stato cambiato senza addeb allora rimetto precedent numero stanza nel textfield della finestra addeb !((( maschera addeb padr num_stanza get text ()). equal ((( maschera addeb padr stanza_prec maschera addeb padr num_stanza set text maschera addeb padr stanza_prec padr set enabl true els msg new messag dialog error nell addebitar data base str error )); els msg new messag dialog problemi con databas data base str error )); els msg new messag dialog error nell aggiornamento data base str error )); els msg new messag dialog stanza inserita non occupata ""); els msg new messag dialog problemi con databas ""); els msg new messag dialog error nei parametri !""); els tratta della maschera del conto ristorazion dispos (); addebito da_addebitar new addebito rist extra get cod extra (), float valu ()); ((( maschera conto ristorazion padr elenco_addeb add addebito da_addebitar ((( maschera conto ristorazion padr add bene servizio extra travaso dell quantita modif nel nuovo array per poi aggiunger supplemento riduzion appena inser int nuove_quantita_mod new int [(( maschera conto ristorazion padr elenco_addeb length ()]; int maschera conto ristorazion padr quantita_mod length ++) nuove_quantita_mod maschera conto ristorazion padr quantita_mod nuove_quantita_mod nuove_quantita_mod length maschera conto ristorazion padr quantita_mod nuove_quantita_mod maschera conto ristorazion padr continua aggiornamento (); padr set enabl true"
45~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/DefinizioneStagionalita.java~DefinizioneStagionalita.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import moduli.*;
import common.def.*;
import common.utility.Utils;
import java.util.Date;

public class DefinizioneStagionalita extends Frame
{
 	//Dichiaro gli oggetti che mi serviranno per costruire la finestra
   	Panel panel1, panel2, panel3, panel4, panel5;
   	Label etichetta1, etichetta2, etichetta3, etichetta, etichetta4;
   	Button  Annulla, Conferma, Aggiungi;
   	TextField data_inizio, data_fine;
   	List list;
   	GridBagLayout gridbag = new GridBagLayout();
	CheckboxGroup checkbox_group;
   	Checkbox[] checkboxes; 

	// variabili locali di supporto
   	char conf_stag_corr[], conf_stag_prox[];
   	Configurazione config_locale;
   	int anno_corr, anno_prox;

	// segue la finestra madre di questa
  	Frame config; 	

    public DefinizioneStagionalita(Frame parent)
    {
        super(""Definisione delle stagionalita'"");
        config = parent;
        config.setEnabled(false);
        setupPanels();
		initVectors();
        init();
        pack();
        setVisible(true);
    }
                     
	void setupPanels()
	{
		this.setFont(ConfigurazioneSistema.font_base);
		//Creo i TextField
		data_inizio = new TextField("""", 12);
		data_fine = new TextField("""", 12);

		//Creo i pulsanti e ne disabilito due
		Annulla = new Button(""Annulla"");
		Conferma = new Button(""Conferma"");
		Aggiungi = new Button(""Aggiungi"");
		Aggiungi.setEnabled(false);
			
		//Creo le etichette
		etichetta= new Label(""Periodo di soggiorno"");
		etichetta.setFont(ConfigurazioneSistema.font_titolo);
		etichetta1 = new Label(""Data inizio:"");
		etichetta2 = new Label(""    Data fine:"");
		etichetta3 = new Label (""Prospetto della distriduzione delle staginalita':"");
		etichetta3.setFont(new Font(""Courier"", Font.BOLD, 12));
		Label space = new Label(""               "");

		//Creo la lista
		list = new List(15,false);
           
		//Creo il pannello in alto      
		panel1 = new Panel();
		panel1.setLayout(gridbag);
		Utils.constrain(panel1, etichetta, 0, 0, 4, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
		Utils.constrain(panel1, etichetta1, 0, 1, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
		Utils.constrain(panel1, data_inizio, 1, 1, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST,1.0,0.0,0,0,0,0);
		//Utils.constrain(panel1, space, 2, 1, 1, 1, GridBagConstraints.NONE,
			//GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);            
		Utils.constrain(panel1, etichetta2, 3, 1, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
		Utils.constrain(panel1,data_fine, 4, 1, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
		Utils.constrain(panel1, space, 5, 1, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);                         

		//Creo un pannello con due pulsanti
		panel2 = new Panel();
		panel2.setLayout(gridbag);
		Utils.constrain(panel2, Aggiungi, 0, 0, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.CENTER, 0.3, 0.0, 0, 0, 0, 10);

		//Creo un Checkbox ad esclusione
		checkbox_group = new CheckboxGroup();
		checkboxes = new Checkbox[5];
		checkboxes[0] = new Checkbox("" Alta stagione"",checkbox_group,false);
		checkboxes[1] = new Checkbox("" Media stagione"",checkbox_group,false);
		checkboxes[2] = new Checkbox("" Bassa stagione"",checkbox_group,false);
		checkboxes[3] = new Checkbox("" Bassissima stagione"",checkbox_group,false);
		checkboxes[4] = new Checkbox("" Chiusura"",checkbox_group,false);
			
		etichetta4= new Label(""Stagionalita' disponibili"");
		etichetta4.setFont(new Font(""Courier"", Font.BOLD, 12));
      		
		//Creo il pannello 
		panel3 = new Panel();
		panel3.setLayout(gridbag);
		Utils.constrain(panel3, etichetta4, 0, 1, 4, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
		Utils.constrain(panel3, checkboxes[0], 0, 2, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0); 
		Utils.constrain(panel3, checkboxes[1], 0, 3, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
		Utils.constrain(panel3, checkboxes[2], 0, 4, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
		Utils.constrain(panel3, checkboxes[3], 0, 5, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
		Utils.constrain(panel3, checkboxes[4], 0, 6, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);                        

		//Creo il pannello contenente la TextArea
		panel4 = new Panel();
		panel4.setLayout(gridbag);
		Utils.constrain(panel4, etichetta3, 0, 0, 2, 1, GridBagConstraints.NONE,
			GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);
		Utils.constrain(panel4,list, 0, 1, 4, 3, GridBagConstraints.BOTH,
			GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);

		//Creo il pannello in basso con due pulsanti
		panel5 = new Panel();
		panel5.setLayout(gridbag);
		Utils.constrain(panel5, Annulla, 0, 1, 1, 1, GridBagConstraints.NONE,
			GridBagConstraints.SOUTHEAST, 0.3, 0.0, 0, 0, 0, 10);
		Utils.constrain(panel5, Conferma, 1, 1, 1, 1,GridBagConstraints.NONE,
			GridBagConstraints.SOUTHWEST, 0.3, 0.0, 0, 0, 0, 0);

		//Attacco i pannelli al frame
		this.setLayout(gridbag);
		Utils.constrain(this, panel1, 0, 0, 4, 2, GridBagConstraints.HORIZONTAL,
			GridBagConstraints.NORTHWEST, 1.0, 0.0, 15, 10, 10, 10);
		Utils.constrain(this, panel3, 0, 2, 4, 1,GridBagConstraints.HORIZONTAL,
			GridBagConstraints.NORTHEAST, 1.0, 0.0, 10, 10, 0, 10);
		Utils.constrain(this, panel2, 0, 5, 4, 1,GridBagConstraints.HORIZONTAL,
			GridBagConstraints.NORTHEAST, 1.0, 0.0, 10, 10, 0, 10);
		Utils.constrain(this, panel4, 0, 6, 4, 3, GridBagConstraints.BOTH,
			GridBagConstraints.CENTER, 2.0, 2.0, 10, 10, 10, 10);
		Utils.constrain(this, panel5, 0, 10, 4, 1, GridBagConstraints.HORIZONTAL,
			GridBagConstraints.SOUTHWEST, 1.0, 1.0, 10, 10, 15, 10);
	}

	//Gestione degli eventi
	public void init()
	{
		//Ascoltatore degli eventi della finestra
		checkboxes[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if ( (checkboxes[0].getState()) && (!(data_inizio.getText()).equals("""")) && (!(data_fine.getText()).equals("""")) )
				{
					Aggiungi.setEnabled(true);
				}
			}
		});

		checkboxes[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if ( (checkboxes[1].getState()) && (!(data_inizio.getText()).equals("""")) && (!(data_fine.getText()).equals("""")) )
				{
					Aggiungi.setEnabled(true);
				}
            }
		});

		checkboxes[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if ( (checkboxes[2].getState()) && (!(data_inizio.getText()).equals("""")) && (!(data_fine.getText()).equals("""")) )
				{
					Aggiungi.setEnabled(true);
				}
			}
		});

		checkboxes[3].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if ( (checkboxes[3].getState()) && (!(data_inizio.getText()).equals("""")) && (!(data_fine.getText()).equals("""")) )
				{
					Aggiungi.setEnabled(true);
				}
			}
		});

		checkboxes[4].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if ( (checkboxes[4].getState()) && (!(data_inizio.getText()).equals("""")) && (!(data_fine.getText()).equals("""")) )
				{
					Aggiungi.setEnabled(true);
				}
			}
		});
       
		/* Nel caso di annullamento dell'operazione ripristino i vettori
		 * originali della Configurazione
		 */   
            
		Annulla.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				config.setEnabled(true);
			}
		});
            
		//Ascoltatore del pulsante Conferma, se il pulsante viene premuto si apre
		//la finestra riguardante l'inserimento della prenotazione
		Aggiungi.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startAggiungi();
            }
        });
        
        Conferma.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
            {
				ConfigurazioneSistema.new_stag_anno_corr = (config_locale.getStagAnnoCorr());
				ConfigurazioneSistema.new_stag_anno_prox = (config_locale.getStagAnnoProx());
				dispose();
				config.setEnabled(true);
			}
		});
    }
	
	void startAggiungi()
	{
		char flag;
		String lista[];
		
		if (Utils.dateEPeriodoCorretti(this, data_inizio.getText(), data_fine.getText()))
		{
			if (checkboxes[0].getState() == true)
				flag = Flag.ALTA_STAGIONE;
			else	
				if (checkboxes[1].getState() == true)
					flag = Flag.MEDIA_STAGIONE;
				else
					if (checkboxes[2].getState() == true)
						flag = Flag.BASSA_STAGIONE;
					else
						if (checkboxes[3].getState() == true)
							flag = Flag.BASSISSIMA_STAGIONE;
						else
							flag = Flag.CHIUSO;
			config_locale.setStagione(new Date(DateUtils.invertDate(DateUtils.parseDate(data_inizio.getText()))), new Date(DateUtils.invertDate(DateUtils.parseDate(data_fine.getText()))), flag);
	        conf_stag_corr = config_locale.getStagionalita(Const.ANNO_CORRENTE);
	        conf_stag_prox = config_locale.getStagionalita(Const.ANNO_PROSSIMO);
			visStagionalita();
			data_inizio.setText("""");	
			data_fine.setText("""");
			for (int i = 0; i<checkboxes.length; i++)
				checkboxes[i].setState(false);
			Aggiungi.setEnabled(false);
		}
	}
	
    /* 	Creo un duplicato dei vettori delle stagionalita per permettere
     *	l'annullamento delle operazioni
     */
    void initVectors()
    {
        config_locale = new Configurazione();
        config_locale.setStagAnnoCorr(ConfigurazioneSistema.new_stag_anno_corr);
        config_locale.setStagAnnoProx(ConfigurazioneSistema.new_stag_anno_prox);
        conf_stag_corr = config_locale.getStagionalita(Const.ANNO_CORRENTE);
        conf_stag_prox = config_locale.getStagionalita(Const.ANNO_PROSSIMO);
        Costanti cost = new Costanti();
        anno_corr = cost.getAnnoCorr();
        anno_prox = cost.getAnnoProx();
  		visStagionalita();
    }
    
	void visStagionalita()
	{
		String lista[] = reportStagionalita();
		if (list.getItemCount() > 0)
			list.removeAll();
		for (int k = 0; k<lista.length; k++)
			list.addItem(lista[k]);
	}
	
	String[] reportStagionalita()
	{
		String lista_loc[] = new String[30];
		int index = 0;
		String str_aus;
		initLista(lista_loc);
		
	//Scansione dei 5 tipi di stagionalita per l'anno corrente
 		str_aus = Utils.scanVector(Flag.ALTA_STAGIONE, conf_stag_corr, anno_corr);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di alta stagione per l'anno ""+anno_corr);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		str_aus = Utils.scanVector(Flag.MEDIA_STAGIONE, conf_stag_corr, anno_corr);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di media stagione per l'anno ""+anno_corr);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		str_aus = Utils.scanVector(Flag.BASSA_STAGIONE, conf_stag_corr, anno_corr);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di bassa stagione per l'anno ""+anno_corr);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		str_aus = Utils.scanVector(Flag.BASSISSIMA_STAGIONE, conf_stag_corr, anno_corr);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di bassissima stagione per l'anno ""+anno_corr);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		str_aus = Utils.scanVector(Flag.CHIUSO, conf_stag_corr, anno_corr);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di chiusura per l'anno ""+anno_corr);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
	
	//	Scansione dei 5 tipi di stagionalita per l'anno seguente 	
		str_aus = Utils.scanVector(Flag.ALTA_STAGIONE, conf_stag_prox, anno_prox);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di alta stagione per l'anno ""+anno_prox);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		str_aus = Utils.scanVector(Flag.MEDIA_STAGIONE, conf_stag_prox, anno_prox);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di media stagione per l'anno ""+anno_prox);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		str_aus = Utils.scanVector(Flag.BASSA_STAGIONE, conf_stag_prox, anno_prox);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di bassa stagione per l'anno ""+anno_prox);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		str_aus = Utils.scanVector(Flag.BASSISSIMA_STAGIONE, conf_stag_prox, anno_prox);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di bassissima stagione per l'anno ""+anno_prox);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		str_aus = Utils.scanVector(Flag.CHIUSO, conf_stag_prox, anno_prox);
 		if ( !( str_aus.equals("""") ) )
		{	
			lista_loc[index] = new String(""Periodi di chiusura per l'anno ""+anno_prox);
			lista_loc[index+1] = new String(str_aus);
			index = index+3;
		}
		return lista_loc;
	}
	
	void initLista(String lista[])
	{
		for (int k = 0; k < lista.length; k++)
			lista[k] = new String("""");
	}	
}

             
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', 'ut', 'ils', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n\n', 'publ', 'ic', '▁class', '▁defin', 'iz', 'ion', 'est', 'ag', 'ional', 'ita', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', '//', 'd', 'ich', 'i', 'aro', '▁gl', 'i', '▁og', 'get', 'ti', '▁che', '▁mi', '▁serv', 'ir', 'ann', 'o', '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁fin', 'est', 'ra', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3,', '▁pan', 'el', '4,', '▁pan', 'el', '5', ';', '\n', '▁', '\t', 'l', 'ab', 'el', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁et', 'ic', 'he', 'tt', 'a', '4', ';', '\n', '▁', '\t', 'but', 'ton', '▁ann', 'ull', 'a', ',', '▁con', 'fer', 'ma', ',', '▁ag', 'gi', 'ung', 'i', ';', '\n', '▁', '\t', 'text', 'field', '▁data', '_', 'in', 'iz', 'io', ',', '▁data', '_', 'f', 'ine', ';', '\n', '▁', '\t', 'list', '▁list', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'che', 'ck', 'box', 'gro', 'up', '▁check', 'box', '_', 'gro', 'up', ';', '\n', '▁', '\t', 'che', 'ck', 'box', '[', ']', '▁check', 'box', 'es', ';', '▁', '\n\n\t', '//', '▁vari', 'ab', 'ili', '▁local', 'i', '▁di', '▁support', 'o', '\n', '▁', '\t', 'char', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', '[', ']', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', '[', ']', ';', '\n', '▁', '\t', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'e', '▁conf', 'ig', '_', 'l', 'oc', 'ale', ';', '\n', '▁', '\t', 'int', '▁ann', 'o', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'pro', 'x', ';', '\n\n\t', '//', '▁seg', 'ue', '▁la', '▁fin', 'est', 'ra', '▁mad', 're', '▁di', '▁quest', 'a', '\n', '▁', '\t', 'fr', 'ame', '▁conf', 'ig', ';', '▁', '\t\n\n', '▁public', '▁defin', 'iz', 'ion', 'est', 'ag', 'ional', 'ita', '(', 'fr', 'ame', '▁paren', 't', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'de', 'fin', 'ision', 'e', '▁del', 'le', '▁st', 'ag', 'ional', 'ita', ""'"", '"")', ';', '\n', '▁conf', 'ig', '▁=', '▁paren', 't', ';', '\n', '▁conf', 'ig', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n\t\t', 'in', 'it', 'v', 'ect', 'ors', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁', '\n\t', 'v', 'oid', '▁set', 'up', 'pan', 'els', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n\t\t', '//', 'c', 're', 'o', '▁i', '▁text', 'field', '\n\t\t', 'd', 'ata', '_', 'in', 'iz', 'io', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁12', ');', '\n\t\t', 'd', 'ata', '_', 'f', 'ine', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁12', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '\n\t\t', 'ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n\t\t', 'ag', 'gi', 'ung', 'i', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ag', 'gi', 'ung', 'i', '"")', ';', '\n\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\n\t\t', '//', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n\t\t', 'etic', 'he', 'tt', 'a', '=', '▁new', '▁label', '(', '""', 'per', 'iod', 'o', '▁di', '▁s', 'og', 'gi', 'orn', 'o', '"")', ';', '\n\t\t', 'etic', 'he', 'tt', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'etic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁in', 'iz', 'io', ':', '"")', ';', '\n\t\t', 'etic', 'he', 'tt', 'a', '2', '▁=', '▁new', '▁label', '(', '""', '▁data', '▁fine', ':', '"")', ';', '\n\t\t', 'etic', 'he', 'tt', 'a', '3', '▁=', '▁new', '▁label', '▁(""', 'pro', 'sp', 'et', 'to', '▁d', 'ella', '▁dist', 'rid', 'uz', 'ion', 'e', '▁del', 'le', '▁st', 'ag', 'inal', 'ita', ""'"", ':', '"")', ';', '\n\t\t', 'etic', 'he', 'tt', 'a', '3.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n\t\t', 'l', 'ab', 'el', '▁space', '▁=', '▁new', '▁label', '(', '""', '▁""', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁la', '▁list', 'a', '\n\t\t', 'list', '▁=', '▁new', '▁list', '(', '1', '5,', 'f', 'al', 'se', ');', '\n', '▁', '\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁', '\n\t\t', 'pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁data', '_', 'in', 'iz', 'io', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '0,', '0,', '0,', '0)', ';', '\n\t\t', '//', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁space', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', '//', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'd', 'ata', '_', 'f', 'ine', ',', '▁4,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁space', ',', '▁5,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n\n\t\t', '//', 'c', 're', 'o', '▁un', '▁p', 'ann', 'ello', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '\n\t\t', 'pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ag', 'gi', 'ung', 'i', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁10', ');', '\n\n\t\t', '//', 'c', 're', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n\t\t', 'che', 'ck', 'box', '_', 'gro', 'up', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t', 'che', 'ck', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '5', ']', ';', '\n\t\t', 'che', 'ck', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁al', 'ta', '▁st', 'ag', 'ion', 'e', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n\t\t', 'che', 'ck', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁media', '▁st', 'ag', 'ion', 'e', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n\t\t', 'che', 'ck', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁bass', 'a', '▁st', 'ag', 'ion', 'e', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n\t\t', 'che', 'ck', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁bass', 'iss', 'ima', '▁st', 'ag', 'ion', 'e', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n\t\t', 'che', 'ck', 'box', 'es', '[', '4', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁ch', 'ius', 'ura', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n\t\t\t\n\t\t', 'etic', 'he', 'tt', 'a', '4', '=', '▁new', '▁label', '(', '""', 'st', 'ag', 'ional', 'ita', ""'"", '▁dis', 'pon', 'ib', 'ili', '"")', ';', '\n\t\t', 'etic', 'he', 'tt', 'a', '4.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁', '\t\t\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁', '\n\t\t', 'pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁', '0,', '▁1,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '0', ']', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '1', ']', ',', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '2', ']', ',', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '3', ']', ',', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '4', ']', ',', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁cont', 'en', 'ent', 'e', '▁la', '▁text', 'are', 'a', '\n\t\t', 'pan', 'el', '4', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '4.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', 'list', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '\n\t\t', 'pan', 'el', '5', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t', 'pan', 'el', '5.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'so', 'ut', 'heast', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁con', 'fer', 'ma', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁2,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'ort', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁10,', '▁10,', '▁', '0,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁5,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'ort', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁10,', '▁10,', '▁', '0,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '4,', '▁', '0,', '▁6,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁2.', '0,', '▁2.', '0,', '▁10,', '▁10,', '▁10,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '5,', '▁', '0,', '▁10,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁10,', '▁10,', '▁15,', '▁10', ');', '\n\t', '}', '\n\n\t', '//', 'gest', 'ion', 'e', '▁deg', 'li', '▁event', 'i', '\n\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n\t', '{', '\n\t\t', '//', 'as', 'col', 't', 'at', 'ore', '▁deg', 'li', '▁event', 'i', '▁d', 'ella', '▁fin', 'est', 'ra', '\n\t\t', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', '}', '\n', '▁}', '\n\t\t', '}', ');', '\n\n\t\t', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'che', 'ck', 'box', 'es', '[', '4', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '4', ']', '.', 'get', 'state', '(', ')', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', '/', '*', '▁nel', '▁cas', 'o', '▁di', '▁ann', 'ull', 'ament', 'o', '▁d', 'ell', ""'"", 'oper', 'az', 'ion', 'e', '▁r', 'ip', 'rist', 'ino', '▁i', '▁v', 'ett', 'ori', '\n\t\t', '▁*', '▁original', 'i', '▁d', 'ella', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '\n\t\t', '▁*', '/', '▁', '\n', '▁', '\n\t\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'con', 'f', 'ig', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', '//', 'as', 'col', 't', 'at', 'ore', '▁del', '▁p', 'uls', 'ante', '▁con', 'fer', 'ma', ',', '▁se', '▁il', '▁p', 'uls', 'ante', '▁vi', 'ene', '▁prem', 'ut', 'o', '▁si', '▁ap', 're', '\n\t\t', '//', 'la', '▁fin', 'est', 'ra', '▁rig', 'u', 'ard', 'ante', '▁l', ""'"", 'ins', 'er', 'iment', 'o', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '\n\t\t', 'ag', 'gi', 'ung', 'i', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'ag', 'gi', 'ung', 'i', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', '▁=', '▁(', 'con', 'f', 'ig', '_', 'l', 'oc', 'ale', '.', 'get', 'st', 'ag', 'ann', 'oc', 'or', 'r', '(', ')', ');', '\n\t\t\t\t', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', '▁=', '▁(', 'con', 'f', 'ig', '_', 'l', 'oc', 'ale', '.', 'get', 'st', 'ag', 'ann', 'op', 'ro', 'x', '(', ')', ');', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'con', 'f', 'ig', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁}', '\n\t\n\t', 'v', 'oid', '▁start', 'ag', 'gi', 'ung', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'char', '▁flag', ';', '\n\t\t', 'str', 'ing', '▁list', 'a', '[', ']', ';', '\n\t\t\n\t\t', 'if', '▁(', 'ut', 'ils', '.', 'd', 'ate', 'eper', 'iod', 'oc', 'or', 'ret', 'ti', '(', 'this', ',', '▁data', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', '),', '▁data', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t', 'fl', 'ag', '▁=', '▁flag', '.', 'al', 'ta', '_', 'st', 'ag', 'ion', 'e', ';', '\n\t\t\t', 'el', 'se', '\t\n\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t\t', 'fl', 'ag', '▁=', '▁flag', '.', 'med', 'ia', '_', 'st', 'ag', 'ion', 'e', ';', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t\t\t', 'fl', 'ag', '▁=', '▁flag', '.', 'b', 'ass', 'a', '_', 'st', 'ag', 'ion', 'e', ';', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t\t\t\t', 'fl', 'ag', '▁=', '▁flag', '.', 'b', 'ass', 'iss', 'ima', '_', 'st', 'ag', 'ion', 'e', ';', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'fl', 'ag', '▁=', '▁flag', '.', 'ch', 'ius', 'o', ';', '\n\t\t\t', 'con', 'f', 'ig', '_', 'l', 'oc', 'ale', '.', 'set', 'st', 'ag', 'ion', 'e', '(', 'new', '▁date', '(', 'd', 'ate', 'ut', 'ils', '.', 'in', 'vert', 'd', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ')', ')', '),', '▁new', '▁date', '(', 'd', 'ate', 'ut', 'ils', '.', 'in', 'vert', 'd', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ')', ')', '),', '▁flag', ');', '\n\t', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', '▁=', '▁conf', 'ig', '_', 'l', 'oc', 'ale', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'con', 'st', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ');', '\n\t', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', '▁=', '▁conf', 'ig', '_', 'l', 'oc', 'ale', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'con', 'st', '.', 'ann', 'o', '_', 'p', 'ross', 'im', 'o', ');', '\n\t\t\t', 'vis', 'st', 'ag', 'ional', 'ita', '(', ');', '\n\t\t\t', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\t\n\t\t\t', 'd', 'ata', '_', 'f', 'ine', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'che', 'ck', 'box', 'es', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t\t', 'che', 'ck', 'box', 'es', '[', 'i', ']', '.', 'set', 'state', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n', '▁/', '*', '▁', '\t', 'c', 're', 'o', '▁un', '▁d', 'up', 'l', 'ic', 'ato', '▁de', 'i', '▁v', 'ett', 'ori', '▁del', 'le', '▁st', 'ag', 'ional', 'ita', '▁per', '▁per', 'met', 'ter', 'e', '\n', '▁*', '\t', 'l', ""'"", 'ann', 'ull', 'ament', 'o', '▁del', 'le', '▁oper', 'az', 'ion', 'i', '\n', '▁*', '/', '\n', '▁vo', 'id', '▁init', 'v', 'ect', 'ors', '(', ')', '\n', '▁{', '\n', '▁conf', 'ig', '_', 'l', 'oc', 'ale', '▁=', '▁new', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '(', ');', '\n', '▁conf', 'ig', '_', 'l', 'oc', 'ale', '.', 'set', 'st', 'ag', 'ann', 'oc', 'or', 'r', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', ');', '\n', '▁conf', 'ig', '_', 'l', 'oc', 'ale', '.', 'set', 'st', 'ag', 'ann', 'op', 'ro', 'x', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', ');', '\n', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', '▁=', '▁conf', 'ig', '_', 'l', 'oc', 'ale', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'con', 'st', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ');', '\n', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', '▁=', '▁conf', 'ig', '_', 'l', 'oc', 'ale', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'con', 'st', '.', 'ann', 'o', '_', 'p', 'ross', 'im', 'o', ');', '\n', '▁cost', 'ant', 'i', '▁cost', '▁=', '▁new', '▁cost', 'ant', 'i', '(', ');', '\n', '▁ann', 'o', '_', 'cor', 'r', '▁=', '▁cost', '.', 'get', 'ann', 'oc', 'or', 'r', '(', ');', '\n', '▁ann', 'o', '_', 'pro', 'x', '▁=', '▁cost', '.', 'get', 'ann', 'op', 'ro', 'x', '(', ');', '\n', '▁', '\t\t', 'vis', 'st', 'ag', 'ional', 'ita', '(', ');', '\n', '▁}', '\n', '▁', '\n\t', 'v', 'oid', '▁vis', 'st', 'ag', 'ional', 'ita', '(', ')', '\n\t', '{', '\n\t\t', 'str', 'ing', '▁list', 'a', '[', ']', '▁=', '▁report', 'st', 'ag', 'ional', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'list', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t', 'list', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t', 'for', '▁(', 'int', '▁k', '▁=', '▁0', ';', '▁k', '<', 'list', 'a', '.', 'l', 'ength', ';', '▁k', '+', '+', ')', '\n\t\t\t', 'list', '.', 'ad', 'd', 'it', 'em', '(', 'list', 'a', '[', 'k', ']', ');', '\n\t', '}', '\n\t\n\t', 'str', 'ing', '[', ']', '▁report', 'st', 'ag', 'ional', 'ita', '(', ')', '\n\t', '{', '\n\t\t', 'str', 'ing', '▁list', 'a', '_', 'l', 'oc', '[', ']', '▁=', '▁new', '▁string', '[', '30', ']', ';', '\n\t\t', 'int', '▁index', '▁=', '▁0', ';', '\n\t\t', 'str', 'ing', '▁str', '_', 'aus', ';', '\n\t\t', 'in', 'it', 'list', 'a', '(', 'list', 'a', '_', 'l', 'oc', ');', '\n\t\t\n\t', '//', 'sc', 'ans', 'ion', 'e', '▁de', 'i', '▁5', '▁tip', 'i', '▁di', '▁st', 'ag', 'ional', 'ita', '▁per', '▁l', ""'"", 'ann', 'o', '▁cor', 'ren', 'te', '\n', '▁', '\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'al', 'ta', '_', 'st', 'ag', 'ion', 'e', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁al', 'ta', '▁st', 'ag', 'ion', 'e', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'med', 'ia', '_', 'st', 'ag', 'ion', 'e', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁media', '▁st', 'ag', 'ion', 'e', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'b', 'ass', 'a', '_', 'st', 'ag', 'ion', 'e', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁bass', 'a', '▁st', 'ag', 'ion', 'e', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'b', 'ass', 'iss', 'ima', '_', 'st', 'ag', 'ion', 'e', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁bass', 'iss', 'ima', '▁st', 'ag', 'ion', 'e', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'ch', 'ius', 'o', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁ch', 'ius', 'ura', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\n\t', '//', '\t', 'sc', 'ans', 'ion', 'e', '▁de', 'i', '▁5', '▁tip', 'i', '▁di', '▁st', 'ag', 'ional', 'ita', '▁per', '▁l', ""'"", 'ann', 'o', '▁se', 'gu', 'ent', 'e', '▁', '\t\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'al', 'ta', '_', 'st', 'ag', 'ion', 'e', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁al', 'ta', '▁st', 'ag', 'ion', 'e', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'med', 'ia', '_', 'st', 'ag', 'ion', 'e', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁media', '▁st', 'ag', 'ion', 'e', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'b', 'ass', 'a', '_', 'st', 'ag', 'ion', 'e', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁bass', 'a', '▁st', 'ag', 'ion', 'e', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'b', 'ass', 'iss', 'ima', '_', 'st', 'ag', 'ion', 'e', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁bass', 'iss', 'ima', '▁st', 'ag', 'ion', 'e', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'fl', 'ag', '.', 'ch', 'ius', 'o', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(', '""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', ']', '▁=', '▁new', '▁string', '(', '""', 'per', 'iod', 'i', '▁di', '▁ch', 'ius', 'ura', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'l', 'oc', '[', 'ind', 'ex', '+', '1', ']', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'ind', 'ex', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁list', 'a', '_', 'l', 'oc', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁init', 'list', 'a', '(', 'str', 'ing', '▁list', 'a', '[', ']', ')', '\n\t', '{', '\n\t\t', 'for', '▁(', 'int', '▁k', '▁=', '▁0', ';', '▁k', '▁', '<', '▁list', 'a', '.', 'l', 'ength', ';', '▁k', '+', '+', ')', '\n\t\t\t', 'list', 'a', '[', 'k', ']', '▁=', '▁new', '▁string', '(', '""', '"")', ';', '\n\t', '}', '\t\n', '}', '\n\n', '▁', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', 'ut', 'ils', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n\n', 'public', '▁class', '▁defin', 'iz', 'ion', 'est', 'ag', 'ional', 'ita', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', '//', 'd', 'ichi', 'aro', '▁gl', 'i', '▁og', 'get', 'ti', '▁che', '▁mi', '▁serv', 'ir', 'ann', 'o', '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁finest', 'ra', '\n', '▁', '\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4,', '▁panel', '5', ';', '\n', '▁', '\t', 'l', 'abel', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', ',', '▁et', 'iche', 'tta', '4', ';', '\n', '▁', '\t', 'but', 'ton', '▁ann', 'ulla', ',', '▁con', 'fer', 'ma', ',', '▁ag', 'gi', 'ung', 'i', ';', '\n', '▁', '\t', 'text', 'field', '▁data', '_', 'in', 'izio', ',', '▁data', '_', 'f', 'ine', ';', '\n', '▁', '\t', 'list', '▁list', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁', '\t', 'check', 'box', '[]', '▁check', 'box', 'es', ';', '▁', '\n\n\t', '//', '▁vari', 'ab', 'ili', '▁local', 'i', '▁di', '▁support', 'o', '\n', '▁', '\t', 'char', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', '[', '],', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', '[]', ';', '\n', '▁', '\t', 'con', 'fig', 'ur', 'azione', '▁config', '_', 'loc', 'ale', ';', '\n', '▁', '\t', 'int', '▁ann', 'o', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'pro', 'x', ';', '\n\n\t', '//', '▁seg', 'ue', '▁la', '▁finest', 'ra', '▁mad', 're', '▁di', '▁quest', 'a', '\n', '▁', '\t', 'frame', '▁config', ';', '▁', '\t\n\n', '▁public', '▁defin', 'iz', 'ion', 'est', 'ag', 'ional', 'ita', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'defin', 'ision', 'e', '▁delle', '▁stag', 'ional', 'ita', ""'"", '"");', '\n', '▁config', '▁=', '▁parent', ';', '\n', '▁config', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n\t\t', 'init', 'v', 'ectors', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n', '▁', '\n\t', 'v', 'oid', '▁setup', 'pan', 'els', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n\t\t', '//', 'cre', 'o', '▁i', '▁text', 'field', '\n\t\t', 'data', '_', 'in', 'izio', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n\t\t', 'data', '_', 'f', 'ine', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n\n\t\t', '//', 'cre', 'o', '▁i', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '\n\t\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'aggi', 'ung', 'i', '▁=', '▁new', '▁button', '(""', 'aggi', 'ung', 'i', '"");', '\n\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\n\t\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n\t\t', 'etic', 'he', 'tta', '=', '▁new', '▁label', '(""', 'per', 'iod', 'o', '▁di', '▁s', 'og', 'gi', 'orno', '"");', '\n\t\t', 'etic', 'he', 'tta', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'etic', 'he', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', ':', '"");', '\n\t\t', 'etic', 'he', 'tta', '2', '▁=', '▁new', '▁label', '(""', '▁data', '▁fine', ':', '"");', '\n\t\t', 'etic', 'he', 'tta', '3', '▁=', '▁new', '▁label', '▁(""', 'pro', 'sp', 'etto', '▁della', '▁dist', 'rid', 'uz', 'ione', '▁delle', '▁stag', 'inal', 'ita', ""':"", '"");', '\n\t\t', 'etic', 'he', 'tta', '3.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n\t\t', 'l', 'abel', '▁space', '▁=', '▁new', '▁label', '(""', '▁""', ');', '\n\n\t\t', '//', 'cre', 'o', '▁la', '▁list', 'a', '\n\t\t', 'list', '▁=', '▁new', '▁list', '(', '1', '5,', 'false', ');', '\n', '▁', '\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁', '\n\t\t', 'pan', 'el', '1', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁data', '_', 'in', 'izio', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '0,', '0,', '0,', '0)', ';', '\n\t\t', '//', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁space', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', '//', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '2,', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'data', '_', 'f', 'ine', ',', '▁4,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁space', ',', '▁5,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n\n\t\t', '//', 'cre', 'o', '▁un', '▁pann', 'ello', '▁con', '▁due', '▁puls', 'anti', '\n\t\t', 'pan', 'el', '2', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ag', 'gi', 'ung', 'i', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁10', ');', '\n\n\t\t', '//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n\t\t', 'check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '5', ']', ';', '\n\t\t', 'check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁alta', '▁stag', 'ione', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t', 'check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁media', '▁stag', 'ione', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t', 'check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁bass', 'a', '▁stag', 'ione', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t', 'check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁bass', 'iss', 'ima', '▁stag', 'ione', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t', 'check', 'box', 'es', '[', '4', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁ch', 'ius', 'ura', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t\t\n\t\t', 'etic', 'he', 'tta', '4', '=', '▁new', '▁label', '(""', 'st', 'ag', 'ional', 'ita', ""'"", '▁dis', 'pon', 'ib', 'ili', '"");', '\n\t\t', 'etic', 'he', 'tta', '4.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁', '\t\t\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁', '\n\t\t', 'pan', 'el', '3', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'iche', 'tta', '4,', '▁', '0,', '▁1,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '0', '],', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '1', '],', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '2', '],', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '3', '],', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁check', 'box', 'es', '[', '4', '],', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁text', 'area', '\n\t\t', 'pan', 'el', '4', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '4.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁et', 'iche', 'tta', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', 'list', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '\n\t\t', 'pan', 'el', '5', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'pan', 'el', '5.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁ann', 'ulla', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁con', 'fer', 'ma', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n\t\t', '//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁2,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.', '0,', '▁0.', '0,', '▁10,', '▁10,', '▁', '0,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁5,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.', '0,', '▁0.', '0,', '▁10,', '▁10,', '▁', '0,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '4,', '▁', '0,', '▁6,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁2.', '0,', '▁2.', '0,', '▁10,', '▁10,', '▁10,', '▁10', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '5,', '▁', '0,', '▁10,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.', '0,', '▁1.', '0,', '▁10,', '▁10,', '▁15,', '▁10', ');', '\n\t', '}', '\n\n\t', '//', 'gest', 'ione', '▁deg', 'li', '▁event', 'i', '\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', '//', 'as', 'col', 't', 'atore', '▁deg', 'li', '▁event', 'i', '▁della', '▁finest', 'ra', '\n\t\t', 'check', 'box', 'es', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '▁&', '&', '▁(', '!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'check', 'box', 'es', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '▁&', '&', '▁(', '!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n', '▁}', '\n\t\t', '}', ');', '\n\n\t\t', 'check', 'box', 'es', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '())', '▁&', '&', '▁(', '!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'check', 'box', 'es', '[', '3', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '▁&', '&', '▁(', '!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'check', 'box', 'es', '[', '4', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '4', '].', 'get', 'state', '())', '▁&', '&', '▁(', '!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁&', '&', '▁(', '!', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', '/', '*', '▁nel', '▁cas', 'o', '▁di', '▁ann', 'ull', 'amento', '▁dell', ""'"", 'oper', 'azione', '▁rip', 'rist', 'ino', '▁i', '▁v', 'ett', 'ori', '\n\t\t', '▁*', '▁original', 'i', '▁della', '▁config', 'ur', 'azione', '\n\t\t', '▁*', '/', '▁', '\n', '▁', '\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'con', 'fig', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', '//', 'as', 'col', 't', 'atore', '▁del', '▁puls', 'ante', '▁con', 'fer', 'ma', ',', '▁se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁si', '▁ap', 're', '\n\t\t', '//', 'la', '▁finest', 'ra', '▁rig', 'u', 'ard', 'ante', '▁l', ""'"", 'ins', 'er', 'iment', 'o', '▁della', '▁pren', 'ot', 'azione', '\n\t\t', 'aggi', 'ung', 'i', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'aggi', 'ung', 'i', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', '▁=', '▁(', 'con', 'fig', '_', 'loc', 'ale', '.', 'get', 'st', 'ag', 'ann', 'oc', 'or', 'r', '());', '\n\t\t\t\t', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', '▁=', '▁(', 'con', 'fig', '_', 'loc', 'ale', '.', 'get', 'st', 'ag', 'ann', 'op', 'ro', 'x', '());', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'con', 'fig', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁}', '\n\t\n\t', 'v', 'oid', '▁start', 'aggi', 'ung', 'i', '()', '\n\t', '{', '\n\t\t', 'char', '▁flag', ';', '\n\t\t', 'string', '▁list', 'a', '[]', ';', '\n\t\t\n\t\t', 'if', '▁(', 'ut', 'ils', '.', 'date', 'eper', 'iod', 'oc', 'or', 'ret', 'ti', '(', 'this', ',', '▁data', '_', 'in', 'izio', '.', 'get', 'text', '(', '),', '▁data', '_', 'f', 'ine', '.', 'get', 'text', '()', '))', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'al', 'ta', '_', 'st', 'ag', 'ione', ';', '\n\t\t\t', 'el', 'se', '\t\n\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'media', '_', 'st', 'ag', 'ione', ';', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'bass', 'a', '_', 'st', 'ag', 'ione', ';', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'bass', 'iss', 'ima', '_', 'st', 'ag', 'ione', ';', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'ch', 'ius', 'o', ';', '\n\t\t\t', 'con', 'fig', '_', 'loc', 'ale', '.', 'set', 'st', 'ag', 'ione', '(', 'new', '▁date', '(', 'date', 'ut', 'ils', '.', 'in', 'vert', 'date', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', '))', '),', '▁new', '▁date', '(', 'date', 'ut', 'ils', '.', 'in', 'vert', 'date', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', '))', '),', '▁flag', ');', '\n\t', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', '▁=', '▁config', '_', 'loc', 'ale', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'const', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ');', '\n\t', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', '▁=', '▁config', '_', 'loc', 'ale', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'const', '.', 'ann', 'o', '_', 'p', 'ross', 'imo', ');', '\n\t\t\t', 'vis', 'st', 'ag', 'ional', 'ita', '();', '\n\t\t\t', 'data', '_', 'in', 'izio', '.', 's', 'ette', 'xt', '(""', '"");', '\t\n\t\t\t', 'data', '_', 'f', 'ine', '.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'check', 'box', 'es', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t\t', 'check', 'box', 'es', '[', 'i', '].', 'set', 'state', '(', 'false', ');', '\n\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n', '▁/', '*', '▁', '\t', 'cre', 'o', '▁un', '▁dup', 'lic', 'ato', '▁dei', '▁v', 'ett', 'ori', '▁delle', '▁stag', 'ional', 'ita', '▁per', '▁per', 'met', 'ter', 'e', '\n', '▁*', '\t', 'l', ""'"", 'ann', 'ull', 'amento', '▁delle', '▁oper', 'az', 'ioni', '\n', '▁*', '/', '\n', '▁void', '▁init', 'v', 'ectors', '()', '\n', '▁{', '\n', '▁config', '_', 'loc', 'ale', '▁=', '▁new', '▁config', 'ur', 'azione', '();', '\n', '▁config', '_', 'loc', 'ale', '.', 'set', 'st', 'ag', 'ann', 'oc', 'or', 'r', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', ');', '\n', '▁config', '_', 'loc', 'ale', '.', 'set', 'st', 'ag', 'ann', 'op', 'ro', 'x', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', ');', '\n', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', '▁=', '▁config', '_', 'loc', 'ale', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'const', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ');', '\n', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', '▁=', '▁config', '_', 'loc', 'ale', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'const', '.', 'ann', 'o', '_', 'p', 'ross', 'imo', ');', '\n', '▁cost', 'anti', '▁cost', '▁=', '▁new', '▁cost', 'anti', '();', '\n', '▁ann', 'o', '_', 'cor', 'r', '▁=', '▁cost', '.', 'get', 'ann', 'oc', 'or', 'r', '();', '\n', '▁ann', 'o', '_', 'pro', 'x', '▁=', '▁cost', '.', 'get', 'ann', 'op', 'ro', 'x', '();', '\n', '▁', '\t\t', 'vis', 'st', 'ag', 'ional', 'ita', '();', '\n', '▁}', '\n', '▁', '\n\t', 'v', 'oid', '▁vis', 'st', 'ag', 'ional', 'ita', '()', '\n\t', '{', '\n\t\t', 'string', '▁list', 'a', '[]', '▁=', '▁report', 'st', 'ag', 'ional', 'ita', '();', '\n\t\t', 'if', '▁(', 'list', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t', 'list', '.', 'rem', 'ove', 'all', '();', '\n\t\t', 'for', '▁(', 'int', '▁k', '▁=', '▁0', ';', '▁k', '<', 'list', 'a', '.', 'length', ';', '▁k', '++', ')', '\n\t\t\t', 'list', '.', 'add', 'it', 'em', '(', 'list', 'a', '[', 'k', ']', ');', '\n\t', '}', '\n\t\n\t', 'string', '[]', '▁report', 'st', 'ag', 'ional', 'ita', '()', '\n\t', '{', '\n\t\t', 'string', '▁list', 'a', '_', 'loc', '[]', '▁=', '▁new', '▁string', '[', '30', ']', ';', '\n\t\t', 'int', '▁index', '▁=', '▁0', ';', '\n\t\t', 'string', '▁str', '_', 'aus', ';', '\n\t\t', 'init', 'list', 'a', '(', 'list', 'a', '_', 'loc', ');', '\n\t\t\n\t', '//', 'sc', 'ans', 'ione', '▁dei', '▁5', '▁tip', 'i', '▁di', '▁stag', 'ional', 'ita', '▁per', '▁l', ""'"", 'ann', 'o', '▁cor', 'ren', 'te', '\n', '▁', '\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'al', 'ta', '_', 'st', 'ag', 'ione', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁alta', '▁stag', 'ione', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'media', '_', 'st', 'ag', 'ione', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁media', '▁stag', 'ione', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'bass', 'a', '_', 'st', 'ag', 'ione', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁bass', 'a', '▁stag', 'ione', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'bass', 'iss', 'ima', '_', 'st', 'ag', 'ione', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁bass', 'iss', 'ima', '▁stag', 'ione', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'ch', 'ius', 'o', ',', '▁conf', '_', 'st', 'ag', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁ch', 'ius', 'ura', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\n\t', '//', '\t', 'sc', 'ans', 'ione', '▁dei', '▁5', '▁tip', 'i', '▁di', '▁stag', 'ional', 'ita', '▁per', '▁l', ""'"", 'ann', 'o', '▁se', 'gu', 'ente', '▁', '\t\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'al', 'ta', '_', 'st', 'ag', 'ione', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁alta', '▁stag', 'ione', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'media', '_', 'st', 'ag', 'ione', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁media', '▁stag', 'ione', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'bass', 'a', '_', 'st', 'ag', 'ione', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁bass', 'a', '▁stag', 'ione', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'bass', 'iss', 'ima', '_', 'st', 'ag', 'ione', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁bass', 'iss', 'ima', '▁stag', 'ione', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'sc', 'an', 'v', 'ector', '(', 'flag', '.', 'ch', 'ius', 'o', ',', '▁conf', '_', 'st', 'ag', '_', 'pro', 'x', ',', '▁ann', 'o', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equ', 'als', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'per', 'iod', 'i', '▁di', '▁ch', 'ius', 'ura', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t', 'list', 'a', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁list', 'a', '_', 'loc', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁init', 'list', 'a', '(', 'string', '▁list', 'a', '[', '])', '\n\t', '{', '\n\t\t', 'for', '▁(', 'int', '▁k', '▁=', '▁0', ';', '▁k', '▁<', '▁list', 'a', '.', 'length', ';', '▁k', '++', ')', '\n\t\t\t', 'list', 'a', '[', 'k', ']', '▁=', '▁new', '▁string', '(""', '"");', '\n\t', '}', '\t\n', '}', '\n\n', '▁', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.', 'utils', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n\n', 'public', '▁class', '▁defin', 'iz', 'ion', 'estag', 'ional', 'ita', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', '//', 'd', 'ichi', 'aro', '▁gli', '▁og', 'get', 'ti', '▁che', '▁mi', '▁serv', 'ir', 'anno', '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁finest', 'ra', '\n', '▁', '\t', 'panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4,', '▁panel', '5;', '\n', '▁', '\t', 'label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', ',', '▁et', 'iche', 'tta', '4;', '\n', '▁', '\t', 'button', '▁ann', 'ulla', ',', '▁confer', 'ma', ',', '▁ag', 'gi', 'ungi', ';', '\n', '▁', '\t', 'text', 'field', '▁data', '_', 'in', 'izio', ',', '▁data', '_', 'fine', ';', '\n', '▁', '\t', 'list', '▁list', ';', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁', '\t', 'check', 'box', '[]', '▁check', 'boxes', ';', '▁', '\n\n\t', '//', '▁vari', 'ab', 'ili', '▁local', 'i', '▁di', '▁support', 'o', '\n', '▁', '\t', 'char', '▁conf', '_', 'stag', '_', 'cor', 'r', '[', '],', '▁conf', '_', 'stag', '_', 'pro', 'x', '[]', ';', '\n', '▁', '\t', 'config', 'ur', 'azione', '▁config', '_', 'loc', 'ale', ';', '\n', '▁', '\t', 'int', '▁anno', '_', 'cor', 'r', ',', '▁anno', '_', 'pro', 'x', ';', '\n\n\t', '//', '▁segue', '▁la', '▁finest', 'ra', '▁madre', '▁di', '▁quest', 'a', '\n', '▁', '\t', 'frame', '▁config', ';', '▁', '\t\n\n', '▁public', '▁defin', 'iz', 'ion', 'estag', 'ional', 'ita', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'defin', 'ision', 'e', '▁delle', '▁stag', 'ional', 'ita', ""'"", '"");', '\n', '▁config', '▁=', '▁parent', ';', '\n', '▁config', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n\t\t', 'init', 'v', 'ectors', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁set', 'visible', '(', 'true', ');', '\n', '▁}', '\n', '▁', '\n\t', 'void', '▁setup', 'pan', 'els', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n\t\t', '//', 'cre', 'o', '▁i', '▁text', 'field', '\n\t\t', 'data', '_', 'in', 'izio', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n\t\t', 'data', '_', 'fine', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n\n\t\t', '//', 'cre', 'o', '▁i', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '\n\t\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n\t\t', 'con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n\t\t', 'aggi', 'ungi', '▁=', '▁new', '▁button', '(""', 'aggi', 'ungi', '"");', '\n\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\n\t\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n\t\t', 'etic', 'he', 'tta', '=', '▁new', '▁label', '(""', 'period', 'o', '▁di', '▁sog', 'gi', 'orno', '"");', '\n\t\t', 'etic', 'he', 'tta', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'etic', 'he', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', ':', '"");', '\n\t\t', 'etic', 'he', 'tta', '2', '▁=', '▁new', '▁label', '(""', '▁data', '▁fine', ':', '"");', '\n\t\t', 'etic', 'he', 'tta', '3', '▁=', '▁new', '▁label', '▁(""', 'pro', 'sp', 'etto', '▁della', '▁dist', 'rid', 'uzione', '▁delle', '▁stag', 'inal', 'ita', ""':"", '"");', '\n\t\t', 'etic', 'he', 'tta', '3.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n\t\t', 'label', '▁space', '▁=', '▁new', '▁label', '(""', '▁""', ');', '\n\n\t\t', '//', 'cre', 'o', '▁la', '▁list', 'a', '\n\t\t', 'list', '▁=', '▁new', '▁list', '(1', '5,', 'false', ');', '\n', '▁', '\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁', '\n\t\t', 'panel', '1', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', ',', '▁0,', '▁0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁data', '_', 'in', 'izio', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,0,', '0,0,', '0);', '\n\t\t', '//', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁space', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', '//', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '2,', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'data', '_', 'fine', ',', '▁4,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁space', ',', '▁5,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n\n\t\t', '//', 'cre', 'o', '▁un', '▁pann', 'ello', '▁con', '▁due', '▁puls', 'anti', '\n\t\t', 'panel', '2', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ag', 'gi', 'ungi', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '3,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁10);', '\n\n\t\t', '//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n\t\t', 'check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t', 'check', 'boxes', '▁=', '▁new', '▁check', 'box', '[', '5', '];', '\n\t\t', 'check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁alta', '▁stag', 'ione', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t', 'check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁media', '▁stag', 'ione', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t', 'check', 'boxes', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', '▁bassa', '▁stag', 'ione', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t', 'check', 'boxes', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', '▁bass', 'issima', '▁stag', 'ione', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t', 'check', 'boxes', '[', '4]', '▁=', '▁new', '▁check', 'box', '(""', '▁ch', 'ius', 'ura', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\t\t\t\n\t\t', 'etic', 'he', 'tta', '4=', '▁new', '▁label', '(""', 'stag', 'ional', 'ita', ""'"", '▁dis', 'pon', 'ib', 'ili', '"");', '\n\t\t', 'etic', 'he', 'tta', '4.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁', '\t\t\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁', '\n\t\t', 'panel', '3', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'iche', 'tta', '4,', '▁0,', '▁1,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '3,', '▁check', 'boxes', '[0', '],', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '▁', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '3,', '▁check', 'boxes', '[1', '],', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '3,', '▁check', 'boxes', '[', '2', '],', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '3,', '▁check', 'boxes', '[', '3', '],', '▁0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '3,', '▁check', 'boxes', '[', '4', '],', '▁0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '▁', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁text', 'area', '\n\t\t', 'panel', '4', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '4.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '4,', '▁et', 'iche', 'tta', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '4,', 'list', ',', '▁0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.0,', '▁3.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n\t\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '\n\t\t', 'panel', '5', '▁=', '▁new', '▁panel', '();', '\n\t\t', 'panel', '5.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '5,', '▁ann', 'ulla', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁0.', '3,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁10);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '5,', '▁confer', 'ma', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '3,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n\t\t', '//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n\t\t', 'this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁2,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.0,', '▁0.', '0,', '▁10,', '▁10,', '▁0,', '▁10);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁5,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.0,', '▁0.', '0,', '▁10,', '▁10,', '▁0,', '▁10);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '4,', '▁0,', '▁6,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁2.0,', '▁2.0,', '▁10,', '▁10,', '▁10,', '▁10);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '5,', '▁0,', '▁10,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.0,', '▁1.0,', '▁10,', '▁10,', '▁15,', '▁10);', '\n\t', '}', '\n\n\t', '//', 'gest', 'ione', '▁degli', '▁event', 'i', '\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', '//', 'as', 'colt', 'atore', '▁degli', '▁event', 'i', '▁della', '▁finest', 'ra', '\n\t\t', 'check', 'boxes', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '▁&&', '▁(!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁&&', '▁(!', '(', 'data', '_', 'fine', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'check', 'boxes', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '▁&&', '▁(!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁&&', '▁(!', '(', 'data', '_', 'fine', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n', '▁}', '\n\t\t', '}', ');', '\n\n\t\t', 'check', 'boxes', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '())', '▁&&', '▁(!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁&&', '▁(!', '(', 'data', '_', 'fine', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'check', 'boxes', '[', '3', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '▁&&', '▁(!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁&&', '▁(!', '(', 'data', '_', 'fine', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'check', 'boxes', '[', '4', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[', '4', '].', 'get', 'state', '())', '▁&&', '▁(!', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁&&', '▁(!', '(', 'data', '_', 'fine', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', '/*', '▁nel', '▁cas', 'o', '▁di', '▁ann', 'ull', 'amento', '▁dell', ""'"", 'oper', 'azione', '▁rip', 'rist', 'ino', '▁i', '▁vett', 'ori', '\n\t\t', '▁*', '▁original', 'i', '▁della', '▁config', 'ur', 'azione', '\n\t\t', '▁*/', '▁', '\n', '▁', '\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'config', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', '//', 'as', 'colt', 'atore', '▁del', '▁puls', 'ante', '▁confer', 'ma', ',', '▁se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁si', '▁ap', 're', '\n\t\t', '//', 'la', '▁finest', 'ra', '▁rig', 'uard', 'ante', '▁l', ""'"", 'ins', 'er', 'imento', '▁della', '▁pren', 'ot', 'azione', '\n\t\t', 'aggi', 'ungi', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'aggi', 'ungi', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'stag', '_', 'anno', '_', 'cor', 'r', '▁=', '▁(', 'config', '_', 'loc', 'ale', '.', 'get', 'stag', 'ann', 'oc', 'orr', '());', '\n\t\t\t\t', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'stag', '_', 'anno', '_', 'pro', 'x', '▁=', '▁(', 'config', '_', 'loc', 'ale', '.', 'get', 'stag', 'ann', 'op', 'rox', '());', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'config', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁}', '\n\t\n\t', 'void', '▁start', 'aggi', 'ungi', '()', '\n\t', '{', '\n\t\t', 'char', '▁flag', ';', '\n\t\t', 'string', '▁list', 'a', '[]', ';', '\n\t\t\n\t\t', 'if', '▁(', 'utils', '.', 'date', 'eper', 'iod', 'ocor', 'retti', '(', 'this', ',', '▁data', '_', 'in', 'izio', '.', 'get', 'text', '(),', '▁data', '_', 'fine', '.', 'get', 'text', '()))', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'alta', '_', 'stag', 'ione', ';', '\n\t\t\t', 'else', '\t\n\t\t\t\t', 'if', '▁(', 'check', 'boxes', '[1', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'media', '_', 'stag', 'ione', ';', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'if', '▁(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'bass', 'a', '_', 'stag', 'ione', ';', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t', 'if', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'bass', 'issima', '_', 'stag', 'ione', ';', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t\t', 'flag', '▁=', '▁flag', '.', 'ch', 'ius', 'o', ';', '\n\t\t\t', 'config', '_', 'loc', 'ale', '.', 'set', 'stag', 'ione', '(', 'new', '▁date', '(', 'date', 'utils', '.', 'in', 'vert', 'date', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()))', '),', '▁new', '▁date', '(', 'date', 'utils', '.', 'in', 'vert', 'date', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'data', '_', 'fine', '.', 'get', 'text', '()))', '),', '▁flag', ');', '\n\t', '▁conf', '_', 'stag', '_', 'cor', 'r', '▁=', '▁config', '_', 'loc', 'ale', '.', 'get', 'stag', 'ional', 'ita', '(', 'const', '.', 'anno', '_', 'cor', 'rente', ');', '\n\t', '▁conf', '_', 'stag', '_', 'pro', 'x', '▁=', '▁config', '_', 'loc', 'ale', '.', 'get', 'stag', 'ional', 'ita', '(', 'const', '.', 'anno', '_', 'p', 'ross', 'imo', ');', '\n\t\t\t', 'vis', 'stag', 'ional', 'ita', '();', '\n\t\t\t', 'data', '_', 'in', 'izio', '.', 's', 'ette', 'xt', '("""");', '\t\n\t\t\t', 'data', '_', 'fine', '.', 's', 'ette', 'xt', '("""");', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '<', 'check', 'boxes', '.', 'length', ';', '▁i', '++)', '\n\t\t\t\t', 'check', 'boxes', '[', 'i', '].', 'set', 'state', '(', 'false', ');', '\n\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n', '▁/*', '▁', '\t', 'cre', 'o', '▁un', '▁duplic', 'ato', '▁dei', '▁vett', 'ori', '▁delle', '▁stag', 'ional', 'ita', '▁per', '▁per', 'met', 'tere', '\n', '▁*', '\t', 'l', ""'"", 'ann', 'ull', 'amento', '▁delle', '▁oper', 'azioni', '\n', '▁*/', '\n', '▁void', '▁init', 'v', 'ectors', '()', '\n', '▁{', '\n', '▁config', '_', 'loc', 'ale', '▁=', '▁new', '▁config', 'ur', 'azione', '();', '\n', '▁config', '_', 'loc', 'ale', '.', 'set', 'stag', 'ann', 'oc', 'orr', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'stag', '_', 'anno', '_', 'cor', 'r', ');', '\n', '▁config', '_', 'loc', 'ale', '.', 'set', 'stag', 'ann', 'op', 'rox', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'stag', '_', 'anno', '_', 'pro', 'x', ');', '\n', '▁conf', '_', 'stag', '_', 'cor', 'r', '▁=', '▁config', '_', 'loc', 'ale', '.', 'get', 'stag', 'ional', 'ita', '(', 'const', '.', 'anno', '_', 'cor', 'rente', ');', '\n', '▁conf', '_', 'stag', '_', 'pro', 'x', '▁=', '▁config', '_', 'loc', 'ale', '.', 'get', 'stag', 'ional', 'ita', '(', 'const', '.', 'anno', '_', 'p', 'ross', 'imo', ');', '\n', '▁cost', 'anti', '▁cost', '▁=', '▁new', '▁cost', 'anti', '();', '\n', '▁anno', '_', 'cor', 'r', '▁=', '▁cost', '.', 'get', 'ann', 'oc', 'orr', '();', '\n', '▁anno', '_', 'pro', 'x', '▁=', '▁cost', '.', 'get', 'ann', 'op', 'rox', '();', '\n', '▁', '\t\t', 'vis', 'stag', 'ional', 'ita', '();', '\n', '▁}', '\n', '▁', '\n\t', 'void', '▁vis', 'stag', 'ional', 'ita', '()', '\n\t', '{', '\n\t\t', 'string', '▁list', 'a', '[]', '▁=', '▁report', 'stag', 'ional', 'ita', '();', '\n\t\t', 'if', '▁(', 'list', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t', 'list', '.', 'remove', 'all', '();', '\n\t\t', 'for', '▁(', 'int', '▁k', '▁=', '▁0;', '▁k', '<', 'lista', '.', 'length', ';', '▁k', '++)', '\n\t\t\t', 'list', '.', 'add', 'item', '(', 'lista', '[', 'k', ']);', '\n\t', '}', '\n\t\n\t', 'string', '[]', '▁report', 'stag', 'ional', 'ita', '()', '\n\t', '{', '\n\t\t', 'string', '▁list', 'a', '_', 'loc', '[]', '▁=', '▁new', '▁string', '[', '30', '];', '\n\t\t', 'int', '▁index', '▁=', '▁0;', '\n\t\t', 'string', '▁str', '_', 'aus', ';', '\n\t\t', 'init', 'lista', '(', 'lista', '_', 'loc', ');', '\n\t\t\n\t', '//', 'sc', 'ans', 'ione', '▁dei', '▁5', '▁tip', 'i', '▁di', '▁stag', 'ional', 'ita', '▁per', '▁l', ""'"", 'anno', '▁cor', 'rente', '\n', '▁', '\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'alta', '_', 'stag', 'ione', ',', '▁conf', '_', 'stag', '_', 'cor', 'r', ',', '▁anno', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁alta', '▁stag', 'ione', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'cor', 'r', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'media', '_', 'stag', 'ione', ',', '▁conf', '_', 'stag', '_', 'cor', 'r', ',', '▁anno', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁media', '▁stag', 'ione', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'cor', 'r', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'bass', 'a', '_', 'stag', 'ione', ',', '▁conf', '_', 'stag', '_', 'cor', 'r', ',', '▁anno', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁bassa', '▁stag', 'ione', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'cor', 'r', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'bass', 'issima', '_', 'stag', 'ione', ',', '▁conf', '_', 'stag', '_', 'cor', 'r', ',', '▁anno', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁bass', 'issima', '▁stag', 'ione', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'cor', 'r', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'ch', 'ius', 'o', ',', '▁conf', '_', 'stag', '_', 'cor', 'r', ',', '▁anno', '_', 'cor', 'r', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁ch', 'ius', 'ura', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'cor', 'r', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\n\t', '//', '\t', 'sc', 'ans', 'ione', '▁dei', '▁5', '▁tip', 'i', '▁di', '▁stag', 'ional', 'ita', '▁per', '▁l', ""'"", 'anno', '▁segu', 'ente', '▁', '\t\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'alta', '_', 'stag', 'ione', ',', '▁conf', '_', 'stag', '_', 'pro', 'x', ',', '▁anno', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁alta', '▁stag', 'ione', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'pro', 'x', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'media', '_', 'stag', 'ione', ',', '▁conf', '_', 'stag', '_', 'pro', 'x', ',', '▁anno', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁media', '▁stag', 'ione', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'pro', 'x', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'bass', 'a', '_', 'stag', 'ione', ',', '▁conf', '_', 'stag', '_', 'pro', 'x', ',', '▁anno', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁bassa', '▁stag', 'ione', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'pro', 'x', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'bass', 'issima', '_', 'stag', 'ione', ',', '▁conf', '_', 'stag', '_', 'pro', 'x', ',', '▁anno', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁bass', 'issima', '▁stag', 'ione', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'pro', 'x', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'str', '_', 'aus', '▁=', '▁ut', 'ils', '.', 'scan', 'vector', '(', 'flag', '.', 'ch', 'ius', 'o', ',', '▁conf', '_', 'stag', '_', 'pro', 'x', ',', '▁anno', '_', 'pro', 'x', ');', '\n', '▁', '\t\t', 'if', '▁(', '▁!', '(', '▁str', '_', 'aus', '.', 'equals', '(""', '"")', '▁)', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'lista', '_', 'loc', '[', 'index', ']', '▁=', '▁new', '▁string', '(""', 'period', 'i', '▁di', '▁ch', 'ius', 'ura', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'pro', 'x', ');', '\n\t\t\t', 'lista', '_', 'loc', '[', 'index', '+', '1]', '▁=', '▁new', '▁string', '(', 'str', '_', 'aus', ');', '\n\t\t\t', 'index', '▁=', '▁index', '+', '3;', '\n\t\t', '}', '\n\t\t', 'return', '▁list', 'a', '_', 'loc', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁init', 'lista', '(', 'string', '▁list', 'a', '[', '])', '\n\t', '{', '\n\t\t', 'for', '▁(', 'int', '▁k', '▁=', '▁0;', '▁k', '▁<', '▁list', 'a', '.', 'length', ';', '▁k', '++)', '\n\t\t\t', 'lista', '[', 'k', ']', '▁=', '▁new', '▁string', '("""");', '\n\t', '}', '\t\n', '}', '\n\n', '▁', '\n']"~"packag interfacc import java awt import java awt event import common util import moduli import common def import common util util import java util date public class definizion stagionalita extend frame dichiaro gli oggetti che serviranno per costruir finestra panel panel panel panel panel panel label etichetta etichetta etichetta etichetta etichetta button annulla conferma aggiungi text field data inizio data fine list list grid bag layout gridbag new grid bag layout checkbox group checkbox group checkbox checkbox variabili locali supporto char conf stag corr conf stag prox configurazion config local int anno corr anno prox segu finestra madr questa frame config public definizion stagionalita frame parent super definision dell stagionalita config parent config set enabl fals setup panel init vector init pack set visibl true void setup panel set font configurazion sistema font base creo text field data inizio new text field data fine new text field creo pulsanti disabilito due annulla new button annulla conferma new button conferma aggiungi new button aggiungi aggiungi set enabl fals creo etichett etichetta new label periodo soggiorno etichetta set font configurazion sistema font titolo etichetta new label data inizio etichetta new label data fine etichetta new label prospetto della distriduzion dell staginalita etichetta set font new font courier font bold label space new label creo lista list new list fals creo pannello alto panel new panel panel set layout gridbag util constrain panel etichetta grid bag constraint none grid bag constraint northwest util constrain panel1 etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel1 data_inizio grid bag constraint none grid bag constraint northwest util constrain panel1 space grid bag constraint none grid bag constraint northwest util constrain panel1 etichetta2 grid bag constraint none grid bag constraint northwest util constrain panel1 data_fin grid bag constraint none grid bag constraint northwest util constrain panel1 space grid bag constraint none grid bag constraint northwest creo pannello con due pulsanti panel2 new panel (); panel2 set layout gridbag util constrain panel2 aggiungi grid bag constraint none grid bag constraint center creo checkbox esclusion checkbox_group new checkbox group (); checkbox new checkbox checkbox new checkbox alta stagion checkbox_group fals checkbox new checkbox media stagion checkbox_group fals checkbox new checkbox bassa stagion checkbox_group fals checkbox new checkbox bassissima stagion checkbox_group fals checkbox new checkbox chiusura checkbox_group fals etichetta4 new label stagionalita disponibili ""); etichetta4 set font new font courier font bold )); creo pannello panel3 new panel (); panel3 set layout gridbag util constrain panel3 etichetta4 grid bag constraint none grid bag constraint northwest util constrain panel3 checkbox grid bag constraint none grid bag constraint northwest util constrain panel3 checkbox grid bag constraint none grid bag constraint northwest util constrain panel3 checkbox grid bag constraint none grid bag constraint northwest util constrain panel3 checkbox grid bag constraint none grid bag constraint northwest util constrain panel3 checkbox grid bag constraint none grid bag constraint northwest creo pannello contenent text area panel4 new panel (); panel4 set layout gridbag util constrain panel4 etichetta3 grid bag constraint none grid bag constraint west util constrain panel4 list grid bag constraint grid bag constraint center creo pannello basso con due pulsanti panel5 new panel (); panel5 set layout gridbag util constrain panel5 annulla grid bag constraint none grid bag constraint southeast util constrain panel5 conferma grid bag constraint none grid bag constraint southwest attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint northwest util constrain panel3 grid bag constraint horizont grid bag constraint northeast util constrain panel2 grid bag constraint horizont grid bag constraint northeast util constrain panel4 grid bag constraint grid bag constraint center util constrain panel5 grid bag constraint horizont grid bag constraint southwest gestion deg eventi public void init ascoltator deg eventi della finestra checkbox add item listen new item listen public void item state chang item event checkbox get state ()) (!( data_inizio get text ()). equal ("""")) (!( data_fin get text ()). equal ("""")) aggiungi set enabl true }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) (!( data_inizio get text ()). equal ("""")) (!( data_fin get text ()). equal ("""")) aggiungi set enabl true }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) (!( data_inizio get text ()). equal ("""")) (!( data_fin get text ()). equal ("""")) aggiungi set enabl true }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) (!( data_inizio get text ()). equal ("""")) (!( data_fin get text ()). equal ("""")) aggiungi set enabl true }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) (!( data_inizio get text ()). equal ("""")) (!( data_fin get text ()). equal ("""")) aggiungi set enabl true }); nel caso annullamento dell operazion ripristino vettori originali della configurazion annulla add action listen new action listen public void action perform action event dispos (); config set enabl true }); ascoltator del pulsant conferma pulsant vien premuto apr finestra riguardant inserimento della prenotazion aggiungi add action listen new action listen public void action perform action event start aggiungi (); }); conferma add action listen new action listen public void action perform action event configurazion sistema new_stag_anno_corr config_local get stag anno corr ()); configurazion sistema new_stag_anno_prox config_local get stag anno prox ()); dispos (); config set enabl true }); void start aggiungi char flag string lista []; util date eperiodo corretti data_inizio get text (), data_fin get text ())) checkbox get state true flag flag alta_stagion els checkbox get state true flag flag media_stagion els checkbox get state true flag flag bassa_stagion els checkbox get state true flag flag bassissima_stagion els flag flag chiuso config_local set stagion new date date util invert date date util pars date data_inizio get text ()))), new date date util invert date date util pars date data_fin get text ()))), flag conf_stag_corr config_local get stagionalita const anno_corrent conf_stag_prox config_local get stagionalita const anno_prossimo vis stagionalita (); data_inizio set text (""""); data_fin set text (""""); int checkbox length ++) checkbox set state fals aggiungi set enabl fals creo duplicato dei vettori dell stagionalita per permetter annullamento dell operazioni void init vector config_local new configurazion (); config_local set stag anno corr configurazion sistema new_stag_anno_corr config_local set stag anno prox configurazion sistema new_stag_anno_prox conf_stag_corr config_local get stagionalita const anno_corrent conf_stag_prox config_local get stagionalita const anno_prossimo costanti cost new costanti (); anno_corr cost get anno corr (); anno_prox cost get anno prox (); vis stagionalita (); void vis stagionalita string lista report stagionalita (); list get item count list remov (); int lista length ++) list add item lista ]); string report stagionalita string lista_loc new string int index string str_aus init lista lista_loc scansion dei tipi stagionalita per anno corrent str_aus util scan vector flag alta_stagion conf_stag_corr anno_corr str_aus equal ("""") lista_loc index new string periodi alta stagion per anno anno_corr lista_loc index new string str_aus index index str_aus util scan vector flag media_stagion conf_stag_corr anno_corr str_aus equal ("""") lista_loc index new string periodi media stagion per anno anno_corr lista_loc index new string str_aus index index str_aus util scan vector flag bassa_stagion conf_stag_corr anno_corr str_aus equal ("""") lista_loc index new string periodi bassa stagion per anno anno_corr lista_loc index new string str_aus index index str_aus util scan vector flag bassissima_stagion conf_stag_corr anno_corr str_aus equal ("""") lista_loc index new string periodi bassissima stagion per anno anno_corr lista_loc index new string str_aus index index str_aus util scan vector flag chiuso conf_stag_corr anno_corr str_aus equal ("""") lista_loc index new string periodi chiusura per anno anno_corr lista_loc index new string str_aus index index scansion dei tipi stagionalita per anno seguent str_aus util scan vector flag alta_stagion conf_stag_prox anno_prox str_aus equal ("""") lista_loc index new string periodi alta stagion per anno anno_prox lista_loc index new string str_aus index index str_aus util scan vector flag media_stagion conf_stag_prox anno_prox str_aus equal ("""") lista_loc index new string periodi media stagion per anno anno_prox lista_loc index new string str_aus index index str_aus util scan vector flag bassa_stagion conf_stag_prox anno_prox str_aus equal ("""") lista_loc index new string periodi bassa stagion per anno anno_prox lista_loc index new string str_aus index index str_aus util scan vector flag bassissima_stagion conf_stag_prox anno_prox str_aus equal ("""") lista_loc index new string periodi bassissima stagion per anno anno_prox lista_loc index new string str_aus index index str_aus util scan vector flag chiuso conf_stag_prox anno_prox str_aus equal ("""") lista_loc index new string periodi chiusura per anno anno_prox lista_loc index new string str_aus index index return lista_loc void init lista string lista []) int lista length ++) lista new string ("""");"
46~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/ConfigurazioneSistema.java~ConfigurazioneSistema.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.lang.String;
import common.utility.*;
import common.def.*;
import moduli.*;

public class ConfigurazioneSistema extends Frame
{
	// font costanti per uniformare l'aspetto delle finestre
	public static final Font font_base = new Font(""TimesRoman"", Font.PLAIN, 12);
	public static final Font font_sub = new Font(""Courier"", Font.BOLD, 18);
	public static final Font font_titolo = new Font(""Courier"", Font.BOLD, 12);
	public static final Font font_allineato = new Font(""Courier"", Font.PLAIN, 12);

	// componenti della finestra di configurazione
    TextField giorni_blocco, sup_bassissima, sup_bassa, sup_media, sup_alta,sup_letto_agg,
             costo_x_scatto, sup_neonato, rid_bambino, rid_ragazzo, rid_comitiva,
             password, num_max_stanze, px_colazione, px_mezza, px_intera, coperto,
             min_pers_comitiva, cambio, albergo, indirizzo_alb, comune_alb, 
             citta_alb, rag_soc, licenza;
    Label cambio_L_E;
    Label etichetta, etich1, etich2, etich3, etich4, etich5, etich6, etich7, etich8,
         etich9, etich10, etich11 ,etich11_1, etich12, etich13, etich14, etich15, etich16, etich17,
         etich18, etich19, etich20, etichetta1, etichetta2, etichetta3,etichetta4,
         etichetta5, etich21, etich22, etichetta6, etich23,etich24,etich25, etichetta7;
    Panel panel0, panel1, panel2, panel3, panel4;
    GridBagLayout gridbag = new GridBagLayout();
    CheckboxGroup checkbox;
    Checkbox[] checkboxes;
    Button Annulla, Passwd, Conferma, Stagioni;
    DefinizioneStagionalita def_stag;

	// per il cambio di password e stagionalita
	static String new_passwd;
	static char[] new_stag_anno_corr, new_stag_anno_prox;
   
	// per la gerarchia delle finestre
	SubGestione padre = new SubGestione();

	// per fregare l'ascoltatore
	static Configurazione this_config;
	DataBase db;
	
	boolean first_start;
   
    public ConfigurazioneSistema(Configurazione config, boolean prima_volta, DataBase archivio)
    {
      super(""Configurazione di sistema"");
      this_config = config;
      db = archivio;
      new_passwd = this_config.getPassword();
      new_stag_anno_corr = this_config.getStagionalita(Const.ANNO_CORRENTE);
      new_stag_anno_prox = this_config.getStagionalita(Const.ANNO_PROSSIMO);
      first_start = prima_volta;
      setupPanels(prima_volta);
      init();
      pack();
    }

  	public  void setupPanels(boolean prima_volta)
   	{
   	  this.setFont(font_base);
      //creo le etichette
      cambio_L_E = new Label(""Cambio Lira <-> EURO"");
      etichetta = new Label(""Licenza:"");
      etichetta.setFont(new Font(""Courier"", Font.BOLD, 12));
      etichetta1 = new Label(""DATI DI CONFIGURAZIONE"");
      etichetta1.setFont(new Font(""Courier"", Font.BOLD, 12));
      etichetta2 = new Label(""Supplementi dovuto alle stagionionalita'"");
      etichetta2.setFont(new Font(""Courier"", Font.BOLD, 12));
      etichetta3 = new Label(""Riduzioni"");
      etichetta3.setFont(new Font(""Courier"", Font.BOLD, 12));
      etichetta4 = new Label(""Ristorazione"");
      etichetta4.setFont(new Font(""Courier"", Font.BOLD, 12));
      etichetta5 = new Label(""Valuta"");
      etichetta5.setFont(new Font(""Courier"", Font.BOLD, 12));
      etichetta6 = new Label(""Cambio di password utente"");
      etichetta6.setFont(new Font(""Courier"", Font.BOLD, 12));
      etichetta7 = new Label(""Definizione delle stagionalita'"");
      etichetta7.setFont(new Font(""Courier"", Font.BOLD, 12));
      
      licenza = new TextField("""",35);
      albergo = new TextField("""",25);
      comune_alb =new TextField("""",35);
      citta_alb = new TextField("""",25);
      indirizzo_alb = new TextField("""",35);
      rag_soc = new TextField("""",35);
      giorni_blocco = new TextField("""",4);
      sup_bassissima = new TextField("""",9);
      sup_bassa = new TextField("""",9);
      sup_media = new TextField("""",9);
      sup_alta = new TextField("""",9);
      sup_neonato = new TextField("""",9);
      sup_letto_agg = new TextField("""",9);
      rid_bambino = new TextField("""",4);
      rid_ragazzo = new TextField("""",4);
      rid_comitiva = new TextField("""",4);
      min_pers_comitiva = new TextField("""",4);
      num_max_stanze = new TextField("""",4);
      num_max_stanze.setEditable(false);
      px_colazione = new TextField("""",9);
      px_mezza = new TextField("""",9);
      px_intera = new TextField("""",9);
      coperto = new  TextField("""",9);
      costo_x_scatto = new TextField("""",9);
      password = new TextField("""",20);
      cambio = new TextField("""",8);

      //creo un Checkbox
      checkbox = new CheckboxGroup();
      checkboxes = new Checkbox[2];
      checkboxes[0] = new Checkbox("" Lire"",checkbox,true);
      checkboxes[1] = new Checkbox("" EURO"",checkbox,false);
	  writeDatiConf();
	  
	  if (prima_volta)
			licenza.setEditable(true);
	  else
			licenza.setEditable(false);

      licenza.setForeground(Color.red.darker());
      albergo.setForeground(Color.blue);
      comune_alb.setForeground(Color.blue);
      citta_alb.setForeground(Color.blue);
      rag_soc.setForeground(Color.blue);
      password.setEchoChar('*');

      etich1 = new Label(""Dati dell'albergo"");
      etich1.setFont(new Font(""Courier"", Font.BOLD, 12));
      etich2 = new Label(""Nome dell'albergo:"");
      etich3 = new Label(""Indirizzo dell'albergo:"");
      indirizzo_alb.setForeground(Color.blue);
      etich4 = new Label(""Comune dell'albergo:"");
      etich5 = new Label(""Citta' dell'albergo:"");
      etich6 = new Label(""Numero di giorni massimo di bloccaggio di una stanza"");
      etich7 = new Label(""Supplemento bassisima stagione"");
      etich8 = new Label(""Supplemento bassa stagione"");
      etich9 = new Label(""Supplemento media stagione"");
      etich10 = new Label(""Supplemento alta stagione"");
      etich11 = new Label(""Supplemento per neonati"");
      etich11_1 = new Label(""Supplemento letto aggiuntivo"");
      etich12 = new Label(""Riduzione per bambini %"");
      etich13 = new Label(""Riduzione per ragazzi %"");
      etich14 = new Label(""Riduzione per comitive %"");
      etich15 = new Label(""Numero minimo di persone per comitiva"");
      etich16 = new Label(""Numero di stanze"");
      etich17 = new Label(""Supplemento prima colazione"");
      etich18 = new Label(""Supplemento mezza pensione"");
      etich19 = new Label(""Supplemento pensione completa"");
      etich20 = new Label(""Coperto per la ristorazione"");
      etich21 = new Label(""Costo di uno scatto telefonico"");
      etich22 = new Label(""Password utente"");
      etich23 = new Label(""Lire"");
      etich24 = new Label(""Dollari"");
      etich25 = new Label(""Ragione sociale"");

      //creo i pulsanti
      Annulla = new Button(""Annulla"");
      Passwd = new Button(""Cambio di password"");
      Conferma = new Button(""Conferma"");
      Stagioni = new Button(""Definisci Stagionalita'"");

      panel0 = new Panel();
      panel0.setLayout(gridbag);
      Utils.constrain(panel0, etichetta, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0); 
      Utils.constrain(panel0, licenza, 1, 0, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0); 
      Utils.constrain(panel0, etich1, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel0, etich2, 0, 2, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, albergo, 1, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, etich3, 2, 2, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, indirizzo_alb, 3, 2, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, etich4, 0, 3, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, comune_alb, 1, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, etich5, 2, 3, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, citta_alb, 3, 3, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, etich25, 0, 4, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel0, rag_soc, 1, 4, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);

      panel1 = new Panel();
      panel1.setLayout(gridbag);
      Utils.constrain(panel1, etichetta1, 0, 0, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 5, 5); 
      Utils.constrain(panel1, etich6, 0, 1, 5, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 5, 5); 
      Utils.constrain(panel1, giorni_blocco, 5, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 5, 5); 
      Utils.constrain(panel1, etich21, 7, 1, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 5, 5); 
      Utils.constrain(panel1, costo_x_scatto, 10, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 5, 5); 
      Utils.constrain(panel1, etichetta2, 0, 2, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, etichetta3, 5, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, etichetta4, 8, 2, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
	// supplementi
      Utils.constrain(panel1, etich7, 0, 3, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, sup_bassissima, 3, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich8, 0, 4, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, sup_bassa, 3, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich9, 0, 5, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, sup_media, 3, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich10, 0, 6, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, sup_alta, 3, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich11, 0, 7, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, sup_neonato, 3, 7, 1, 1, GridBagConstraints.NONE,
                       GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, etich11_1, 0, 8, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, sup_letto_agg, 3, 8, 1, 1, GridBagConstraints.NONE,
                       GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);                 
	
	// riduzioni
      Utils.constrain(panel1, etich12, 4, 3, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, rid_bambino, 7, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich13, 4, 4, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, rid_ragazzo, 7, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich14, 4, 5, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, rid_comitiva, 7, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich15, 4, 6, 3, 1, GridBagConstraints.NONE,
                       GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, min_pers_comitiva, 7, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 

	// ristorazione
      Utils.constrain(panel1, etich17, 8, 3, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, px_colazione, 11, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich18, 8, 4, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, px_mezza, 11, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich19, 8, 5, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, px_intera, 11, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich20, 8, 6, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, coperto, 11, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, cambio_L_E, 5, 7, 3, 1, GridBagConstraints.NONE,
                       GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, cambio, 7, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, etich16, 9, 7, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, num_max_stanze, 11, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 

      panel2 = new Panel();
      panel2.setLayout(gridbag);
      Utils.constrain(panel2, etichetta5, 0, 0, 1, 1, GridBagConstraints.NONE,
                       GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel2, checkboxes[0], 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel2, checkboxes[1], 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 

      panel3 = new Panel();
      panel3.setLayout(gridbag);
      Utils.constrain(panel3, etichetta6, 0, 0, 1, 1, GridBagConstraints.NONE,
                       GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel3, Passwd, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel3, etichetta7, 0, 1, 1, 1, GridBagConstraints.NONE,
                       GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel3, Stagioni, 1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);                   
      
      
      
      panel4 = new Panel();
      panel4.setLayout(gridbag);
      Utils.constrain(panel4, Annulla, 8, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTH, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel4, Conferma, 9, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTH, 0.0, 0.0, 5, 5, 5, 5); 

      this.setLayout(gridbag);
      Utils.constrain(this,panel0, 0, 0, 12, 6, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this,panel1, 0, 6, 12, 9, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this,panel2, 0, 15, 1, 3, GridBagConstraints.HORIZONTAL,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this,panel3, 1, 15, 11, 2, GridBagConstraints.HORIZONTAL,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this,panel4, 0, 19, 12, 1, GridBagConstraints.HORIZONTAL,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
   }
   
   public void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
			if (!first_start)
	            padre.setEnabled(true);
	        else
	        	System.exit(0);
         }
      });
      
      Conferma.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			startConferma();
		 }
      });

      checkboxes[0].addItemListener(new ItemListener()   
      {
         public void itemStateChanged(ItemEvent e)
         {
            if(checkboxes[0].getState())
            {
            	startAvviso(Const.LIRE);
            }
         }
      });
                      
      checkboxes[1].addItemListener(new ItemListener()   
      {
         public void itemStateChanged(ItemEvent e)
         {
            if(checkboxes[1].getState())
            {
            	startAvviso(Const.EURO);	
            }
         }
      });
      
      
      Passwd.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            startChangePwd();
         }
      });
      
      Stagioni.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            setStagioni();
         }
      });
   }
	
	void startAvviso(char nuova_valuta)
	{
		Frame msg;
		if (nuova_valuta != this_config.getValuta() && !first_start)
		{
			msg = new AvvisoDialog(this, ""Attenzione: il cambio LIRA<->EURO effettuato alla conferma modifichera' le cifre della finestra corrente!"");
		}
	}
	
    void startChangePwd()
    {
      this.setEnabled(false);
      CambioPassword cambio = new CambioPassword();
      cambio.setVisible(true);
      cambio.conf = this;
    }
 
 	void startConferma()
	{
			MessageDialog msg;
			int j;
				
			if (!errore())
			{
				char vecchia_valuta = this_config.getValuta();
				readDatiConf();
				this_config.setPassword(new_passwd);
				this_config.setStagionalita(new_stag_anno_corr, new_stag_anno_prox);
				if ( (j = (db.writeConfigurazione(this_config))) != DataBase.OK ) 
				{
					msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j));
				}
				else
				{
					if ( vecchia_valuta != this_config.getValuta() && !first_start)
					{
						j = (Principale.db).startCambioValuta();
						if (j != DataBase.OK)
						{
							msg = new MessageDialog(this, ""Errore con il database: ""+DataBase.strErrore(j));
							return;
						}
						this_config = (Principale.db).readConfigurazione();
						Principale.config = this_config;
					}
					if (!(first_start))
					{
						padre.pass.p.setTitle(this_config.getNomeAlbergo());
						padre.setEnabled(true);
					}
					else
					{
						Frame p = new Principale(this_config, db);
						p.setVisible(true);
					}						
					dispose();
				}
			}
	}
	
	void setStagioni()
	{
      def_stag = new DefinizioneStagionalita(this);
	}	
	
	boolean errore()
	{
		Frame msg;
		
		if ( !((licenza.getText()).length() < 33 ) )
		{
			msg = new MessageDialog(this, "" La licenza deve essere composta da al piu' 32 caratteri! "");
			return true;
		}
		if ( !((albergo.getText()).length() < 21 ))
		{
			msg = new MessageDialog(this, "" Il nome dell'albergo deve essere composto da al piu' 20 caratteri! "");
			return true;
		}
      	if ( !((comune_alb.getText()).length() < 33 ) )
		{
			msg = new MessageDialog(this, "" Il comune deve essere composto da al piu' 32 caratteri! "");
			return true;
		}
		if ( !((indirizzo_alb.getText()).length() < 33 ) )
		{
			msg = new MessageDialog(this, "" L'indirizzo deve essere composto da al piu' 32 caratteri! "");
			return true;
		}
		if ( !((citta_alb.getText()).length() < 21 ) )
		{
			msg = new MessageDialog(this, "" La citta' deve essere composta da al piu' 20 caratteri! "");
			return true;
		}
		if ( !((rag_soc.getText()).length() < 33 ) )
		{
			msg = new MessageDialog(this, "" La ragione sociale deve essere composta da al piu' 32 caratteri! "");
			return true;
		}
		if ( !Utils.isIntPos(giorni_blocco.getText()) )
		{
			msg = new MessageDialog(this, "" Il numero di giorni di blocco deve essere un numero intero positivo! "");
			return true;
		}
		if ( !Utils.isFloatPos(sup_bassissima.getText()) ||
			 !Utils.isFloatPos(sup_bassa.getText()) ||
			 !Utils.isFloatPos(sup_media.getText()) ||
			 !Utils.isFloatPos(sup_alta.getText()) ||
			 !Utils.isFloatPos(sup_neonato.getText()) ||
			 !Utils.isFloatPos(sup_letto_agg.getText()) ||
			 !Utils.isFloatPos(px_colazione.getText()) ||
			 !Utils.isFloatPos(px_mezza.getText()) ||
			 !Utils.isFloatPos(px_intera.getText()) )
		{
			msg = new MessageDialog(this, "" I supplementi devono essere numeri positivi! "");
			return true;
		}
		if ( !Utils.isIntPos(rid_bambino.getText()) ||
			 !Utils.isIntPos(rid_ragazzo.getText()) ||
			 !Utils.isIntPos(rid_comitiva.getText()) )
		{
			msg = new MessageDialog(this, "" deve essere un numero intero! "");
			return true;
		}
		if ( !Utils.isIntPos(min_pers_comitiva.getText()) )
		{
			msg = new MessageDialog(this, "" Il numero di persone comitiva deve essere un numero intero positivo! "");
			return true;
		}
		if ( !Utils.isIntPos(num_max_stanze.getText()) )
		{
			msg = new MessageDialog(this, "" Il numero di stanze deve essere un numero intero positivo! "");
			return true;
		}
		if ( !Utils.isFloatPos(coperto.getText()) )
		{
			msg = new MessageDialog(this, "" Il coperto deve essere un numero positivo! "");
			return true;
		}
		if ( !Utils.isFloatPos(costo_x_scatto.getText()) )
		{
			msg = new MessageDialog(this, "" Il costo dello scatto telefonico deve essere un numero positivo! "");
			return true;
		}
		if	( !Utils.isFloatPos(cambio.getText()) )
		{
			msg = new MessageDialog(this, "" Il coefficiente di cambio LIRE<->EURO deve essere un numero positivo e diverso da zero! "");
			return true;
		}
		else
			if ( !((Float.valueOf(cambio.getText())).floatValue() > 0) )
			{
				msg = new MessageDialog(this, "" Il coefficiente di cambio LIRE<->EURO deve essere un numero positivo e diverso da zero! "");
				return true;
			}
		return false;
	}
	
	void readDatiConf()
	{
		this_config.setLicenza(licenza.getText());
		this_config.setNomeAlbergo(albergo.getText());
      	this_config.setComuneAlb(comune_alb.getText());
      	this_config.setIndirizzoAlb(indirizzo_alb.getText());
      	this_config.setCittaAlb(citta_alb.getText());
      	this_config.setRagSoc(rag_soc.getText());
		this_config.setGiorniBlocco(Integer.parseInt(giorni_blocco.getText()));
      	this_config.setSupplemento((Float.valueOf(sup_bassissima.getText())).floatValue(),Flag.BASSISSIMA_STAGIONE);
      	this_config.setSupplemento((Float.valueOf(sup_bassa.getText())).floatValue(),Flag.BASSA_STAGIONE);
      	this_config.setSupplemento((Float.valueOf(sup_media.getText())).floatValue(),Flag.MEDIA_STAGIONE);
      	this_config.setSupplemento((Float.valueOf(sup_alta.getText())).floatValue(),Flag.ALTA_STAGIONE);
      	this_config.setSupNeonato((Float.valueOf(sup_neonato.getText())).floatValue());
      	this_config.setSupLettoAgg((Float.valueOf(sup_letto_agg.getText())).floatValue());
      	this_config.setRiduzione(Integer.parseInt(rid_bambino.getText()),Flag.BAMBINO);
      	this_config.setRiduzione(Integer.parseInt(rid_ragazzo.getText()),Flag.RAGAZZO);
      	this_config.setRiduzione(Integer.parseInt(rid_comitiva.getText()),Flag.COMITIVA);
      	this_config.setMinPersComit(Integer.parseInt(min_pers_comitiva.getText()));
      	this_config.setNumStanze(Integer.parseInt(num_max_stanze.getText()));
      	this_config.setPxColazione((Float.valueOf(px_colazione.getText())).floatValue());
      	this_config.setPxMezza((Float.valueOf(px_mezza.getText())).floatValue());
      	this_config.setPxIntera((Float.valueOf(px_intera.getText())).floatValue());	
      	this_config.setCoperto((Float.valueOf(coperto.getText())).floatValue());
      	this_config.setCostoXScatto((Float.valueOf(costo_x_scatto.getText())).floatValue());
      	this_config.setCoeffXCambio((Float.valueOf(cambio.getText())).floatValue());
      	if (checkboxes[0].getState())
      		this_config.setValuta(Const.LIRE);
      	else
      		this_config.setValuta(Const.EURO);
	}
	
	void writeDatiConf()
	{
		//String s = new String(Principale.simbol);
		
		licenza.setText(""""+this_config.getLicenza());
		albergo.setText(""""+this_config.getNomeAlbergo());
      	comune_alb.setText(""""+this_config.getComuneAlb());
      	indirizzo_alb.setText(""""+this_config.getIndirizzoAlb());
      	citta_alb.setText(""""+this_config.getCittaAlb());
      	rag_soc.setText(""""+this_config.getRagSoc());
		giorni_blocco.setText(""""+this_config.getGiorniBlocco());
      	sup_bassissima.setText(""""+this_config.getSupplemento(Flag.BASSISSIMA_STAGIONE));
      	sup_bassa.setText(""""+this_config.getSupplemento(Flag.BASSA_STAGIONE));
      	sup_media.setText(""""+this_config.getSupplemento(Flag.MEDIA_STAGIONE));
      	sup_alta.setText(""""+this_config.getSupplemento(Flag.ALTA_STAGIONE));
      	sup_neonato.setText(""""+this_config.getSupNeonato());
      	sup_letto_agg.setText(""""+this_config.getSupLettoAgg());
      	rid_bambino.setText(""""+this_config.getRiduzione(Flag.BAMBINO));
      	rid_ragazzo.setText(""""+this_config.getRiduzione(Flag.RAGAZZO));
      	rid_comitiva.setText(""""+this_config.getRiduzione(Flag.COMITIVA));
      	min_pers_comitiva.setText(""""+this_config.getMinPersComit());
      	num_max_stanze.setText(""""+this_config.getNumStanze());
      	px_colazione.setText(""""+this_config.getPxColazione());
      	px_mezza.setText(""""+this_config.getPxMezza());
      	px_intera.setText(""""+this_config.getPxIntera());	
      	coperto.setText(""""+this_config.getCoperto());
      	costo_x_scatto.setText(""""+this_config.getCostoXScatto());
      	cambio.setText(""""+this_config.getCoeffXCambio());
		if (this_config.getValuta() == Const.LIRE)
			checkbox.setSelectedCheckbox(checkboxes[0]);
		else
			checkbox.setSelectedCheckbox(checkboxes[1]);
	}
}

/****************************************************************************/
class CambioPassword extends Frame
{
   TextField testo1, testo2, testo3;
   Label label1, label2, label3;
   GridBagLayout grid = new GridBagLayout();
   Panel pannello, pannello_x_annulla;
   Frame conf = new Frame();
   Button conferma, cambio, annulla;
   MessageDialog dialog;
   
   public CambioPassword()
   {
      super(""Cambio di password"");
      setupPanels();
      init();
      pack();
   }

   void setupPanels()
   {
   	  this.setFont(ConfigurazioneSistema.font_base);
      //creo le etichette
      label1 = new Label(""Inserire vecchia password"");
      label2 = new Label(""Inserire nuova password"");
      label3 = new Label(""Reinserire la nuova password"");

      //creo i textField
      testo1 = new TextField("""",20);
      testo2 = new TextField("""",20);
      testo1.setEchoChar('*');
      testo2.setEchoChar('*');
      testo2.setEditable(false);

      conferma = new Button(""Conferma"");
      cambio = new Button(""Cambio di password"");
      cambio.setEnabled(false);
	  annulla = new Button(""Annulla"");
      pannello = new Panel();
      pannello.setLayout(grid);
      Utils.constrain(pannello, label1, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(pannello, testo1, 2, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(pannello, label2, 0, 1, 2, 1, GridBagConstraints.NONE,
                       GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(pannello, testo2, 2, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(pannello, conferma, 3, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(pannello, cambio, 3, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
                        
	  pannello_x_annulla = new Panel();
	  pannello_x_annulla.setLayout(grid);
      Utils.constrain(pannello_x_annulla, annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5); 

      this.setLayout(grid);
      Utils.constrain(this,pannello, 0, 0, 4, 2, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this,pannello_x_annulla, 0, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);
  }

  void init()
  {
      annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            conf.setEnabled(true);
         }
      });

      conferma.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            g();
         }
      });

      testo1.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            g();
         }
      });

      cambio.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            i();
         }
      });

      testo2.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            i();
         }
      });
   }

   void g()
   {
		String tmp = testo1.getText();
		if(tmp.equals(ConfigurazioneSistema.new_passwd))
		{
			testo2.setEditable(true);
			testo1.setEditable(false);
			cambio.setEnabled(true);
			conferma.setEnabled(false);
		}
		else
		{
			dialog = new MessageDialog(this,""La password non e' corretta"");
			dialog.setVisible(true);
			testo1.setText("""");
		}
	}

	void i()
	{
        String tmp = testo2.getText();
		Messaggio messaggio1 = new Messaggio(tmp);
		messaggio1.setVisible(true);
		messaggio1.c = this;
		this.setEnabled(false);
	}
}

/****************************************************************************/
class Messaggio extends Frame
{
   Label msg;
   Button OK;
   CambioPassword c = new CambioPassword();
   Avviso dialog;
   GridBagLayout gridbag = new GridBagLayout();
   TextField testo3;
   Panel pannello;
   String pwd_passata;
    
   public Messaggio(String text)
   {
      super(""Messaggio per il cambio di password"");
      setup();
      pwd_passata = text;
      init();
      pack(); 
   }

   void setup()
   {
	  this.setFont(ConfigurazioneSistema.font_base);
      //creo un pulsante
      OK = new Button(""OK"");

      //creo un'etichetta
      msg = new Label(""Reinserire la nuova password"");

      //creo un textField
      testo3 = new TextField("""",20);
      testo3.setEchoChar('*');

      pannello = new Panel();
      pannello.setLayout(gridbag);
      Utils.constrain(pannello, msg, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(pannello, testo3, 2, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(pannello, OK, 4, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 

      this.setLayout(gridbag);
      Utils.constrain(this, pannello, 0, 0, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
   }

   public void init()
   {
      OK.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
         	startOK();
		 }
      });

      testo3.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
         	startOK();
         }   
      });
   }

	void startOK()
	{
           if((testo3.getText()).equals(pwd_passata))
           {
               ConfigurazioneSistema.new_passwd = testo3.getText();
		       dialog = new Avviso(this,""La password verra' cambiata alla conferma"");
           }
           else
		       dialog = new Avviso(this,""La nuova password non e' stata accettata"");
      	   dialog.setVisible(true);
	}
}

/****************************************************************************/
class Avviso extends Frame
{
   Button OK;
   Messaggio padre;

   public Avviso(Messaggio parent, String testo)
   {
      super(""Attenzione"");
      padre = parent;
      padre.setEnabled(false);
      
	  this.setFont(ConfigurazioneSistema.font_titolo);
      Panel textPanel = new Panel();
      Panel buttonPanel = new Panel();
      textPanel.add(new Label(testo));
      OK = new Button(""OK"");
      buttonPanel.add(OK);
      add(""North"",textPanel);
      add(""Center"",buttonPanel);
      init();
      pack();
      setVisible(true);
   }

   public void init()
   {
      OK.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
         	esci();
         }
      });
   }
	
	void esci()
	{
		dispose();
		padre.dispose();
		padre.c.dispose();
		padre.c.conf.setEnabled(true);
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'l', 'ang', '.', 'str', 'ing', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁conf', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '▁ext', 'ends', '▁frame', '\n', '{', '\n\t', '//', '▁f', 'ont', '▁cost', 'ant', 'i', '▁per', '▁un', 'iform', 'are', '▁l', ""'"", 'as', 'pet', 'to', '▁del', 'le', '▁fin', 'est', 're', '\n\t', 'publ', 'ic', '▁st', 'atic', '▁final', '▁f', 'ont', '▁f', 'ont', '_', 'base', '▁=', '▁new', '▁f', 'ont', '(', '""', 't', 'imes', 'rom', 'an', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ');', '\n\t', 'publ', 'ic', '▁st', 'atic', '▁final', '▁f', 'ont', '▁f', 'ont', '_', 'sub', '▁=', '▁new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁18', ');', '\n\t', 'publ', 'ic', '▁st', 'atic', '▁final', '▁f', 'ont', '▁f', 'ont', '_', 't', 'it', 'olo', '▁=', '▁new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ');', '\n\t', 'publ', 'ic', '▁st', 'atic', '▁final', '▁f', 'ont', '▁f', 'ont', '_', 'all', 'ine', 'ato', '▁=', '▁new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ');', '\n\n\t', '//', '▁compon', 'ent', 'i', '▁d', 'ella', '▁fin', 'est', 'ra', '▁di', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '\n', '▁text', 'field', '▁gi', 'orn', 'i', '_', 'bl', 'oc', 'co', ',', '▁sup', '_', 'b', 'ass', 'iss', 'ima', ',', '▁sup', '_', 'b', 'ass', 'a', ',', '▁sup', '_', 'med', 'ia', ',', '▁sup', '_', 'al', 'ta', ',', 'sup', '_', 'let', 'to', '_', 'ag', 'g', ',', '\n', '▁cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', ',', '▁sup', '_', 'ne', 'on', 'ato', ',', '▁rid', '_', 'b', 'amb', 'ino', ',', '▁rid', '_', 'r', 'ag', 'azz', 'o', ',', '▁rid', '_', 'com', 'it', 'iva', ',', '\n', '▁pass', 'w', 'ord', ',', '▁num', '_', 'm', 'ax', '_', 'stan', 'ze', ',', '▁p', 'x', '_', 'col', 'az', 'ion', 'e', ',', '▁p', 'x', '_', 'me', 'z', 'za', ',', '▁p', 'x', '_', 'inter', 'a', ',', '▁cop', 'erto', ',', '\n', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', ',', '▁c', 'amb', 'io', ',', '▁al', 'ber', 'go', ',', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', ',', '▁com', 'une', '_', 'alb', ',', '▁', '\n', '▁c', 'itt', 'a', '_', 'alb', ',', '▁r', 'ag', '_', 's', 'oc', ',', '▁lic', 'en', 'za', ';', '\n', '▁label', '▁c', 'amb', 'io', '_', 'l', '_', 'e', ';', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7,', '▁et', 'ich', '8,', '\n', '▁et', 'ich', '9,', '▁et', 'ich', '1', '0,', '▁et', 'ich', '11', '▁,', 'et', 'ich', '11', '_', '1,', '▁et', 'ich', '1', '2,', '▁et', 'ich', '1', '3,', '▁et', 'ich', '1', '4,', '▁et', 'ich', '1', '5,', '▁et', 'ich', '1', '6,', '▁et', 'ich', '1', '7,', '\n', '▁et', 'ich', '18', ',', '▁et', 'ich', '19', ',', '▁et', 'ich', '20', ',', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁et', 'ic', 'he', 'tt', 'a', '3,', 'etic', 'he', 'tt', 'a', '4,', '\n', '▁et', 'ic', 'he', 'tt', 'a', '5,', '▁et', 'ich', '2', '1,', '▁et', 'ich', '2', '2,', '▁et', 'ic', 'he', 'tt', 'a', '6,', '▁et', 'ich', '2', '3,', 'et', 'ich', '2', '4,', 'et', 'ich', '2', '5,', '▁et', 'ic', 'he', 'tt', 'a', '7', ';', '\n', '▁pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3,', '▁pan', 'el', '4', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁check', 'box', 'gro', 'up', '▁check', 'box', ';', '\n', '▁check', 'box', '[', ']', '▁check', 'box', 'es', ';', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁pass', 'w', 'd', ',', '▁con', 'fer', 'ma', ',', '▁st', 'ag', 'ion', 'i', ';', '\n', '▁defin', 'iz', 'ion', 'est', 'ag', 'ional', 'ita', '▁def', '_', 'st', 'ag', ';', '\n\n\t', '//', '▁per', '▁il', '▁c', 'amb', 'io', '▁di', '▁pass', 'w', 'ord', '▁e', '▁st', 'ag', 'ional', 'ita', '\n\t', 'st', 'atic', '▁string', '▁new', '_', 'pass', 'w', 'd', ';', '\n\t', 'st', 'atic', '▁char', '[', ']', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', ',', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', ';', '\n', '▁', '\n\t', '//', '▁per', '▁la', '▁ger', 'arch', 'ia', '▁del', 'le', '▁fin', 'est', 're', '\n\t', 'sub', 'gest', 'ion', 'e', '▁pad', 're', '▁=', '▁new', '▁sub', 'gest', 'ion', 'e', '(', ');', '\n\n\t', '//', '▁per', '▁fre', 'g', 'are', '▁l', ""'"", 'as', 'col', 't', 'at', 'ore', '\n\t', 'st', 'atic', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '▁this', '_', 'con', 'f', 'ig', ';', '\n\t', 'd', 'at', 'ab', 'ase', '▁d', 'b', ';', '\n\t\n\t', 'bo', 'ole', 'an', '▁first', '_', 'st', 'art', ';', '\n', '▁', '\n', '▁public', '▁conf', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'e', '▁conf', 'ig', ',', '▁bo', 'ole', 'an', '▁prim', 'a', '_', 'vol', 'ta', ',', '▁database', '▁arch', 'iv', 'io', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'e', '▁di', '▁s', 'ist', 'em', 'a', '"")', ';', '\n', '▁this', '_', 'con', 'f', 'ig', '▁=', '▁conf', 'ig', ';', '\n', '▁d', 'b', '▁=', '▁arch', 'iv', 'io', ';', '\n', '▁new', '_', 'pass', 'w', 'd', '▁=', '▁this', '_', 'con', 'f', 'ig', '.', 'get', 'pass', 'w', 'ord', '(', ');', '\n', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', '▁=', '▁this', '_', 'con', 'f', 'ig', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'con', 'st', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ');', '\n', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', '▁=', '▁this', '_', 'con', 'f', 'ig', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'con', 'st', '.', 'ann', 'o', '_', 'p', 'ross', 'im', 'o', ');', '\n', '▁first', '_', 'st', 'art', '▁=', '▁prim', 'a', '_', 'vol', 'ta', ';', '\n', '▁set', 'up', 'pan', 'els', '(', 'pr', 'ima', '_', 'vol', 'ta', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', 'bo', 'ole', 'an', '▁prim', 'a', '_', 'vol', 'ta', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', '▁this', '.', 'set', 'f', 'ont', '(', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁c', 'amb', 'io', '_', 'l', '_', 'e', '▁=', '▁new', '▁label', '(', '""', 'c', 'amb', 'io', '▁l', 'ira', '▁', '<', '-', '>', '▁euro', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁=', '▁new', '▁label', '(', '""', 'l', 'ic', 'en', 'za', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'd', 'ati', '▁di', '▁conf', 'ig', 'ur', 'az', 'ion', 'e', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'i', '▁d', 'ov', 'ut', 'o', '▁alle', '▁st', 'ag', 'ion', 'ional', 'ita', ""'"", '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3', '▁=', '▁new', '▁label', '(', '""', 'rid', 'uz', 'ion', 'i', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '4', '▁=', '▁new', '▁label', '(', '""', 'rist', 'or', 'az', 'ion', 'e', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '4.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '5', '▁=', '▁new', '▁label', '(', '""', 'val', 'ut', 'a', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '5.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '6', '▁=', '▁new', '▁label', '(', '""', 'c', 'amb', 'io', '▁di', '▁pass', 'w', 'ord', '▁ut', 'ent', 'e', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '6.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '7', '▁=', '▁new', '▁label', '(', '""', 'de', 'fin', 'iz', 'ion', 'e', '▁del', 'le', '▁st', 'ag', 'ional', 'ita', ""'"", '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '7.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁', '\n', '▁lic', 'en', 'za', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '3', '5)', ';', '\n', '▁al', 'ber', 'go', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '2', '5)', ';', '\n', '▁com', 'une', '_', 'alb', '▁=', 'new', '▁text', 'field', '(', '""', '"",', '3', '5)', ';', '\n', '▁c', 'itt', 'a', '_', 'alb', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '2', '5)', ';', '\n', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '3', '5)', ';', '\n', '▁r', 'ag', '_', 's', 'oc', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '3', '5)', ';', '\n', '▁gi', 'orn', 'i', '_', 'bl', 'oc', 'co', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁sup', '_', 'b', 'ass', 'iss', 'ima', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁sup', '_', 'b', 'ass', 'a', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁sup', '_', 'med', 'ia', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁sup', '_', 'al', 'ta', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁sup', '_', 'ne', 'on', 'ato', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁sup', '_', 'let', 'to', '_', 'ag', 'g', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁rid', '_', 'b', 'amb', 'ino', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁rid', '_', 'r', 'ag', 'azz', 'o', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁rid', '_', 'com', 'it', 'iva', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁num', '_', 'm', 'ax', '_', 'stan', 'ze', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁num', '_', 'm', 'ax', '_', 'stan', 'ze', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁p', 'x', '_', 'col', 'az', 'ion', 'e', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁p', 'x', '_', 'me', 'z', 'za', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁p', 'x', '_', 'inter', 'a', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁cop', 'erto', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '9)', ';', '\n', '▁pass', 'w', 'ord', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '20', ');', '\n', '▁c', 'amb', 'io', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '8)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁check', 'box', '\n', '▁check', 'box', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁l', 'ire', '"",', 'che', 'ck', 'box', ',', 'tr', 'ue', ');', '\n', '▁check', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁euro', '"",', 'che', 'ck', 'box', ',', 'f', 'al', 'se', ');', '\n\t', '▁writ', 'ed', 'atic', 'on', 'f', '(', ');', '\n\t', '▁', '\n\t', '▁if', '▁(', 'pr', 'ima', '_', 'vol', 'ta', ')', '\n\t\t\t', 'l', 'ic', 'en', 'za', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t', '▁else', '\n\t\t\t', 'l', 'ic', 'en', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\n', '▁lic', 'en', 'za', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'red', '.', 'd', 'ark', 'er', '(', ')', ');', '\n', '▁al', 'ber', 'go', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'bl', 'ue', ');', '\n', '▁com', 'une', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'bl', 'ue', ');', '\n', '▁c', 'itt', 'a', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'bl', 'ue', ');', '\n', '▁r', 'ag', '_', 's', 'oc', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'bl', 'ue', ');', '\n', '▁pass', 'w', 'ord', '.', 'set', 'ech', 'och', 'ar', '(', ""'"", '*', ""'"", ');', '\n\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(', '""', 'd', 'ati', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '"")', ';', '\n', '▁et', 'ich', '1.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'b', 'old', ',', '▁12', ')', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '▁d', 'ell', ""'"", 'al', 'ber', 'go', ':', '"")', ';', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(', '""', 'ind', 'ir', 'iz', 'zo', '▁d', 'ell', ""'"", 'al', 'ber', 'go', ':', '"")', ';', '\n', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'bl', 'ue', ');', '\n', '▁et', 'ich', '4', '▁=', '▁new', '▁label', '(', '""', 'com', 'une', '▁d', 'ell', ""'"", 'al', 'ber', 'go', ':', '"")', ';', '\n', '▁et', 'ich', '5', '▁=', '▁new', '▁label', '(', '""', 'c', 'itt', 'a', ""'"", '▁d', 'ell', ""'"", 'al', 'ber', 'go', ':', '"")', ';', '\n', '▁et', 'ich', '6', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁di', '▁gi', 'orn', 'i', '▁mass', 'im', 'o', '▁di', '▁bl', 'oc', 'c', 'ag', 'gio', '▁di', '▁un', 'a', '▁stan', 'za', '"")', ';', '\n', '▁et', 'ich', '7', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁bass', 'is', 'ima', '▁st', 'ag', 'ion', 'e', '"")', ';', '\n', '▁et', 'ich', '8', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁bass', 'a', '▁st', 'ag', 'ion', 'e', '"")', ';', '\n', '▁et', 'ich', '9', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁media', '▁st', 'ag', 'ion', 'e', '"")', ';', '\n', '▁et', 'ich', '10', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁al', 'ta', '▁st', 'ag', 'ion', 'e', '"")', ';', '\n', '▁et', 'ich', '11', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁per', '▁ne', 'on', 'ati', '"")', ';', '\n', '▁et', 'ich', '11', '_', '1', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁let', 'to', '▁ag', 'gi', 'unt', 'iv', 'o', '"")', ';', '\n', '▁et', 'ich', '12', '▁=', '▁new', '▁label', '(', '""', 'rid', 'uz', 'ion', 'e', '▁per', '▁b', 'amb', 'ini', '▁', '%', '"")', ';', '\n', '▁et', 'ich', '13', '▁=', '▁new', '▁label', '(', '""', 'rid', 'uz', 'ion', 'e', '▁per', '▁r', 'ag', 'azz', 'i', '▁', '%', '"")', ';', '\n', '▁et', 'ich', '14', '▁=', '▁new', '▁label', '(', '""', 'rid', 'uz', 'ion', 'e', '▁per', '▁com', 'itive', '▁', '%', '"")', ';', '\n', '▁et', 'ich', '15', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁minim', 'o', '▁di', '▁pers', 'one', '▁per', '▁com', 'it', 'iva', '"")', ';', '\n', '▁et', 'ich', '16', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁di', '▁stan', 'ze', '"")', ';', '\n', '▁et', 'ich', '17', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁prim', 'a', '▁col', 'az', 'ion', 'e', '"")', ';', '\n', '▁et', 'ich', '18', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁me', 'z', 'za', '▁p', 'ension', 'e', '"")', ';', '\n', '▁et', 'ich', '19', '▁=', '▁new', '▁label', '(', '""', 'sup', 'p', 'lement', 'o', '▁p', 'ension', 'e', '▁complet', 'a', '"")', ';', '\n', '▁et', 'ich', '20', '▁=', '▁new', '▁label', '(', '""', 'cop', 'erto', '▁per', '▁la', '▁r', 'ist', 'or', 'az', 'ion', 'e', '"")', ';', '\n', '▁et', 'ich', '21', '▁=', '▁new', '▁label', '(', '""', 'c', 'ost', 'o', '▁di', '▁un', 'o', '▁sc', 'att', 'o', '▁tele', 'f', 'on', 'ico', '"")', ';', '\n', '▁et', 'ich', '22', '▁=', '▁new', '▁label', '(', '""', 'pass', 'w', 'ord', '▁ut', 'ent', 'e', '"")', ';', '\n', '▁et', 'ich', '23', '▁=', '▁new', '▁label', '(', '""', 'l', 'ire', '"")', ';', '\n', '▁et', 'ich', '24', '▁=', '▁new', '▁label', '(', '""', 'd', 'oll', 'ari', '"")', ';', '\n', '▁et', 'ich', '25', '▁=', '▁new', '▁label', '(', '""', 'r', 'ag', 'ion', 'e', '▁social', 'e', '"")', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n', '▁pass', 'w', 'd', '▁=', '▁new', '▁but', 'ton', '(', '""', 'c', 'amb', 'io', '▁di', '▁pass', 'w', 'ord', '"")', ';', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n', '▁st', 'ag', 'ion', 'i', '▁=', '▁new', '▁but', 'ton', '(', '""', 'de', 'fin', 'isc', 'i', '▁st', 'ag', 'ional', 'ita', ""'"", '"")', ';', '\n\n', '▁pan', 'el', '0', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁lic', 'en', 'za', ',', '▁1,', '▁', '0,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '2,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁al', 'ber', 'go', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '3,', '▁2,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', ',', '▁3,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '4,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁com', 'une', '_', 'alb', ',', '▁1,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁c', 'itt', 'a', '_', 'alb', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '2', '5,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁r', 'ag', '_', 's', 'oc', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '6,', '▁', '0,', '▁1,', '▁5,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁gi', 'orn', 'i', '_', 'bl', 'oc', 'co', ',', '▁5,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2', '1,', '▁7,', '▁1,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', ',', '▁10,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁', '0,', '▁2,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁5,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁8,', '▁2,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '//', '▁supp', 'lement', 'i', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '7,', '▁', '0,', '▁3,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'b', 'ass', 'iss', 'ima', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '8,', '▁', '0,', '▁4,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'b', 'ass', 'a', ',', '▁3,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '9,', '▁', '0,', '▁5,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'med', 'ia', ',', '▁3,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '0,', '▁', '0,', '▁6,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'al', 'ta', ',', '▁3,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '1,', '▁', '0,', '▁7,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'ne', 'on', 'ato', ',', '▁3,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '11', '_', '1,', '▁', '0,', '▁8,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'let', 'to', '_', 'ag', 'g', ',', '▁3,', '▁8,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\n\t', '//', '▁rid', 'uz', 'ion', 'i', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '2,', '▁4,', '▁3,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁rid', '_', 'b', 'amb', 'ino', ',', '▁7,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '3,', '▁4,', '▁4,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁rid', '_', 'r', 'ag', 'azz', 'o', ',', '▁7,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '4,', '▁4,', '▁5,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁rid', '_', 'com', 'it', 'iva', ',', '▁7,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '5,', '▁4,', '▁6,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', ',', '▁7,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n\t', '//', '▁r', 'ist', 'or', 'az', 'ion', 'e', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '7,', '▁8,', '▁3,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁p', 'x', '_', 'col', 'az', 'ion', 'e', ',', '▁11,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '18', ',', '▁8,', '▁4,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁p', 'x', '_', 'me', 'z', 'za', ',', '▁11,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '19', ',', '▁8,', '▁5,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁p', 'x', '_', 'inter', 'a', ',', '▁11,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '20', ',', '▁8,', '▁6,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁cop', 'erto', ',', '▁11,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁c', 'amb', 'io', '_', 'l', '_', 'e', ',', '▁5,', '▁7,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁c', 'amb', 'io', ',', '▁7,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '6,', '▁9,', '▁7,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁num', '_', 'm', 'ax', '_', 'stan', 'ze', ',', '▁11,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ic', 'he', 'tt', 'a', '5,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '0', ']', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '1', ']', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ic', 'he', 'tt', 'a', '6,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁pass', 'w', 'd', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ic', 'he', 'tt', 'a', '7,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁st', 'ag', 'ion', 'i', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\n', '▁pan', 'el', '4', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '4.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁ann', 'ull', 'a', ',', '▁8,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁con', 'fer', 'ma', ',', '▁9,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁6,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁', '0,', '▁6,', '▁12,', '▁9,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '2,', '▁', '0,', '▁15,', '▁1,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '3,', '▁1,', '▁15,', '▁11,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '4,', '▁', '0,', '▁19,', '▁12,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n\t\t\t', 'if', '▁(', '!', 'first', '_', 'st', 'art', ')', '\n\t', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t', '▁else', '\n\t', '▁', '\t', 'sy', 'stem', '.', 'ex', 'it', '(', '0)', ';', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'st', 'art', 'con', 'fer', 'ma', '(', ');', '\n\t\t', '▁}', '\n', '▁}', ');', '\n\n', '▁check', 'box', 'es', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁{', '\n', '▁', '\t', 'st', 'art', 'av', 'vis', 'o', '(', 'con', 'st', '.', 'l', 'ire', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'box', 'es', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁{', '\n', '▁', '\t', 'st', 'art', 'av', 'vis', 'o', '(', 'con', 'st', '.', 'e', 'uro', ');', '\t\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\n', '▁pass', 'w', 'd', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁start', 'change', 'p', 'w', 'd', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁st', 'ag', 'ion', 'i', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁set', 'st', 'ag', 'ion', 'i', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\t\n\t', 'v', 'oid', '▁start', 'av', 'vis', 'o', '(', 'char', '▁n', 'u', 'ova', '_', 'val', 'ut', 'a', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'n', 'u', 'ova', '_', 'val', 'ut', 'a', '▁!', '=', '▁this', '_', 'con', 'f', 'ig', '.', 'get', 'val', 'ut', 'a', '(', ')', '▁&', '&', '▁!', 'first', '_', 'st', 'art', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ion', 'e', ':', '▁il', '▁c', 'amb', 'io', '▁l', 'ira', '<', '-', '>', 'e', 'uro', '▁eff', 'ett', 'u', 'ato', '▁all', 'a', '▁con', 'fer', 'ma', '▁mod', 'ific', 'her', 'a', ""'"", '▁le', '▁c', 'if', 're', '▁d', 'ella', '▁fin', 'est', 'ra', '▁cor', 'ren', 'te', '!', '"")', ';', '\n\t\t', '}', '\n\t', '}', '\n\t\n', '▁vo', 'id', '▁start', 'change', 'p', 'w', 'd', '(', ')', '\n', '▁{', '\n', '▁this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁c', 'amb', 'iop', 'ass', 'w', 'ord', '▁c', 'amb', 'io', '▁=', '▁new', '▁c', 'amb', 'iop', 'ass', 'w', 'ord', '(', ');', '\n', '▁c', 'amb', 'io', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁c', 'amb', 'io', '.', 'con', 'f', '▁=', '▁this', ';', '\n', '▁}', '\n', '▁', '\n', '▁', '\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '(', ')', '\n\t', '{', '\n\t\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t\n\t\t\t', 'if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'char', '▁v', 'ec', 'ch', 'ia', '_', 'val', 'ut', 'a', '▁=', '▁this', '_', 'con', 'f', 'ig', '.', 'get', 'val', 'ut', 'a', '(', ');', '\n\t\t\t\t', 'read', 'd', 'atic', 'on', 'f', '(', ');', '\n\t\t\t\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'pass', 'w', 'ord', '(', 'new', '_', 'pass', 'w', 'd', ');', '\n\t\t\t\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'st', 'ag', 'ional', 'ita', '(', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', ',', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'd', 'b', '.', 'writ', 'ec', 'on', 'f', 'ig', 'ur', 'az', 'ion', 'e', '(', 'this', '_', 'con', 'f', 'ig', ')', ')', ')', '▁!', '=', '▁database', '.', 'ok', '▁)', '▁', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁v', 'ec', 'ch', 'ia', '_', 'val', 'ut', 'a', '▁!', '=', '▁this', '_', 'con', 'f', 'ig', '.', 'get', 'val', 'ut', 'a', '(', ')', '▁&', '&', '▁!', 'first', '_', 'st', 'art', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'st', 'art', 'c', 'amb', 'i', 'ov', 'al', 'ut', 'a', '(', ');', '\n\t\t\t\t\t\t', 'if', '▁(', 'j', '▁!', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t\t\t\t', 'ret', 'urn', ';', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'this', '_', 'con', 'f', 'ig', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'e', '(', ');', '\n\t\t\t\t\t\t', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', '▁=', '▁this', '_', 'con', 'f', 'ig', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(', '!', '(', 'first', '_', 'st', 'art', ')', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'p', 'ad', 're', '.', 'pass', '.', 'p', '.', 's', 'ett', 'it', 'le', '(', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'n', 'ome', 'al', 'ber', 'go', '(', ')', ');', '\n\t\t\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'fr', 'ame', '▁p', '▁=', '▁new', '▁princip', 'ale', '(', 'this', '_', 'con', 'f', 'ig', ',', '▁d', 'b', ');', '\n\t\t\t\t\t\t', 'p', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t', '}', '\t\t\t\t\t\t\n\t\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁set', 'st', 'ag', 'ion', 'i', '(', ')', '\n\t', '{', '\n', '▁def', '_', 'st', 'ag', '▁=', '▁new', '▁defin', 'iz', 'ion', 'est', 'ag', 'ional', 'ita', '(', 'this', ');', '\n\t', '}', '\t\n\t\n\t', 'bo', 'ole', 'an', '▁er', 'r', 'ore', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '(', '(', 'l', 'ic', 'en', 'za', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁lic', 'en', 'za', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'a', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁32', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'al', 'ber', 'go', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '▁21', '▁)', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁n', 'ome', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n', '▁', '\t', 'if', '▁(', '▁!', '(', '(', 'com', 'une', '_', 'alb', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁com', 'une', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁32', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁32', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'c', 'itt', 'a', '_', 'alb', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '▁21', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁c', 'itt', 'a', ""'"", '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'a', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'r', 'ag', '_', 's', 'oc', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁r', 'ag', 'ion', 'e', '▁social', 'e', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'a', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁32', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'gi', 'orn', 'i', '_', 'bl', 'oc', 'co', '.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁gi', 'orn', 'i', '▁di', '▁bl', 'oc', 'co', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '▁pos', 'it', 'iv', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'sup', '_', 'b', 'ass', 'iss', 'ima', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'sup', '_', 'b', 'ass', 'a', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'sup', '_', 'med', 'ia', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'sup', '_', 'al', 'ta', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'sup', '_', 'ne', 'on', 'ato', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'sup', '_', 'let', 'to', '_', 'ag', 'g', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'p', 'x', '_', 'col', 'az', 'ion', 'e', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'p', 'x', '_', 'me', 'z', 'za', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'p', 'x', '_', 'inter', 'a', '.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁i', '▁supp', 'lement', 'i', '▁dev', 'on', 'o', '▁ess', 'ere', '▁num', 'er', 'i', '▁pos', 'it', 'iv', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'b', 'amb', 'ino', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'r', 'ag', 'azz', 'o', '.', 'get', 'text', '(', ')', ')', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'com', 'it', 'iva', '.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁pers', 'one', '▁com', 'it', 'iva', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '▁pos', 'it', 'iv', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'n', 'um', '_', 'm', 'ax', '_', 'stan', 'ze', '.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁stan', 'ze', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '▁pos', 'it', 'iv', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'cop', 'erto', '.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cop', 'erto', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'iv', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'c', 'ost', 'o', '_', 'x', '_', 'sc', 'att', 'o', '.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cost', 'o', '▁d', 'ello', '▁sc', 'att', 'o', '▁tele', 'f', 'on', 'ico', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'iv', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '\t', '(', '▁!', 'ut', 'ils', '.', 'is', 'fl', 'o', 'at', 'pos', '(', 'c', 'amb', 'io', '.', 'get', 'text', '(', ')', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁co', 'eff', 'icient', 'e', '▁di', '▁c', 'amb', 'io', '▁l', 'ire', '<', '-', '>', 'e', 'uro', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'iv', 'o', '▁e', '▁divers', 'o', '▁da', '▁zero', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', '▁!', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'c', 'amb', 'io', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', '▁', '>', '▁', '0)', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁co', 'eff', 'icient', 'e', '▁di', '▁c', 'amb', 'io', '▁l', 'ire', '<', '-', '>', 'e', 'uro', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'iv', 'o', '▁e', '▁divers', 'o', '▁da', '▁zero', '!', '▁""', ');', '\n\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t', '}', '\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁read', 'd', 'atic', 'on', 'f', '(', ')', '\n\t', '{', '\n\t\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'l', 'ic', 'en', 'za', '(', 'l', 'ic', 'en', 'za', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'n', 'ome', 'al', 'ber', 'go', '(', 'al', 'ber', 'go', '.', 'get', 'text', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'com', 'une', 'alb', '(', 'com', 'une', '_', 'alb', '.', 'get', 'text', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'ind', 'ir', 'iz', 'zo', 'alb', '(', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'get', 'text', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'c', 'itt', 'a', 'alb', '(', 'c', 'itt', 'a', '_', 'alb', '.', 'get', 'text', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'r', 'ag', 's', 'oc', '(', 'r', 'ag', '_', 's', 'oc', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'gi', 'orn', 'ib', 'l', 'oc', 'co', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 'gi', 'orn', 'i', '_', 'bl', 'oc', 'co', '.', 'get', 'text', '(', ')', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 's', 'ets', 'up', 'p', 'lement', 'o', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'sup', '_', 'b', 'ass', 'iss', 'ima', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', '),', 'fl', 'ag', '.', 'b', 'ass', 'iss', 'ima', '_', 'st', 'ag', 'ion', 'e', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 's', 'ets', 'up', 'p', 'lement', 'o', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'sup', '_', 'b', 'ass', 'a', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', '),', 'fl', 'ag', '.', 'b', 'ass', 'a', '_', 'st', 'ag', 'ion', 'e', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 's', 'ets', 'up', 'p', 'lement', 'o', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'sup', '_', 'med', 'ia', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', '),', 'fl', 'ag', '.', 'med', 'ia', '_', 'st', 'ag', 'ion', 'e', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 's', 'ets', 'up', 'p', 'lement', 'o', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'sup', '_', 'al', 'ta', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', '),', 'fl', 'ag', '.', 'al', 'ta', '_', 'st', 'ag', 'ion', 'e', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 's', 'ets', 'up', 'ne', 'on', 'ato', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'sup', '_', 'ne', 'on', 'ato', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 's', 'ets', 'up', 'let', 'to', 'ag', 'g', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'sup', '_', 'let', 'to', '_', 'ag', 'g', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'rid', 'uz', 'ion', 'e', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 'rid', '_', 'b', 'amb', 'ino', '.', 'get', 'text', '(', ')', '),', 'fl', 'ag', '.', 'b', 'amb', 'ino', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'rid', 'uz', 'ion', 'e', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 'rid', '_', 'r', 'ag', 'azz', 'o', '.', 'get', 'text', '(', ')', '),', 'fl', 'ag', '.', 'r', 'ag', 'azz', 'o', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'rid', 'uz', 'ion', 'e', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 'rid', '_', 'com', 'it', 'iva', '.', 'get', 'text', '(', ')', '),', 'fl', 'ag', '.', 'com', 'it', 'iva', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'min', 'pers', 'com', 'it', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 'get', 'text', '(', ')', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'n', 'um', 'stan', 'ze', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 'n', 'um', '_', 'm', 'ax', '_', 'stan', 'ze', '.', 'get', 'text', '(', ')', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'p', 'x', 'col', 'az', 'ion', 'e', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'p', 'x', '_', 'col', 'az', 'ion', 'e', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'p', 'x', 'me', 'z', 'za', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'p', 'x', '_', 'me', 'z', 'za', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'p', 'x', 'inter', 'a', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'p', 'x', '_', 'inter', 'a', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '\t\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'cop', 'erto', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'cop', 'erto', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'c', 'ost', 'ox', 'sc', 'att', 'o', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'c', 'ost', 'o', '_', 'x', '_', 'sc', 'att', 'o', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n', '▁', '\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'co', 'eff', 'x', 'c', 'amb', 'io', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 'c', 'amb', 'io', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n', '▁', '\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'val', 'ut', 'a', '(', 'con', 'st', '.', 'l', 'ire', ');', '\n', '▁', '\t', 'el', 'se', '\n', '▁', '\t\t', 'this', '_', 'con', 'f', 'ig', '.', 'set', 'val', 'ut', 'a', '(', 'con', 'st', '.', 'e', 'uro', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁writ', 'ed', 'atic', 'on', 'f', '(', ')', '\n\t', '{', '\n\t\t', '//', 'str', 'ing', '▁s', '▁=', '▁new', '▁string', '(', 'pr', 'inc', 'ip', 'ale', '.', 's', 'im', 'bol', ');', '\n\t\t\n\t\t', 'l', 'ic', 'en', 'za', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'l', 'ic', 'en', 'za', '(', ')', ');', '\n\t\t', 'al', 'ber', 'go', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'n', 'ome', 'al', 'ber', 'go', '(', ')', ');', '\n', '▁', '\t', 'com', 'une', '_', 'alb', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'com', 'une', 'alb', '(', ')', ');', '\n', '▁', '\t', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'ind', 'ir', 'iz', 'zo', 'alb', '(', ')', ');', '\n', '▁', '\t', 'c', 'itt', 'a', '_', 'alb', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'c', 'itt', 'a', 'alb', '(', ')', ');', '\n', '▁', '\t', 'r', 'ag', '_', 's', 'oc', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'r', 'ag', 's', 'oc', '(', ')', ');', '\n\t\t', 'gi', 'orn', 'i', '_', 'bl', 'oc', 'co', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'gi', 'orn', 'ib', 'l', 'oc', 'co', '(', ')', ');', '\n', '▁', '\t', 'sup', '_', 'b', 'ass', 'iss', 'ima', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'sup', 'p', 'lement', 'o', '(', 'fl', 'ag', '.', 'b', 'ass', 'iss', 'ima', '_', 'st', 'ag', 'ion', 'e', ')', ');', '\n', '▁', '\t', 'sup', '_', 'b', 'ass', 'a', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'sup', 'p', 'lement', 'o', '(', 'fl', 'ag', '.', 'b', 'ass', 'a', '_', 'st', 'ag', 'ion', 'e', ')', ');', '\n', '▁', '\t', 'sup', '_', 'med', 'ia', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'sup', 'p', 'lement', 'o', '(', 'fl', 'ag', '.', 'med', 'ia', '_', 'st', 'ag', 'ion', 'e', ')', ');', '\n', '▁', '\t', 'sup', '_', 'al', 'ta', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'sup', 'p', 'lement', 'o', '(', 'fl', 'ag', '.', 'al', 'ta', '_', 'st', 'ag', 'ion', 'e', ')', ');', '\n', '▁', '\t', 'sup', '_', 'ne', 'on', 'ato', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'sup', 'ne', 'on', 'ato', '(', ')', ');', '\n', '▁', '\t', 'sup', '_', 'let', 'to', '_', 'ag', 'g', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'sup', 'let', 'to', 'ag', 'g', '(', ')', ');', '\n', '▁', '\t', 'rid', '_', 'b', 'amb', 'ino', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'rid', 'uz', 'ion', 'e', '(', 'fl', 'ag', '.', 'b', 'amb', 'ino', ')', ');', '\n', '▁', '\t', 'rid', '_', 'r', 'ag', 'azz', 'o', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'rid', 'uz', 'ion', 'e', '(', 'fl', 'ag', '.', 'r', 'ag', 'azz', 'o', ')', ');', '\n', '▁', '\t', 'rid', '_', 'com', 'it', 'iva', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'rid', 'uz', 'ion', 'e', '(', 'fl', 'ag', '.', 'com', 'it', 'iva', ')', ');', '\n', '▁', '\t', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'min', 'pers', 'com', 'it', '(', ')', ');', '\n', '▁', '\t', 'n', 'um', '_', 'm', 'ax', '_', 'stan', 'ze', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'n', 'um', 'stan', 'ze', '(', ')', ');', '\n', '▁', '\t', 'p', 'x', '_', 'col', 'az', 'ion', 'e', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'p', 'x', 'col', 'az', 'ion', 'e', '(', ')', ');', '\n', '▁', '\t', 'p', 'x', '_', 'me', 'z', 'za', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'p', 'x', 'me', 'z', 'za', '(', ')', ');', '\n', '▁', '\t', 'p', 'x', '_', 'inter', 'a', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'p', 'x', 'inter', 'a', '(', ')', ');', '\t\n', '▁', '\t', 'cop', 'erto', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'cop', 'erto', '(', ')', ');', '\n', '▁', '\t', 'c', 'ost', 'o', '_', 'x', '_', 'sc', 'att', 'o', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'c', 'ost', 'ox', 'sc', 'att', 'o', '(', ')', ');', '\n', '▁', '\t', 'c', 'amb', 'io', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'co', 'eff', 'x', 'c', 'amb', 'io', '(', ')', ');', '\n\t\t', 'if', '▁(', 'this', '_', 'con', 'f', 'ig', '.', 'get', 'val', 'ut', 'a', '(', ')', '▁=', '=', '▁const', '.', 'l', 'ire', ')', '\n\t\t\t', 'che', 'ck', 'box', '.', 'set', 'se', 'lect', 'ed', 'che', 'ck', 'box', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'che', 'ck', 'box', '.', 'set', 'se', 'lect', 'ed', 'che', 'ck', 'box', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '\n', 'class', '▁c', 'amb', 'iop', 'ass', 'w', 'ord', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁text', 'field', '▁test', 'o', '1,', '▁test', 'o', '2,', '▁test', 'o', '3', ';', '\n', '▁label', '▁label', '1,', '▁label', '2,', '▁label', '3', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁pan', 'el', '▁p', 'ann', 'ello', ',', '▁p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ull', 'a', ';', '\n', '▁frame', '▁conf', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁but', 'ton', '▁con', 'fer', 'ma', ',', '▁c', 'amb', 'io', ',', '▁ann', 'ull', 'a', ';', '\n', '▁mess', 'aged', 'ial', 'og', '▁dial', 'og', ';', '\n', '▁', '\n', '▁public', '▁c', 'amb', 'iop', 'ass', 'w', 'ord', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'c', 'amb', 'io', '▁di', '▁pass', 'w', 'ord', '"")', ';', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '\n', '▁', '\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'ins', 'er', 'ire', '▁v', 'ec', 'ch', 'ia', '▁pass', 'w', 'ord', '"")', ';', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(', '""', 'ins', 'er', 'ire', '▁n', 'u', 'ova', '▁pass', 'w', 'ord', '"")', ';', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(', '""', 're', 'ins', 'er', 'ire', '▁la', '▁n', 'u', 'ova', '▁pass', 'w', 'ord', '"")', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '\n', '▁test', 'o', '1', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '20', ');', '\n', '▁test', 'o', '2', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '20', ');', '\n', '▁test', 'o', '1.', 'set', 'ech', 'och', 'ar', '(', ""'"", '*', ""'"", ');', '\n', '▁test', 'o', '2.', 'set', 'ech', 'och', 'ar', '(', ""'"", '*', ""'"", ');', '\n', '▁test', 'o', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n', '▁c', 'amb', 'io', '▁=', '▁new', '▁but', 'ton', '(', '""', 'c', 'amb', 'io', '▁di', '▁pass', 'w', 'ord', '"")', ';', '\n', '▁c', 'amb', 'io', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n', '▁p', 'ann', 'ello', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁p', 'ann', 'ello', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁label', '1,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁test', 'o', '1,', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁label', '2,', '▁', '0,', '▁1,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁test', 'o', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁con', 'fer', 'ma', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁c', 'amb', 'io', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n\t', '▁p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ull', 'a', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t', '▁p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ull', 'a', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ull', 'a', ',', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'p', 'ann', 'ello', ',', '▁', '0,', '▁', '0,', '▁4,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ull', 'a', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁conf', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁g', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁test', 'o', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁g', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁c', 'amb', 'io', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁i', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁test', 'o', '2.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁i', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁g', '(', ')', '\n', '▁{', '\n\t\t', 'str', 'ing', '▁t', 'mp', '▁=', '▁test', 'o', '1.', 'get', 'text', '(', ');', '\n\t\t', 'if', '(', 't', 'mp', '.', 'equ', 'als', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'new', '_', 'pass', 'w', 'd', ')', ')', '\n\t\t', '{', '\n\t\t\t', 't', 'est', 'o', '2.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'c', 'amb', 'io', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'd', 'ial', 'og', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁pass', 'w', 'ord', '▁non', '▁e', ""'"", '▁cor', 'ret', 'ta', '"")', ';', '\n\t\t\t', 'd', 'ial', 'og', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t', 't', 'est', 'o', '1.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁i', '(', ')', '\n\t', '{', '\n', '▁string', '▁t', 'mp', '▁=', '▁test', 'o', '2.', 'get', 'text', '(', ');', '\n\t\t', 'm', 'ess', 'ag', 'gio', '▁mess', 'ag', 'gio', '1', '▁=', '▁new', '▁mess', 'ag', 'gio', '(', 't', 'mp', ');', '\n\t\t', 'm', 'ess', 'ag', 'gio', '1.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'm', 'ess', 'ag', 'gio', '1.', 'c', '▁=', '▁this', ';', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '\n', 'class', '▁mess', 'ag', 'gio', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁label', '▁ms', 'g', ';', '\n', '▁but', 'ton', '▁ok', ';', '\n', '▁c', 'amb', 'iop', 'ass', 'w', 'ord', '▁c', '▁=', '▁new', '▁c', 'amb', 'iop', 'ass', 'w', 'ord', '(', ');', '\n', '▁av', 'vis', 'o', '▁dial', 'og', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁text', 'field', '▁test', 'o', '3', ';', '\n', '▁pan', 'el', '▁p', 'ann', 'ello', ';', '\n', '▁string', '▁p', 'w', 'd', '_', 'pass', 'ata', ';', '\n', '▁', '\n', '▁public', '▁mess', 'ag', 'gio', '(', 'str', 'ing', '▁text', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'm', 'ess', 'ag', 'gio', '▁per', '▁il', '▁c', 'amb', 'io', '▁di', '▁pass', 'w', 'ord', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁p', 'w', 'd', '_', 'pass', 'ata', '▁=', '▁text', ';', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '▁', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁p', 'uls', 'ante', '\n', '▁ok', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ok', '"")', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', ""'"", 'etic', 'he', 'tt', 'a', '\n', '▁ms', 'g', '▁=', '▁new', '▁label', '(', '""', 're', 'ins', 'er', 'ire', '▁la', '▁n', 'u', 'ova', '▁pass', 'w', 'ord', '"")', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁text', 'field', '\n', '▁test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '20', ');', '\n', '▁test', 'o', '3.', 'set', 'ech', 'och', 'ar', '(', ""'"", '*', ""'"", ');', '\n\n', '▁p', 'ann', 'ello', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁p', 'ann', 'ello', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁ms', 'g', ',', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁test', 'o', '3,', '▁2,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁ok', ',', '▁4,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁p', 'ann', 'ello', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ok', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'st', 'art', 'ok', '(', ');', '\n\t\t', '▁}', '\n', '▁}', ');', '\n\n', '▁test', 'o', '3.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'st', 'art', 'ok', '(', ');', '\n', '▁}', '▁', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'ok', '(', ')', '\n\t', '{', '\n', '▁if', '(', '(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', 'p', 'w', 'd', '_', 'pass', 'ata', ')', ')', '\n', '▁{', '\n', '▁conf', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'new', '_', 'pass', 'w', 'd', '▁=', '▁test', 'o', '3.', 'get', 'text', '(', ');', '\n\t\t', '▁dial', 'og', '▁=', '▁new', '▁av', 'vis', 'o', '(', 'this', ',""', 'la', '▁pass', 'w', 'ord', '▁ver', 'ra', ""'"", '▁c', 'amb', 'i', 'ata', '▁all', 'a', '▁con', 'fer', 'ma', '"")', ';', '\n', '▁}', '\n', '▁else', '\n\t\t', '▁dial', 'og', '▁=', '▁new', '▁av', 'vis', 'o', '(', 'this', ',""', 'la', '▁n', 'u', 'ova', '▁pass', 'w', 'ord', '▁non', '▁e', ""'"", '▁st', 'ata', '▁acc', 'ett', 'ata', '"")', ';', '\n', '▁', '\t', '▁dial', 'og', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '\n', 'class', '▁av', 'vis', 'o', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁but', 'ton', '▁ok', ';', '\n', '▁mess', 'ag', 'gio', '▁pad', 're', ';', '\n\n', '▁public', '▁av', 'vis', 'o', '(', 'm', 'ess', 'ag', 'gio', '▁paren', 't', ',', '▁string', '▁test', 'o', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'att', 'enz', 'ion', 'e', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁pan', 'el', '▁text', 'pan', 'el', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '▁but', 'ton', 'pan', 'el', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁text', 'pan', 'el', '.', 'ad', 'd', '(', 'new', '▁label', '(', 't', 'est', 'o', ')', ');', '\n', '▁ok', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ok', '"")', ';', '\n', '▁but', 'ton', 'pan', 'el', '.', 'ad', 'd', '(', 'ok', ');', '\n', '▁add', '(', '""', 'north', '"",', 'text', 'pan', 'el', ');', '\n', '▁add', '(', '""', 'center', '"",', 'but', 'ton', 'pan', 'el', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ok', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'esc', 'i', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\t\n\t', 'v', 'oid', '▁esc', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'dis', 'pose', '(', ');', '\n\t\t', 'p', 'ad', 're', '.', 'dis', 'pose', '(', ');', '\n\t\t', 'p', 'ad', 're', '.', 'c', '.', 'dis', 'pose', '(', ');', '\n\t\t', 'p', 'ad', 're', '.', 'c', '.', 'con', 'f', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'lang', '.', 'string', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁config', 'ur', 'az', 'iones', 'ist', 'ema', '▁extends', '▁frame', '\n', '{', '\n\t', '//', '▁font', '▁cost', 'anti', '▁per', '▁uniform', 'are', '▁l', ""'"", 'as', 'pet', 'to', '▁delle', '▁finest', 're', '\n\t', 'public', '▁static', '▁final', '▁font', '▁font', '_', 'base', '▁=', '▁new', '▁font', '(""', 'times', 'roman', '"",', '▁font', '.', 'plain', ',', '▁12', ');', '\n\t', 'public', '▁static', '▁final', '▁font', '▁font', '_', 'sub', '▁=', '▁new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁18', ');', '\n\t', 'public', '▁static', '▁final', '▁font', '▁font', '_', 'tit', 'olo', '▁=', '▁new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12', ');', '\n\t', 'public', '▁static', '▁final', '▁font', '▁font', '_', 'all', 'ine', 'ato', '▁=', '▁new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12', ');', '\n\n\t', '//', '▁component', 'i', '▁della', '▁finest', 'ra', '▁di', '▁config', 'ur', 'azione', '\n', '▁text', 'field', '▁gi', 'orn', 'i', '_', 'bl', 'oc', 'co', ',', '▁sup', '_', 'bass', 'iss', 'ima', ',', '▁sup', '_', 'bass', 'a', ',', '▁sup', '_', 'media', ',', '▁sup', '_', 'al', 'ta', ',', 'sup', '_', 'let', 'to', '_', 'agg', ',', '\n', '▁cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', ',', '▁sup', '_', 'ne', 'on', 'ato', ',', '▁rid', '_', 'b', 'amb', 'ino', ',', '▁rid', '_', 'rag', 'azzo', ',', '▁rid', '_', 'com', 'it', 'iva', ',', '\n', '▁pass', 'word', ',', '▁num', '_', 'max', '_', 'stan', 'ze', ',', '▁p', 'x', '_', 'col', 'azione', ',', '▁p', 'x', '_', 'mez', 'za', ',', '▁p', 'x', '_', 'inter', 'a', ',', '▁cop', 'erto', ',', '\n', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', ',', '▁camb', 'io', ',', '▁al', 'ber', 'go', ',', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', ',', '▁comune', '_', 'alb', ',', '▁', '\n', '▁c', 'itta', '_', 'alb', ',', '▁rag', '_', 'soc', ',', '▁lic', 'enza', ';', '\n', '▁label', '▁camb', 'io', '_', 'l', '_', 'e', ';', '\n', '▁label', '▁et', 'iche', 'tta', ',', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7,', '▁et', 'ich', '8,', '\n', '▁et', 'ich', '9,', '▁et', 'ich', '10,', '▁et', 'ich', '11', '▁,', 'et', 'ich', '11', '_', '1,', '▁et', 'ich', '1', '2,', '▁et', 'ich', '1', '3,', '▁et', 'ich', '1', '4,', '▁et', 'ich', '1', '5,', '▁et', 'ich', '1', '6,', '▁et', 'ich', '17,', '\n', '▁et', 'ich', '18,', '▁et', 'ich', '19,', '▁et', 'ich', '20,', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', 'etic', 'he', 'tta', '4,', '\n', '▁et', 'iche', 'tta', '5,', '▁et', 'ich', '2', '1,', '▁et', 'ich', '2', '2,', '▁et', 'iche', 'tta', '6,', '▁et', 'ich', '2', '3,', 'et', 'ich', '2', '4,', 'et', 'ich', '2', '5,', '▁et', 'iche', 'tta', '7', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁check', 'box', 'group', '▁check', 'box', ';', '\n', '▁check', 'box', '[]', '▁check', 'box', 'es', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁pass', 'wd', ',', '▁con', 'fer', 'ma', ',', '▁stag', 'ioni', ';', '\n', '▁defin', 'iz', 'ion', 'est', 'ag', 'ional', 'ita', '▁def', '_', 'st', 'ag', ';', '\n\n\t', '//', '▁per', '▁il', '▁camb', 'io', '▁di', '▁pass', 'word', '▁e', '▁stag', 'ional', 'ita', '\n\t', 'static', '▁string', '▁new', '_', 'pass', 'wd', ';', '\n\t', 'static', '▁char', '[]', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', ',', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', ';', '\n', '▁', '\n\t', '//', '▁per', '▁la', '▁ger', 'arch', 'ia', '▁delle', '▁finest', 're', '\n\t', 'sub', 'gest', 'ione', '▁pad', 're', '▁=', '▁new', '▁sub', 'gest', 'ione', '();', '\n\n\t', '//', '▁per', '▁fre', 'g', 'are', '▁l', ""'"", 'as', 'col', 't', 'atore', '\n\t', 'static', '▁config', 'ur', 'azione', '▁this', '_', 'con', 'fig', ';', '\n\t', 'dat', 'abase', '▁db', ';', '\n\t\n\t', 'bo', 'olean', '▁first', '_', 'start', ';', '\n', '▁', '\n', '▁public', '▁config', 'ur', 'az', 'iones', 'ist', 'ema', '(', 'con', 'fig', 'ur', 'azione', '▁config', ',', '▁bo', 'olean', '▁prima', '_', 'vol', 'ta', ',', '▁database', '▁archiv', 'io', ')', '\n', '▁{', '\n', '▁super', '(""', 'con', 'fig', 'ur', 'azione', '▁di', '▁sist', 'ema', '"");', '\n', '▁this', '_', 'con', 'fig', '▁=', '▁config', ';', '\n', '▁db', '▁=', '▁archiv', 'io', ';', '\n', '▁new', '_', 'pass', 'wd', '▁=', '▁this', '_', 'con', 'fig', '.', 'get', 'pass', 'word', '();', '\n', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', '▁=', '▁this', '_', 'con', 'fig', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'const', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ');', '\n', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', '▁=', '▁this', '_', 'con', 'fig', '.', 'get', 'st', 'ag', 'ional', 'ita', '(', 'const', '.', 'ann', 'o', '_', 'p', 'ross', 'imo', ');', '\n', '▁first', '_', 'start', '▁=', '▁prima', '_', 'vol', 'ta', ';', '\n', '▁setup', 'pan', 'els', '(', 'pr', 'ima', '_', 'vol', 'ta', ');', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁', '\t', 'public', '▁void', '▁setup', 'pan', 'els', '(', 'bo', 'olean', '▁prima', '_', 'vol', 'ta', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', '▁this', '.', 'set', 'font', '(', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁camb', 'io', '_', 'l', '_', 'e', '▁=', '▁new', '▁label', '(""', 'c', 'amb', 'io', '▁l', 'ira', '▁<', '-', '>', '▁euro', '"");', '\n', '▁et', 'iche', 'tta', '▁=', '▁new', '▁label', '(""', 'lic', 'enza', ':', '"");', '\n', '▁et', 'iche', 'tta', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁di', '▁config', 'ur', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'i', '▁dov', 'uto', '▁alle', '▁stag', 'ion', 'ional', 'ita', ""'"", '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'rid', 'uz', 'ioni', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '4', '▁=', '▁new', '▁label', '(""', 'rist', 'or', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '4.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '5', '▁=', '▁new', '▁label', '(""', 'val', 'uta', '"");', '\n', '▁et', 'iche', 'tta', '5.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '6', '▁=', '▁new', '▁label', '(""', 'c', 'amb', 'io', '▁di', '▁pass', 'word', '▁ut', 'ente', '"");', '\n', '▁et', 'iche', 'tta', '6.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '7', '▁=', '▁new', '▁label', '(""', 'defin', 'iz', 'ione', '▁delle', '▁stag', 'ional', 'ita', ""'"", '"");', '\n', '▁et', 'iche', 'tta', '7.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁', '\n', '▁lic', 'enza', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '5)', ';', '\n', '▁al', 'ber', 'go', '▁=', '▁new', '▁text', 'field', '(""', '"",', '2', '5)', ';', '\n', '▁comune', '_', 'alb', '▁=', 'new', '▁text', 'field', '(""', '"",', '3', '5)', ';', '\n', '▁c', 'itta', '_', 'alb', '▁=', '▁new', '▁text', 'field', '(""', '"",', '2', '5)', ';', '\n', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '5)', ';', '\n', '▁rag', '_', 'soc', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '5)', ';', '\n', '▁gi', 'orn', 'i', '_', 'bl', 'oc', 'co', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁sup', '_', 'bass', 'iss', 'ima', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁sup', '_', 'bass', 'a', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁sup', '_', 'media', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁sup', '_', 'al', 'ta', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁sup', '_', 'ne', 'on', 'ato', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁sup', '_', 'let', 'to', '_', 'agg', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁rid', '_', 'b', 'amb', 'ino', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁rid', '_', 'rag', 'azzo', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁rid', '_', 'com', 'it', 'iva', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁num', '_', 'max', '_', 'stan', 'ze', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁num', '_', 'max', '_', 'stan', 'ze', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁p', 'x', '_', 'col', 'azione', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁p', 'x', '_', 'mez', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁p', 'x', '_', 'inter', 'a', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁cop', 'erto', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9)', ';', '\n', '▁pass', 'word', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁camb', 'io', '▁=', '▁new', '▁text', 'field', '(""', '"",', '8)', ';', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '\n', '▁check', 'box', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁l', 'ire', '"",', 'check', 'box', ',', 'true', ');', '\n', '▁check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁euro', '"",', 'check', 'box', ',', 'false', ');', '\n\t', '▁writ', 'ed', 'atic', 'on', 'f', '();', '\n\t', '▁', '\n\t', '▁if', '▁(', 'pr', 'ima', '_', 'vol', 'ta', ')', '\n\t\t\t', 'lic', 'enza', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t', '▁else', '\n\t\t\t', 'lic', 'enza', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁lic', 'enza', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'red', '.', 'dark', 'er', '());', '\n', '▁al', 'ber', 'go', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁comune', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁c', 'itta', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁rag', '_', 'soc', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁pass', 'word', '.', 'set', 'ech', 'och', 'ar', ""('"", '*', ""'"", ');', '\n\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁dell', ""'"", 'al', 'ber', 'go', '"");', '\n', '▁et', 'ich', '1.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁dell', ""'"", 'al', 'ber', 'go', ':', '"");', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'ind', 'ir', 'iz', 'zo', '▁dell', ""'"", 'al', 'ber', 'go', ':', '"");', '\n', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'com', 'une', '▁dell', ""'"", 'al', 'ber', 'go', ':', '"");', '\n', '▁et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'c', 'itta', ""'"", '▁dell', ""'"", 'al', 'ber', 'go', ':', '"");', '\n', '▁et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁gi', 'orn', 'i', '▁mass', 'imo', '▁di', '▁bl', 'occ', 'aggio', '▁di', '▁una', '▁stan', 'za', '"");', '\n', '▁et', 'ich', '7', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁bass', 'is', 'ima', '▁stag', 'ione', '"");', '\n', '▁et', 'ich', '8', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁bass', 'a', '▁stag', 'ione', '"");', '\n', '▁et', 'ich', '9', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁media', '▁stag', 'ione', '"");', '\n', '▁et', 'ich', '10', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁alta', '▁stag', 'ione', '"");', '\n', '▁et', 'ich', '11', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁per', '▁neon', 'ati', '"");', '\n', '▁et', 'ich', '11', '_', '1', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', '"");', '\n', '▁et', 'ich', '12', '▁=', '▁new', '▁label', '(""', 'rid', 'uz', 'ione', '▁per', '▁bamb', 'ini', '▁%', '"");', '\n', '▁et', 'ich', '13', '▁=', '▁new', '▁label', '(""', 'rid', 'uz', 'ione', '▁per', '▁rag', 'azzi', '▁%', '"");', '\n', '▁et', 'ich', '14', '▁=', '▁new', '▁label', '(""', 'rid', 'uz', 'ione', '▁per', '▁com', 'itive', '▁%', '"");', '\n', '▁et', 'ich', '15', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁minim', 'o', '▁di', '▁pers', 'one', '▁per', '▁com', 'it', 'iva', '"");', '\n', '▁et', 'ich', '16', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁stan', 'ze', '"");', '\n', '▁et', 'ich', '17', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁prima', '▁col', 'azione', '"");', '\n', '▁et', 'ich', '18', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁mez', 'za', '▁pension', 'e', '"");', '\n', '▁et', 'ich', '19', '▁=', '▁new', '▁label', '(""', 'sup', 'p', 'lement', 'o', '▁pension', 'e', '▁complet', 'a', '"");', '\n', '▁et', 'ich', '20', '▁=', '▁new', '▁label', '(""', 'cop', 'erto', '▁per', '▁la', '▁r', 'ist', 'or', 'azione', '"");', '\n', '▁et', 'ich', '21', '▁=', '▁new', '▁label', '(""', 'cost', 'o', '▁di', '▁un', 'o', '▁sc', 'att', 'o', '▁tele', 'f', 'on', 'ico', '"");', '\n', '▁et', 'ich', '22', '▁=', '▁new', '▁label', '(""', 'pass', 'word', '▁ut', 'ente', '"");', '\n', '▁et', 'ich', '23', '▁=', '▁new', '▁label', '(""', 'l', 'ire', '"");', '\n', '▁et', 'ich', '24', '▁=', '▁new', '▁label', '(""', 'doll', 'ari', '"");', '\n', '▁et', 'ich', '25', '▁=', '▁new', '▁label', '(""', 'rag', 'ione', '▁social', 'e', '"");', '\n\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n', '▁pass', 'wd', '▁=', '▁new', '▁button', '(""', 'c', 'amb', 'io', '▁di', '▁pass', 'word', '"");', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁stag', 'ioni', '▁=', '▁new', '▁button', '(""', 'defin', 'isc', 'i', '▁stag', 'ional', 'ita', ""'"", '"");', '\n\n', '▁panel', '0', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'iche', 'tta', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁lic', 'enza', ',', '▁1,', '▁', '0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '2,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁al', 'ber', 'go', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '3,', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', ',', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '4,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁comune', '_', 'alb', ',', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁c', 'itta', '_', 'alb', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁et', 'ich', '2', '5,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', '▁rag', '_', 'soc', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '6,', '▁', '0,', '▁1,', '▁5,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁gi', 'orn', 'i', '_', 'bl', 'oc', 'co', ',', '▁5,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2', '1,', '▁7,', '▁1,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', ',', '▁10,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '2,', '▁', '0,', '▁2,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '3,', '▁5,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '4,', '▁8,', '▁2,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '//', '▁supplement', 'i', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '7,', '▁', '0,', '▁3,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'bass', 'iss', 'ima', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '8,', '▁', '0,', '▁4,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'bass', 'a', ',', '▁3,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '9,', '▁', '0,', '▁5,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'media', ',', '▁3,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '10,', '▁', '0,', '▁6,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'al', 'ta', ',', '▁3,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '1,', '▁', '0,', '▁7,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'ne', 'on', 'ato', ',', '▁3,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '11', '_', '1,', '▁', '0,', '▁8,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁sup', '_', 'let', 'to', '_', 'agg', ',', '▁3,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\n\t', '//', '▁rid', 'uz', 'ioni', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '2,', '▁4,', '▁3,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁rid', '_', 'b', 'amb', 'ino', ',', '▁7,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '3,', '▁4,', '▁4,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁rid', '_', 'rag', 'azzo', ',', '▁7,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '4,', '▁4,', '▁5,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁rid', '_', 'com', 'it', 'iva', ',', '▁7,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '5,', '▁4,', '▁6,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', ',', '▁7,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n\t', '//', '▁r', 'ist', 'or', 'azione', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '17,', '▁8,', '▁3,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁p', 'x', '_', 'col', 'azione', ',', '▁11,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '18,', '▁8,', '▁4,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁p', 'x', '_', 'mez', 'za', ',', '▁11,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '19,', '▁8,', '▁5,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁p', 'x', '_', 'inter', 'a', ',', '▁11,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '20,', '▁8,', '▁6,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁cop', 'erto', ',', '▁11,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁camb', 'io', '_', 'l', '_', 'e', ',', '▁5,', '▁7,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁camb', 'io', ',', '▁7,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1', '6,', '▁9,', '▁7,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁num', '_', 'max', '_', 'stan', 'ze', ',', '▁11,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'iche', 'tta', '5,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '0', '],', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '1', '],', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'iche', 'tta', '6,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁pass', 'wd', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'iche', 'tta', '7,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁stag', 'ioni', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\n', '▁panel', '4', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '4.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁ann', 'ulla', ',', '▁8,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'north', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁con', 'fer', 'ma', ',', '▁9,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'north', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁6,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁', '0,', '▁6,', '▁12,', '▁9,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '2,', '▁', '0,', '▁15,', '▁1,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '3,', '▁1,', '▁15,', '▁11,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '4,', '▁', '0,', '▁19,', '▁12,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n\t\t\t', 'if', '▁(', '!', 'first', '_', 'start', ')', '\n\t', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t', '▁else', '\n\t', '▁', '\t', 'system', '.', 'ex', 'it', '(', '0)', ';', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n\t\t', '▁}', '\n', '▁}', ');', '\n\n', '▁check', 'box', 'es', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n', '▁{', '\n', '▁', '\t', 'start', 'av', 'vis', 'o', '(', 'const', '.', 'l', 'ire', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'box', 'es', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n', '▁{', '\n', '▁', '\t', 'start', 'av', 'vis', 'o', '(', 'const', '.', 'euro', ');', '\t\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\n', '▁pass', 'wd', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'change', 'p', 'wd', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁stag', 'ioni', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁set', 'st', 'ag', 'ioni', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\t\n\t', 'v', 'oid', '▁start', 'av', 'vis', 'o', '(', 'char', '▁nu', 'ova', '_', 'val', 'uta', ')', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'nu', 'ova', '_', 'val', 'uta', '▁!=', '▁this', '_', 'con', 'fig', '.', 'get', 'val', 'uta', '()', '▁&', '&', '▁!', 'first', '_', 'start', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ione', ':', '▁il', '▁camb', 'io', '▁l', 'ira', '<', '-', '>', 'euro', '▁eff', 'ett', 'u', 'ato', '▁alla', '▁con', 'fer', 'ma', '▁mod', 'ific', 'hera', ""'"", '▁le', '▁c', 'if', 're', '▁della', '▁finest', 'ra', '▁cor', 'ren', 'te', '!', '"");', '\n\t\t', '}', '\n\t', '}', '\n\t\n', '▁void', '▁start', 'change', 'p', 'wd', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁camb', 'iop', 'ass', 'word', '▁camb', 'io', '▁=', '▁new', '▁camb', 'iop', 'ass', 'word', '();', '\n', '▁camb', 'io', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁camb', 'io', '.', 'conf', '▁=', '▁this', ';', '\n', '▁}', '\n', '▁', '\n', '▁', '\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t\n\t\t\t', 'if', '▁(', '!', 'er', 'r', 'ore', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'char', '▁vec', 'chia', '_', 'val', 'uta', '▁=', '▁this', '_', 'con', 'fig', '.', 'get', 'val', 'uta', '();', '\n\t\t\t\t', 'read', 'd', 'atic', 'on', 'f', '();', '\n\t\t\t\t', 'this', '_', 'con', 'fig', '.', 'set', 'pass', 'word', '(', 'new', '_', 'pass', 'wd', ');', '\n\t\t\t\t', 'this', '_', 'con', 'fig', '.', 'set', 'st', 'ag', 'ional', 'ita', '(', 'new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'cor', 'r', ',', '▁new', '_', 'st', 'ag', '_', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'db', '.', 'writ', 'econ', 'fig', 'ur', 'azione', '(', 'this', '_', 'con', 'fig', '))', ')', '▁!=', '▁database', '.', 'ok', '▁)', '▁', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁vec', 'chia', '_', 'val', 'uta', '▁!=', '▁this', '_', 'con', 'fig', '.', 'get', 'val', 'uta', '()', '▁&', '&', '▁!', 'first', '_', 'start', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'start', 'c', 'amb', 'i', 'oval', 'uta', '();', '\n\t\t\t\t\t\t', 'if', '▁(', 'j', '▁!=', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t\t\t\t\t', 'return', ';', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'this', '_', 'con', 'fig', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'con', 'fig', 'ur', 'azione', '();', '\n\t\t\t\t\t\t', 'princ', 'ip', 'ale', '.', 'con', 'fig', '▁=', '▁this', '_', 'con', 'fig', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(', '!', '(', 'first', '_', 'start', '))', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'pad', 're', '.', 'pass', '.', 'p', '.', 's', 'ett', 'it', 'le', '(', 'this', '_', 'con', 'fig', '.', 'get', 'n', 'ome', 'al', 'ber', 'go', '());', '\n\t\t\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'frame', '▁p', '▁=', '▁new', '▁princip', 'ale', '(', 'this', '_', 'con', 'fig', ',', '▁db', ');', '\n\t\t\t\t\t\t', 'p', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\t\t\t\t\t\t\n\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁set', 'st', 'ag', 'ioni', '()', '\n\t', '{', '\n', '▁def', '_', 'st', 'ag', '▁=', '▁new', '▁defin', 'iz', 'ion', 'est', 'ag', 'ional', 'ita', '(', 'this', ');', '\n\t', '}', '\t\n\t\n\t', 'bo', 'olean', '▁err', 'ore', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '(', '(', 'lic', 'enza', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁lic', 'enza', '▁de', 've', '▁ess', 'ere', '▁comp', 'osta', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'al', 'ber', 'go', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁21', '▁)', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁n', 'ome', '▁dell', ""'"", 'al', 'ber', 'go', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n', '▁', '\t', 'if', '▁(', '▁!', '(', '(', 'com', 'une', '_', 'alb', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁comune', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'c', 'itta', '_', 'alb', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁21', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁c', 'itta', ""'"", '▁de', 've', '▁ess', 'ere', '▁comp', 'osta', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'rag', '_', 'soc', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁rag', 'ione', '▁social', 'e', '▁de', 've', '▁ess', 'ere', '▁comp', 'osta', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'gi', 'orn', 'i', '_', 'bl', 'oc', 'co', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁gi', 'orn', 'i', '▁di', '▁bloc', 'co', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '▁pos', 'it', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'sup', '_', 'bass', 'iss', 'ima', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'sup', '_', 'bass', 'a', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'sup', '_', 'media', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'sup', '_', 'al', 'ta', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'sup', '_', 'ne', 'on', 'ato', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'sup', '_', 'let', 'to', '_', 'agg', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'px', '_', 'col', 'azione', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'px', '_', 'mez', 'za', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'px', '_', 'inter', 'a', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁i', '▁supplement', 'i', '▁devon', 'o', '▁ess', 'ere', '▁num', 'eri', '▁pos', 'it', 'iv', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'b', 'amb', 'ino', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'rag', 'azzo', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'com', 'it', 'iva', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁pers', 'one', '▁com', 'it', 'iva', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '▁pos', 'it', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'num', '_', 'max', '_', 'stan', 'ze', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁di', '▁stan', 'ze', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '▁pos', 'it', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'cop', 'erto', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cop', 'erto', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cost', 'o', '▁d', 'ello', '▁sc', 'att', 'o', '▁tele', 'f', 'on', 'ico', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '\t', '(', '▁!', 'ut', 'ils', '.', 'is', 'flo', 'at', 'pos', '(', 'c', 'amb', 'io', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁coefficient', 'e', '▁di', '▁camb', 'io', '▁l', 'ire', '<', '-', '>', 'euro', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'ivo', '▁e', '▁divers', 'o', '▁da', '▁zero', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', '▁!', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'c', 'amb', 'io', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '()', '▁>', '▁', '0)', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁coefficient', 'e', '▁di', '▁camb', 'io', '▁l', 'ire', '<', '-', '>', 'euro', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁pos', 'it', 'ivo', '▁e', '▁divers', 'o', '▁da', '▁zero', '!', '▁""', ');', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁read', 'd', 'atic', 'on', 'f', '()', '\n\t', '{', '\n\t\t', 'this', '_', 'con', 'fig', '.', 'set', 'lic', 'enza', '(', 'lic', 'enza', '.', 'get', 'text', '());', '\n\t\t', 'this', '_', 'con', 'fig', '.', 'set', 'n', 'ome', 'al', 'ber', 'go', '(', 'al', 'ber', 'go', '.', 'get', 'text', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'com', 'une', 'alb', '(', 'com', 'une', '_', 'alb', '.', 'get', 'text', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'ind', 'ir', 'iz', 'zo', 'alb', '(', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'get', 'text', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'c', 'itta', 'alb', '(', 'c', 'itta', '_', 'alb', '.', 'get', 'text', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'rag', 'soc', '(', 'rag', '_', 'soc', '.', 'get', 'text', '());', '\n\t\t', 'this', '_', 'con', 'fig', '.', 'set', 'gi', 'orn', 'ib', 'loc', 'co', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'gi', 'orn', 'i', '_', 'bl', 'oc', 'co', '.', 'get', 'text', '())', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 's', 'ets', 'up', 'p', 'lement', 'o', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'sup', '_', 'bass', 'iss', 'ima', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '(', '),', 'flag', '.', 'bass', 'iss', 'ima', '_', 'st', 'ag', 'ione', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 's', 'ets', 'up', 'p', 'lement', 'o', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'sup', '_', 'bass', 'a', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '(', '),', 'flag', '.', 'bass', 'a', '_', 'st', 'ag', 'ione', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 's', 'ets', 'up', 'p', 'lement', 'o', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'sup', '_', 'media', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '(', '),', 'flag', '.', 'media', '_', 'st', 'ag', 'ione', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 's', 'ets', 'up', 'p', 'lement', 'o', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'sup', '_', 'al', 'ta', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '(', '),', 'flag', '.', 'al', 'ta', '_', 'st', 'ag', 'ione', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 's', 'ets', 'up', 'ne', 'on', 'ato', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'sup', '_', 'ne', 'on', 'ato', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 's', 'ets', 'up', 'let', 'to', 'agg', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'sup', '_', 'let', 'to', '_', 'agg', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'rid', 'uz', 'ione', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'rid', '_', 'b', 'amb', 'ino', '.', 'get', 'text', '()', '),', 'flag', '.', 'b', 'amb', 'ino', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'rid', 'uz', 'ione', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'rid', '_', 'rag', 'azzo', '.', 'get', 'text', '()', '),', 'flag', '.', 'rag', 'azzo', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'rid', 'uz', 'ione', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'rid', '_', 'com', 'it', 'iva', '.', 'get', 'text', '()', '),', 'flag', '.', 'com', 'it', 'iva', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'min', 'pers', 'com', 'it', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 'get', 'text', '())', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'num', 'stan', 'ze', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'num', '_', 'max', '_', 'stan', 'ze', '.', 'get', 'text', '())', ');', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'px', 'col', 'azione', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'px', '_', 'col', 'azione', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'px', 'mez', 'za', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'px', '_', 'mez', 'za', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'px', 'inter', 'a', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'px', '_', 'inter', 'a', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '\t\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'cop', 'erto', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'cop', 'erto', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'cost', 'ox', 'sc', 'att', 'o', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '\n', '▁', '\t', 'this', '_', 'con', 'fig', '.', 'set', 'co', 'eff', 'xc', 'amb', 'io', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'c', 'amb', 'io', '.', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '\n', '▁', '\t', 'if', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n', '▁', '\t\t', 'this', '_', 'con', 'fig', '.', 'set', 'val', 'uta', '(', 'const', '.', 'l', 'ire', ');', '\n', '▁', '\t', 'el', 'se', '\n', '▁', '\t\t', 'this', '_', 'con', 'fig', '.', 'set', 'val', 'uta', '(', 'const', '.', 'euro', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁writ', 'ed', 'atic', 'on', 'f', '()', '\n\t', '{', '\n\t\t', '//', 'string', '▁s', '▁=', '▁new', '▁string', '(', 'princ', 'ip', 'ale', '.', 'sim', 'bol', ');', '\n\t\t\n\t\t', 'lic', 'enza', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'lic', 'enza', '());', '\n\t\t', 'al', 'ber', 'go', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'n', 'ome', 'al', 'ber', 'go', '());', '\n', '▁', '\t', 'com', 'une', '_', 'alb', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'com', 'une', 'alb', '());', '\n', '▁', '\t', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'ind', 'ir', 'iz', 'zo', 'alb', '());', '\n', '▁', '\t', 'c', 'itta', '_', 'alb', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'c', 'itta', 'alb', '());', '\n', '▁', '\t', 'rag', '_', 'soc', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'rag', 'soc', '());', '\n\t\t', 'gi', 'orn', 'i', '_', 'bl', 'oc', 'co', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'gi', 'orn', 'ib', 'loc', 'co', '());', '\n', '▁', '\t', 'sup', '_', 'bass', 'iss', 'ima', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'sup', 'p', 'lement', 'o', '(', 'flag', '.', 'bass', 'iss', 'ima', '_', 'st', 'ag', 'ione', ')', ');', '\n', '▁', '\t', 'sup', '_', 'bass', 'a', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'sup', 'p', 'lement', 'o', '(', 'flag', '.', 'bass', 'a', '_', 'st', 'ag', 'ione', ')', ');', '\n', '▁', '\t', 'sup', '_', 'media', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'sup', 'p', 'lement', 'o', '(', 'flag', '.', 'media', '_', 'st', 'ag', 'ione', ')', ');', '\n', '▁', '\t', 'sup', '_', 'al', 'ta', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'sup', 'p', 'lement', 'o', '(', 'flag', '.', 'al', 'ta', '_', 'st', 'ag', 'ione', ')', ');', '\n', '▁', '\t', 'sup', '_', 'ne', 'on', 'ato', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'sup', 'ne', 'on', 'ato', '());', '\n', '▁', '\t', 'sup', '_', 'let', 'to', '_', 'agg', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'sup', 'let', 'to', 'agg', '());', '\n', '▁', '\t', 'rid', '_', 'b', 'amb', 'ino', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'rid', 'uz', 'ione', '(', 'flag', '.', 'b', 'amb', 'ino', ')', ');', '\n', '▁', '\t', 'rid', '_', 'rag', 'azzo', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'rid', 'uz', 'ione', '(', 'flag', '.', 'rag', 'azzo', ')', ');', '\n', '▁', '\t', 'rid', '_', 'com', 'it', 'iva', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'rid', 'uz', 'ione', '(', 'flag', '.', 'com', 'it', 'iva', ')', ');', '\n', '▁', '\t', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'min', 'pers', 'com', 'it', '());', '\n', '▁', '\t', 'num', '_', 'max', '_', 'stan', 'ze', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'num', 'stan', 'ze', '());', '\n', '▁', '\t', 'px', '_', 'col', 'azione', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'px', 'col', 'azione', '());', '\n', '▁', '\t', 'px', '_', 'mez', 'za', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'px', 'mez', 'za', '());', '\n', '▁', '\t', 'px', '_', 'inter', 'a', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'px', 'inter', 'a', '());', '\t\n', '▁', '\t', 'cop', 'erto', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'cop', 'erto', '());', '\n', '▁', '\t', 'cost', 'o', '_', 'x', '_', 'sc', 'att', 'o', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'cost', 'ox', 'sc', 'att', 'o', '());', '\n', '▁', '\t', 'c', 'amb', 'io', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'con', 'fig', '.', 'get', 'co', 'eff', 'xc', 'amb', 'io', '());', '\n\t\t', 'if', '▁(', 'this', '_', 'con', 'fig', '.', 'get', 'val', 'uta', '()', '▁==', '▁const', '.', 'l', 'ire', ')', '\n\t\t\t', 'check', 'box', '.', 'set', 'se', 'lected', 'check', 'box', '(', 'check', 'box', 'es', '[', '0', ']', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'check', 'box', '.', 'set', 'se', 'lected', 'check', 'box', '(', 'check', 'box', 'es', '[', '1]', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '\n', 'class', '▁camb', 'iop', 'ass', 'word', '▁extends', '▁frame', '\n', '{', '\n', '▁text', 'field', '▁test', 'o', '1,', '▁test', 'o', '2,', '▁test', 'o', '3', ';', '\n', '▁label', '▁label', '1,', '▁label', '2,', '▁label', '3', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁panel', '▁pann', 'ello', ',', '▁pann', 'ello', '_', 'x', '_', 'ann', 'ulla', ';', '\n', '▁frame', '▁conf', '▁=', '▁new', '▁frame', '();', '\n', '▁button', '▁con', 'fer', 'ma', ',', '▁camb', 'io', ',', '▁ann', 'ulla', ';', '\n', '▁mess', 'aged', 'ial', 'og', '▁dial', 'og', ';', '\n', '▁', '\n', '▁public', '▁camb', 'iop', 'ass', 'word', '()', '\n', '▁{', '\n', '▁super', '(""', 'c', 'amb', 'io', '▁di', '▁pass', 'word', '"");', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n', '▁', '\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'ins', 'er', 'ire', '▁vec', 'chia', '▁pass', 'word', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'ins', 'er', 'ire', '▁nu', 'ova', '▁pass', 'word', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 're', 'ins', 'er', 'ire', '▁la', '▁nu', 'ova', '▁pass', 'word', '"");', '\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '\n', '▁test', 'o', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁test', 'o', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁test', 'o', '1.', 'set', 'ech', 'och', 'ar', ""('"", '*', ""'"", ');', '\n', '▁test', 'o', '2.', 'set', 'ech', 'och', 'ar', ""('"", '*', ""'"", ');', '\n', '▁test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁camb', 'io', '▁=', '▁new', '▁button', '(""', 'c', 'amb', 'io', '▁di', '▁pass', 'word', '"");', '\n', '▁camb', 'io', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n', '▁pann', 'ello', '▁=', '▁new', '▁panel', '();', '\n', '▁pann', 'ello', '.', 'set', 'lay', 'out', '(', 'grid', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁label', '1,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁test', 'o', '1,', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁label', '2,', '▁', '0,', '▁1,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁test', 'o', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁con', 'fer', 'ma', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁camb', 'io', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n\t', '▁pann', 'ello', '_', 'x', '_', 'ann', 'ulla', '▁=', '▁new', '▁panel', '();', '\n\t', '▁pann', 'ello', '_', 'x', '_', 'ann', 'ulla', '.', 'set', 'lay', 'out', '(', 'grid', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ulla', ',', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'p', 'ann', 'ello', ',', '▁', '0,', '▁', '0,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ulla', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁conf', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁g', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁test', 'o', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁g', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁camb', 'io', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁i', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁test', 'o', '2.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁i', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁void', '▁g', '()', '\n', '▁{', '\n\t\t', 'string', '▁t', 'mp', '▁=', '▁test', 'o', '1.', 'get', 'text', '();', '\n\t\t', 'if', '(', 't', 'mp', '.', 'equ', 'als', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'pass', 'wd', '))', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'c', 'amb', 'io', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'd', 'ial', 'og', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁pass', 'word', '▁non', '▁e', ""'"", '▁cor', 'ret', 'ta', '"");', '\n\t\t\t', 'd', 'ial', 'og', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁i', '()', '\n\t', '{', '\n', '▁string', '▁t', 'mp', '▁=', '▁test', 'o', '2.', 'get', 'text', '();', '\n\t\t', 'mess', 'aggio', '▁mess', 'aggio', '1', '▁=', '▁new', '▁mess', 'aggio', '(', 't', 'mp', ');', '\n\t\t', 'mess', 'aggio', '1.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'mess', 'aggio', '1.', 'c', '▁=', '▁this', ';', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '\n', 'class', '▁mess', 'aggio', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁ms', 'g', ';', '\n', '▁button', '▁ok', ';', '\n', '▁camb', 'iop', 'ass', 'word', '▁c', '▁=', '▁new', '▁camb', 'iop', 'ass', 'word', '();', '\n', '▁av', 'vis', 'o', '▁dial', 'og', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁text', 'field', '▁test', 'o', '3', ';', '\n', '▁panel', '▁pann', 'ello', ';', '\n', '▁string', '▁p', 'wd', '_', 'pass', 'ata', ';', '\n', '▁', '\n', '▁public', '▁mess', 'aggio', '(', 'string', '▁text', ')', '\n', '▁{', '\n', '▁super', '(""', 'mess', 'aggio', '▁per', '▁il', '▁camb', 'io', '▁di', '▁pass', 'word', '"");', '\n', '▁setup', '();', '\n', '▁p', 'wd', '_', 'pass', 'ata', '▁=', '▁text', ';', '\n', '▁init', '();', '\n', '▁pack', '();', '▁', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁un', '▁puls', 'ante', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', 'ok', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', ""'"", 'etic', 'he', 'tta', '\n', '▁ms', 'g', '▁=', '▁new', '▁label', '(""', 're', 'ins', 'er', 'ire', '▁la', '▁nu', 'ova', '▁pass', 'word', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', '▁text', 'field', '\n', '▁test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁test', 'o', '3.', 'set', 'ech', 'och', 'ar', ""('"", '*', ""'"", ');', '\n\n', '▁pann', 'ello', '▁=', '▁new', '▁panel', '();', '\n', '▁pann', 'ello', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁ms', 'g', ',', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁test', 'o', '3,', '▁2,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'p', 'ann', 'ello', ',', '▁ok', ',', '▁4,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pann', 'ello', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'ok', '();', '\n\t\t', '▁}', '\n', '▁}', ');', '\n\n', '▁test', 'o', '3.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'ok', '();', '\n', '▁}', '▁', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'ok', '()', '\n\t', '{', '\n', '▁if', '(', '(', 'test', 'o', '3.', 'get', 'text', '()', ').', 'equ', 'als', '(', 'p', 'wd', '_', 'pass', 'ata', '))', '\n', '▁{', '\n', '▁config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'pass', 'wd', '▁=', '▁test', 'o', '3.', 'get', 'text', '();', '\n\t\t', '▁dial', 'og', '▁=', '▁new', '▁av', 'vis', 'o', '(', 'this', ',""', 'la', '▁pass', 'word', '▁ver', 'ra', ""'"", '▁camb', 'iata', '▁alla', '▁con', 'fer', 'ma', '"");', '\n', '▁}', '\n', '▁else', '\n\t\t', '▁dial', 'og', '▁=', '▁new', '▁av', 'vis', 'o', '(', 'this', ',""', 'la', '▁nu', 'ova', '▁pass', 'word', '▁non', '▁e', ""'"", '▁st', 'ata', '▁acc', 'ett', 'ata', '"");', '\n', '▁', '\t', '▁dial', 'og', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '\n', 'class', '▁av', 'vis', 'o', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ok', ';', '\n', '▁mess', 'aggio', '▁pad', 're', ';', '\n\n', '▁public', '▁av', 'vis', 'o', '(', 'mess', 'aggio', '▁parent', ',', '▁string', '▁test', 'o', ')', '\n', '▁{', '\n', '▁super', '(""', 'att', 'enz', 'ione', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁panel', '▁text', 'pan', 'el', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '▁button', 'pan', 'el', '▁=', '▁new', '▁panel', '();', '\n', '▁text', 'pan', 'el', '.', 'add', '(', 'new', '▁label', '(', 'test', 'o', ')', ');', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', 'ok', '"");', '\n', '▁button', 'pan', 'el', '.', 'add', '(', 'ok', ');', '\n', '▁add', '(""', 'north', '"",', 'text', 'pan', 'el', ');', '\n', '▁add', '(""', 'center', '"",', 'but', 'ton', 'pan', 'el', ');', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'esc', 'i', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\t\n\t', 'v', 'oid', '▁esc', 'i', '()', '\n\t', '{', '\n\t\t', 'dis', 'pose', '();', '\n\t\t', 'pad', 're', '.', 'dis', 'pose', '();', '\n\t\t', 'pad', 're', '.', 'c', '.', 'dis', 'pose', '();', '\n\t\t', 'pad', 're', '.', 'c', '.', 'conf', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'lang', '.', 'string', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁config', 'ur', 'az', 'iones', 'ist', 'ema', '▁extends', '▁frame', '\n', '{', '\n\t', '//', '▁font', '▁cost', 'anti', '▁per', '▁uniform', 'are', '▁l', ""'"", 'as', 'petto', '▁delle', '▁finest', 're', '\n\t', 'public', '▁static', '▁final', '▁font', '▁font', '_', 'base', '▁=', '▁new', '▁font', '(""', 'times', 'roman', '"",', '▁font', '.', 'plain', ',', '▁12', ');', '\n\t', 'public', '▁static', '▁final', '▁font', '▁font', '_', 'sub', '▁=', '▁new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁18', ');', '\n\t', 'public', '▁static', '▁final', '▁font', '▁font', '_', 'tit', 'olo', '▁=', '▁new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12', ');', '\n\t', 'public', '▁static', '▁final', '▁font', '▁font', '_', 'all', 'ine', 'ato', '▁=', '▁new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12', ');', '\n\n\t', '//', '▁component', 'i', '▁della', '▁finest', 'ra', '▁di', '▁config', 'ur', 'azione', '\n', '▁text', 'field', '▁giorn', 'i', '_', 'bl', 'occo', ',', '▁sup', '_', 'bass', 'issima', ',', '▁sup', '_', 'bass', 'a', ',', '▁sup', '_', 'media', ',', '▁sup', '_', 'alta', ',', 'sup', '_', 'letto', '_', 'agg', ',', '\n', '▁cost', 'o', '_', 'x', '_', 'sc', 'atto', ',', '▁sup', '_', 'neon', 'ato', ',', '▁rid', '_', 'b', 'amb', 'ino', ',', '▁rid', '_', 'rag', 'azzo', ',', '▁rid', '_', 'com', 'it', 'iva', ',', '\n', '▁password', ',', '▁num', '_', 'max', '_', 'stan', 'ze', ',', '▁px', '_', 'col', 'azione', ',', '▁px', '_', 'mez', 'za', ',', '▁px', '_', 'inter', 'a', ',', '▁cop', 'erto', ',', '\n', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', ',', '▁cambio', ',', '▁alber', 'go', ',', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', ',', '▁comune', '_', 'alb', ',', '▁', '\n', '▁c', 'itta', '_', 'alb', ',', '▁rag', '_', 'soc', ',', '▁lic', 'enza', ';', '\n', '▁label', '▁cambio', '_', 'l', '_', 'e', ';', '\n', '▁label', '▁et', 'iche', 'tta', ',', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6,', '▁et', 'ich', '7,', '▁et', 'ich', '8,', '\n', '▁et', 'ich', '9,', '▁et', 'ich', '10,', '▁et', 'ich', '11', '▁,', 'et', 'ich', '11', '_', '1,', '▁et', 'ich', '12,', '▁et', 'ich', '13,', '▁et', 'ich', '14,', '▁et', 'ich', '15,', '▁et', 'ich', '16,', '▁et', 'ich', '17,', '\n', '▁et', 'ich', '18,', '▁et', 'ich', '19,', '▁et', 'ich', '20,', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', 'etic', 'he', 'tta', '4,', '\n', '▁et', 'iche', 'tta', '5,', '▁et', 'ich', '21,', '▁et', 'ich', '22,', '▁et', 'iche', 'tta', '6,', '▁et', 'ich', '23,', 'et', 'ich', '24,', 'et', 'ich', '25,', '▁et', 'iche', 'tta', '7;', '\n', '▁panel', '▁panel', '0,', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4;', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁check', 'box', 'group', '▁check', 'box', ';', '\n', '▁check', 'box', '[]', '▁check', 'boxes', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁pass', 'wd', ',', '▁confer', 'ma', ',', '▁stag', 'ioni', ';', '\n', '▁defin', 'iz', 'ion', 'estag', 'ional', 'ita', '▁def', '_', 'stag', ';', '\n\n\t', '//', '▁per', '▁il', '▁cambio', '▁di', '▁password', '▁e', '▁stag', 'ional', 'ita', '\n\t', 'static', '▁string', '▁new', '_', 'pass', 'wd', ';', '\n\t', 'static', '▁char', '[]', '▁new', '_', 'stag', '_', 'anno', '_', 'cor', 'r', ',', '▁new', '_', 'stag', '_', 'anno', '_', 'pro', 'x', ';', '\n', '▁', '\n\t', '//', '▁per', '▁la', '▁ger', 'arch', 'ia', '▁delle', '▁finest', 're', '\n\t', 'sub', 'gest', 'ione', '▁padre', '▁=', '▁new', '▁sub', 'gest', 'ione', '();', '\n\n\t', '//', '▁per', '▁freg', 'are', '▁l', ""'"", 'as', 'colt', 'atore', '\n\t', 'static', '▁config', 'ur', 'azione', '▁this', '_', 'config', ';', '\n\t', 'database', '▁db', ';', '\n\t\n\t', 'boolean', '▁first', '_', 'start', ';', '\n', '▁', '\n', '▁public', '▁config', 'ur', 'az', 'iones', 'ist', 'ema', '(', 'config', 'ur', 'azione', '▁config', ',', '▁boolean', '▁prima', '_', 'vol', 'ta', ',', '▁database', '▁archiv', 'io', ')', '\n', '▁{', '\n', '▁super', '(""', 'config', 'ur', 'azione', '▁di', '▁sistema', '"");', '\n', '▁this', '_', 'config', '▁=', '▁config', ';', '\n', '▁db', '▁=', '▁archiv', 'io', ';', '\n', '▁new', '_', 'pass', 'wd', '▁=', '▁this', '_', 'config', '.', 'get', 'pass', 'word', '();', '\n', '▁new', '_', 'stag', '_', 'anno', '_', 'cor', 'r', '▁=', '▁this', '_', 'config', '.', 'get', 'stag', 'ional', 'ita', '(', 'const', '.', 'anno', '_', 'cor', 'rente', ');', '\n', '▁new', '_', 'stag', '_', 'anno', '_', 'pro', 'x', '▁=', '▁this', '_', 'config', '.', 'get', 'stag', 'ional', 'ita', '(', 'const', '.', 'anno', '_', 'p', 'ross', 'imo', ');', '\n', '▁first', '_', 'start', '▁=', '▁prima', '_', 'vol', 'ta', ';', '\n', '▁setup', 'pan', 'els', '(', 'prima', '_', 'vol', 'ta', ');', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁', '\t', 'public', '▁void', '▁setup', 'pan', 'els', '(', 'boolean', '▁prima', '_', 'vol', 'ta', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', '▁this', '.', 'set', 'font', '(', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁cambio', '_', 'l', '_', 'e', '▁=', '▁new', '▁label', '(""', 'camb', 'io', '▁lira', '▁<', '-', '>', '▁euro', '"");', '\n', '▁et', 'iche', 'tta', '▁=', '▁new', '▁label', '(""', 'lic', 'enza', ':', '"");', '\n', '▁et', 'iche', 'tta', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁di', '▁config', 'ur', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'supplement', 'i', '▁dov', 'uto', '▁alle', '▁stag', 'ion', 'ional', 'ita', ""'"", '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'rid', 'uzioni', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '4', '▁=', '▁new', '▁label', '(""', 'rist', 'or', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '4.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '5', '▁=', '▁new', '▁label', '(""', 'val', 'uta', '"");', '\n', '▁et', 'iche', 'tta', '5.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '6', '▁=', '▁new', '▁label', '(""', 'camb', 'io', '▁di', '▁password', '▁ut', 'ente', '"");', '\n', '▁et', 'iche', 'tta', '6.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'iche', 'tta', '7', '▁=', '▁new', '▁label', '(""', 'defin', 'izione', '▁delle', '▁stag', 'ional', 'ita', ""'"", '"");', '\n', '▁et', 'iche', 'tta', '7.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁', '\n', '▁lic', 'enza', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '5);', '\n', '▁alber', 'go', '▁=', '▁new', '▁text', 'field', '(""', '"",', '2', '5);', '\n', '▁comune', '_', 'alb', '▁=', 'new', '▁text', 'field', '(""', '"",', '3', '5);', '\n', '▁c', 'itta', '_', 'alb', '▁=', '▁new', '▁text', 'field', '(""', '"",', '2', '5);', '\n', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '5);', '\n', '▁rag', '_', 'soc', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '5);', '\n', '▁giorn', 'i', '_', 'bl', 'occo', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁sup', '_', 'bass', 'issima', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁sup', '_', 'bass', 'a', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁sup', '_', 'media', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁sup', '_', 'alta', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁sup', '_', 'neon', 'ato', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁sup', '_', 'letto', '_', 'agg', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁rid', '_', 'b', 'amb', 'ino', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁rid', '_', 'rag', 'azzo', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁rid', '_', 'com', 'it', 'iva', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁num', '_', 'max', '_', 'stan', 'ze', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁num', '_', 'max', '_', 'stan', 'ze', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁px', '_', 'col', 'azione', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁px', '_', 'mez', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁px', '_', 'inter', 'a', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁cop', 'erto', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁cost', 'o', '_', 'x', '_', 'sc', 'atto', '▁=', '▁new', '▁text', 'field', '(""', '"",', '9);', '\n', '▁password', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁cambio', '▁=', '▁new', '▁text', 'field', '(""', '"",', '8);', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '\n', '▁check', 'box', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'boxes', '▁=', '▁new', '▁check', 'box', '[', '2', '];', '\n', '▁check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁lire', '"",', 'check', 'box', ',', 'true', ');', '\n', '▁check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁euro', '"",', 'check', 'box', ',', 'false', ');', '\n\t', '▁writ', 'ed', 'atic', 'on', 'f', '();', '\n\t', '▁', '\n\t', '▁if', '▁(', 'prima', '_', 'vol', 'ta', ')', '\n\t\t\t', 'lic', 'enza', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t', '▁else', '\n\t\t\t', 'lic', 'enza', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁lic', 'enza', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'red', '.', 'dark', 'er', '());', '\n', '▁alber', 'go', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁comune', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁c', 'itta', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁rag', '_', 'soc', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁password', '.', 'set', 'ech', 'och', 'ar', ""('"", '*', ""');"", '\n\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁dell', ""'"", 'al', 'ber', 'go', '"");', '\n', '▁et', 'ich', '1.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'bold', ',', '▁12)', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁dell', ""'"", 'al', 'ber', 'go', ':', '"");', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'ind', 'ir', 'iz', 'zo', '▁dell', ""'"", 'al', 'ber', 'go', ':', '"");', '\n', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'set', 'fore', 'ground', '(', 'color', '.', 'blue', ');', '\n', '▁et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'com', 'une', '▁dell', ""'"", 'al', 'ber', 'go', ':', '"");', '\n', '▁et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'c', 'itta', ""'"", '▁dell', ""'"", 'al', 'ber', 'go', ':', '"");', '\n', '▁et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁giorn', 'i', '▁massimo', '▁di', '▁bl', 'occ', 'aggio', '▁di', '▁una', '▁stanza', '"");', '\n', '▁et', 'ich', '7', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁bass', 'is', 'ima', '▁stag', 'ione', '"");', '\n', '▁et', 'ich', '8', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁bassa', '▁stag', 'ione', '"");', '\n', '▁et', 'ich', '9', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁media', '▁stag', 'ione', '"");', '\n', '▁et', 'ich', '10', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁alta', '▁stag', 'ione', '"");', '\n', '▁et', 'ich', '11', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁per', '▁neon', 'ati', '"");', '\n', '▁et', 'ich', '11', '_1', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', '"");', '\n', '▁et', 'ich', '12', '▁=', '▁new', '▁label', '(""', 'rid', 'uzione', '▁per', '▁bamb', 'ini', '▁%', '"");', '\n', '▁et', 'ich', '13', '▁=', '▁new', '▁label', '(""', 'rid', 'uzione', '▁per', '▁rag', 'azzi', '▁%', '"");', '\n', '▁et', 'ich', '14', '▁=', '▁new', '▁label', '(""', 'rid', 'uzione', '▁per', '▁com', 'itive', '▁%', '"");', '\n', '▁et', 'ich', '15', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁minim', 'o', '▁di', '▁pers', 'one', '▁per', '▁comit', 'iva', '"");', '\n', '▁et', 'ich', '16', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁stan', 'ze', '"");', '\n', '▁et', 'ich', '17', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁prima', '▁col', 'azione', '"");', '\n', '▁et', 'ich', '18', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁mez', 'za', '▁pension', 'e', '"");', '\n', '▁et', 'ich', '19', '▁=', '▁new', '▁label', '(""', 'supplement', 'o', '▁pension', 'e', '▁complet', 'a', '"");', '\n', '▁et', 'ich', '20', '▁=', '▁new', '▁label', '(""', 'cop', 'erto', '▁per', '▁la', '▁r', 'istor', 'azione', '"");', '\n', '▁et', 'ich', '21', '▁=', '▁new', '▁label', '(""', 'cost', 'o', '▁di', '▁uno', '▁sc', 'atto', '▁telef', 'on', 'ico', '"");', '\n', '▁et', 'ich', '22', '▁=', '▁new', '▁label', '(""', 'pass', 'word', '▁ut', 'ente', '"");', '\n', '▁et', 'ich', '23', '▁=', '▁new', '▁label', '(""', 'l', 'ire', '"");', '\n', '▁et', 'ich', '24', '▁=', '▁new', '▁label', '(""', 'doll', 'ari', '"");', '\n', '▁et', 'ich', '25', '▁=', '▁new', '▁label', '(""', 'rag', 'ione', '▁sociale', '"");', '\n\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n', '▁pass', 'wd', '▁=', '▁new', '▁button', '(""', 'camb', 'io', '▁di', '▁password', '"");', '\n', '▁confer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁stag', 'ioni', '▁=', '▁new', '▁button', '(""', 'defin', 'isc', 'i', '▁stag', 'ional', 'ita', ""'"", '"");', '\n\n', '▁panel', '0', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁et', 'iche', 'tta', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁lic', 'enza', ',', '▁1,', '▁0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁et', 'ich', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁et', 'ich', '2,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁alber', 'go', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁et', 'ich', '3,', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁ind', 'ir', 'iz', 'zo', '_', 'alb', ',', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁et', 'ich', '4,', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁comune', '_', 'alb', ',', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁et', 'ich', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁c', 'itta', '_', 'alb', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁et', 'ich', '25,', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', '▁rag', '_', 'soc', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '6,', '▁0,', '▁1,', '▁5,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁giorn', 'i', '_', 'bl', 'occo', ',', '▁5,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '21,', '▁7,', '▁1,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁cost', 'o', '_', 'x', '_', 'sc', 'atto', ',', '▁10,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '2,', '▁0,', '▁2,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '3,', '▁5,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '4,', '▁8,', '▁2,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '//', '▁supplement', 'i', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '7,', '▁0,', '▁3,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁sup', '_', 'bass', 'issima', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '8,', '▁0,', '▁4,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁sup', '_', 'bass', 'a', ',', '▁3,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '9,', '▁0,', '▁5,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁sup', '_', 'media', ',', '▁3,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '10,', '▁0,', '▁6,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁sup', '_', 'alta', ',', '▁3,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '11,', '▁0,', '▁7,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁sup', '_', 'neon', 'ato', ',', '▁3,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '11', '_', '1,', '▁0,', '▁8,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁sup', '_', 'letto', '_', 'agg', ',', '▁3,', '▁8,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t\n\t', '//', '▁rid', 'uzioni', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '12,', '▁4,', '▁3,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁rid', '_', 'b', 'amb', 'ino', ',', '▁7,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '13,', '▁4,', '▁4,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁rid', '_', 'rag', 'azzo', ',', '▁7,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '14,', '▁4,', '▁5,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁rid', '_', 'com', 'it', 'iva', ',', '▁7,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '15,', '▁4,', '▁6,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁min', '_', 'pers', '_', 'com', 'it', 'iva', ',', '▁7,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n\t', '//', '▁r', 'istor', 'azione', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '17,', '▁8,', '▁3,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁px', '_', 'col', 'azione', ',', '▁11,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '18,', '▁8,', '▁4,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁px', '_', 'mez', 'za', ',', '▁11,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '19,', '▁8,', '▁5,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁px', '_', 'inter', 'a', ',', '▁11,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '20,', '▁8,', '▁6,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁cop', 'erto', ',', '▁11,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁cambio', '_', 'l', '_', 'e', ',', '▁5,', '▁7,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁cambio', ',', '▁7,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '16,', '▁9,', '▁7,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁num', '_', 'max', '_', 'stan', 'ze', ',', '▁11,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁et', 'iche', 'tta', '5,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '[0', '],', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '[1', '],', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'iche', 'tta', '6,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁pass', 'wd', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'iche', 'tta', '7,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁stag', 'ioni', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\n', '▁panel', '4', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '4.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁ann', 'ulla', ',', '▁8,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'north', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁confer', 'ma', ',', '▁9,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'north', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁6,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁0,', '▁6,', '▁12,', '▁9,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '2,', '▁0,', '▁15,', '▁1,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '3,', '▁1,', '▁15,', '▁11,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '4,', '▁0,', '▁19,', '▁12,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n\t\t\t', 'if', '▁(!', 'first', '_', 'start', ')', '\n\t', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n\t', '▁else', '\n\t', '▁', '\t', 'system', '.', 'exit', '(', '0);', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n\t\t', '▁}', '\n', '▁}', ');', '\n\n', '▁check', 'boxes', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n', '▁{', '\n', '▁', '\t', 'start', 'av', 'vis', 'o', '(', 'const', '.', 'l', 'ire', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'boxes', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n', '▁{', '\n', '▁', '\t', 'start', 'av', 'vis', 'o', '(', 'const', '.', 'euro', ');', '\t\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\n', '▁pass', 'wd', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'change', 'p', 'wd', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁stag', 'ioni', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁set', 'stag', 'ioni', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\t\n\t', 'void', '▁start', 'av', 'vis', 'o', '(', 'char', '▁nuova', '_', 'val', 'uta', ')', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'if', '▁(', 'nu', 'ova', '_', 'val', 'uta', '▁!=', '▁this', '_', 'config', '.', 'get', 'val', 'uta', '()', '▁&&', '▁!', 'first', '_', 'start', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ione', ':', '▁il', '▁cambio', '▁lira', '<', '-', '>', 'euro', '▁eff', 'ettu', 'ato', '▁alla', '▁confer', 'ma', '▁mod', 'ific', 'hera', ""'"", '▁le', '▁cif', 're', '▁della', '▁finest', 'ra', '▁cor', 'rente', '!', '"");', '\n\t\t', '}', '\n\t', '}', '\n\t\n', '▁void', '▁start', 'change', 'p', 'wd', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁camb', 'iop', 'ass', 'word', '▁cambio', '▁=', '▁new', '▁camb', 'iop', 'ass', 'word', '();', '\n', '▁cambio', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁cambio', '.', 'conf', '▁=', '▁this', ';', '\n', '▁}', '\n', '▁', '\n', '▁', '\t', 'void', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t\n\t\t\t', 'if', '▁(!', 'er', 'r', 'ore', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'char', '▁vec', 'chia', '_', 'val', 'uta', '▁=', '▁this', '_', 'config', '.', 'get', 'val', 'uta', '();', '\n\t\t\t\t', 'read', 'd', 'atic', 'on', 'f', '();', '\n\t\t\t\t', 'this', '_', 'config', '.', 'set', 'pass', 'word', '(', 'new', '_', 'pass', 'wd', ');', '\n\t\t\t\t', 'this', '_', 'config', '.', 'set', 'stag', 'ional', 'ita', '(', 'new', '_', 'stag', '_', 'anno', '_', 'cor', 'r', ',', '▁new', '_', 'stag', '_', 'anno', '_', 'pro', 'x', ');', '\n\t\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'db', '.', 'writ', 'econ', 'figur', 'azione', '(', 'this', '_', 'config', ')))', '▁!=', '▁database', '.', 'ok', '▁)', '▁', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', '▁vec', 'chia', '_', 'val', 'uta', '▁!=', '▁this', '_', 'config', '.', 'get', 'val', 'uta', '()', '▁&&', '▁!', 'first', '_', 'start', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'start', 'c', 'ambi', 'oval', 'uta', '();', '\n\t\t\t\t\t\t', 'if', '▁(', 'j', '▁!=', '▁database', '.', 'ok', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t\t\t\t\t\t', 'return', ';', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'this', '_', 'config', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'config', 'ur', 'azione', '();', '\n\t\t\t\t\t\t', 'princip', 'ale', '.', 'config', '▁=', '▁this', '_', 'config', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(!', '(', 'first', '_', 'start', '))', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'pad', 're', '.', 'pass', '.', 'p', '.', 'sett', 'itle', '(', 'this', '_', 'config', '.', 'get', 'n', 'ome', 'al', 'ber', 'go', '());', '\n\t\t\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'frame', '▁p', '▁=', '▁new', '▁princip', 'ale', '(', 'this', '_', 'config', ',', '▁db', ');', '\n\t\t\t\t\t\t', 'p', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\t\t\t\t\t\t\n\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t', '}', '\n\t\n\t', 'void', '▁set', 'stag', 'ioni', '()', '\n\t', '{', '\n', '▁def', '_', 'stag', '▁=', '▁new', '▁defin', 'iz', 'ion', 'estag', 'ional', 'ita', '(', 'this', ');', '\n\t', '}', '\t\n\t\n\t', 'boolean', '▁err', 'ore', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', '((', 'lic', 'enza', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁lic', 'enza', '▁de', 've', '▁ess', 'ere', '▁comp', 'osta', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'al', 'ber', 'go', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁21', '▁))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁nome', '▁dell', ""'"", 'al', 'ber', 'go', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n', '▁', '\t', 'if', '▁(', '▁!', '((', 'com', 'une', '_', 'alb', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁comune', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'c', 'itta', '_', 'alb', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁21', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁c', 'itta', ""'"", '▁de', 've', '▁ess', 'ere', '▁comp', 'osta', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'rag', '_', 'soc', '.', 'get', 'text', '()', ').', 'length', '()', '▁<', '▁33', '▁)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁rag', 'ione', '▁sociale', '▁de', 've', '▁ess', 'ere', '▁comp', 'osta', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'int', 'pos', '(', 'gi', 'orn', 'i', '_', 'bl', 'occo', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁numero', '▁di', '▁giorn', 'i', '▁di', '▁bloc', 'co', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁inter', 'o', '▁posit', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'sup', '_', 'bass', 'issima', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'sup', '_', 'bass', 'a', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'sup', '_', 'media', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'sup', '_', 'alta', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'sup', '_', 'neon', 'ato', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'sup', '_', 'letto', '_', 'agg', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'px', '_', 'col', 'azione', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'px', '_', 'mez', 'za', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'px', '_', 'inter', 'a', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁i', '▁supplement', 'i', '▁devon', 'o', '▁ess', 'ere', '▁num', 'eri', '▁posit', 'ivi', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'b', 'amb', 'ino', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'rag', 'azzo', '.', 'get', 'text', '())', '▁||', '\n\t\t\t', '▁!', 'utils', '.', 'is', 'int', 'pos', '(', 'rid', '_', 'com', 'it', 'iva', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁inter', 'o', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'int', 'pos', '(', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁numero', '▁di', '▁pers', 'one', '▁comit', 'iva', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁inter', 'o', '▁posit', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'int', 'pos', '(', 'num', '_', 'max', '_', 'stan', 'ze', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁numero', '▁di', '▁stan', 'ze', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁inter', 'o', '▁posit', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'cop', 'erto', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cop', 'erto', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁posit', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'cost', 'o', '_', 'x', '_', 'sc', 'atto', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cost', 'o', '▁dello', '▁sc', 'atto', '▁telef', 'on', 'ico', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁posit', 'ivo', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '\t', '(', '▁!', 'utils', '.', 'is', 'float', 'pos', '(', 'camb', 'io', '.', 'get', 'text', '())', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁coefficient', 'e', '▁di', '▁cambio', '▁lire', '<', '-', '>', 'euro', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁posit', 'ivo', '▁e', '▁divers', 'o', '▁da', '▁zero', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'if', '▁(', '▁!', '((', 'float', '.', 'value', 'of', '(', 'camb', 'io', '.', 'get', 'text', '())', ').', 'float', 'value', '()', '▁>', '▁0)', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁coefficient', 'e', '▁di', '▁cambio', '▁lire', '<', '-', '>', 'euro', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁posit', 'ivo', '▁e', '▁divers', 'o', '▁da', '▁zero', '!', '▁""', ');', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁read', 'd', 'atic', 'on', 'f', '()', '\n\t', '{', '\n\t\t', 'this', '_', 'config', '.', 'set', 'lic', 'enza', '(', 'lic', 'enza', '.', 'get', 'text', '());', '\n\t\t', 'this', '_', 'config', '.', 'set', 'n', 'ome', 'al', 'ber', 'go', '(', 'al', 'ber', 'go', '.', 'get', 'text', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'com', 'une', 'alb', '(', 'com', 'une', '_', 'alb', '.', 'get', 'text', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'ind', 'ir', 'iz', 'zo', 'alb', '(', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 'get', 'text', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'c', 'itta', 'alb', '(', 'c', 'itta', '_', 'alb', '.', 'get', 'text', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'rag', 'soc', '(', 'rag', '_', 'soc', '.', 'get', 'text', '());', '\n\t\t', 'this', '_', 'config', '.', 'set', 'gi', 'orn', 'ib', 'loc', 'co', '(', 'integer', '.', 'parse', 'int', '(', 'gi', 'orn', 'i', '_', 'bl', 'occo', '.', 'get', 'text', '())', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'sets', 'upp', 'lement', 'o', '((', 'float', '.', 'value', 'of', '(', 'sup', '_', 'bass', 'issima', '.', 'get', 'text', '())', ').', 'float', 'value', '(),', 'flag', '.', 'bass', 'issima', '_', 'stag', 'ione', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'sets', 'upp', 'lement', 'o', '((', 'float', '.', 'value', 'of', '(', 'sup', '_', 'bass', 'a', '.', 'get', 'text', '())', ').', 'float', 'value', '(),', 'flag', '.', 'bass', 'a', '_', 'stag', 'ione', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'sets', 'upp', 'lement', 'o', '((', 'float', '.', 'value', 'of', '(', 'sup', '_', 'media', '.', 'get', 'text', '())', ').', 'float', 'value', '(),', 'flag', '.', 'media', '_', 'stag', 'ione', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'sets', 'upp', 'lement', 'o', '((', 'float', '.', 'value', 'of', '(', 'sup', '_', 'alta', '.', 'get', 'text', '())', ').', 'float', 'value', '(),', 'flag', '.', 'alta', '_', 'stag', 'ione', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'sets', 'up', 'neon', 'ato', '((', 'float', '.', 'value', 'of', '(', 'sup', '_', 'neon', 'ato', '.', 'get', 'text', '())', ').', 'float', 'value', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'sets', 'up', 'letto', 'agg', '((', 'float', '.', 'value', 'of', '(', 'sup', '_', 'letto', '_', 'agg', '.', 'get', 'text', '())', ').', 'float', 'value', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'rid', 'uzione', '(', 'integer', '.', 'parse', 'int', '(', 'rid', '_', 'b', 'amb', 'ino', '.', 'get', 'text', '()),', 'flag', '.', 'b', 'amb', 'ino', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'rid', 'uzione', '(', 'integer', '.', 'parse', 'int', '(', 'rid', '_', 'rag', 'azzo', '.', 'get', 'text', '()),', 'flag', '.', 'rag', 'azzo', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'rid', 'uzione', '(', 'integer', '.', 'parse', 'int', '(', 'rid', '_', 'com', 'it', 'iva', '.', 'get', 'text', '()),', 'flag', '.', 'com', 'it', 'iva', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'min', 'pers', 'com', 'it', '(', 'integer', '.', 'parse', 'int', '(', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 'get', 'text', '())', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'num', 'stan', 'ze', '(', 'integer', '.', 'parse', 'int', '(', 'num', '_', 'max', '_', 'stan', 'ze', '.', 'get', 'text', '())', ');', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'px', 'col', 'azione', '((', 'float', '.', 'value', 'of', '(', 'px', '_', 'col', 'azione', '.', 'get', 'text', '())', ').', 'float', 'value', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'px', 'mez', 'za', '((', 'float', '.', 'value', 'of', '(', 'px', '_', 'mez', 'za', '.', 'get', 'text', '())', ').', 'float', 'value', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'px', 'inter', 'a', '((', 'float', '.', 'value', 'of', '(', 'px', '_', 'inter', 'a', '.', 'get', 'text', '())', ').', 'float', 'value', '());', '\t\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'cop', 'erto', '((', 'float', '.', 'value', 'of', '(', 'cop', 'erto', '.', 'get', 'text', '())', ').', 'float', 'value', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'cost', 'ox', 'sc', 'atto', '((', 'float', '.', 'value', 'of', '(', 'cost', 'o', '_', 'x', '_', 'sc', 'atto', '.', 'get', 'text', '())', ').', 'float', 'value', '());', '\n', '▁', '\t', 'this', '_', 'config', '.', 'set', 'coeff', 'xc', 'amb', 'io', '((', 'float', '.', 'value', 'of', '(', 'camb', 'io', '.', 'get', 'text', '())', ').', 'float', 'value', '());', '\n', '▁', '\t', 'if', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n', '▁', '\t\t', 'this', '_', 'config', '.', 'set', 'val', 'uta', '(', 'const', '.', 'l', 'ire', ');', '\n', '▁', '\t', 'else', '\n', '▁', '\t\t', 'this', '_', 'config', '.', 'set', 'val', 'uta', '(', 'const', '.', 'euro', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁writ', 'ed', 'atic', 'on', 'f', '()', '\n\t', '{', '\n\t\t', '//', 'string', '▁s', '▁=', '▁new', '▁string', '(', 'princip', 'ale', '.', 'sim', 'bol', ');', '\n\t\t\n\t\t', 'lic', 'enza', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'lic', 'enza', '());', '\n\t\t', 'al', 'ber', 'go', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'n', 'ome', 'al', 'ber', 'go', '());', '\n', '▁', '\t', 'com', 'une', '_', 'alb', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'com', 'une', 'alb', '());', '\n', '▁', '\t', 'ind', 'ir', 'iz', 'zo', '_', 'alb', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'ind', 'ir', 'iz', 'zo', 'alb', '());', '\n', '▁', '\t', 'c', 'itta', '_', 'alb', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'c', 'itta', 'alb', '());', '\n', '▁', '\t', 'rag', '_', 'soc', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'rag', 'soc', '());', '\n\t\t', 'gi', 'orn', 'i', '_', 'bl', 'occo', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'gi', 'orn', 'ib', 'loc', 'co', '());', '\n', '▁', '\t', 'sup', '_', 'bass', 'issima', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'supplement', 'o', '(', 'flag', '.', 'bass', 'issima', '_', 'stag', 'ione', '));', '\n', '▁', '\t', 'sup', '_', 'bass', 'a', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'supplement', 'o', '(', 'flag', '.', 'bass', 'a', '_', 'stag', 'ione', '));', '\n', '▁', '\t', 'sup', '_', 'media', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'supplement', 'o', '(', 'flag', '.', 'media', '_', 'stag', 'ione', '));', '\n', '▁', '\t', 'sup', '_', 'alta', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'supplement', 'o', '(', 'flag', '.', 'alta', '_', 'stag', 'ione', '));', '\n', '▁', '\t', 'sup', '_', 'neon', 'ato', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'sup', 'neon', 'ato', '());', '\n', '▁', '\t', 'sup', '_', 'letto', '_', 'agg', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'sup', 'letto', 'agg', '());', '\n', '▁', '\t', 'rid', '_', 'b', 'amb', 'ino', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'rid', 'uzione', '(', 'flag', '.', 'b', 'amb', 'ino', '));', '\n', '▁', '\t', 'rid', '_', 'rag', 'azzo', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'rid', 'uzione', '(', 'flag', '.', 'rag', 'azzo', '));', '\n', '▁', '\t', 'rid', '_', 'com', 'it', 'iva', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'rid', 'uzione', '(', 'flag', '.', 'com', 'it', 'iva', '));', '\n', '▁', '\t', 'min', '_', 'pers', '_', 'com', 'it', 'iva', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'min', 'pers', 'com', 'it', '());', '\n', '▁', '\t', 'num', '_', 'max', '_', 'stan', 'ze', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'num', 'stan', 'ze', '());', '\n', '▁', '\t', 'px', '_', 'col', 'azione', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'px', 'col', 'azione', '());', '\n', '▁', '\t', 'px', '_', 'mez', 'za', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'px', 'mez', 'za', '());', '\n', '▁', '\t', 'px', '_', 'inter', 'a', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'px', 'inter', 'a', '());', '\t\n', '▁', '\t', 'cop', 'erto', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'cop', 'erto', '());', '\n', '▁', '\t', 'cost', 'o', '_', 'x', '_', 'sc', 'atto', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'cost', 'ox', 'sc', 'atto', '());', '\n', '▁', '\t', 'camb', 'io', '.', 's', 'ette', 'xt', '(""', '""', '+', 'this', '_', 'config', '.', 'get', 'coeff', 'xc', 'amb', 'io', '());', '\n\t\t', 'if', '▁(', 'this', '_', 'config', '.', 'get', 'val', 'uta', '()', '▁==', '▁const', '.', 'l', 'ire', ')', '\n\t\t\t', 'check', 'box', '.', 'setselected', 'check', 'box', '(', 'check', 'boxes', '[0]', ');', '\n\t\t', 'else', '\n\t\t\t', 'check', 'box', '.', 'setselected', 'check', 'box', '(', 'check', 'boxes', '[1]', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '/', '\n', 'class', '▁camb', 'iop', 'ass', 'word', '▁extends', '▁frame', '\n', '{', '\n', '▁text', 'field', '▁testo', '1,', '▁testo', '2,', '▁testo', '3;', '\n', '▁label', '▁label', '1,', '▁label', '2,', '▁label', '3;', '\n', '▁grid', 'bag', 'layout', '▁grid', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁panel', '▁pann', 'ello', ',', '▁pann', 'ello', '_', 'x', '_', 'ann', 'ulla', ';', '\n', '▁frame', '▁conf', '▁=', '▁new', '▁frame', '();', '\n', '▁button', '▁confer', 'ma', ',', '▁cambio', ',', '▁ann', 'ulla', ';', '\n', '▁mess', 'aged', 'ial', 'og', '▁dialog', ';', '\n', '▁', '\n', '▁public', '▁camb', 'iop', 'ass', 'word', '()', '\n', '▁{', '\n', '▁super', '(""', 'camb', 'io', '▁di', '▁password', '"");', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n', '▁', '\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'ins', 'er', 'ire', '▁vec', 'chia', '▁password', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'ins', 'er', 'ire', '▁nuova', '▁password', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 're', 'ins', 'er', 'ire', '▁la', '▁nuova', '▁password', '"");', '\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '\n', '▁testo', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁testo', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁testo', '1.', 'set', 'ech', 'och', 'ar', ""('"", '*', ""');"", '\n', '▁testo', '2.', 'set', 'ech', 'och', 'ar', ""('"", '*', ""');"", '\n', '▁testo', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁confer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁cambio', '▁=', '▁new', '▁button', '(""', 'camb', 'io', '▁di', '▁password', '"");', '\n', '▁cambio', '.', 'set', 'enabled', '(', 'false', ');', '\n\t', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n', '▁pann', 'ello', '▁=', '▁new', '▁panel', '();', '\n', '▁pann', 'ello', '.', 'set', 'layout', '(', 'grid', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁label', '1,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁testo', '1,', '▁2,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁label', '2,', '▁0,', '▁1,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁testo', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁confer', 'ma', ',', '▁3,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁cambio', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n\t', '▁pann', 'ello', '_', 'x', '_', 'ann', 'ulla', '▁=', '▁new', '▁panel', '();', '\n\t', '▁pann', 'ello', '_', 'x', '_', 'ann', 'ulla', '.', 'set', 'layout', '(', 'grid', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ulla', ',', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'p', 'ann', 'ello', ',', '▁0,', '▁0,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'p', 'ann', 'ello', '_', 'x', '_', 'ann', 'ulla', ',', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁conf', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁g', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁testo', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁g', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁cambio', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁i', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁testo', '2.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁i', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁void', '▁g', '()', '\n', '▁{', '\n\t\t', 'string', '▁t', 'mp', '▁=', '▁testo', '1.', 'get', 'text', '();', '\n\t\t', 'if', '(', 't', 'mp', '.', 'equals', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'pass', 'wd', '))', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'camb', 'io', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'dial', 'og', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁password', '▁non', '▁e', ""'"", '▁cor', 'retta', '"");', '\n\t\t\t', 'dial', 'og', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '("""");', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'void', '▁i', '()', '\n\t', '{', '\n', '▁string', '▁t', 'mp', '▁=', '▁testo', '2.', 'get', 'text', '();', '\n\t\t', 'mess', 'aggio', '▁mess', 'aggio', '1', '▁=', '▁new', '▁mess', 'aggio', '(', 't', 'mp', ');', '\n\t\t', 'mess', 'aggio', '1.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'mess', 'aggio', '1.', 'c', '▁=', '▁this', ';', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '/', '\n', 'class', '▁mess', 'aggio', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁msg', ';', '\n', '▁button', '▁ok', ';', '\n', '▁camb', 'iop', 'ass', 'word', '▁c', '▁=', '▁new', '▁camb', 'iop', 'ass', 'word', '();', '\n', '▁av', 'vis', 'o', '▁dialog', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁text', 'field', '▁testo', '3;', '\n', '▁panel', '▁pann', 'ello', ';', '\n', '▁string', '▁p', 'wd', '_', 'pass', 'ata', ';', '\n', '▁', '\n', '▁public', '▁mess', 'aggio', '(', 'string', '▁text', ')', '\n', '▁{', '\n', '▁super', '(""', 'mess', 'aggio', '▁per', '▁il', '▁cambio', '▁di', '▁password', '"");', '\n', '▁setup', '();', '\n', '▁p', 'wd', '_', 'pass', 'ata', '▁=', '▁text', ';', '\n', '▁init', '();', '\n', '▁pack', '();', '▁', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁un', '▁puls', 'ante', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', 'ok', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', ""'"", 'etic', 'he', 'tta', '\n', '▁msg', '▁=', '▁new', '▁label', '(""', 're', 'ins', 'er', 'ire', '▁la', '▁nuova', '▁password', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', '▁text', 'field', '\n', '▁testo', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁testo', '3.', 'set', 'ech', 'och', 'ar', ""('"", '*', ""');"", '\n\n', '▁pann', 'ello', '▁=', '▁new', '▁panel', '();', '\n', '▁pann', 'ello', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁msg', ',', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁testo', '3,', '▁2,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'p', 'ann', 'ello', ',', '▁ok', ',', '▁4,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁pann', 'ello', ',', '▁0,', '▁0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'ok', '();', '\n\t\t', '▁}', '\n', '▁}', ');', '\n\n', '▁testo', '3.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'ok', '();', '\n', '▁}', '▁', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁start', 'ok', '()', '\n\t', '{', '\n', '▁if', '((', 'test', 'o', '3.', 'get', 'text', '()', ').', 'equals', '(', 'p', 'wd', '_', 'pass', 'ata', '))', '\n', '▁{', '\n', '▁config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'new', '_', 'pass', 'wd', '▁=', '▁testo', '3.', 'get', 'text', '();', '\n\t\t', '▁dialog', '▁=', '▁new', '▁av', 'vis', 'o', '(', 'this', ',""', 'la', '▁password', '▁ver', 'ra', ""'"", '▁camb', 'iata', '▁alla', '▁confer', 'ma', '"");', '\n', '▁}', '\n', '▁else', '\n\t\t', '▁dialog', '▁=', '▁new', '▁av', 'vis', 'o', '(', 'this', ',""', 'la', '▁nuova', '▁password', '▁non', '▁e', ""'"", '▁st', 'ata', '▁acc', 'ett', 'ata', '"");', '\n', '▁', '\t', '▁dialog', '.', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n', '}', '\n\n', '/', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '**', '/', '\n', 'class', '▁av', 'vis', 'o', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ok', ';', '\n', '▁mess', 'aggio', '▁padre', ';', '\n\n', '▁public', '▁av', 'vis', 'o', '(', 'mess', 'aggio', '▁parent', ',', '▁string', '▁testo', ')', '\n', '▁{', '\n', '▁super', '(""', 'att', 'enz', 'ione', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁panel', '▁text', 'panel', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '▁button', 'panel', '▁=', '▁new', '▁panel', '();', '\n', '▁text', 'panel', '.', 'add', '(', 'new', '▁label', '(', 'test', 'o', '));', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', 'ok', '"");', '\n', '▁button', 'panel', '.', 'add', '(', 'ok', ');', '\n', '▁add', '(""', 'north', '"",', 'text', 'panel', ');', '\n', '▁add', '(""', 'center', '"",', 'button', 'panel', ');', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'esc', 'i', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\t\n\t', 'void', '▁esc', 'i', '()', '\n\t', '{', '\n\t\t', 'dis', 'pose', '();', '\n\t\t', 'pad', 're', '.', 'dis', 'pose', '();', '\n\t\t', 'pad', 're', '.', 'c', '.', 'dis', 'pose', '();', '\n\t\t', 'pad', 're', '.', 'c', '.', 'conf', '.', 'set', 'enabled', '(', 'true', ');', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import java lang string import common util import common def import moduli public class configurazion sistema extend frame font costanti per uniformar aspetto dell finestr public static final font font base new font time roman font plain public static final font font sub new font courier font bold public static final font font titolo new font courier font bold public static final font font allineato new font courier font plain componenti della finestra configurazion text field giorni blocco sup bassissima sup bassa sup media sup alta sup letto agg costo scatto sup neonato rid bambino rid ragazzo rid comitiva password num max stanz colazion mezza intera coperto min per comitiva cambio albergo indirizzo alb comun alb citta alb rag soc licenza label cambio label etichetta etich etich etich etich etich etich etich etich etich etich etich etich etich etich etich etich etich etich etich etich etich etichetta etichetta etichetta etichetta etichetta etich etich etichetta etich etich etich etichetta panel panel panel panel panel panel grid bag layout gridbag new grid bag layout checkbox group checkbox checkbox checkbox button annulla passwd conferma stagioni definizion stagionalita def stag per cambio password stagionalita static string new passwd static char new stag anno corr new stag anno prox per gerarchia dell finestr sub gestion padr new sub gestion per fregar ascoltator static configurazion this_config data base boolean first_start public configurazion sistema configurazion config boolean prima_volta data base archivio super configurazion sistema ""); this_config config archivio new_passwd this_config get password (); new_stag_anno_corr this_config get stagionalita const anno_corrent new_stag_anno_prox this_config get stagionalita const anno_prossimo first_start prima_volta setup panel prima_volta init (); pack (); public void setup panel boolean prima_volta set font font_bas creo etichett cambio_l_ new label cambio lira <-> euro ""); etichetta new label licenza :""); etichetta set font new font courier font bold )); etichetta1 new label dati configurazion ""); etichetta1 set font new font courier font bold )); etichetta2 new label supplementi dovuto all stagionionalita ""); etichetta2 set font new font courier font bold )); etichetta3 new label riduzioni ""); etichetta3 set font new font courier font bold )); etichetta4 new label ristorazion ""); etichetta4 set font new font courier font bold )); etichetta5 new label valuta ""); etichetta5 set font new font courier font bold )); etichetta6 new label cambio password utent ""); etichetta6 set font new font courier font bold )); etichetta7 new label definizion dell stagionalita ""); etichetta7 set font new font courier font bold )); licenza new text field ("""", albergo new text field ("""", comune_alb new text field ("""", citta_alb new text field ("""", indirizzo_alb new text field ("""", rag_soc new text field ("""", giorni_blocco new text field ("""", sup_bassissima new text field ("""", sup_bassa new text field ("""", sup_media new text field ("""", sup_alta new text field ("""", sup_neonato new text field ("""", sup_letto_agg new text field ("""", rid_bambino new text field ("""", rid_ragazzo new text field ("""", rid_comitiva new text field ("""", min_pers_comitiva new text field ("""", num_max_stanz new text field ("""", num_max_stanz set edit fals px_colazion new text field ("""", px_mezza new text field ("""", px_intera new text field ("""", coperto new text field ("""", costo_x_scatto new text field ("""", password new text field ("""", cambio new text field ("""", creo checkbox checkbox new checkbox group (); checkbox new checkbox checkbox new checkbox lire checkbox true checkbox new checkbox euro checkbox fals write dati conf (); prima_volta licenza set edit true els licenza set edit fals licenza set foreground color red darker ()); albergo set foreground color blue comune_alb set foreground color blue citta_alb set foreground color blue rag_soc set foreground color blue password set echo char ('*'); etich1 new label dati dell albergo ""); etich1 set font new font courier font bold )); etich2 new label nome dell albergo :""); etich3 new label indirizzo dell albergo :""); indirizzo_alb set foreground color blue etich4 new label comun dell albergo :""); etich5 new label citta dell albergo :""); etich6 new label numero giorni massimo bloccaggio una stanza ""); etich7 new label supplemento bassisima stagion ""); etich8 new label supplemento bassa stagion ""); etich9 new label supplemento media stagion ""); etich10 new label supplemento alta stagion ""); etich11 new label supplemento per neonati ""); etich11_1 new label supplemento letto aggiuntivo ""); etich12 new label riduzion per bambini %""); etich13 new label riduzion per ragazzi %""); etich14 new label riduzion per comit %""); etich15 new label numero minimo person per comitiva ""); etich16 new label numero stanz ""); etich17 new label supplemento prima colazion ""); etich18 new label supplemento mezza pension ""); etich19 new label supplemento pension completa ""); etich20 new label coperto per ristorazion ""); etich21 new label costo uno scatto telefonico ""); etich22 new label password utent ""); etich23 new label lire ""); etich24 new label dollari ""); etich25 new label ragion social ""); creo pulsanti annulla new button annulla ""); passwd new button cambio password ""); conferma new button conferma ""); stagioni new button definisci stagionalita ""); panel0 new panel (); panel0 set layout gridbag util constrain panel0 etichetta grid bag constraint none grid bag constraint northwest util constrain panel0 licenza grid bag constraint none grid bag constraint northwest util constrain panel0 etich1 grid bag constraint none grid bag constraint northwest util constrain panel0 etich2 grid bag constraint none grid bag constraint northwest util constrain panel0 albergo grid bag constraint none grid bag constraint northwest util constrain panel0 etich3 grid bag constraint none grid bag constraint northwest util constrain panel0 indirizzo_alb grid bag constraint none grid bag constraint northwest util constrain panel0 etich4 grid bag constraint none grid bag constraint northwest util constrain panel0 comune_alb grid bag constraint none grid bag constraint northwest util constrain panel0 etich5 grid bag constraint none grid bag constraint northwest util constrain panel0 citta_alb grid bag constraint none grid bag constraint northwest util constrain panel0 etich25 grid bag constraint none grid bag constraint northwest util constrain panel0 rag_soc grid bag constraint none grid bag constraint northwest panel1 new panel (); panel1 set layout gridbag util constrain panel1 etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel1 etich6 grid bag constraint none grid bag constraint northwest util constrain panel1 giorni_blocco grid bag constraint none grid bag constraint northwest util constrain panel1 etich21 grid bag constraint none grid bag constraint northwest util constrain panel1 costo_x_scatto grid bag constraint none grid bag constraint northwest util constrain panel1 etichetta2 grid bag constraint none grid bag constraint northwest util constrain panel1 etichetta3 grid bag constraint none grid bag constraint northwest util constrain panel1 etichetta4 grid bag constraint none grid bag constraint northwest supplementi util constrain panel1 etich7 grid bag constraint none grid bag constraint northwest util constrain panel1 sup_bassissima grid bag constraint none grid bag constraint northwest util constrain panel1 etich8 grid bag constraint none grid bag constraint northwest util constrain panel1 sup_bassa grid bag constraint none grid bag constraint northwest util constrain panel1 etich9 grid bag constraint none grid bag constraint northwest util constrain panel1 sup_media grid bag constraint none grid bag constraint northwest util constrain panel1 etich10 grid bag constraint none grid bag constraint northwest util constrain panel1 sup_alta grid bag constraint none grid bag constraint northwest util constrain panel1 etich11 grid bag constraint none grid bag constraint northwest util constrain panel1 sup_neonato grid bag constraint none grid bag constraint northwest util constrain panel1 etich11_1 grid bag constraint none grid bag constraint northwest util constrain panel1 sup_letto_agg grid bag constraint none grid bag constraint northwest riduzioni util constrain panel1 etich12 grid bag constraint none grid bag constraint northwest util constrain panel1 rid_bambino grid bag constraint none grid bag constraint northwest util constrain panel1 etich13 grid bag constraint none grid bag constraint northwest util constrain panel1 rid_ragazzo grid bag constraint none grid bag constraint northwest util constrain panel1 etich14 grid bag constraint none grid bag constraint northwest util constrain panel1 rid_comitiva grid bag constraint none grid bag constraint northwest util constrain panel1 etich15 grid bag constraint none grid bag constraint northwest util constrain panel1 min_pers_comitiva grid bag constraint none grid bag constraint northwest ristorazion util constrain panel1 etich17 grid bag constraint none grid bag constraint northwest util constrain panel1 px_colazion grid bag constraint none grid bag constraint northwest util constrain panel1 etich18 grid bag constraint none grid bag constraint northwest util constrain panel1 px_mezza grid bag constraint none grid bag constraint northwest util constrain panel1 etich19 grid bag constraint none grid bag constraint northwest util constrain panel1 px_intera grid bag constraint none grid bag constraint northwest util constrain panel1 etich20 grid bag constraint none grid bag constraint northwest util constrain panel1 coperto grid bag constraint none grid bag constraint northwest util constrain panel1 cambio_l_ grid bag constraint none grid bag constraint northwest util constrain panel1 cambio grid bag constraint none grid bag constraint northwest util constrain panel1 etich16 grid bag constraint none grid bag constraint northwest util constrain panel1 num_max_stanz grid bag constraint none grid bag constraint northwest panel2 new panel (); panel2 set layout gridbag util constrain panel2 etichetta5 grid bag constraint none grid bag constraint northwest util constrain panel2 checkbox grid bag constraint none grid bag constraint northwest util constrain panel2 checkbox grid bag constraint none grid bag constraint northwest panel3 new panel (); panel3 set layout gridbag util constrain panel3 etichetta6 grid bag constraint none grid bag constraint northwest util constrain panel3 passwd grid bag constraint none grid bag constraint northwest util constrain panel3 etichetta7 grid bag constraint none grid bag constraint northwest util constrain panel3 stagioni grid bag constraint none grid bag constraint northwest panel4 new panel (); panel4 set layout gridbag util constrain panel4 annulla grid bag constraint none grid bag constraint north util constrain panel4 conferma grid bag constraint none grid bag constraint north set layout gridbag util constrain panel0 grid bag constraint none grid bag constraint northwest util constrain panel1 grid bag constraint none grid bag constraint northwest util constrain panel2 grid bag constraint horizont grid bag constraint northwest util constrain panel3 grid bag constraint horizont grid bag constraint northwest util constrain panel4 grid bag constraint horizont grid bag constraint northwest public void init annulla add action listen new action listen public void action perform action event dispos (); first_start padr set enabl true els system exit }); conferma add action listen new action listen public void action perform action event start conferma (); }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) start avviso const lire }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) start avviso const euro }); passwd add action listen new action listen public void action perform action event start chang pwd (); }); stagioni add action listen new action listen public void action perform action event set stagioni (); }); void start avviso char nuova_valuta frame msg nuova_valuta this_config get valuta first_start msg new avviso dialog attenzion cambio lira <-> euro effettuato alla conferma modifichera cifr della finestra corrent !""); void start chang pwd set enabl fals cambio password cambio new cambio password (); cambio set visibl true cambio conf void start conferma messag dialog msg int error ()) char vecchia_valuta this_config get valuta (); read dati conf (); this_config set password new_passwd this_config set stagionalita new_stag_anno_corr new_stag_anno_prox write configurazion this_config ))) data base msg new messag dialog problemi con databas data base str error )); els vecchia_valuta this_config get valuta first_start principal start cambio valuta (); data base msg new messag dialog error con databas data base str error )); return this_config principal read configurazion (); principal config this_config (!( first_start padr pass set titl this_config get nome albergo ()); padr set enabl true els frame new principal this_config set visibl true dispos (); void set stagioni def_stag new definizion stagionalita boolean error frame msg !(( licenza get text ()). length msg new messag dialog licenza deve esser composta piu caratteri ""); return true !(( albergo get text ()). length msg new messag dialog nome dell albergo deve esser composto piu caratteri ""); return true !(( comune_alb get text ()). length msg new messag dialog comun deve esser composto piu caratteri ""); return true !(( indirizzo_alb get text ()). length msg new messag dialog indirizzo deve esser composto piu caratteri ""); return true !(( citta_alb get text ()). length msg new messag dialog citta deve esser composta piu caratteri ""); return true !(( rag_soc get text ()). length msg new messag dialog ragion social deve esser composta piu caratteri ""); return true util int pos giorni_blocco get text ()) msg new messag dialog numero giorni blocco deve esser numero intero positivo ""); return true util float pos sup_bassissima get text ()) util float pos sup_bassa get text ()) util float pos sup_media get text ()) util float pos sup_alta get text ()) util float pos sup_neonato get text ()) util float pos sup_letto_agg get text ()) util float pos px_colazion get text ()) util float pos px_mezza get text ()) util float pos px_intera get text ()) msg new messag dialog supplementi devono esser numeri positivi ""); return true util int pos rid_bambino get text ()) util int pos rid_ragazzo get text ()) util int pos rid_comitiva get text ()) msg new messag dialog deve esser numero intero ""); return true util int pos min_pers_comitiva get text ()) msg new messag dialog numero person comitiva deve esser numero intero positivo ""); return true util int pos num_max_stanz get text ()) msg new messag dialog numero stanz deve esser numero intero positivo ""); return true util float pos coperto get text ()) msg new messag dialog coperto deve esser numero positivo ""); return true util float pos costo_x_scatto get text ()) msg new messag dialog costo dello scatto telefonico deve esser numero positivo ""); return true util float pos cambio get text ()) msg new messag dialog coefficient cambio lire <-> euro deve esser numero positivo diverso zero ""); return true els !(( float valu cambio get text ())). float valu msg new messag dialog coefficient cambio lire <-> euro deve esser numero positivo diverso zero ""); return true return fals void read dati conf this_config set licenza licenza get text ()); this_config set nome albergo albergo get text ()); this_config set comun alb comune_alb get text ()); this_config set indirizzo alb indirizzo_alb get text ()); this_config set citta alb citta_alb get text ()); this_config set rag soc rag_soc get text ()); this_config set giorni blocco integ pars int giorni_blocco get text ())); this_config set supplemento float valu sup_bassissima get text ())). float valu (), flag bassissima_stagion this_config set supplemento float valu sup_bassa get text ())). float valu (), flag bassa_stagion this_config set supplemento float valu sup_media get text ())). float valu (), flag media_stagion this_config set supplemento float valu sup_alta get text ())). float valu (), flag alta_stagion this_config set sup neonato float valu sup_neonato get text ())). float valu ()); this_config set sup letto agg float valu sup_letto_agg get text ())). float valu ()); this_config set riduzion integ pars int rid_bambino get text ()), flag bambino this_config set riduzion integ pars int rid_ragazzo get text ()), flag ragazzo this_config set riduzion integ pars int rid_comitiva get text ()), flag comitiva this_config set min per comit integ pars int min_pers_comitiva get text ())); this_config set num stanz integ pars int num_max_stanz get text ())); this_config set colazion float valu px_colazion get text ())). float valu ()); this_config set mezza float valu px_mezza get text ())). float valu ()); this_config set intera float valu px_intera get text ())). float valu ()); this_config set coperto float valu coperto get text ())). float valu ()); this_config set costo xscatto float valu costo_x_scatto get text ())). float valu ()); this_config set coeff xcambio float valu cambio get text ())). float valu ()); checkbox get state ()) this_config set valuta const lire els this_config set valuta const euro void write dati conf string new string principal simbol licenza set text (""""+ this_config get licenza ()); albergo set text (""""+ this_config get nome albergo ()); comune_alb set text (""""+ this_config get comun alb ()); indirizzo_alb set text (""""+ this_config get indirizzo alb ()); citta_alb set text (""""+ this_config get citta alb ()); rag_soc set text (""""+ this_config get rag soc ()); giorni_blocco set text (""""+ this_config get giorni blocco ()); sup_bassissima set text (""""+ this_config get supplemento flag bassissima_stagion )); sup_bassa set text (""""+ this_config get supplemento flag bassa_stagion )); sup_media set text (""""+ this_config get supplemento flag media_stagion )); sup_alta set text (""""+ this_config get supplemento flag alta_stagion )); sup_neonato set text (""""+ this_config get sup neonato ()); sup_letto_agg set text (""""+ this_config get sup letto agg ()); rid_bambino set text (""""+ this_config get riduzion flag bambino )); rid_ragazzo set text (""""+ this_config get riduzion flag ragazzo )); rid_comitiva set text (""""+ this_config get riduzion flag comitiva )); min_pers_comitiva set text (""""+ this_config get min per comit ()); num_max_stanz set text (""""+ this_config get num stanz ()); px_colazion set text (""""+ this_config get colazion ()); px_mezza set text (""""+ this_config get mezza ()); px_intera set text (""""+ this_config get intera ()); coperto set text (""""+ this_config get coperto ()); costo_x_scatto set text (""""+ this_config get costo xscatto ()); cambio set text (""""+ this_config get coeff xcambio ()); this_config get valuta const lire checkbox set select checkbox checkbox ]); els checkbox set select checkbox checkbox ]); class cambio password extend frame text field testo1 testo2 testo3 label label1 label2 label3 grid bag layout grid new grid bag layout (); panel pannello pannello_x_annulla frame conf new frame (); button conferma cambio annulla messag dialog dialog public cambio password super cambio password ""); setup panel (); init (); pack (); void setup panel set font configurazion sistema font_bas creo etichett label1 new label inserir vecchia password ""); label2 new label inserir nuova password ""); label3 new label reinserir nuova password ""); creo text field testo1 new text field ("""", testo2 new text field ("""", testo1 set echo char ('*'); testo2 set echo char ('*'); testo2 set edit fals conferma new button conferma ""); cambio new button cambio password ""); cambio set enabl fals annulla new button annulla ""); pannello new panel (); pannello set layout grid util constrain pannello label1 grid bag constraint none grid bag constraint northwest util constrain pannello testo1 grid bag constraint none grid bag constraint northwest util constrain pannello label2 grid bag constraint none grid bag constraint northwest util constrain pannello testo2 grid bag constraint none grid bag constraint northwest util constrain pannello conferma grid bag constraint none grid bag constraint northwest util constrain pannello cambio grid bag constraint none grid bag constraint northwest pannello_x_annulla new panel (); pannello_x_annulla set layout grid util constrain pannello_x_annulla annulla grid bag constraint none grid bag constraint center set layout grid util constrain pannello grid bag constraint none grid bag constraint northwest util constrain pannello_x_annulla grid bag constraint none grid bag constraint center void init annulla add action listen new action listen public void action perform action event dispos (); conf set enabl true }); conferma add action listen new action listen public void action perform action event (); }); testo1 add action listen new action listen public void action perform action event (); }); cambio add action listen new action listen public void action perform action event (); }); testo2 add action listen new action listen public void action perform action event (); }); void string tmp testo1 get text (); tmp equal configurazion sistema new_passwd testo2 set edit true testo1 set edit fals cambio set enabl true conferma set enabl fals els dialog new messag dialog password non corretta ""); dialog set visibl true testo1 set text (""""); void string tmp testo2 get text (); messaggio messaggio1 new messaggio tmp messaggio1 set visibl true messaggio1 set enabl fals class messaggio extend frame label msg button cambio password new cambio password (); avviso dialog grid bag layout gridbag new grid bag layout (); text field testo3 panel pannello string pwd_passata public messaggio string text super messaggio per cambio password ""); setup (); pwd_passata text init (); pack (); void setup set font configurazion sistema font_bas creo pulsant new button ""); creo etichetta msg new label reinserir nuova password ""); creo text field testo3 new text field ("""", testo3 set echo char ('*'); pannello new panel (); pannello set layout gridbag util constrain pannello msg grid bag constraint none grid bag constraint northwest util constrain pannello testo3 grid bag constraint none grid bag constraint northwest util constrain pannello grid bag constraint none grid bag constraint northwest set layout gridbag util constrain pannello grid bag constraint none grid bag constraint northwest public void init add action listen new action listen public void action perform action event start (); }); testo3 add action listen new action listen public void action perform action event start (); }); void start testo3 get text ()). equal pwd_passata configurazion sistema new_passwd testo3 get text (); dialog new avviso password verra cambiata alla conferma ""); els dialog new avviso nuova password non stata accettata ""); dialog set visibl true class avviso extend frame button messaggio padr public avviso messaggio parent string testo super attenzion ""); padr parent padr set enabl fals set font configurazion sistema font_titolo panel text panel new panel (); panel button panel new panel (); text panel add new label testo )); new button ""); button panel add add north text panel add center button panel init (); pack (); set visibl true public void init add action listen new action listen public void action perform action event esci (); }); void esci dispos (); padr dispos (); padr dispos (); padr conf set enabl true"
47~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraContoRistorazione.java~MascheraContoRistorazione.java~"package interfacce;
import java.io.*;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class MascheraContoRistorazione extends MascheraPerAddebitare
{
        // oggetti per la costruzione della finestra
        Label etich1, etich2, etich3;
        TextField num_coperti;

        public MascheraContoRistorazione(Frame parent)
        {
                super(""Servizio ristorazione"", ""Stampa del conto"");
                padre = parent;
                padre.setEnabled(false);
                inizExtra();
                setupPanello();
                inizializza();
                pack();
                setVisible(true);
        }

        // Travaso dati degli extra nelle strutture dati apposite
        void inizExtra()
        {
				MessageDialog msg;
				
				elenco_extra = (Principale.db).menuRistorante();
                if (elenco_extra != null)
                {
                	if (extra.getItemCount() > 0)
                    	extra.removeAll();
                    int i=1;
                    while (i <= elenco_extra.length())
                    {
	                    extra.addItem( (elenco_extra.getBeneServizio(i)).toString() );
                        i++;
                    }
                }
        }

        // Creazione della finestra
        void setupPanello()
        {
                num_coperti = new TextField("""", 4);
                num_coperti.setEditable(true);

                // creo le label
                etich1 = new Label(""Gestione degli addebiti              "");
                etich1.setFont(ConfigurazioneSistema.font_titolo);
                etich2 = new Label(""Scegliere l'extra da addebitare "");
                etich3 = new Label(""Numero di coperti "");

                // creo pannello di sinistra
                this.remove(panel1);
                panel1 = new Panel();
                panel1.setLayout(gridbag);
                Utils.constrain(panel1, etich1, 0, 0, 6, 1);
                Utils.constrain(panel1, etich2, 0, 1, 6, 1, 10, 0, 0, 0);
                Utils.constrain(panel1, extra, 0, 2, 6, 4, GridBagConstraints.BOTH,
                                GridBagConstraints.WEST, 1.0, 1.0, 0, 20, 0, 20);

				// creo pannello per coperti
				this.remove(panel4);
				panel4 = new Panel();
				panel4.setLayout(gridbag);
                Utils.constrain(panel4, etich3, 0, 0, 1, 1, 5, 5, 5, 5);
                Utils.constrain(panel4, num_coperti, 1, 0, 1, 1, GridBagConstraints.NONE,
                                GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);

                // aggiungo il pannello appena creato al resto
                Utils.constrain(this, panel1, 0, 0, 1, 1, GridBagConstraints.VERTICAL,
                                        GridBagConstraints.WEST, 0.5, 0.5, 5, 5, 5, 5);
                Utils.constrain(this, panel4, 0, 2, 1, 1, GridBagConstraints.VERTICAL,
                                        GridBagConstraints.WEST, 0.5, 0.5, 5, 5, 5, 5);
        }

        // Per la gestione degli eventi della finestra
        void inizializza()
        {
                conferma.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                stampaConto();
                        }
                });

                addebita.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                if (!errore())
                                {
                                    aggiornaAvideo(true);
                                }
                        }
                });

                deaddebita.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                if (!errore())
                                {
                                        aggiornaAvideo(false);
                                }
                        }
                });

                extra.addActionListener(new ActionListener()
                {
                        public void actionPerformed(ActionEvent e)
                        {
                                if (!errore())
                                {
                                        aggiornaAvideo(true);
                                }
                        }
                });
        }

        // Ritorna false se si sta' cercando di addebitare un extra in
        // mancanza dei dati necessari per l'addebito: coperti e extra.
        boolean errore()
        {
        		Frame msg;
        		
                if ((num_coperti.getText()).equals(""""))
                {
                        msg = new MessageDialog(this, ""Inserire il numero di coperti!"");
                        return true;
                }
                else if ( !Utils.isIntPos(num_coperti.getText()) )
                {
                		msg = new MessageDialog(this, ""Il numero dei coperti deve essere un numero intero!"");
                		return true;
                }
                else if (extra.getSelectedIndex() == -1)
                {
                        msg = new MessageDialog(this, ""Manca selezione!"");
                        return true;
                }
                else
                        return false;
        }

        int posExtraInAddebiti(BeneServizio b)
        {
                for (int i = 1; i <= elenco_addebiti.length(); i++)
                        if ( ((elenco_addebiti.getAddebito(i)).getCodExtra()).equals(b.getCodExtra()) )
                                return i;
                return -1;
        }

        void aggiornaAvideo(boolean addebito)
        {
        		Frame msg;
                int supp[];

                BeneServizio extra_scelto = elenco_extra.getBeneServizio( extra.getSelectedIndex() + 1 );
                int pos;
                if ((pos = posExtraInAddebiti(extra_scelto)) < 0 && addebito)
                {
                        Addebito a = new Addebito(""RIST"", extra_scelto.getCodExtra(), 0, 0);
                        elenco_addebiti.addAddebito( a );
                        elenco_extra_addebitati.addBeneServizio( extra_scelto );

                        // allungo l'array delle quantita' modificate
                        supp = new int[elenco_addebiti.length()];
                        for (int i = 0; i<quantita_mod.length; i++)
                                supp[i] = quantita_mod[i];
                        supp[supp.length - 1] = 1;
                        quantita_mod = supp;
                        pos = quantita_mod.length;
                        extra_add.setText(extra.getSelectedItem());
                        continuaAggiornamento();
                }
                else
                {
                        if (pos < 0)
                        {
                                // sto cercando di togliere da un addebito inesistente
                                msg = new AvvisoDialog(this, ""Stai cercando di togliere da un addebito ormai inesistente!"");
                        }
                        else
                        {
                                // aggiorno tale array per contenere l'addebito appena effettuato
                                if (addebito)
                                {
                                        quantita_mod[pos - 1]++;
                                        extra_add.setText(extra.getSelectedItem());
                                        continuaAggiornamento();
                                }
                                else
                                        if ( quantita_mod[pos - 1] > 0)
                                        {
                                                quantita_mod[pos - 1]--;
                                                extra_add.setText(extra.getSelectedItem());
                                                continuaAggiornamento();
                                        }
                                        else
			                                msg = new AvvisoDialog(this, ""Stai cercando di togliere da un addebito ormai inesistente!"");
                        }
                }
        }

        void continuaAggiornamento()
        {
                int i = 1;
                BeneServizio e;
                float conto = 0;
                float conto_di_questo_extra;
                
                if (addebiti.getItemCount() > 0)
                        addebiti.removeAll();
                while ( i <= elenco_addebiti.length() )
                {
						if (quantita_mod[i-1] != 0)
						{
	                        e = elenco_extra_addebitati.getBeneServizio(i);
	                        conto_di_questo_extra = quantita_mod[i-1]*e.getPxUnitario();
    	                    if ( Integer.parseInt(e.getCodExtra()) >= 40000000 && Integer.parseInt(e.getCodExtra()) < 50000000)
        	                        addebiti.addItem(""S ""+Utils.completaStringa(e.getDescrizione(), 32)+"" ""+(Principale.config).getValuta()+"".""+(elenco_addebiti.getAddebito(i)).getTotAddebito());
            	            else if ( Integer.parseInt(e.getCodExtra()) >= 50000000)
                	                addebiti.addItem(""R ""+Utils.completaStringa(e.getDescrizione(), 32)+"" ""+(Principale.config).getValuta()+"".""+(elenco_addebiti.getAddebito(i)).getTotAddebito());
                    	    else
                        	        addebiti.addItem( Utils.completaStringa(e.getDescrizione(),10)+Utils.completaStringa("" x ""+quantita_mod[i-1], 5)+(Principale.config).getValuta()+"".""+conto_di_questo_extra );
	                        conto = conto + conto_di_questo_extra;
    	                }
   	                    i++;
                }
                totale.setText((Principale.config).getValuta()+"".""+conto);
        }

        void stampaConto()
        {
			if (!errore())
			{
	        	writeFile();
                dispose();
                padre.setEnabled(true);
	        }
        }

		private void writeFile()
		{
			Frame msg;
			float costo_coperti;
		
			DataOutputStream outStream;
			try
			{	
				outStream = new DataOutputStream(new FileOutputStream(""conto.abg""));
			}
			catch (IOException ex)
			{
				msg = new MessageDialog(this,""Errore nell'apertura del file del conto"");
				return;
			}
			try
			{
				outStream.writeBytes( (Principale.config).getNomeAlbergo()+""\n"" );
				outStream.writeBytes( ""\n"" );
				outStream.writeBytes( (Principale.config).getRagSoc()+""\n"" );
				outStream.writeBytes( (Principale.config).getIndirizzoAlb()+""\n"" );
				outStream.writeBytes( (Principale.config).getComuneAlb()+""\n"" );
				outStream.writeBytes( (Principale.config).getCittaAlb()+""\n"" );
				outStream.writeBytes( ""\n"" );

				BeneServizio extra;
				Addebito a;				
				int num;
				String supporto;
				float conto_totale;
				
				for(int i=1; i<=elenco_addebiti.length(); i++)
				{
					if (quantita_mod[i-1] != 0)
					{
						a = elenco_addebiti.getAddebito(i);
						extra = elenco_extra_addebitati.getBeneServizio(i);
						num = quantita_mod[i-1];
						if ( (extra.getCodExtra()).compareTo(""40000000"") < 0 )
							supporto = new String(extra.getDescrizione()+"" x ""+num+"" "");
						else if ( (extra.getCodExtra()).compareTo(""50000000"") < 0 )
							supporto = new String(""Supplemento per ""+extra.getDescrizione()+"" "");
						else
							supporto = new String(""Riduzione per ""+extra.getDescrizione()+"" "");
						while (supporto.length() < 52)
							supporto = new String(supporto+"" "");
						outStream.writeBytes(supporto+(Principale.config).getValuta()+"".""+
												num*extra.getPxUnitario()+""\n"" );
					}
				}
				supporto = new String(""Coperto x ""+num_coperti.getText());
				while (supporto.length() < 52)
					supporto = new String(supporto+"" "");
				costo_coperti = Integer.parseInt(num_coperti.getText())*(Principale.config).getCoperto();
				outStream.writeBytes(supporto+(Principale.config).getValuta()+"".""+costo_coperti+""\n"");
				outStream.writeBytes(""\n"");
				supporto = new String(""Totale"");
				while (supporto.length() < 52)
					supporto = new String(supporto+"" "");
				conto_totale = (Float.valueOf( new String((totale.getText()).substring(2)) )).floatValue()+costo_coperti;
				outStream.writeBytes( supporto+(Principale.config).getValuta()+"".""+conto_totale );
				outStream.close();
			}	
			catch (IOException ex)
			{
				msg = new MessageDialog(this,""Errore nella scrittura del file del conto"");	
				return;
			}			
		}		
}"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', '▁ext', 'ends', '▁m', 'asc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '\n', '{', '\n', '▁/', '/', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uz', 'ion', 'e', '▁d', 'ella', '▁fin', 'est', 'ra', '\n', '▁label', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3', ';', '\n', '▁text', 'field', '▁num', '_', 'cop', 'ert', 'i', ';', '\n\n', '▁public', '▁m', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', '(', 'fr', 'ame', '▁paren', 't', ')', '\n', '▁{', '\n', '▁super', '(', '""', 's', 'erv', 'iz', 'io', '▁r', 'ist', 'or', 'az', 'ion', 'e', '"",', '▁""', 'st', 'amp', 'a', '▁del', '▁cont', 'o', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁in', 'ize', 'xt', 'ra', '(', ');', '\n', '▁set', 'up', 'pan', 'ello', '(', ');', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁/', '/', '▁trav', 'as', 'o', '▁d', 'ati', '▁deg', 'li', '▁extra', '▁n', 'elle', '▁str', 'utt', 'ure', '▁d', 'ati', '▁app', 'os', 'ite', '\n', '▁vo', 'id', '▁in', 'ize', 'xt', 'ra', '(', ')', '\n', '▁{', '\n\t\t\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t\t\n\t\t\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'men', 'ur', 'ist', 'or', 'ante', '(', ');', '\n', '▁if', '▁(', 'el', 'en', 'co', '_', 'ext', 'ra', '▁!', '=', '▁n', 'ull', ')', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'ext', 'ra', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n', '▁', '\t', 'ext', 'ra', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁int', '▁i', '=', '1', ';', '\n', '▁while', '▁(', 'i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'ext', 'ra', '.', 'l', 'ength', '(', ')', ')', '\n', '▁{', '\n\t', '▁extra', '.', 'ad', 'd', 'it', 'em', '(', '▁(', 'el', 'en', 'co', '_', 'ext', 'ra', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'i', ')', ').', 't', 'ost', 'ring', '(', ')', '▁', ');', '\n', '▁i', '+', '+', ';', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁/', '/', '▁cre', 'az', 'ion', 'e', '▁d', 'ella', '▁fin', 'est', 'ra', '\n', '▁vo', 'id', '▁set', 'up', 'pan', 'ello', '(', ')', '\n', '▁{', '\n', '▁num', '_', 'cop', 'ert', 'i', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁num', '_', 'cop', 'ert', 'i', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\n', '▁/', '/', '▁cre', 'o', '▁le', '▁label', '\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(', '""', 'gest', 'ion', 'e', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁""', ');', '\n', '▁et', 'ich', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(', '""', 's', 'ce', 'g', 'li', 'ere', '▁l', ""'"", 'ext', 'ra', '▁da', '▁add', 'e', 'bit', 'are', '▁""', ');', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁di', '▁cop', 'ert', 'i', '▁""', ');', '\n\n', '▁/', '/', '▁cre', 'o', '▁p', 'ann', 'ello', '▁di', '▁sin', 'ist', 'ra', '\n', '▁this', '.', 'rem', 'ove', '(', 'pan', 'el', '1)', ';', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1,', '▁', '0,', '▁', '0,', '▁6,', '▁1', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2,', '▁', '0,', '▁1,', '▁6,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁extra', ',', '▁', '0,', '▁2,', '▁6,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁20,', '▁', '0,', '▁20', ');', '\n\n\t\t\t\t', '//', '▁cre', 'o', '▁p', 'ann', 'ello', '▁per', '▁cop', 'ert', 'i', '\n\t\t\t\t', 'this', '.', 'rem', 'ove', '(', 'pan', 'el', '4)', ';', '\n\t\t\t\t', 'pan', 'el', '4', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n\t\t\t\t', 'pan', 'el', '4.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁et', 'ich', '3,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁num', '_', 'cop', 'ert', 'i', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁/', '/', '▁ag', 'gi', 'ung', 'o', '▁il', '▁p', 'ann', 'ello', '▁app', 'ena', '▁cre', 'ato', '▁al', '▁rest', 'o', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '4,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁/', '/', '▁per', '▁la', '▁g', 'est', 'ion', 'e', '▁deg', 'li', '▁event', 'i', '▁d', 'ella', '▁fin', 'est', 'ra', '\n', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n', '▁{', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁stamp', 'ac', 'onto', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁add', 'e', 'b', 'ita', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n', '▁{', '\n', '▁ag', 'gi', 'orn', 'a', 'av', 'ide', 'o', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁dead', 'de', 'b', 'ita', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n', '▁{', '\n', '▁ag', 'gi', 'orn', 'a', 'av', 'ide', 'o', '(', 'f', 'al', 'se', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁extra', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n', '▁{', '\n', '▁ag', 'gi', 'orn', 'a', 'av', 'ide', 'o', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁/', '/', '▁rit', 'orn', 'a', '▁fal', 'se', '▁se', '▁si', '▁st', 'a', ""'"", '▁cer', 'c', 'ando', '▁di', '▁add', 'e', 'bit', 'are', '▁un', '▁extra', '▁in', '\n', '▁/', '/', '▁man', 'can', 'za', '▁de', 'i', '▁d', 'ati', '▁necess', 'ari', '▁per', '▁l', ""'"", 'ad', 'de', 'bit', 'o', ':', '▁cop', 'ert', 'i', '▁e', '▁extra', '.', '\n', '▁bo', 'ole', 'an', '▁er', 'r', 'ore', '(', ')', '\n', '▁{', '\n', '▁', '\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n', '▁', '\t\t\n', '▁if', '▁(', '(', 'n', 'um', '_', 'cop', 'ert', 'i', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '\n', '▁{', '\n', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁di', '▁cop', 'ert', 'i', '!', '"")', ';', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'n', 'um', '_', 'cop', 'ert', 'i', '.', 'get', 'text', '(', ')', ')', '▁)', '\n', '▁{', '\n', '▁', '\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'il', '▁num', 'ero', '▁de', 'i', '▁cop', 'ert', 'i', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '!', '"")', ';', '\n', '▁', '\t\t', 'ret', 'urn', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁=', '=', '▁-', '1)', '\n', '▁{', '\n', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁se', 'le', 'z', 'ion', 'e', '!', '"")', ';', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '\n', '▁return', '▁fal', 'se', ';', '\n', '▁}', '\n\n', '▁int', '▁p', 'ose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁b', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n', '▁if', '▁(', '▁(', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ').', 'equ', 'als', '(', 'b', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', '▁)', '\n', '▁return', '▁i', ';', '\n', '▁return', '▁-', '1', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁ag', 'gi', 'orn', 'a', 'av', 'ide', 'o', '(', 'bo', 'ole', 'an', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁', '\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n', '▁int', '▁supp', '[', ']', ';', '\n\n', '▁ben', 'es', 'erv', 'iz', 'io', '▁extra', '_', 'sc', 'el', 'to', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '▁extra', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁+', '▁1', '▁', ');', '\n', '▁int', '▁pos', ';', '\n', '▁if', '▁(', '(', 'pos', '▁=', '▁p', 'ose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'ext', 'ra', '_', 'sc', 'el', 'to', ')', ')', '▁', '<', '▁0', '▁&', '&', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'o', '▁a', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(', '""', 'rist', '"",', '▁extra', '_', 'sc', 'el', 'to', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', '),', '▁', '0,', '▁', '0)', ';', '\n', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'ad', 'd', 'ad', 'de', 'bit', 'o', '(', '▁a', '▁', ');', '\n', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'ad', 'd', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '▁extra', '_', 'sc', 'el', 'to', '▁', ');', '\n\n', '▁/', '/', '▁all', 'ung', 'o', '▁l', ""'"", 'ar', 'ray', '▁del', 'le', '▁quant', 'ita', ""'"", '▁mod', 'ific', 'ate', '\n', '▁supp', '▁=', '▁new', '▁int', '[', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ')', ']', ';', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'qu', 'ant', 'ita', '_', 'mod', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n', '▁supp', '[', 'i', ']', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', ']', ';', '\n', '▁supp', '[', 'sup', 'p', '.', 'l', 'ength', '▁-', '▁1', ']', '▁=', '▁1', ';', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁supp', ';', '\n', '▁pos', '▁=', '▁quant', 'ita', '_', 'mod', '.', 'l', 'ength', ';', '\n', '▁extra', '_', 'ad', 'd', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'it', 'em', '(', ')', ');', '\n', '▁contin', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ');', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁if', '▁(', 'pos', '▁', '<', '▁', '0)', '\n', '▁{', '\n', '▁/', '/', '▁st', 'o', '▁cer', 'c', 'ando', '▁di', '▁to', 'g', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁in', 'es', 'ist', 'ent', 'e', '\n', '▁ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁to', 'g', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'm', 'ai', '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁/', '/', '▁ag', 'gi', 'orn', 'o', '▁t', 'ale', '▁arr', 'ay', '▁per', '▁cont', 'en', 'ere', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '▁app', 'ena', '▁eff', 'ett', 'u', 'ato', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'o', ')', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '+', '+', ';', '\n', '▁extra', '_', 'ad', 'd', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'it', 'em', '(', ')', ');', '\n', '▁contin', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ');', '\n', '▁}', '\n', '▁else', '\n', '▁if', '▁(', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '▁', '>', '▁', '0)', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '-', '-', ';', '\n', '▁extra', '_', 'ad', 'd', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lect', 'ed', 'it', 'em', '(', ')', ');', '\n', '▁contin', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ');', '\n', '▁}', '\n', '▁else', '\n\t\t\t', '▁ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁to', 'g', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'm', 'ai', '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁vo', 'id', '▁contin', 'ua', 'ag', 'gi', 'orn', 'ament', 'o', '(', ')', '\n', '▁{', '\n', '▁int', '▁i', '▁=', '▁1', ';', '\n', '▁ben', 'es', 'erv', 'iz', 'io', '▁e', ';', '\n', '▁flo', 'at', '▁cont', 'o', '▁=', '▁0', ';', '\n', '▁flo', 'at', '▁cont', 'o', '_', 'di', '_', 'qu', 'est', 'o', '_', 'ext', 'ra', ';', '\n', '▁', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n', '▁add', 'e', 'bit', 'i', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁while', '▁(', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ')', '▁)', '\n', '▁{', '\n\t\t\t\t\t\t', 'if', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '▁!', '=', '▁', '0)', '\n\t\t\t\t\t\t', '{', '\n\t', '▁e', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'i', ');', '\n\t', '▁cont', 'o', '_', 'di', '_', 'qu', 'est', 'o', '_', 'ext', 'ra', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '*', 'e', '.', 'get', 'p', 'x', 'un', 'itar', 'io', '(', ');', '\n', '▁', '\t', '▁if', '▁(', '▁inte', 'ger', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', '▁', '>', '=', '▁400', '00', '000', '▁&', '&', '▁inte', 'ger', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', '▁', '<', '▁500', '00', '000', ')', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'ad', 'd', 'it', 'em', '(', '""', 's', '▁""', '+', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', '),', '▁3', '2)', '+', '""', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 't', 'ot', 'ad', 'de', 'bit', 'o', '(', ')', ');', '\n', '▁', '\t', '▁else', '▁if', '▁(', '▁inte', 'ger', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ')', '▁', '>', '=', '▁500', '00', '000', ')', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'ad', 'd', 'it', 'em', '(', '""', 'r', '▁""', '+', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', '),', '▁3', '2)', '+', '""', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 't', 'ot', 'ad', 'de', 'bit', 'o', '(', ')', ');', '\n', '▁', '\t', '▁else', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'ad', 'd', 'it', 'em', '(', '▁ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', '),', '1', '0)', '+', 'ut', 'ils', '.', 'com', 'p', 'let', 'ast', 'ring', 'a', '(', '""', '▁x', '▁""', '+', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', ',', '▁5', ')', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', 'c', 'onto', '_', 'di', '_', 'qu', 'est', 'o', '_', 'ext', 'ra', '▁', ');', '\n\t', '▁cont', 'o', '▁=', '▁cont', 'o', '▁+', '▁cont', 'o', '_', 'di', '_', 'qu', 'est', 'o', '_', 'ext', 'ra', ';', '\n', '▁', '\t', '▁}', '\n', '▁', '\t', '▁i', '+', '+', ';', '\n', '▁}', '\n', '▁to', 't', 'ale', '.', 's', 'ette', 'xt', '(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', 'c', 'onto', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁stamp', 'ac', 'onto', '(', ')', '\n', '▁{', '\n\t\t\t', 'if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n\t\t\t', '{', '\n\t', '▁', '\t', 'writ', 'ef', 'ile', '(', ');', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t', '▁}', '\n', '▁}', '\n\n\t\t', 'pr', 'iv', 'ate', '▁vo', 'id', '▁writ', 'ef', 'ile', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\t', 'fl', 'o', 'at', '▁cost', 'o', '_', 'cop', 'ert', 'i', ';', '\n\t\t\n\t\t\t', 'd', 'ata', 'out', 'put', 'stream', '▁out', 'stream', ';', '\n\t\t\t', 't', 'ry', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'out', 'stream', '▁=', '▁new', '▁data', 'out', 'put', 'stream', '(', 'new', '▁file', 'out', 'put', 'stream', '(', '""', 'c', 'onto', '.', 'ab', 'g', '"")', ');', '\n\t\t\t', '}', '\n\t\t\t', 'c', 'atch', '▁(', 'io', 'ex', 'ception', '▁ex', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'er', 'r', 'ore', '▁n', 'ell', ""'"", 'ap', 'ert', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '"")', ';', '\n\t\t\t\t', 'ret', 'urn', ';', '\n\t\t\t', '}', '\n\t\t\t', 't', 'ry', '\n\t\t\t', '{', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'n', 'ome', 'al', 'ber', 'go', '(', ')', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '▁""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'r', 'ag', 's', 'oc', '(', ')', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'ind', 'ir', 'iz', 'zo', 'alb', '(', ')', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'com', 'une', 'alb', '(', ')', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'c', 'itt', 'a', 'alb', '(', ')', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '▁""', '\\', 'n', '""', '▁', ');', '\n\n\t\t\t\t', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁extra', ';', '\n\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁a', ';', '\t\t\t\t\n\t\t\t\t', 'int', '▁num', ';', '\n\t\t\t\t', 'str', 'ing', '▁support', 'o', ';', '\n\t\t\t\t', 'fl', 'o', 'at', '▁cont', 'o', '_', 't', 'ot', 'ale', ';', '\n\t\t\t\t\n\t\t\t\t', 'for', '(', 'int', '▁i', '=', '1', ';', '▁i', '<', '=', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '▁!', '=', '▁', '0)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'a', '▁=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ');', '\n\t\t\t\t\t\t', 'ext', 'ra', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'i', ');', '\n\t\t\t\t\t\t', 'n', 'um', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', ';', '\n\t\t\t\t\t\t', 'if', '▁(', '▁(', 'ext', 'ra', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ').', 'com', 'p', 'are', 'to', '(', '""', '4', '00', '00', '000', '"")', '▁', '<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'sup', 'port', 'o', '▁=', '▁new', '▁string', '(', 'ext', 'ra', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', '+', '""', '▁x', '▁""', '+', 'n', 'um', '+', '""', '▁""', ');', '\n\t\t\t\t\t\t', 'el', 'se', '▁if', '▁(', '▁(', 'ext', 'ra', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ').', 'com', 'p', 'are', 'to', '(', '""', '500', '00', '000', '"")', '▁', '<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'sup', 'port', 'o', '▁=', '▁new', '▁string', '(', '""', 'sup', 'p', 'lement', 'o', '▁per', '▁""', '+', 'ext', 'ra', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', '+', '""', '▁""', ');', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'sup', 'port', 'o', '▁=', '▁new', '▁string', '(', '""', 'rid', 'uz', 'ion', 'e', '▁per', '▁""', '+', 'ext', 'ra', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', '+', '""', '▁""', ');', '\n\t\t\t\t\t\t', 'while', '▁(', 'sup', 'port', 'o', '.', 'l', 'ength', '(', ')', '▁', '<', '▁5', '2)', '\n\t\t\t\t\t\t\t', 'sup', 'port', 'o', '▁=', '▁new', '▁string', '(', 'sup', 'port', 'o', '+', '""', '▁""', ');', '\n\t\t\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', 'sup', 'port', 'o', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', '\n\t\t\t\t\t\t\t\t\t\t\t\t', 'n', 'um', '*', 'ext', 'ra', '.', 'get', 'p', 'x', 'un', 'itar', 'io', '(', ')', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'sup', 'port', 'o', '▁=', '▁new', '▁string', '(', '""', 'cop', 'erto', '▁x', '▁""', '+', 'n', 'um', '_', 'cop', 'ert', 'i', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t\t', 'while', '▁(', 'sup', 'port', 'o', '.', 'l', 'ength', '(', ')', '▁', '<', '▁5', '2)', '\n\t\t\t\t\t', 'sup', 'port', 'o', '▁=', '▁new', '▁string', '(', 'sup', 'port', 'o', '+', '""', '▁""', ');', '\n\t\t\t\t', 'c', 'ost', 'o', '_', 'cop', 'ert', 'i', '▁=', '▁inte', 'ger', '.', 'par', 'se', 'int', '(', 'n', 'um', '_', 'cop', 'ert', 'i', '.', 'get', 'text', '(', ')', ')', '*', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'cop', 'erto', '(', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', 'sup', 'port', 'o', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', 'c', 'ost', 'o', '_', 'cop', 'ert', 'i', '+', '""', '\\', 'n', '"")', ';', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '""', '\\', 'n', '"")', ';', '\n\t\t\t\t', 'sup', 'port', 'o', '▁=', '▁new', '▁string', '(', '""', 't', 'ot', 'ale', '"")', ';', '\n\t\t\t\t', 'while', '▁(', 'sup', 'port', 'o', '.', 'l', 'ength', '(', ')', '▁', '<', '▁5', '2)', '\n\t\t\t\t\t', 'sup', 'port', 'o', '▁=', '▁new', '▁string', '(', 'sup', 'port', 'o', '+', '""', '▁""', ');', '\n\t\t\t\t', 'c', 'onto', '_', 't', 'ot', 'ale', '▁=', '▁(', 'fl', 'o', 'at', '.', 'value', 'of', '(', '▁new', '▁string', '(', '(', 't', 'ot', 'ale', '.', 'get', 'text', '(', ')', ').', 'sub', 'str', 'ing', '(', '2)', ')', '▁)', ').', 'fl', 'o', 'at', 'value', '(', ')', '+', 'c', 'ost', 'o', '_', 'cop', 'ert', 'i', ';', '\n\t\t\t\t', 'out', 'stream', '.', 'writ', 'e', 'by', 'tes', '(', '▁support', 'o', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '""', '+', 'c', 'onto', '_', 't', 'ot', 'ale', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'cl', 'ose', '(', ');', '\n\t\t\t', '}', '\t\n\t\t\t', 'c', 'atch', '▁(', 'io', 'ex', 'ception', '▁ex', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'er', 'r', 'ore', '▁n', 'ella', '▁sc', 'rit', 't', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '"")', ';', '\t\n\t\t\t\t', 'ret', 'urn', ';', '\n\t\t\t', '}', '\t\t\t\n\t\t', '}', '\t\t\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', '▁extends', '▁masc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '\n', '{', '\n', '▁//', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uz', 'ione', '▁della', '▁finest', 'ra', '\n', '▁label', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3', ';', '\n', '▁text', 'field', '▁num', '_', 'cop', 'ert', 'i', ';', '\n\n', '▁public', '▁masc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'serv', 'izio', '▁r', 'ist', 'or', 'azione', '"",', '▁""', 'st', 'ampa', '▁del', '▁cont', 'o', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁in', 'ize', 'xt', 'ra', '();', '\n', '▁setup', 'pan', 'ello', '();', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '();', '\n', '▁pack', '();', '\n', '▁set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁//', '▁trav', 'as', 'o', '▁d', 'ati', '▁deg', 'li', '▁extra', '▁n', 'elle', '▁str', 'utt', 'ure', '▁d', 'ati', '▁app', 'os', 'ite', '\n', '▁void', '▁in', 'ize', 'xt', 'ra', '()', '\n', '▁{', '\n\t\t\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\t\t\n\t\t\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'men', 'ur', 'ist', 'or', 'ante', '();', '\n', '▁if', '▁(', 'el', 'en', 'co', '_', 'ext', 'ra', '▁!=', '▁null', ')', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'ext', 'ra', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n', '▁', '\t', 'ext', 'ra', '.', 'rem', 'ove', 'all', '();', '\n', '▁int', '▁i', '=1', ';', '\n', '▁while', '▁(', 'i', '▁<', '=', '▁el', 'en', 'co', '_', 'ext', 'ra', '.', 'length', '())', '\n', '▁{', '\n\t', '▁extra', '.', 'add', 'it', 'em', '(', '▁(', 'el', 'en', 'co', '_', 'ext', 'ra', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ')', ').', 't', 'ost', 'ring', '()', '▁', ');', '\n', '▁i', '++', ';', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁//', '▁cre', 'azione', '▁della', '▁finest', 'ra', '\n', '▁void', '▁setup', 'pan', 'ello', '()', '\n', '▁{', '\n', '▁num', '_', 'cop', 'ert', 'i', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁num', '_', 'cop', 'ert', 'i', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\n', '▁//', '▁cre', 'o', '▁le', '▁label', '\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'gest', 'ione', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '▁""', ');', '\n', '▁et', 'ich', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'g', 'li', 'ere', '▁l', ""'"", 'ext', 'ra', '▁da', '▁add', 'e', 'bit', 'are', '▁""', ');', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁cop', 'ert', 'i', '▁""', ');', '\n\n', '▁//', '▁cre', 'o', '▁pann', 'ello', '▁di', '▁sin', 'ist', 'ra', '\n', '▁this', '.', 'rem', 'ove', '(', 'pan', 'el', '1)', ';', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1,', '▁', '0,', '▁', '0,', '▁6,', '▁1', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2,', '▁', '0,', '▁1,', '▁6,', '▁1,', '▁10,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁extra', ',', '▁', '0,', '▁2,', '▁6,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁20,', '▁', '0,', '▁20', ');', '\n\n\t\t\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁cop', 'ert', 'i', '\n\t\t\t\t', 'this', '.', 'rem', 'ove', '(', 'pan', 'el', '4)', ';', '\n\t\t\t\t', 'pan', 'el', '4', '▁=', '▁new', '▁panel', '();', '\n\t\t\t\t', 'pan', 'el', '4.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁et', 'ich', '3,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁num', '_', 'cop', 'ert', 'i', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁//', '▁ag', 'gi', 'ung', 'o', '▁il', '▁pann', 'ello', '▁app', 'ena', '▁cre', 'ato', '▁al', '▁rest', 'o', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '4,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁//', '▁per', '▁la', '▁gest', 'ione', '▁deg', 'li', '▁event', 'i', '▁della', '▁finest', 'ra', '\n', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n', '▁{', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁stamp', 'ac', 'onto', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁add', 'eb', 'ita', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁ag', 'gi', 'orna', 'av', 'ide', 'o', '(', 'true', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁dead', 'de', 'b', 'ita', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁ag', 'gi', 'orna', 'av', 'ide', 'o', '(', 'false', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁extra', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(', '!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁ag', 'gi', 'orna', 'av', 'ide', 'o', '(', 'true', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁//', '▁rit', 'orna', '▁false', '▁se', '▁si', '▁sta', ""'"", '▁cer', 'c', 'ando', '▁di', '▁add', 'e', 'bit', 'are', '▁un', '▁extra', '▁in', '\n', '▁//', '▁man', 'can', 'za', '▁dei', '▁d', 'ati', '▁necess', 'ari', '▁per', '▁l', ""'"", 'ad', 'de', 'bit', 'o', ':', '▁cop', 'ert', 'i', '▁e', '▁extra', '.', '\n', '▁bo', 'olean', '▁err', 'ore', '()', '\n', '▁{', '\n', '▁', '\t\t', 'frame', '▁ms', 'g', ';', '\n', '▁', '\t\t\n', '▁if', '▁(', '(', 'num', '_', 'cop', 'ert', 'i', '.', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '\n', '▁{', '\n', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁di', '▁cop', 'ert', 'i', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', '▁!', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'num', '_', 'cop', 'ert', 'i', '.', 'get', 'text', '())', '▁)', '\n', '▁{', '\n', '▁', '\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'il', '▁num', 'ero', '▁dei', '▁cop', 'ert', 'i', '▁de', 've', '▁ess', 'ere', '▁un', '▁num', 'ero', '▁inter', 'o', '!', '"");', '\n', '▁', '\t\t', 'return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'index', '()', '▁==', '▁-', '1)', '\n', '▁{', '\n', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁se', 'lez', 'ione', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '\n', '▁return', '▁false', ';', '\n', '▁}', '\n\n', '▁int', '▁pose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'ben', 'es', 'erv', 'izio', '▁b', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '();', '▁i', '++', ')', '\n', '▁if', '▁(', '▁(', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'get', 'code', 'xt', 'ra', '()', ').', 'equ', 'als', '(', 'b', '.', 'get', 'code', 'xt', 'ra', '())', '▁)', '\n', '▁return', '▁i', ';', '\n', '▁return', '▁-', '1', ';', '\n', '▁}', '\n\n', '▁void', '▁ag', 'gi', 'orna', 'av', 'ide', 'o', '(', 'bo', 'olean', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁', '\t\t', 'frame', '▁ms', 'g', ';', '\n', '▁int', '▁supp', '[]', ';', '\n\n', '▁ben', 'es', 'erv', 'izio', '▁extra', '_', 'sc', 'el', 'to', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '.', 'get', 'se', 'lected', 'index', '()', '▁+', '▁1', '▁', ');', '\n', '▁int', '▁pos', ';', '\n', '▁if', '▁(', '(', 'pos', '▁=', '▁pose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'ext', 'ra', '_', 'sc', 'el', 'to', '))', '▁<', '▁0', '▁&', '&', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'o', '▁a', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(""', 'rist', '"",', '▁extra', '_', 'sc', 'el', 'to', '.', 'get', 'code', 'xt', 'ra', '(', '),', '▁', '0,', '▁', '0)', ';', '\n', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'add', 'ad', 'de', 'bit', 'o', '(', '▁a', '▁', ');', '\n', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'add', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '_', 'sc', 'el', 'to', '▁', ');', '\n\n', '▁//', '▁all', 'ung', 'o', '▁l', ""'"", 'array', '▁delle', '▁quant', 'ita', ""'"", '▁mod', 'ific', 'ate', '\n', '▁supp', '▁=', '▁new', '▁int', '[', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', ']', ';', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'qu', 'ant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++', ')', '\n', '▁supp', '[', 'i', ']', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', ']', ';', '\n', '▁supp', '[', 'sup', 'p', '.', 'length', '▁-', '▁1', ']', '▁=', '▁1', ';', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁supp', ';', '\n', '▁pos', '▁=', '▁quant', 'ita', '_', 'mod', '.', 'length', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'it', 'em', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁if', '▁(', 'pos', '▁<', '▁', '0)', '\n', '▁{', '\n', '▁//', '▁sto', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁in', 'es', 'ist', 'ente', '\n', '▁ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'm', 'ai', '▁in', 'es', 'ist', 'ente', '!', '"");', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁//', '▁ag', 'gi', 'orno', '▁tale', '▁array', '▁per', '▁cont', 'en', 'ere', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '▁app', 'ena', '▁eff', 'ett', 'u', 'ato', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'o', ')', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '++', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'it', 'em', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n', '▁if', '▁(', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '▁>', '▁', '0)', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1', ']', '--', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'se', 'lected', 'it', 'em', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n\t\t\t', '▁ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'm', 'ai', '▁in', 'es', 'ist', 'ente', '!', '"");', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁void', '▁contin', 'ua', 'aggi', 'orn', 'amento', '()', '\n', '▁{', '\n', '▁int', '▁i', '▁=', '▁1', ';', '\n', '▁ben', 'es', 'erv', 'izio', '▁e', ';', '\n', '▁float', '▁cont', 'o', '▁=', '▁0', ';', '\n', '▁float', '▁cont', 'o', '_', 'di', '_', 'quest', 'o', '_', 'ext', 'ra', ';', '\n', '▁', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'i', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n', '▁add', 'e', 'bit', 'i', '.', 'rem', 'ove', 'all', '();', '\n', '▁while', '▁(', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '▁)', '\n', '▁{', '\n\t\t\t\t\t\t', 'if', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '▁!=', '▁', '0)', '\n\t\t\t\t\t\t', '{', '\n\t', '▁e', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ');', '\n\t', '▁cont', 'o', '_', 'di', '_', 'quest', 'o', '_', 'ext', 'ra', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '*', 'e', '.', 'get', 'px', 'un', 'itar', 'io', '();', '\n', '▁', '\t', '▁if', '▁(', '▁integer', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁>', '=', '▁400', '00', '000', '▁&', '&', '▁integer', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁<', '▁500', '00', '000', ')', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'add', 'it', 'em', '(""', 's', '▁""', '+', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(', '),', '▁3', '2)', '+', '""', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁', '\t', '▁else', '▁if', '▁(', '▁integer', '.', 'par', 'se', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁>', '=', '▁500', '00', '000', ')', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'add', 'it', 'em', '(""', 'r', '▁""', '+', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(', '),', '▁3', '2)', '+', '""', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', '(', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')', ').', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁', '\t', '▁else', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'add', 'it', 'em', '(', '▁ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(', '),', '10)', '+', 'ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(""', '▁x', '▁""', '+', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', '],', '▁5)', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', 'c', 'onto', '_', 'di', '_', 'quest', 'o', '_', 'ext', 'ra', '▁', ');', '\n\t', '▁cont', 'o', '▁=', '▁cont', 'o', '▁+', '▁cont', 'o', '_', 'di', '_', 'quest', 'o', '_', 'ext', 'ra', ';', '\n', '▁', '\t', '▁}', '\n', '▁', '\t', '▁i', '++', ';', '\n', '▁}', '\n', '▁tot', 'ale', '.', 's', 'ette', 'xt', '(', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', 'c', 'onto', ');', '\n', '▁}', '\n\n', '▁void', '▁stamp', 'ac', 'onto', '()', '\n', '▁{', '\n\t\t\t', 'if', '▁(', '!', 'er', 'r', 'ore', '())', '\n\t\t\t', '{', '\n\t', '▁', '\t', 'writ', 'ef', 'ile', '();', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t', '▁}', '\n', '▁}', '\n\n\t\t', 'private', '▁void', '▁writ', 'ef', 'ile', '()', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\t', 'flo', 'at', '▁cost', 'o', '_', 'cop', 'ert', 'i', ';', '\n\t\t\n\t\t\t', 'data', 'out', 'put', 'stream', '▁out', 'stream', ';', '\n\t\t\t', 'try', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'out', 'stream', '▁=', '▁new', '▁data', 'out', 'put', 'stream', '(', 'new', '▁file', 'out', 'put', 'stream', '(""', 'c', 'onto', '.', 'ab', 'g', '"")', ');', '\n\t\t\t', '}', '\n\t\t\t', 'c', 'atch', '▁(', 'io', 'exception', '▁ex', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'er', 'r', 'ore', '▁nell', ""'"", 'ap', 'ert', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '"");', '\n\t\t\t\t', 'return', ';', '\n\t\t\t', '}', '\n\t\t\t', 'try', '\n\t\t\t', '{', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'n', 'ome', 'al', 'ber', 'go', '()', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', '▁""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'rag', 'soc', '()', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'ind', 'ir', 'iz', 'zo', 'alb', '()', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'com', 'une', 'alb', '()', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'c', 'itta', 'alb', '()', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', '▁""', '\\', 'n', '""', '▁', ');', '\n\n\t\t\t\t', 'ben', 'es', 'erv', 'izio', '▁extra', ';', '\n\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁a', ';', '\t\t\t\t\n\t\t\t\t', 'int', '▁num', ';', '\n\t\t\t\t', 'string', '▁support', 'o', ';', '\n\t\t\t\t', 'flo', 'at', '▁cont', 'o', '_', 'tot', 'ale', ';', '\n\t\t\t\t\n\t\t\t\t', 'for', '(', 'int', '▁i', '=1', ';', '▁i', '<', '=', 'el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'qu', 'ant', 'ita', '_', 'mod', '[', 'i', '-1', ']', '▁!=', '▁', '0)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'a', '▁=', '▁el', 'en', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ');', '\n\t\t\t\t\t\t', 'ext', 'ra', '▁=', '▁el', 'en', 'co', '_', 'ext', 'ra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ');', '\n\t\t\t\t\t\t', 'num', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', ']', ';', '\n\t\t\t\t\t\t', 'if', '▁(', '▁(', 'ext', 'ra', '.', 'get', 'code', 'xt', 'ra', '()', ').', 'comp', 'are', 'to', '(""', '400', '00', '000', '"")', '▁<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(', 'ext', 'ra', '.', 'get', 'desc', 'riz', 'ione', '()', '+', '""', '▁x', '▁""', '+', 'num', '+', '""', '▁""', ');', '\n\t\t\t\t\t\t', 'el', 'se', '▁if', '▁(', '▁(', 'ext', 'ra', '.', 'get', 'code', 'xt', 'ra', '()', ').', 'comp', 'are', 'to', '(""', '500', '00', '000', '"")', '▁<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(""', 'sup', 'p', 'lement', 'o', '▁per', '▁""', '+', 'ext', 'ra', '.', 'get', 'desc', 'riz', 'ione', '()', '+', '""', '▁""', ');', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(""', 'rid', 'uz', 'ione', '▁per', '▁""', '+', 'ext', 'ra', '.', 'get', 'desc', 'riz', 'ione', '()', '+', '""', '▁""', ');', '\n\t\t\t\t\t\t', 'while', '▁(', 'support', 'o', '.', 'length', '()', '▁<', '▁5', '2)', '\n\t\t\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(', 'support', 'o', '+', '""', '▁""', ');', '\n\t\t\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', 'support', 'o', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', '\n\t\t\t\t\t\t\t\t\t\t\t\t', 'num', '*', 'ext', 'ra', '.', 'get', 'px', 'un', 'itar', 'io', '()', '+', '""', '\\', 'n', '""', '▁', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(""', 'cop', 'erto', '▁x', '▁""', '+', 'num', '_', 'cop', 'ert', 'i', '.', 'get', 'text', '());', '\n\t\t\t\t', 'while', '▁(', 'support', 'o', '.', 'length', '()', '▁<', '▁5', '2)', '\n\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(', 'support', 'o', '+', '""', '▁""', ');', '\n\t\t\t\t', 'cost', 'o', '_', 'cop', 'ert', 'i', '▁=', '▁integer', '.', 'par', 'se', 'int', '(', 'num', '_', 'cop', 'ert', 'i', '.', 'get', 'text', '())', '*', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'cop', 'erto', '();', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', 'support', 'o', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', 'cost', 'o', '_', 'cop', 'ert', 'i', '+', '""', '\\', 'n', '"");', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(""', '\\', 'n', '"");', '\n\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(""', 'tot', 'ale', '"");', '\n\t\t\t\t', 'while', '▁(', 'support', 'o', '.', 'length', '()', '▁<', '▁5', '2)', '\n\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(', 'support', 'o', '+', '""', '▁""', ');', '\n\t\t\t\t', 'c', 'onto', '_', 'tot', 'ale', '▁=', '▁(', 'flo', 'at', '.', 'value', 'of', '(', '▁new', '▁string', '(', '(', 'tot', 'ale', '.', 'get', 'text', '()', ').', 'sub', 'string', '(2)', ')', '▁)', ').', 'flo', 'at', 'value', '()', '+', 'cost', 'o', '_', 'cop', 'ert', 'i', ';', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'by', 'tes', '(', '▁support', 'o', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '""', '+', 'c', 'onto', '_', 'tot', 'ale', '▁', ');', '\n\t\t\t\t', 'out', 'stream', '.', 'cl', 'ose', '();', '\n\t\t\t', '}', '\t\n\t\t\t', 'c', 'atch', '▁(', 'io', 'exception', '▁ex', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'er', 'r', 'ore', '▁n', 'ella', '▁sc', 'ritt', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '"");', '\t\n\t\t\t\t', 'return', ';', '\n\t\t\t', '}', '\t\t\t\n\t\t', '}', '\t\t\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', '▁extends', '▁masc', 'her', 'aper', 'ad', 'de', 'bit', 'are', '\n', '{', '\n', '▁//', '▁og', 'get', 'ti', '▁per', '▁la', '▁co', 'str', 'uzione', '▁della', '▁finest', 'ra', '\n', '▁label', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3;', '\n', '▁text', 'field', '▁num', '_', 'cop', 'erti', ';', '\n\n', '▁public', '▁masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'serv', 'izio', '▁r', 'istor', 'azione', '"",', '▁""', 'st', 'ampa', '▁del', '▁cont', 'o', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁in', 'ize', 'xt', 'ra', '();', '\n', '▁setup', 'pan', 'ello', '();', '\n', '▁in', 'iz', 'ial', 'izza', '();', '\n', '▁pack', '();', '\n', '▁set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁//', '▁trav', 'aso', '▁d', 'ati', '▁degli', '▁extra', '▁nelle', '▁strutt', 'ure', '▁d', 'ati', '▁app', 'os', 'ite', '\n', '▁void', '▁in', 'ize', 'xt', 'ra', '()', '\n', '▁{', '\n\t\t\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\t\t\n\t\t\t\t', 'elen', 'co', '_', 'extra', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'men', 'ur', 'istor', 'ante', '();', '\n', '▁if', '▁(', 'elen', 'co', '_', 'extra', '▁!=', '▁null', ')', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'extra', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n', '▁', '\t', 'extra', '.', 'remove', 'all', '();', '\n', '▁int', '▁i', '=1', ';', '\n', '▁while', '▁(', 'i', '▁<', '=', '▁elenco', '_', 'extra', '.', 'length', '())', '\n', '▁{', '\n\t', '▁extra', '.', 'add', 'item', '(', '▁(', 'elen', 'co', '_', 'extra', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ')).', 'tostring', '()', '▁);', '\n', '▁i', '++;', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁//', '▁cre', 'azione', '▁della', '▁finest', 'ra', '\n', '▁void', '▁setup', 'pan', 'ello', '()', '\n', '▁{', '\n', '▁num', '_', 'cop', 'erti', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁num', '_', 'cop', 'erti', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\n', '▁//', '▁cre', 'o', '▁le', '▁label', '\n', '▁et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'gest', 'ione', '▁degli', '▁add', 'e', 'bit', 'i', '▁""', ');', '\n', '▁et', 'ich', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'gli', 'ere', '▁l', ""'"", 'extra', '▁da', '▁add', 'e', 'bit', 'are', '▁""', ');', '\n', '▁et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁di', '▁cop', 'erti', '▁""', ');', '\n\n', '▁//', '▁cre', 'o', '▁pann', 'ello', '▁di', '▁sin', 'istra', '\n', '▁this', '.', 'remove', '(', 'panel', '1);', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '1,', '▁0,', '▁0,', '▁6,', '▁1);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '2,', '▁0,', '▁1,', '▁6,', '▁1,', '▁10,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁extra', ',', '▁0,', '▁2,', '▁6,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁20,', '▁0,', '▁20', ');', '\n\n\t\t\t\t', '//', '▁cre', 'o', '▁pann', 'ello', '▁per', '▁cop', 'erti', '\n\t\t\t\t', 'this', '.', 'remove', '(', 'panel', '4);', '\n\t\t\t\t', 'panel', '4', '▁=', '▁new', '▁panel', '();', '\n\t\t\t\t', 'panel', '4.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁et', 'ich', '3,', '▁0,', '▁0,', '▁1,', '▁1,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁num', '_', 'cop', 'erti', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁//', '▁ag', 'gi', 'ungo', '▁il', '▁pann', 'ello', '▁app', 'ena', '▁cre', 'ato', '▁al', '▁rest', 'o', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '4,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '5,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁//', '▁per', '▁la', '▁gest', 'ione', '▁degli', '▁event', 'i', '▁della', '▁finest', 'ra', '\n', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n', '▁{', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁stamp', 'ac', 'onto', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁add', 'eb', 'ita', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁ag', 'gi', 'orna', 'av', 'ideo', '(', 'true', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁dead', 'deb', 'ita', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁ag', 'gi', 'orna', 'av', 'ideo', '(', 'false', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁extra', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '▁(!', 'er', 'r', 'ore', '())', '\n', '▁{', '\n', '▁ag', 'gi', 'orna', 'av', 'ideo', '(', 'true', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁//', '▁rit', 'orna', '▁false', '▁se', '▁si', '▁sta', ""'"", '▁cer', 'c', 'ando', '▁di', '▁add', 'e', 'bit', 'are', '▁un', '▁extra', '▁in', '\n', '▁//', '▁man', 'can', 'za', '▁dei', '▁d', 'ati', '▁necess', 'ari', '▁per', '▁l', ""'"", 'ad', 'de', 'bit', 'o', ':', '▁cop', 'erti', '▁e', '▁extra', '.', '\n', '▁boolean', '▁err', 'ore', '()', '\n', '▁{', '\n', '▁', '\t\t', 'frame', '▁msg', ';', '\n', '▁', '\t\t\n', '▁if', '▁((', 'num', '_', 'cop', 'erti', '.', 'get', 'text', '()', ').', 'equals', '(""', '""))', '\n', '▁{', '\n', '▁msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'ins', 'er', 'ire', '▁il', '▁numero', '▁di', '▁cop', 'erti', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', '▁!', 'utils', '.', 'is', 'int', 'pos', '(', 'num', '_', 'cop', 'erti', '.', 'get', 'text', '())', '▁)', '\n', '▁{', '\n', '▁', '\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'il', '▁numero', '▁dei', '▁cop', 'erti', '▁de', 've', '▁ess', 'ere', '▁un', '▁numero', '▁inter', 'o', '!', '"");', '\n', '▁', '\t\t', 'return', '▁true', ';', '\n', '▁}', '\n', '▁else', '▁if', '▁(', 'extra', '.', 'get', 'selected', 'index', '()', '▁==', '▁-', '1)', '\n', '▁{', '\n', '▁msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'man', 'ca', '▁se', 'lez', 'ione', '!', '"");', '\n', '▁return', '▁true', ';', '\n', '▁}', '\n', '▁else', '\n', '▁return', '▁false', ';', '\n', '▁}', '\n\n', '▁int', '▁pose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'ben', 'es', 'erv', 'izio', '▁b', ')', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '();', '▁i', '++)', '\n', '▁if', '▁(', '▁((', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'get', 'code', 'xt', 'ra', '()', ').', 'equals', '(', 'b', '.', 'get', 'code', 'xt', 'ra', '())', '▁)', '\n', '▁return', '▁i', ';', '\n', '▁return', '▁-', '1;', '\n', '▁}', '\n\n', '▁void', '▁ag', 'gi', 'orna', 'av', 'ideo', '(', 'boolean', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁', '\t\t', 'frame', '▁msg', ';', '\n', '▁int', '▁supp', '[]', ';', '\n\n', '▁benes', 'erv', 'izio', '▁extra', '_', 'sc', 'el', 'to', '▁=', '▁elenco', '_', 'extra', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '.', 'get', 'selected', 'index', '()', '▁+', '▁1', '▁);', '\n', '▁int', '▁pos', ';', '\n', '▁if', '▁((', 'pos', '▁=', '▁pose', 'xt', 'rain', 'ad', 'de', 'bit', 'i', '(', 'extra', '_', 'sc', 'el', 'to', '))', '▁<', '▁0', '▁&&', '▁add', 'e', 'bit', 'o', ')', '\n', '▁{', '\n', '▁add', 'e', 'bit', 'o', '▁a', '▁=', '▁new', '▁add', 'e', 'bit', 'o', '(""', 'rist', '"",', '▁extra', '_', 'sc', 'el', 'to', '.', 'get', 'code', 'xt', 'ra', '(),', '▁0,', '▁', '0);', '\n', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '.', 'add', 'ad', 'de', 'bit', 'o', '(', '▁a', '▁);', '\n', '▁elenco', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', '.', 'add', 'ben', 'es', 'erv', 'izio', '(', '▁extra', '_', 'sc', 'el', 'to', '▁);', '\n\n', '▁//', '▁all', 'ungo', '▁l', ""'"", 'array', '▁delle', '▁quant', 'ita', ""'"", '▁mod', 'ificate', '\n', '▁supp', '▁=', '▁new', '▁int', '[', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '];', '\n', '▁for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '<', 'quant', 'ita', '_', 'mod', '.', 'length', ';', '▁i', '++)', '\n', '▁supp', '[', 'i', ']', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', '];', '\n', '▁supp', '[', 'supp', '.', 'length', '▁-', '▁1]', '▁=', '▁1;', '\n', '▁quant', 'ita', '_', 'mod', '▁=', '▁supp', ';', '\n', '▁pos', '▁=', '▁quant', 'ita', '_', 'mod', '.', 'length', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'selected', 'item', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁if', '▁(', 'pos', '▁<', '▁0)', '\n', '▁{', '\n', '▁//', '▁sto', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁ines', 'ist', 'ente', '\n', '▁msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'mai', '▁ines', 'ist', 'ente', '!', '"");', '\n', '▁}', '\n', '▁else', '\n', '▁{', '\n', '▁//', '▁ag', 'gi', 'orno', '▁tale', '▁array', '▁per', '▁cont', 'en', 'ere', '▁l', ""'"", 'ad', 'de', 'bit', 'o', '▁app', 'ena', '▁eff', 'ettu', 'ato', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'o', ')', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1]', '++;', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'selected', 'item', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n', '▁if', '▁(', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1]', '▁>', '▁0)', '\n', '▁{', '\n', '▁quant', 'ita', '_', 'mod', '[', 'pos', '▁-', '▁1]', '--', ';', '\n', '▁extra', '_', 'add', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'selected', 'item', '());', '\n', '▁contin', 'ua', 'aggi', 'orn', 'amento', '();', '\n', '▁}', '\n', '▁else', '\n\t\t\t', '▁msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'st', 'ai', '▁cer', 'c', 'ando', '▁di', '▁tog', 'li', 'ere', '▁da', '▁un', '▁add', 'e', 'bit', 'o', '▁or', 'mai', '▁ines', 'ist', 'ente', '!', '"");', '\n', '▁}', '\n', '▁}', '\n', '▁}', '\n\n', '▁void', '▁contin', 'ua', 'aggi', 'orn', 'amento', '()', '\n', '▁{', '\n', '▁int', '▁i', '▁=', '▁1;', '\n', '▁benes', 'erv', 'izio', '▁e', ';', '\n', '▁float', '▁cont', 'o', '▁=', '▁0;', '\n', '▁float', '▁cont', 'o', '_', 'di', '_', 'quest', 'o', '_', 'extra', ';', '\n', '▁', '\n', '▁if', '▁(', 'ad', 'de', 'bit', 'i', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n', '▁add', 'e', 'bit', 'i', '.', 'remove', 'all', '();', '\n', '▁while', '▁(', '▁i', '▁<', '=', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '()', '▁)', '\n', '▁{', '\n\t\t\t\t\t\t', 'if', '▁(', 'quant', 'ita', '_', 'mod', '[', 'i', '-1]', '▁!=', '▁0)', '\n\t\t\t\t\t\t', '{', '\n\t', '▁e', '▁=', '▁elenco', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ');', '\n\t', '▁cont', 'o', '_', 'di', '_', 'quest', 'o', '_', 'extra', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1]', '*', 'e', '.', 'get', 'px', 'un', 'itario', '();', '\n', '▁', '\t', '▁if', '▁(', '▁integer', '.', 'parse', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁>=', '▁400', '00', '000', '▁&&', '▁integer', '.', 'parse', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁<', '▁500', '00', '000)', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'add', 'item', '(""', 's', '▁""+', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(),', '▁3', '2)', '+""', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', '(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁', '\t', '▁else', '▁if', '▁(', '▁integer', '.', 'parse', 'int', '(', 'e', '.', 'get', 'code', 'xt', 'ra', '())', '▁>=', '▁500', '00', '000)', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'add', 'item', '(""', 'r', '▁""+', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(),', '▁3', '2)', '+""', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', '(', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ')).', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁', '\t', '▁else', '\n', '▁', '\t', '▁add', 'e', 'bit', 'i', '.', 'add', 'item', '(', '▁ut', 'ils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(', 'e', '.', 'get', 'desc', 'riz', 'ione', '(),', '10)', '+', 'utils', '.', 'comp', 'let', 'ast', 'ring', 'a', '(""', '▁x', '▁""+', 'quant', 'ita', '_', 'mod', '[', 'i', '-1', '],', '▁5)', '+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', 'c', 'onto', '_', 'di', '_', 'quest', 'o', '_', 'extra', '▁);', '\n\t', '▁cont', 'o', '▁=', '▁cont', 'o', '▁+', '▁cont', 'o', '_', 'di', '_', 'quest', 'o', '_', 'extra', ';', '\n', '▁', '\t', '▁}', '\n', '▁', '\t', '▁i', '++;', '\n', '▁}', '\n', '▁tot', 'ale', '.', 's', 'ette', 'xt', '((', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', 'c', 'onto', ');', '\n', '▁}', '\n\n', '▁void', '▁stamp', 'ac', 'onto', '()', '\n', '▁{', '\n\t\t\t', 'if', '▁(!', 'er', 'r', 'ore', '())', '\n\t\t\t', '{', '\n\t', '▁', '\t', 'writ', 'ef', 'ile', '();', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n\t', '▁}', '\n', '▁}', '\n\n\t\t', 'private', '▁void', '▁writ', 'ef', 'ile', '()', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁msg', ';', '\n\t\t\t', 'float', '▁cost', 'o', '_', 'cop', 'erti', ';', '\n\t\t\n\t\t\t', 'data', 'output', 'stream', '▁out', 'stream', ';', '\n\t\t\t', 'try', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'out', 'stream', '▁=', '▁new', '▁data', 'output', 'stream', '(', 'new', '▁file', 'output', 'stream', '(""', 'c', 'onto', '.', 'ab', 'g', '""));', '\n\t\t\t', '}', '\n\t\t\t', 'catch', '▁(', 'io', 'exception', '▁ex', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'er', 'r', 'ore', '▁nell', ""'"", 'apert', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '"");', '\n\t\t\t\t', 'return', ';', '\n\t\t\t', '}', '\n\t\t\t', 'try', '\n\t\t\t', '{', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'n', 'ome', 'al', 'ber', 'go', '()', '+""', '\\', 'n', '""', '▁);', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', '▁""', '\\', 'n', '""', '▁);', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'rag', 'soc', '()', '+""', '\\', 'n', '""', '▁);', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'ind', 'ir', 'iz', 'zo', 'alb', '()', '+""', '\\', 'n', '""', '▁);', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'com', 'une', 'alb', '()', '+""', '\\', 'n', '""', '▁);', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'c', 'itta', 'alb', '()', '+""', '\\', 'n', '""', '▁);', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', '▁""', '\\', 'n', '""', '▁);', '\n\n\t\t\t\t', 'ben', 'es', 'erv', 'izio', '▁extra', ';', '\n\t\t\t\t', 'ad', 'de', 'bit', 'o', '▁a', ';', '\t\t\t\t\n\t\t\t\t', 'int', '▁num', ';', '\n\t\t\t\t', 'string', '▁support', 'o', ';', '\n\t\t\t\t', 'float', '▁cont', 'o', '_', 'tot', 'ale', ';', '\n\t\t\t\t\n\t\t\t\t', 'for', '(', 'int', '▁i', '=1', ';', '▁i', '<', '=', 'elen', 'co', '_', 'ad', 'de', 'bit', 'i', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'quant', 'ita', '_', 'mod', '[', 'i', '-1]', '▁!=', '▁0)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'a', '▁=', '▁elenco', '_', 'ad', 'de', 'bit', 'i', '.', 'get', 'ad', 'de', 'bit', 'o', '(', 'i', ');', '\n\t\t\t\t\t\t', 'extra', '▁=', '▁elenco', '_', 'extra', '_', 'ad', 'de', 'bit', 'ati', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', 'i', ');', '\n\t\t\t\t\t\t', 'num', '▁=', '▁quant', 'ita', '_', 'mod', '[', 'i', '-1', '];', '\n\t\t\t\t\t\t', 'if', '▁(', '▁(', 'extra', '.', 'get', 'code', 'xt', 'ra', '()', ').', 'compare', 'to', '(""', '400', '00', '000', '"")', '▁<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(', 'extra', '.', 'get', 'desc', 'riz', 'ione', '()', '+""', '▁x', '▁""+', 'num', '+""', '▁""', ');', '\n\t\t\t\t\t\t', 'else', '▁if', '▁(', '▁(', 'extra', '.', 'get', 'code', 'xt', 'ra', '()', ').', 'compare', 'to', '(""', '500', '00', '000', '"")', '▁<', '▁0', '▁)', '\n\t\t\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(""', 'supplement', 'o', '▁per', '▁""+', 'extra', '.', 'get', 'desc', 'riz', 'ione', '()', '+""', '▁""', ');', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(""', 'rid', 'uzione', '▁per', '▁""+', 'extra', '.', 'get', 'desc', 'riz', 'ione', '()', '+""', '▁""', ');', '\n\t\t\t\t\t\t', 'while', '▁(', 'support', 'o', '.', 'length', '()', '▁<', '▁5', '2)', '\n\t\t\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(', 'support', 'o', '+""', '▁""', ');', '\n\t\t\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', 'support', 'o', '+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', '\n\t\t\t\t\t\t\t\t\t\t\t\t', 'num', '*', 'extra', '.', 'get', 'px', 'un', 'itario', '()', '+""', '\\', 'n', '""', '▁);', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(""', 'cop', 'erto', '▁x', '▁""+', 'num', '_', 'cop', 'erti', '.', 'get', 'text', '());', '\n\t\t\t\t', 'while', '▁(', 'support', 'o', '.', 'length', '()', '▁<', '▁5', '2)', '\n\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(', 'support', 'o', '+""', '▁""', ');', '\n\t\t\t\t', 'cost', 'o', '_', 'cop', 'erti', '▁=', '▁integer', '.', 'parse', 'int', '(', 'num', '_', 'cop', 'erti', '.', 'get', 'text', '())', '*', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'cop', 'erto', '();', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', 'support', 'o', '+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', 'cost', 'o', '_', 'cop', 'erti', '+""', '\\', 'n', '"");', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(""', '\\', 'n', '"");', '\n\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(""', 'tot', 'ale', '"");', '\n\t\t\t\t', 'while', '▁(', 'support', 'o', '.', 'length', '()', '▁<', '▁5', '2)', '\n\t\t\t\t\t', 'support', 'o', '▁=', '▁new', '▁string', '(', 'support', 'o', '+""', '▁""', ');', '\n\t\t\t\t', 'c', 'onto', '_', 'tot', 'ale', '▁=', '▁(', 'float', '.', 'value', 'of', '(', '▁new', '▁string', '((', 'tot', 'ale', '.', 'get', 'text', '()', ').', 'substring', '(2)', ')', '▁)', ').', 'float', 'value', '()', '+', 'cost', 'o', '_', 'cop', 'erti', ';', '\n\t\t\t\t', 'out', 'stream', '.', 'write', 'bytes', '(', '▁support', 'o', '+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".""', '+', 'c', 'onto', '_', 'tot', 'ale', '▁);', '\n\t\t\t\t', 'out', 'stream', '.', 'close', '();', '\n\t\t\t', '}', '\t\n\t\t\t', 'catch', '▁(', 'io', 'exception', '▁ex', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'er', 'r', 'ore', '▁nella', '▁sc', 'ritt', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '"");', '\t\n\t\t\t\t', 'return', ';', '\n\t\t\t', '}', '\t\t\t\n\t\t', '}', '\t\t\n', '}']"~"packag interfacc import java import java awt import java awt event import common util import common def import moduli public class maschera conto ristorazion extend maschera per addebitar oggetti per costruzion della finestra label etich etich etich text field num coperti public maschera conto ristorazion frame parent super servizio ristorazion stampa del conto padr parent padr set enabl fals iniz extra setup panello inizializza pack set visibl true travaso dati deg extra nell struttur dati apposit void iniz extra messag dialog msg elenco extra principal menu ristorant elenco extra null extra get item count extra remov int elenco extra length extra add item elenco extra get bene servizio string creazion della finestra void setup panello num coperti new text field num coperti set edit true creo label etich new label gestion deg addeb etich set font configurazion sistema font titolo etich new label sceglier extra addebitar etich new label numero coperti creo pannello sinistra remov panel panel new panel panel set layout gridbag util constrain panel etich util constrain panel etich util constrain panel extra grid bag constraint grid bag constraint west creo pannello per coperti remov panel4 panel4 new panel (); panel4 set layout gridbag util constrain panel4 etich3 util constrain panel4 num_coperti grid bag constraint none grid bag constraint west aggiungo pannello appena creato resto util constrain panel1 grid bag constraint vertic grid bag constraint west util constrain panel4 grid bag constraint vertic grid bag constraint west per gestion deg eventi della finestra void inizializza conferma add action listen new action listen public void action perform action event stampa conto (); }); addebita add action listen new action listen public void action perform action event error ()) aggiorna avideo true }); deaddebita add action listen new action listen public void action perform action event error ()) aggiorna avideo fals }); extra add action listen new action listen public void action perform action event error ()) aggiorna avideo true }); ritorna fals sta cercando addebitar extra mancanza dei dati necessari per addebito coperti extra boolean error frame msg num_coperti get text ()). equal ("""")) msg new messag dialog inserir numero coperti !""); return true els util int pos num_coperti get text ()) msg new messag dialog numero dei coperti deve esser numero intero !""); return true els extra get select index msg new messag dialog manca selezion !""); return true els return fals int pos extra addeb bene servizio int elenco_addeb length (); ++) elenco_addeb get addebito )). get cod extra ()). equal get cod extra ()) return return void aggiorna avideo boolean addebito frame msg int supp []; bene servizio extra_scelto elenco_extra get bene servizio extra get select index int pos pos pos extra addeb extra_scelto addebito addebito new addebito rist extra_scelto get cod extra (), elenco_addeb add addebito add bene servizio extra_scelto allungo array dell quantita modif supp new int elenco_addeb length ()]; int quantita_mod length ++) supp quantita_mod supp supp length quantita_mod supp pos quantita_mod length extra_add set text extra get select item ()); continua aggiornamento (); els pos sto cercando toglier addebito inesistent msg new avviso dialog stai cercando toglier addebito ormai inesistent !""); els aggiorno tale array per contener addebito appena effettuato addebito quantita_mod pos ]++; extra_add set text extra get select item ()); continua aggiornamento (); els quantita_mod pos quantita_mod pos ]--; extra_add set text extra get select item ()); continua aggiornamento (); els msg new avviso dialog stai cercando toglier addebito ormai inesistent !""); void continua aggiornamento int bene servizio float conto float addeb get item count addeb remov (); elenco_addeb length quantita_mod get bene servizio quantita_mod get unitario (); integ pars int get cod extra ()) 40000000 integ pars int get cod extra ()) 50000000 addeb add item util completa stringa get descrizion (), )+"" ""+( principal config get valuta ()+"".""+( elenco_addeb get addebito )). get tot addebito ()); els integ pars int get cod extra ()) 50000000 addeb add item util completa stringa get descrizion (), )+"" ""+( principal config get valuta ()+"".""+( elenco_addeb get addebito )). get tot addebito ()); els addeb add item util completa stringa get descrizion (), util completa stringa quantita_mod )+( principal config get valuta ()+"".""+ conto conto ++; total set text principal config get valuta ()+"".""+ conto void stampa conto error ()) write file (); dispos (); padr set enabl true privat void write file frame msg float costo_coperti data output stream stream tri stream new data output stream new file output stream conto abg "")); catch ioexcept msg new messag dialog error nell apertura del file del conto ""); return tri stream write byte principal config get nome albergo ()+""\ stream write byte stream write byte principal config get rag soc ()+""\ stream write byte principal config get indirizzo alb ()+""\ stream write byte principal config get comun alb ()+""\ stream write byte principal config get citta alb ()+""\ stream write byte bene servizio extra addebito int num string supporto float conto_total int elenco_addeb length (); ++) quantita_mod elenco_addeb get addebito extra get bene servizio num quantita_mod extra get cod extra ()). compar 40000000 supporto new string extra get descrizion ()+"" num ""); els extra get cod extra ()). compar 50000000 supporto new string supplemento per extra get descrizion ()+"" ""); els supporto new string riduzion per extra get descrizion ()+"" ""); supporto length supporto new string supporto ""); stream write byte supporto principal config get valuta ()+"".""+ num extra get unitario ()+""\ supporto new string coperto num_coperti get text ()); supporto length supporto new string supporto ""); costo_coperti integ pars int num_coperti get text ())*( principal config get coperto (); stream write byte supporto principal config get valuta ()+"".""+ costo_coperti +""\ ""); stream write byte (""\ ""); supporto new string total ""); supporto length supporto new string supporto ""); conto_total float valu new string total get text ()). substr )). float valu ()+ costo_coperti stream write byte supporto principal config get valuta ()+"".""+ conto_total stream close (); catch ioexcept msg new messag dialog error nella scrittura del file del conto ""); return"
48~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/SubStorico.java~SubStorico.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import common.utility.*;

public class SubStorico extends Frame
{
   Label label;
   Panel panel0, panel1;
   Button Ricerca, Annulla;
   GridBagLayout gridbag = new GridBagLayout();
   Frame p = new Frame();
   Frame figlio;

   public SubStorico()
   {
      super(""Storico Clienti"");
      setup();
      init();
      pack();
      //setVisible(true);
   }

   void setup()
   {
      this.setFont(ConfigurazioneSistema.font_sub);
      panel0=new Panel();
      panel0.setLayout(gridbag);
      panel0.setBackground(Color.white);
      Immagine  figura = new Immagine(""servizi5.jpg"");
      Etichetta etich = new Etichetta(""Storico.gif"");
      Utils.constrain(panel0,etich, 0, 0, 2, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 1.0, 1.0,0,0,0,0);
      Utils.constrain(panel0,figura, 2, 0, 10, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 1.0, 1.0,0,0,0,0);
       
      panel1 = new Panel();
      panel1.setLayout(new GridLayout(2,1));
      Ricerca = new Button("" Ricerca "");
      Annulla = new Button("" Annulla "");
      panel1.add(Ricerca);
      panel1.add(Annulla);

      this.setLayout(gridbag);
      Utils.constrain(this,panel0, 0, 0, 12, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
      Utils.constrain(this,panel1, 12, 0, 1, 12,GridBagConstraints.BOTH,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
   }

   void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            p.setEnabled(true);
         }
      });

      Ricerca.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            start_ricerca();
         }
      });
   }

   void start_ricerca()
   {
      figlio = new MascheraRicercaStorico(this);
   }
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁subst', 'or', 'ico', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1', ';', '\n', '▁but', 'ton', '▁ric', 'er', 'ca', ',', '▁ann', 'ull', 'a', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁frame', '▁fig', 'l', 'io', ';', '\n\n', '▁public', '▁subst', 'or', 'ico', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'st', 'or', 'ico', '▁cl', 'ient', 'i', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁/', '/', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'sub', ');', '\n', '▁pan', 'el', '0', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁pan', 'el', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', '""', 's', 'erv', 'iz', 'i', '5.', 'j', 'p', 'g', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁et', 'ich', '▁=', '▁new', '▁et', 'ic', 'he', 'tt', 'a', '(', '""', 'st', 'or', 'ico', '.', 'g', 'if', '"")', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'f', 'ig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'new', '▁gr', 'id', 'l', 'ay', 'out', '(', '2,', '1)', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ric', 'er', 'ca', '▁""', ');', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ann', 'ull', 'a', '▁""', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ric', 'er', 'ca', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ann', 'ull', 'a', ');', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁p', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ric', 'er', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁start', '_', 'ric', 'er', 'ca', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁start', '_', 'ric', 'er', 'ca', '(', ')', '\n', '▁{', '\n', '▁fig', 'l', 'io', '▁=', '▁new', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'or', 'ico', '(', 'this', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'public', '▁class', '▁subst', 'or', 'ico', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1', ';', '\n', '▁button', '▁ric', 'er', 'ca', ',', '▁ann', 'ulla', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '();', '\n', '▁frame', '▁fig', 'lio', ';', '\n\n', '▁public', '▁subst', 'or', 'ico', '()', '\n', '▁{', '\n', '▁super', '(""', 'stor', 'ico', '▁client', 'i', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁//', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(""', 'serv', 'iz', 'i', '5.', 'j', 'pg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'stor', 'ico', '.', 'g', 'if', '"");', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'fig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'new', '▁grid', 'lay', 'out', '(', '2,', '1)', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁button', '(""', '▁ric', 'er', 'ca', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁p', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ric', 'er', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', '_', 'ric', 'er', 'ca', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁void', '▁start', '_', 'ric', 'er', 'ca', '()', '\n', '▁{', '\n', '▁fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'or', 'ico', '(', 'this', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n\n', 'public', '▁class', '▁subst', 'or', 'ico', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1;', '\n', '▁button', '▁ricer', 'ca', ',', '▁ann', 'ulla', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '();', '\n', '▁frame', '▁fig', 'lio', ';', '\n\n', '▁public', '▁subst', 'or', 'ico', '()', '\n', '▁{', '\n', '▁super', '(""', 'stor', 'ico', '▁client', 'i', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁//', 'set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'agine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'agine', '(""', 'serv', 'izi', '5.', 'jpg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'stor', 'ico', '.', 'gif', '"");', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'et', 'ich', ',', '▁0,', '▁0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'fig', 'ura', ',', '▁2,', '▁0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'new', '▁grid', 'layout', '(2,', '1)', ');', '\n', '▁ricer', 'ca', '▁=', '▁new', '▁button', '(""', '▁ricer', 'ca', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁12,', '▁0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁p', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ricer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', '_', 'ric', 'er', 'ca', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n', '▁void', '▁start', '_', 'ric', 'er', 'ca', '()', '\n', '▁{', '\n', '▁fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'aric', 'er', 'cast', 'or', 'ico', '(', 'this', ');', '\n', '▁}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import java import common util public class sub storico extend frame label label panel panel panel button ricerca annulla grid bag layout gridbag new grid bag layout frame new frame frame figlio public sub storico super storico clienti setup init pack set visibl true void setup set font configurazion sistema font sub panel new panel panel set layout gridbag panel set background color white immagin figura new immagin servizi jpg etichetta etich new etichetta storico gif util constrain panel etich grid bag constraint vertic grid bag constraint center util constrain panel figura grid bag constraint vertic grid bag constraint center panel new panel panel set layout new grid layout ricerca new button ricerca annulla new button annulla panel add ricerca panel add annulla set layout gridbag util constrain panel grid bag constraint vertic grid bag constraint west util constrain panel grid bag constraint grid bag constraint west void init annulla add action listen new action listen public void action perform action event dispos (); set enabl true }); ricerca add action listen new action listen public void action perform action event start_ricerca (); }); void start_ricerca figlio new maschera ricerca storico
49~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/InserisciBeniServizi.java~InserisciBeniServizi.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import moduli.BeneServizio;
import moduli.DataBase;

public class InserisciBeniServizi extends MascheraBeneServizio
{
	BeneServizio extra = null;

	public InserisciBeniServizi(String title)
	{
		super(title);
		initialize();
		setSize(350,520);
	}

	public void initialize()
	{
		scelta_piatto[4].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[4].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.DESSERT);
					p();
				}
			}
		});

		scelta_piatto[5].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[5].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.FRUTTA);
					p();
				}
			}
		});

		scelta_servizio[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_servizio[0].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.RICREATIVI);
					o();
				}
			}
		});

		scelta_servizio[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_servizio[1].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.ALTRO);
					o();
				}
			}
		});

		scelta_bevanda[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CAFFETTERIA);
					o();
				}
			}
		});

		scelta_bevanda[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.ANALCOLICI);
					o();
				}
			}
		});

		scelta_bevanda[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[2].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.ALCOLICI);
					o();
				}
			}
		});

		scelta_cibo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_cibo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.DOLCI);
					o();
				}
			}
		});

		scelta_cibo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_cibo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.SALATI);
					o();
				}
			}
		});

		scelta_antipasto[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_antipasto[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.FREDDI);
					o();
				}
			}
		});

		scelta_antipasto[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_antipasto[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CALDI);
					o();
				}
			}
		});

		scelta_primo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_primo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.SOLIDI);
					o();
				}
			}
		});

		scelta_primo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_primo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.LIQUIDI);
					o();
				}
			}
		});

		scelta_secondo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_secondo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CARNE);
					o();
				}
			}
		});

		scelta_secondo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_secondo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.PESCE);
					o();
				}
			}
		});

		scelta_contorno[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.VERDURA_COTTA);
					o();
				}
			}
		});

		scelta_contorno[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.VERDURA_CRUDA);
					o();
				}
			}
		});

		scelta_contorno[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[2].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.FORMAGGIO);
					o();
				}
			}
		});

		conferma.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startConferma(padre);
			}
		});
	} // init

	void startConferma(Frame padre)
	{
		MessageDialog msg;
		if (!errore())
		{
			Float px = Float.valueOf(testo4.getText());
			extra = new BeneServizio((new String(codice))+tornaCodId((Principale.config).getIdBeneservizio()), testo3.getText(), px.floatValue());
			int j;
			if ( (j = (Principale.db).newIdBeneservizio()) == DataBase.OK )
			{
				(Principale.config).updateIdBeneservizio();
				if ((j = (Principale.db).writeBeneServizio(extra)) == DataBase.OK)
				{
					if (padre instanceof MascheraAddebiti)
					{ // questo serve in quanto l'AggiungiBeneServizio e' una estensione di questa classe
						dispose();
						padre.setEnabled(true);
						((MascheraAddebiti) padre).inizExtra();
					}
					else
					{ // questo serve in quanto AggiungiBeneServizio e' una estensione di questa
					  // classe ed e' utilizzata dalla maschera del conto ristorazione
						if (padre instanceof MascheraContoRistorazione)
						{
							dispose();
							padre.setEnabled(true);
							((MascheraContoRistorazione) padre).inizExtra();
						}
						else
						{
							testo3.setText("""");
							testo4.setText("""");
							panel[10].setVisible(true);
						}
					}
				}
				else
					msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j));
			}
			else
				msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j));
		}
	}

	void o()
	{
		completeCode();
		this.add(panel[10]);
		panel[10].setVisible(true);
		testo3.setText("""");
		testo4.setText("""");
		setVisible(true);
	}
   
	void p()
	{
		completeCode();
		if(panel[1].isVisible())
			remove(panel[1]);
		for(int i=3;i<13;++i)
		{
			if(panel[i].isVisible())
				remove(panel[i]);
		}
		o();
	}
	
	String tornaCodId(long id)
	{
		completeCode();
		String str_id = Long.toString(id);
		while (str_id.length() < 5)
			str_id = new String(""0""+str_id);
		return str_id;
	}
}"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'b', 'en', 'es', 'erv', 'iz', 'io', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'd', 'at', 'ab', 'ase', ';', '\n\n', 'publ', 'ic', '▁class', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '▁ext', 'ends', '▁m', 'asc', 'her', 'ab', 'en', 'es', 'erv', 'iz', 'io', '\n', '{', '\n\t', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁extra', '▁=', '▁n', 'ull', ';', '\n\n\t', 'publ', 'ic', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '(', 'str', 'ing', '▁title', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', 't', 'it', 'le', ');', '\n\t\t', 'in', 'it', 'ial', 'ize', '(', ');', '\n\t\t', 's', 'ets', 'ize', '(', '35', '0,', '5', '20', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁initial', 'ize', '(', ')', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'd', 'ess', 'ert', ');', '\n\t\t\t\t\t', 'p', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'fr', 'ut', 'ta', ');', '\n\t\t\t\t\t', 'p', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ric', 'reat', 'iv', 'i', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'al', 't', 'ro', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'aff', 'et', 'ter', 'ia', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'an', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'd', 'ol', 'ci', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'f', 'red', 'di', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'ald', 'i', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 's', 'ol', 'idi', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'car', 'ne', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'p', 'es', 'ce', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ver', 'd', 'ura', '_', 'c', 'ott', 'a', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'form', 'ag', 'gio', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'con', 'fer', 'ma', '(', 'p', 'ad', 're', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '(', 'fr', 'ame', '▁pad', 're', ')', '\n\t', '{', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'fl', 'o', 'at', '▁p', 'x', '▁=', '▁flo', 'at', '.', 'value', 'of', '(', 't', 'est', 'o', '4.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'ext', 'ra', '▁=', '▁new', '▁ben', 'es', 'erv', 'iz', 'io', '(', '(', 'new', '▁string', '(', 'c', 'od', 'ice', ')', ')', '+', 't', 'orn', 'ac', 'od', 'id', '(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'id', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ')', '),', '▁test', 'o', '3.', 'get', 'text', '(', '),', '▁p', 'x', '.', 'fl', 'o', 'at', 'value', '(', ')', ');', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'new', 'id', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ')', ')', '▁=', '=', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'up', 'd', 'ate', 'id', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ');', '\n\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'e', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'ext', 'ra', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'p', 'ad', 're', '▁instance', 'of', '▁m', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '\n\t\t\t\t\t', '{', '▁/', '/', '▁quest', 'o', '▁serve', '▁in', '▁quant', 'o', '▁l', ""'"", 'ag', 'gi', 'ung', 'ib', 'en', 'es', 'erv', 'iz', 'io', '▁e', ""'"", '▁un', 'a', '▁est', 'ension', 'e', '▁di', '▁quest', 'a', '▁cl', 'as', 'se', '\n\t\t\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t\t', '(', '(', 'm', 'asc', 'her', 'a', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'in', 'ize', 'xt', 'ra', '(', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '▁/', '/', '▁quest', 'o', '▁serve', '▁in', '▁quant', 'o', '▁ag', 'gi', 'ung', 'ib', 'en', 'es', 'erv', 'iz', 'io', '▁e', ""'"", '▁un', 'a', '▁est', 'ension', 'e', '▁di', '▁quest', 'a', '\n\t\t\t\t\t', '▁/', '/', '▁cl', 'as', 'se', '▁ed', '▁e', ""'"", '▁util', 'iz', 'z', 'ata', '▁dall', 'a', '▁m', 'asc', 'her', 'a', '▁del', '▁cont', 'o', '▁r', 'ist', 'or', 'az', 'ion', 'e', '\n\t\t\t\t\t\t', 'if', '▁(', 'p', 'ad', 're', '▁instance', 'of', '▁m', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t\t\t', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'az', 'ion', 'e', ')', '▁pad', 're', ').', 'in', 'ize', 'xt', 'ra', '(', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 't', 'est', 'o', '3.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t\t\t\t\t\t', 't', 'est', 'o', '4.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t\t\t\t\t\t', 'pan', 'el', '[', '10', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁o', '(', ')', '\n\t', '{', '\n\t\t', 'com', 'p', 'let', 'ec', 'ode', '(', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '10', ']', ');', '\n\t\t', 'pan', 'el', '[', '10', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 't', 'est', 'o', '3.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '4.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n', '▁', '\n\t', 'v', 'oid', '▁p', '(', ')', '\n\t', '{', '\n\t\t', 'com', 'p', 'let', 'ec', 'ode', '(', ');', '\n\t\t', 'if', '(', 'pan', 'el', '[', '1', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '1', ']', ');', '\n\t\t', 'for', '(', 'int', '▁i', '=', '3', ';', 'i', '<', '13', ';', '+', '+', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'o', '(', ');', '\n\t', '}', '\n\t\n\t', 'str', 'ing', '▁t', 'orn', 'ac', 'od', 'id', '(', 'long', '▁id', ')', '\n\t', '{', '\n\t\t', 'com', 'p', 'let', 'ec', 'ode', '(', ');', '\n\t\t', 'str', 'ing', '▁str', '_', 'id', '▁=', '▁long', '.', 't', 'ost', 'ring', '(', 'id', ');', '\n\t\t', 'while', '▁(', 'str', '_', 'id', '.', 'l', 'ength', '(', ')', '▁', '<', '▁5', ')', '\n\t\t\t', 'str', '_', 'id', '▁=', '▁new', '▁string', '(', '""', '0', '""', '+', 'str', '_', 'id', ');', '\n\t\t', 'ret', 'urn', '▁str', '_', 'id', ';', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'dat', 'abase', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '▁extends', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '\n', '{', '\n\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁null', ';', '\n\n\t', 'public', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '(', 'string', '▁title', ')', '\n\t', '{', '\n\t\t', 'super', '(', 'title', ');', '\n\t\t', 'init', 'ial', 'ize', '();', '\n\t\t', 's', 'ets', 'ize', '(', '35', '0,', '5', '20', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁initial', 'ize', '()', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'd', 'ess', 'ert', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'fr', 'utta', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ric', 'reat', 'iv', 'i', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'alt', 'ro', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'aff', 'etter', 'ia', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'an', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'd', 'ol', 'ci', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'fred', 'di', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'aldi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'sol', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'car', 'ne', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'pes', 'ce', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cott', 'a', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'form', 'aggio', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'con', 'fer', 'ma', '(', 'pad', 're', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '(', 'frame', '▁pad', 're', ')', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', '!', 'er', 'r', 'ore', '())', '\n\t\t', '{', '\n\t\t\t', 'flo', 'at', '▁p', 'x', '▁=', '▁float', '.', 'value', 'of', '(', 'test', 'o', '4.', 'get', 'text', '());', '\n\t\t\t', 'ext', 'ra', '▁=', '▁new', '▁ben', 'es', 'erv', 'izio', '(', '(', 'new', '▁string', '(', 'c', 'od', 'ice', '))', '+', 't', 'orn', 'ac', 'od', 'id', '(', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'id', 'ben', 'es', 'erv', 'izio', '()', '),', '▁test', 'o', '3.', 'get', 'text', '(', '),', '▁p', 'x', '.', 'flo', 'at', 'value', '());', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'new', 'id', 'ben', 'es', 'erv', 'izio', '())', '▁==', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'up', 'date', 'id', 'ben', 'es', 'erv', 'izio', '();', '\n\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'write', 'ben', 'es', 'erv', 'izio', '(', 'ext', 'ra', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'pad', 're', '▁instance', 'of', '▁masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '\n\t\t\t\t\t', '{', '▁//', '▁quest', 'o', '▁serve', '▁in', '▁quant', 'o', '▁l', ""'"", 'aggi', 'ung', 'ib', 'enes', 'erv', 'izio', '▁e', ""'"", '▁una', '▁est', 'ension', 'e', '▁di', '▁quest', 'a', '▁clas', 'se', '\n\t\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t\t\t', '(', '(', 'm', 'asc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁pad', 're', ').', 'in', 'ize', 'xt', 'ra', '();', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '▁//', '▁quest', 'o', '▁serve', '▁in', '▁quant', 'o', '▁ag', 'gi', 'ung', 'ib', 'enes', 'erv', 'izio', '▁e', ""'"", '▁una', '▁est', 'ension', 'e', '▁di', '▁quest', 'a', '\n\t\t\t\t\t', '▁//', '▁clas', 'se', '▁ed', '▁e', ""'"", '▁util', 'izz', 'ata', '▁dall', 'a', '▁masc', 'hera', '▁del', '▁cont', 'o', '▁r', 'ist', 'or', 'azione', '\n\t\t\t\t\t\t', 'if', '▁(', 'pad', 're', '▁instance', 'of', '▁masc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t\t\t\t', '(', '(', 'm', 'asc', 'her', 'ac', 'ont', 'or', 'ist', 'or', 'azione', ')', '▁pad', 're', ').', 'in', 'ize', 'xt', 'ra', '();', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t\t\t\t\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t\t\t\t\t\t', 'pan', 'el', '[', '10', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁o', '()', '\n\t', '{', '\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '10', ']', ');', '\n\t\t', 'pan', 'el', '[', '10', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n', '▁', '\n\t', 'v', 'oid', '▁p', '()', '\n\t', '{', '\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'if', '(', 'pan', 'el', '[', '1', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '1]', ');', '\n\t\t', 'for', '(', 'int', '▁i', '=3', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t', '}', '\n\t\t', 'o', '();', '\n\t', '}', '\n\t\n\t', 'string', '▁torn', 'ac', 'od', 'id', '(', 'long', '▁id', ')', '\n\t', '{', '\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'string', '▁str', '_', 'id', '▁=', '▁long', '.', 't', 'ost', 'ring', '(', 'id', ');', '\n\t\t', 'while', '▁(', 'str', '_', 'id', '.', 'length', '()', '▁<', '▁5)', '\n\t\t\t', 'str', '_', 'id', '▁=', '▁new', '▁string', '(""', '0', '""', '+', 'str', '_', 'id', ');', '\n\t\t', 'return', '▁str', '_', 'id', ';', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'import', '▁mod', 'uli', '.', 'database', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'iben', 'is', 'erv', 'izi', '▁extends', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '\n', '{', '\n\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁null', ';', '\n\n\t', 'public', '▁ins', 'er', 'isc', 'iben', 'is', 'erv', 'izi', '(', 'string', '▁title', ')', '\n\t', '{', '\n\t\t', 'super', '(', 'title', ');', '\n\t\t', 'initial', 'ize', '();', '\n\t\t', 'sets', 'ize', '(', '35', '0,', '520', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁initialize', '()', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'dess', 'ert', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'fr', 'utta', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ric', 'reat', 'ivi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'alt', 'ro', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'c', 'aff', 'etter', 'ia', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'anal', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'dol', 'ci', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'fred', 'di', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'c', 'aldi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'sol', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'carne', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'pes', 'ce', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cott', 'a', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'form', 'aggio', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'con', 'fer', 'ma', '(', 'pad', 're', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'void', '▁start', 'con', 'fer', 'ma', '(', 'frame', '▁padre', ')', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t', 'if', '▁(!', 'er', 'r', 'ore', '())', '\n\t\t', '{', '\n\t\t\t', 'float', '▁px', '▁=', '▁float', '.', 'value', 'of', '(', 'test', 'o', '4.', 'get', 'text', '());', '\n\t\t\t', 'extra', '▁=', '▁new', '▁benes', 'erv', 'izio', '((', 'new', '▁string', '(', 'cod', 'ice', '))', '+', 'torn', 'ac', 'od', 'id', '((', 'princip', 'ale', '.', 'config', ').', 'getid', 'ben', 'es', 'erv', 'izio', '()),', '▁testo', '3.', 'get', 'text', '(),', '▁px', '.', 'float', 'value', '());', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'new', 'id', 'ben', 'es', 'erv', 'izio', '())', '▁==', '▁database', '.', 'ok', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', '(', 'princip', 'ale', '.', 'config', ').', 'update', 'id', 'ben', 'es', 'erv', 'izio', '();', '\n\t\t\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'write', 'ben', 'es', 'erv', 'izio', '(', 'extra', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'pad', 're', '▁instanceof', '▁maschera', 'ad', 'de', 'bit', 'i', ')', '\n\t\t\t\t\t', '{', '▁//', '▁quest', 'o', '▁serve', '▁in', '▁quant', 'o', '▁l', ""'"", 'aggi', 'ung', 'ib', 'enes', 'erv', 'izio', '▁e', ""'"", '▁una', '▁est', 'ension', 'e', '▁di', '▁quest', 'a', '▁classe', '\n\t\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t\t\t', '((', 'masc', 'hera', 'ad', 'de', 'bit', 'i', ')', '▁padre', ').', 'in', 'ize', 'xt', 'ra', '();', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t', '{', '▁//', '▁quest', 'o', '▁serve', '▁in', '▁quant', 'o', '▁ag', 'gi', 'ung', 'ib', 'enes', 'erv', 'izio', '▁e', ""'"", '▁una', '▁est', 'ension', 'e', '▁di', '▁quest', 'a', '\n\t\t\t\t\t', '▁//', '▁classe', '▁ed', '▁e', ""'"", '▁util', 'izz', 'ata', '▁dalla', '▁maschera', '▁del', '▁cont', 'o', '▁r', 'istor', 'azione', '\n\t\t\t\t\t\t', 'if', '▁(', 'pad', 're', '▁instanceof', '▁masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t\t\t\t', '((', 'masc', 'her', 'ac', 'ont', 'or', 'istor', 'azione', ')', '▁padre', ').', 'in', 'ize', 'xt', 'ra', '();', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '("""");', '\n\t\t\t\t\t\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '("""");', '\n\t\t\t\t\t\t\t', 'panel', '[', '10', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'void', '▁o', '()', '\n\t', '{', '\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', '10]', ');', '\n\t\t', 'panel', '[', '10', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n', '▁', '\n\t', 'void', '▁p', '()', '\n\t', '{', '\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'if', '(', 'panel', '[1', '].', 'is', 'visible', '())', '\n\t\t\t', 'remove', '(', 'panel', '[1]', ');', '\n\t\t', 'for', '(', 'int', '▁i', '=3;', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'panel', '[', 'i', '].', 'is', 'visible', '())', '\n\t\t\t\t', 'remove', '(', 'panel', '[', 'i', ']);', '\n\t\t', '}', '\n\t\t', 'o', '();', '\n\t', '}', '\n\t\n\t', 'string', '▁torn', 'ac', 'od', 'id', '(', 'long', '▁id', ')', '\n\t', '{', '\n\t\t', 'comp', 'let', 'ec', 'ode', '();', '\n\t\t', 'string', '▁str', '_', 'id', '▁=', '▁long', '.', 'tostring', '(', 'id', ');', '\n\t\t', 'while', '▁(', 'str', '_', 'id', '.', 'length', '()', '▁<', '▁5)', '\n\t\t\t', 'str', '_', 'id', '▁=', '▁new', '▁string', '(""', '0""', '+', 'str', '_', 'id', ');', '\n\t\t', 'return', '▁str', '_', 'id', ';', '\n\t', '}', '\n', '}']"~"packag interfacc import java awt import java awt event import common util import moduli bene servizio import moduli data base public class inserisci beni servizi extend maschera bene servizio bene servizio extra null public inserisci beni servizi string titl super titl initi set size public void initi scelta piatto add item listen new item listen public void item state chang item event scelta piatto get state level codic compos code level bene servizio dessert scelta piatto add item listen new item listen public void item state chang item event scelta piatto get state level codic compos code level bene servizio frutta scelta servizio add item listen new item listen public void item state chang item event scelta servizio get state level codic compos code level bene servizio ricreativi scelta servizio add item listen new item listen public void item state chang item event scelta servizio get state level codic compos code level bene servizio altro scelta bevanda add item listen new item listen public void item state chang item event scelta bevanda get state level codic compos code level bene servizio caffetteria scelta bevanda add item listen new item listen public void item state chang item event scelta bevanda get state level codic compos code level bene servizio analcolici (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio alcolici (); }); scelta_cibo add item listen new item listen public void item state chang item event scelta_cibo get state ()) level codic compos code level bene servizio dolci (); }); scelta_cibo add item listen new item listen public void item state chang item event scelta_cibo get state ()) level codic compos code level bene servizio salati (); }); scelta_antipasto add item listen new item listen public void item state chang item event scelta_antipasto get state ()) level codic compos code level bene servizio freddi (); }); scelta_antipasto add item listen new item listen public void item state chang item event scelta_antipasto get state ()) level codic compos code level bene servizio caldi (); }); scelta_primo add item listen new item listen public void item state chang item event scelta_primo get state ()) level codic compos code level bene servizio solidi (); }); scelta_primo add item listen new item listen public void item state chang item event scelta_primo get state ()) level codic compos code level bene servizio liquidi (); }); scelta_secondo add item listen new item listen public void item state chang item event scelta_secondo get state ()) level codic compos code level bene servizio carn (); }); scelta_secondo add item listen new item listen public void item state chang item event scelta_secondo get state ()) level codic compos code level bene servizio pesc (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio verdura_cotta (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio verdura_cruda (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio formaggio (); }); conferma add action listen new action listen public void action perform action event start conferma padr }); init void start conferma frame padr messag dialog msg error ()) float float valu testo4 get text ()); extra new bene servizio new string codic ))+ torna cod principal config get beneservizio ()), testo3 get text (), float valu ()); int principal new beneservizio ()) data base principal config updat beneservizio (); principal write bene servizio extra data base padr instanceof maschera addeb questo serv quanto aggiungi bene servizio una estension questa class dispos (); padr set enabl true maschera addeb padr iniz extra (); els questo serv quanto aggiungi bene servizio una estension questa class utilizzata dalla maschera del conto ristorazion padr instanceof maschera conto ristorazion dispos (); padr set enabl true maschera conto ristorazion padr iniz extra (); els testo3 set text (""""); testo4 set text (""""); panel set visibl true els msg new messag dialog problemi con databas data base str error )); els msg new messag dialog problemi con databas data base str error )); void complet code (); add panel ]); panel set visibl true testo3 set text (""""); testo4 set text (""""); set visibl true void complet code (); panel visibl ()) remov panel ]); int ;++ panel visibl ()) remov panel ]); (); string torna cod long complet code (); string str_id long string str_id length str_id new string str_id return str_id"
50~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraRicercaStanza.java~MascheraRicercaStanza.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class MascheraRicercaStanza extends Frame
{
  	 //Dichiaro gli oggetti che mi serviranno per costruire la finestra
    Panel panel1, panel2, panel3, panel4, panel5;
	Label etichetta1, etichetta2, etichetta3, etichetta, etichetta4, etichetta5;
	Button  Avvio, Annulla, ShowDisp, Annulla1, Conferma;
	TextField data_inizio, data_fine, nome_ag;
	List lista;
	Checkbox con_ag;
	GridBagLayout gridbag = new GridBagLayout();
	InserisciPrenotazione pren;
	InserisciCommissioni comm;
	Frame figlio;
	Frame padre = new Frame();
    MascheraCambio father;
    int caller;
    ListaStanze stanze_disp;
    Date save_date;
	String nomi_agenzie[] = new String[0];

	// seguono due variabili necessarie per il passaggio dei parametri 
	// della Inserisci
    String data1;
    String data2;
    
    public MascheraRicercaStanza(String title, int c) 
    {
        super(title);
        caller = c;
        setupPanels();
        init();
        pack();
    }
                     
    void setupPanels()
    {
		this.setFont(ConfigurazioneSistema.font_base);
        //Creo i TextField
        data_inizio = new TextField("""", 12);
        data_fine = new TextField("""", 12);
		nome_ag = new TextField("""", 20);
		nome_ag.setEditable(false);
        
        //Creo i pulsanti e ne disabilito due
        Annulla = new Button(""Indietro"");
        Annulla1 = new Button(""Annulla"");
        Conferma = new Button("" Scegli "");
        Avvio = new Button(""Avvio Ricerca"");
        ShowDisp = new Button(""Disponibilita'"");
        Annulla1.setEnabled(false);
        Conferma.setEnabled(false);

        //Creo le etichette
        etichetta= new Label(""Periodo di soggiorno"");
        etichetta.setFont(ConfigurazioneSistema.font_titolo);
        etichetta1 = new Label(""Data inizio:"");
        etichetta2 = new Label(""Data fine:"");
        etichetta3 = new Label (""Risultato della ricerca:"");
        etichetta3.setFont(ConfigurazioneSistema.font_titolo);
		etichetta4 = new Label("" Nome agenzia"");
		etichetta5 = new Label (""Prenotazione di stanze commissionate:"");
        etichetta5.setFont(ConfigurazioneSistema.font_titolo);

        //Creo la lista
        lista = new List(15, false);

       	//Creo il checkbox
       	con_ag = new Checkbox("" Prenotazione tramite agenzia"", false);
       
        //Creo il pannello in alto      
        panel1 = new Panel();
        panel1.setLayout(gridbag);
        Utils.constrain(panel1, etichetta, 0, 0, 4, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
        Utils.constrain(panel1, etichetta1, 0, 1, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
        Utils.constrain(panel1, data_inizio, 1, 1, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,1.0,0.0,0,0,0,0);
        Utils.constrain(panel1, etichetta2, 2, 1, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
        Utils.constrain(panel1,data_fine, 3, 1, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
        
        panel5 = new Panel();
        panel5.setLayout(gridbag);
        Utils.constrain(panel5, etichetta5, 0, 0, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);        
        Utils.constrain(panel5, con_ag,     0, 1, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
        Utils.constrain(panel5, etichetta4, 1, 1, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
        Utils.constrain(panel5, nome_ag,    2, 1, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);             

        
        
        //Creo un pannello con due pulsanti
        panel2 = new Panel();
        panel2.setLayout(gridbag);
        Utils.constrain(panel2, Annulla, 1, 0, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.3, 0.0, 0, 0, 0, 1);
        Utils.constrain(panel2, Avvio, 2, 0, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.3, 0.0, 0, 0, 0, 1);
        Utils.constrain(panel2, ShowDisp, 3, 0, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST, 0.3, 0.0, 0, 0, 0, 1);             

        //Creo il pannello contenente la lista
        panel3 = new Panel();
        panel3.setLayout(gridbag);
        Utils.constrain(panel3, etichetta3, 0, 0, 2, 1, GridBagConstraints.NONE,
                     GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);
        Utils.constrain(panel3,lista, 0, 1, 4, 3, GridBagConstraints.BOTH,
                     GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);

        //Creo il pannello in basso con due pulsanti
        panel4 = new Panel();
        panel4.setLayout(gridbag);
        Utils.constrain(panel4, Annulla1, 0, 1, 1, 1, GridBagConstraints.NONE,
                     GridBagConstraints.SOUTHEAST, 0.3, 0.0, 0, 0, 0, 10);
        Utils.constrain(panel4, Conferma, 1, 1, 1, 1,GridBagConstraints.NONE,
                     GridBagConstraints.SOUTHWEST, 0.3, 0.0, 0, 0, 0, 0);

        
        //Attacco i pannelli al frame
        this.setLayout(gridbag);
        Utils.constrain(this, panel1, 0, 0, 4, 2, GridBagConstraints.HORIZONTAL,
                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 15, 10, 10, 10);
        Utils.constrain(this, panel5, 0, 2, 4, 1, GridBagConstraints.HORIZONTAL,
                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 15, 10, 10, 10);             
        Utils.constrain(this, panel2, 0, 3, 4, 1,GridBagConstraints.HORIZONTAL,
                     GridBagConstraints.NORTHEAST, 1.0, 0.0, 10, 10, 0, 10);
        Utils.constrain(this, panel3, 0, 4, 4, 3, GridBagConstraints.BOTH,
                     GridBagConstraints.CENTER, 2.0, 2.0, 10, 10, 10, 10);
        Utils.constrain(this, panel4, 0, 7, 4, 1, GridBagConstraints.HORIZONTAL,
                     GridBagConstraints.SOUTHWEST, 1.0, 1.0, 10, 10, 15, 10);
		
		if (caller == 1)
		{		
			panel5.setVisible(false);
			pack();
		}
	}

    //Gestione degli eventi
    public void init()
    {
        //Ascoltatore del pulsante Avvio,se il pulsante viene premuto viene
        //lanciata la procedura di ricerca stanze libere
        Avvio.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
				ctrlAvvio();
            } 
        });

        //Ascoltatore del pulsante Annulla,se il pulsante viene prumeto si torna
        //alla maschera precedente
        Annulla.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                dispose();
                if (caller == 3)
                	father.setEnabled(true);
            	else
            	   	padre.setEnabled(true);
            }
        });
        
        //Ascoltatore del pulsante ShowDisp,se il pulsante viene premuto si 
        //mostrera' una maschera con le disponibilita dell'albergo
        ShowDisp.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
				lookDisp();                
            }
        });

        //Ascoltatore del pulsante Annulla1,se il pulsante viene premuto si
        //vengono riabilitati i componenti del pannello in alto e
        //disabilitati quelli del pannello in basso
        Annulla1.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
            	startAnnulla1();
			}
		});

        //Ascoltatore del pulsante Conferma, se il pulsante viene premuto si apre
        //la finestra riguardante l'inserimento della prenotazione
        Conferma.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
				startInserimento();
			}
		});
			
		lista.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startInserimento();
			}
        });
	
		con_ag.addItemListener(new ItemListener()   
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
               	
               	if (con_ag.getState())
               		nome_ag.setEditable(true);
               	else
               	{
               		nome_ag.setEditable(false);
         			nome_ag.setText("""");
         		}
         	}
      	});
	}

	boolean dataInizioIsNotBeforeToday()
	{
		Date inizio_pren = DateUtils.convertDate(data_inizio.getText());
		Date today = new Date();
		
		if (inizio_pren.getYear() < today.getYear())
			return false;
		else
			if (inizio_pren.getYear() > today.getYear())
				return true;
			else // l'anno e' il medesimo
				if (inizio_pren.getMonth() < today.getMonth())
					return false;
				else
					if (inizio_pren.getMonth() > today.getMonth())
						return true;
					else // l'anno e il mese sono i medesimi
						if (inizio_pren.getDate() < today.getDate())
							return false;
						else
							return true;
	}
	
	/*	se la ricerca viene lanciata per un cambio stanza (caller = 3) si deve
	 * 	impedire che la data di fine venga posticipata rispetto la fine del soggiorno
	 *	o anticipata rispetto la data del cambio stanza.
	 */	
	void ctrlAvvio()
	{
		Frame msg;

		if (Utils.dateEPeriodoCorretti(this, data_inizio.getText(), data_fine.getText()))
		{
			if (con_ag.getState() && nome_ag.getText().equals(""""))
			{
				msg = new MessageDialog(this, "" Manca il nome dell'agenzia! "");
				return;
			}
			
			ListaDisponibilita L_disp = (Principale.db).elencoDisponibilita();
			if (L_disp == null)
			{
				msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
				return;
			}
			if (caller == 3)
			{	
				if (Utils.data1MaggioreData2(DateUtils.convertDate(data_fine.getText()), save_date) )
				{	
					msg = new AvvisoDialog(this, ""ATTENZIONE: la data non puo' essere posticipata"");
					data_fine.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(save_date)));
				}
				else
					if (Utils.data1MinoreData2(DateUtils.convertDate(data_fine.getText()), DateUtils.convertDate(data_inizio.getText()) ) )
					{
						msg = new AvvisoDialog(this, ""ATTENZIONE: la data non puo' essere precedente alla data di inizio"");
						data_fine.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(save_date)));			
					}
					else
					{
						stanze_disp = new ListaStanze();
						startAvvio(L_disp, 0);
					}
			}
			else
			{
				if (dataInizioIsNotBeforeToday())
				{
					stanze_disp = new ListaStanze();
					startAvvio(L_disp, 0);
				}
				else
					msg = new MessageDialog(this, "" La data di inizio deve essere maggiore o uguale di quella odierna! "");
			}
		}
	}
	
	void startAnnulla1()
	{
		data_inizio.setEditable(true);
		data_fine.setEditable(true);
		con_ag.setEnabled(true);
		if ( con_ag.getState() )
			nome_ag.setEditable(true);
		Annulla.setEnabled(true);
		Avvio.setEnabled(true);
		Annulla1.setEnabled(false);
		Conferma.setEnabled(false);
		if (lista.getItemCount() > 0)
			lista.removeAll();
		stanze_disp = new ListaStanze();
	}
	
	void startAvvio(ListaDisponibilita L_disp, int k)
	{
		if (con_ag.getState())
			startSearchComm(L_disp, k);
		
		// le date sono corrette se si arriva qui in quanto controllate in ctrlAvvio()
		Frame msg;
		String str = new String("""");
		ListaCommissionamenti L_comm = new ListaCommissionamenti();
		ListaStanze elenco_stanze_disp = new ListaStanze();

		// variabili necessarie per passaggio dei parametri della Inserisci
		data1 = DateUtils.parseDate(data_inizio.getText());
		data2 = DateUtils.parseDate(data_fine.getText());

		// scansione delle disponibilita
		Stanza stanza = null;
		Disponibilita disp_attuale = null;
		for (int i = 1; i <= L_disp.length(); i++)
		{
			disp_attuale = L_disp.getDisponibilita(i);
			if ( disp_attuale.isDisponibile( DateUtils.convertDate(data_inizio.getText()), DateUtils.convertDate(data_fine.getText()), Flag.DISPONIBILE) )
			{
				stanza = (Principale.db).readStanza(disp_attuale.getNumStanza());
				if (stanza != null)
				{
					elenco_stanze_disp.addStanza(stanza);
					stanze_disp.addStanza(stanza);
				}
				else
					msg = new MessageDialog(this, "" Problemi con il database! "");
			}
		}
		
		if (!stanze_disp.isEmpty())
		{
			Avvio.setEnabled(false);
			Annulla.setEnabled(false);
			data_inizio.setEditable(false);
			data_fine.setEditable(false);
			Annulla1.setEnabled(true);
			Conferma.setEnabled(true);
			con_ag.setEnabled(false);
			nome_ag.setEditable(false);
			for (int i = 1; i <= elenco_stanze_disp.length(); i++)
				lista.addItem(str+(elenco_stanze_disp.getStanza(i)).toString());
		}
		else
			if (k == 0)
				if (!con_ag.getState())
					msg = new AvvisoDialog(this, "" Nessuna stanza disponibile in tale periodo! "");
				else
					msg = new AvvisoDialog(this, "" Nessuna stanza disponibile o commisionata in tale periodo! "");	
	}
	
	void startSearchComm(ListaDisponibilita L_disp, int k)
	{
		// le date sono corrette se si arriva qui in quanto controllate in ctrlAvvio()
		Frame msg;
		
		Commissionamento c;
		Stanza stanza = null;
		Disponibilita disp_loc = null;
		ListaCommissionamenti L_comm = new ListaCommissionamenti();;
		ListaStanze elenco_stanze_disp = new ListaStanze();
		Date d1 = DateUtils.convertDate(data_inizio.getText());
 		Date d2 = DateUtils.convertDate(data_fine.getText());
		
		data1 = DateUtils.parseDate(data_inizio.getText());
		data2 = DateUtils.parseDate(data_fine.getText());
		L_comm = (Principale.db).foundCommissionamentiSenzaLike(nome_ag.getText());
		if (L_comm == null)
		{
			msg = new MessageDialog(this, "" Problemi con il database nella lettura delle commissioni! "");
			return;
		}
		if ( !L_comm.isEmpty() )
		{
			nomi_agenzie = new String[L_comm.length()];
			int indice_nomi = 0;
			for (int i = 1; i <= L_comm.length(); i++)
			{
				c = L_comm.getCommissionamento(i);
				// Controllo che le date inserite appartengano al periodo commissionato
				if( (!Utils.data1MaggioreData2(c.getInizioComm(), d1)) && (!(c.getFineComm()).before(d2))) 
				{
					disp_loc = Utils.getDispOfRoom(L_disp, c.getNumStanza(), false);
					if (disp_loc.isDisponibile(d1, d2, Flag.COMMISSIONATA))
					{
						stanza = (Principale.db).readStanza(disp_loc.getNumStanza());
						if (stanza != null)
						{	
							elenco_stanze_disp.addStanza(stanza);
							stanze_disp.addStanza(stanza);
							nomi_agenzie[indice_nomi] = new String(c.getNomeAgenzia());
							indice_nomi++;
						}
						else
						{
							msg = new MessageDialog(this, "" Problemi con il database! "");
							return;
						}
					}
				}
			}
		}	
		if (!stanze_disp.isEmpty())
		{
			Avvio.setEnabled(false);
			Annulla.setEnabled(false);
			data_inizio.setEditable(false);
			data_fine.setEditable(false);
			Annulla1.setEnabled(true);
			Conferma.setEnabled(true);
			for (int i = 1; i <= elenco_stanze_disp.length(); i++)
				lista.addItem(""COMMISSIONATA A ""+nomi_agenzie[i-1]+"" ""+(elenco_stanze_disp.getStanza(i)).toString());
		}
	} // startSearchComm
	
	void restartAvvio()
	{
		Frame msg;
		
		ListaDisponibilita L_disp = (Principale.db).elencoDisponibilita();
		if (L_disp == null)
		{
			msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return;
		}
		startAnnulla1();
		startAvvio(L_disp, 1);
	}
	
    void startInserimento()
    {
		Frame msg;
		if (lista.getSelectedIndex() != -1)
			switch (caller)
			{
				case 1: visualInsertComm(); break;
				case 2: visualInsertPren(); break;
				case 3: returnFreeRoom(); break;
			}	
		else
			msg = new MessageDialog(this, "" Manca la selezione! "");
    }
    
    void lookDisp()
    {
   	 		figlio = new MascheraDisponibilita(this, nome_ag.getText());
    }
    
    void visualInsertPren()
	{
        this.setEnabled(false);
        Stanza stanza = stanze_disp.getStanza(lista.getSelectedIndex()+1);
		if (con_ag.getState())
	        pren = new InserisciPrenotazione(stanza, data1, data2, nome_ag.getText());
		else 
	        pren = new InserisciPrenotazione(stanza, data1, data2, """");
        pren.setVisible(true);
        pren.mask_ricerca = this;
    } 

    void visualInsertComm()
	{
        this.setEnabled(false);
        Stanza stanza = stanze_disp.getStanza(lista.getSelectedIndex()+1);
        comm = new InserisciCommissioni(stanza, data1, data2);
        comm.setVisible(true);
        comm.mask_ricerca = this;
    }
    
    void returnFreeRoom()
	{
        Stanza stanza = stanze_disp.getStanza(lista.getSelectedIndex()+1);
        father.stanza2.setText(stanza.getNumStanza());
        father.setEnabled(true);
        father.stanza1.setEditable(false);
        father.Ricerca.setEnabled(false);
    	father.Conferma.setEnabled(true);
    	dispose();
    }
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', '▁/', '/', 'd', 'ich', 'i', 'aro', '▁gl', 'i', '▁og', 'get', 'ti', '▁che', '▁mi', '▁serv', 'ir', 'ann', 'o', '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁fin', 'est', 'ra', '\n', '▁pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3,', '▁pan', 'el', '4,', '▁pan', 'el', '5', ';', '\n\t', 'l', 'ab', 'el', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁et', 'ic', 'he', 'tt', 'a', '5', ';', '\n\t', 'but', 'ton', '▁av', 'v', 'io', ',', '▁ann', 'ull', 'a', ',', '▁show', 'dis', 'p', ',', '▁ann', 'ull', 'a', '1,', '▁con', 'fer', 'ma', ';', '\n\t', 'text', 'field', '▁data', '_', 'in', 'iz', 'io', ',', '▁data', '_', 'f', 'ine', ',', '▁n', 'ome', '_', 'ag', ';', '\n\t', 'list', '▁list', 'a', ';', '\n\t', 'che', 'ck', 'box', '▁con', '_', 'ag', ';', '\n\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'ins', 'er', 'isc', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ';', '\n\t', 'ins', 'er', 'isc', 'ic', 'om', 'mission', 'i', '▁comm', ';', '\n\t', 'fr', 'ame', '▁fig', 'l', 'io', ';', '\n\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁m', 'asc', 'her', 'ac', 'amb', 'io', '▁father', ';', '\n', '▁int', '▁call', 'er', ';', '\n', '▁list', 'ast', 'an', 'ze', '▁stan', 'ze', '_', 'dis', 'p', ';', '\n', '▁date', '▁save', '_', 'd', 'ate', ';', '\n\t', 'str', 'ing', '▁nom', 'i', '_', 'agen', 'z', 'ie', '[', ']', '▁=', '▁new', '▁string', '[', '0', ']', ';', '\n\n\t', '//', '▁se', 'gu', 'on', 'o', '▁due', '▁vari', 'ab', 'ili', '▁necess', 'ar', 'ie', '▁per', '▁il', '▁pass', 'ag', 'gio', '▁de', 'i', '▁param', 'et', 'ri', '▁', '\n\t', '//', '▁d', 'ella', '▁ins', 'er', 'isc', 'i', '\n', '▁string', '▁data', '1', ';', '\n', '▁string', '▁data', '2', ';', '\n', '▁', '\n', '▁public', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '(', 'str', 'ing', '▁title', ',', '▁int', '▁c', ')', '▁', '\n', '▁{', '\n', '▁super', '(', 't', 'it', 'le', ');', '\n', '▁call', 'er', '▁=', '▁c', ';', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '\n\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '\n', '▁data', '_', 'in', 'iz', 'io', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁12', ');', '\n', '▁data', '_', 'f', 'ine', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁12', ');', '\n\t\t', 'n', 'ome', '_', 'ag', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ind', 'iet', 'ro', '"")', ';', '\n', '▁ann', 'ull', 'a', '1', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁s', 'ce', 'g', 'li', '▁""', ');', '\n', '▁av', 'v', 'io', '▁=', '▁new', '▁but', 'ton', '(', '""', 'av', 'v', 'io', '▁ric', 'er', 'ca', '"")', ';', '\n', '▁show', 'dis', 'p', '▁=', '▁new', '▁but', 'ton', '(', '""', 'dis', 'pon', 'ib', 'il', 'ita', ""'"", '"")', ';', '\n', '▁ann', 'ull', 'a', '1.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '=', '▁new', '▁label', '(', '""', 'per', 'iod', 'o', '▁di', '▁s', 'og', 'gi', 'orn', 'o', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁in', 'iz', 'io', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁fine', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3', '▁=', '▁new', '▁label', '▁(""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t', 'etic', 'he', 'tt', 'a', '4', '▁=', '▁new', '▁label', '(', '""', '▁n', 'ome', '▁ag', 'enz', 'ia', '"")', ';', '\n\t\t', 'etic', 'he', 'tt', 'a', '5', '▁=', '▁new', '▁label', '▁(""', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁di', '▁stan', 'ze', '▁commission', 'ate', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '5.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁la', '▁list', 'a', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '1', '5,', '▁fal', 'se', ');', '\n\n', '▁', '\t', '//', 'c', 're', 'o', '▁il', '▁check', 'box', '\n', '▁', '\t', 'con', '_', 'ag', '▁=', '▁new', '▁check', 'box', '(', '""', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁tr', 'am', 'ite', '▁ag', 'enz', 'ia', '"",', '▁fal', 'se', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁data', '_', 'in', 'iz', 'io', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'd', 'ata', '_', 'f', 'ine', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '5', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '5.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁et', 'ic', 'he', 'tt', 'a', '5,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁con', '_', 'ag', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁n', 'ome', '_', 'ag', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n\n', '▁', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁p', 'ann', 'ello', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁1', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁av', 'v', 'io', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁1', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁show', 'dis', 'p', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁1', ');', '▁', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁cont', 'en', 'ent', 'e', '▁la', '▁list', 'a', '\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '\n', '▁pan', 'el', '4', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '4.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁ann', 'ull', 'a', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'so', 'ut', 'heast', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁con', 'fer', 'ma', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '5,', '▁', '0,', '▁2,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁3,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'ort', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁10,', '▁10,', '▁', '0,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁4,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁2.', '0,', '▁2.', '0,', '▁10,', '▁10,', '▁10,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '4,', '▁', '0,', '▁7,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁10,', '▁10,', '▁15,', '▁10', ');', '\n\t\t\n\t\t', 'if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁1', ')', '\n\t\t', '{', '\t\t\n\t\t\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'p', 'ack', '(', ');', '\n\t\t', '}', '\n\t', '}', '\n\n', '▁/', '/', 'gest', 'ion', 'e', '▁deg', 'li', '▁event', 'i', '\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁/', '/', 'as', 'col', 't', 'at', 'ore', '▁del', '▁p', 'uls', 'ante', '▁av', 'v', 'io', ',', 'se', '▁il', '▁p', 'uls', 'ante', '▁vi', 'ene', '▁prem', 'ut', 'o', '▁vi', 'ene', '\n', '▁/', '/', 'l', 'anc', 'i', 'ata', '▁la', '▁proced', 'ura', '▁di', '▁ric', 'er', 'ca', '▁stan', 'ze', '▁liber', 'e', '\n', '▁av', 'v', 'io', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'ct', 'r', 'lav', 'v', 'io', '(', ');', '\n', '▁}', '▁', '\n', '▁}', ');', '\n\n', '▁/', '/', 'as', 'col', 't', 'at', 'ore', '▁del', '▁p', 'uls', 'ante', '▁ann', 'ull', 'a', ',', 'se', '▁il', '▁p', 'uls', 'ante', '▁vi', 'ene', '▁pr', 'um', 'et', 'o', '▁si', '▁t', 'orn', 'a', '\n', '▁/', '/', 'all', 'a', '▁m', 'asc', 'her', 'a', '▁preced', 'ent', 'e', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁3', ')', '\n', '▁', '\t', 'father', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 'el', 'se', '\n', '▁', '\t', '▁', '\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁/', '/', 'as', 'col', 't', 'at', 'ore', '▁del', '▁p', 'uls', 'ante', '▁show', 'dis', 'p', ',', 'se', '▁il', '▁p', 'uls', 'ante', '▁vi', 'ene', '▁prem', 'ut', 'o', '▁si', '▁', '\n', '▁/', '/', 'most', 'r', 'era', ""'"", '▁un', 'a', '▁m', 'asc', 'her', 'a', '▁con', '▁le', '▁dis', 'pon', 'ib', 'il', 'ita', '▁d', 'ell', ""'"", 'al', 'ber', 'go', '\n', '▁show', 'dis', 'p', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'lo', 'ok', 'dis', 'p', '(', ');', '▁', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁/', '/', 'as', 'col', 't', 'at', 'ore', '▁del', '▁p', 'uls', 'ante', '▁ann', 'ull', 'a', '1,', 'se', '▁il', '▁p', 'uls', 'ante', '▁vi', 'ene', '▁prem', 'ut', 'o', '▁si', '\n', '▁/', '/', 'v', 'eng', 'on', 'o', '▁ri', 'abil', 'it', 'ati', '▁i', '▁compon', 'ent', 'i', '▁del', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁e', '\n', '▁/', '/', 'dis', 'abil', 'it', 'ati', '▁qu', 'elli', '▁del', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '\n', '▁ann', 'ull', 'a', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'st', 'art', 'ann', 'ull', 'a', '1', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n', '▁/', '/', 'as', 'col', 't', 'at', 'ore', '▁del', '▁p', 'uls', 'ante', '▁con', 'fer', 'ma', ',', '▁se', '▁il', '▁p', 'uls', 'ante', '▁vi', 'ene', '▁prem', 'ut', 'o', '▁si', '▁ap', 're', '\n', '▁/', '/', 'la', '▁fin', 'est', 'ra', '▁rig', 'u', 'ard', 'ante', '▁l', ""'"", 'ins', 'er', 'iment', 'o', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'st', 'art', 'ins', 'er', 'iment', 'o', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\t\n\t\t', 'list', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'ins', 'er', 'iment', 'o', '(', ');', '\n\t\t\t', '}', '\n', '▁}', ');', '\n\t\n\t\t', 'con', '_', 'ag', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\n', '▁', '\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 'el', 'se', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t\t', 'n', 'ome', '_', 'ag', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\t', '}', '\n\n\t', 'bo', 'ole', 'an', '▁dat', 'ain', 'iz', 'io', 'is', 'not', 'be', 'for', 'et', 'od', 'ay', '(', ')', '\n\t', '{', '\n\t\t', 'd', 'ate', '▁in', 'iz', 'io', '_', 'p', 'ren', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'd', 'ate', '▁today', '▁=', '▁new', '▁date', '(', ');', '\n\t\t\n\t\t', 'if', '▁(', 'in', 'iz', 'io', '_', 'p', 'ren', '.', 'get', 'year', '(', ')', '▁', '<', '▁today', '.', 'get', 'year', '(', ')', ')', '\n\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'in', 'iz', 'io', '_', 'p', 'ren', '.', 'get', 'year', '(', ')', '▁', '>', '▁today', '.', 'get', 'year', '(', ')', ')', '\n\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t', 'el', 'se', '▁/', '/', '▁l', ""'"", 'ann', 'o', '▁e', ""'"", '▁il', '▁med', 'es', 'im', 'o', '\n\t\t\t\t', 'if', '▁(', 'in', 'iz', 'io', '_', 'p', 'ren', '.', 'get', 'mon', 'th', '(', ')', '▁', '<', '▁today', '.', 'get', 'mon', 'th', '(', ')', ')', '\n\t\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'in', 'iz', 'io', '_', 'p', 'ren', '.', 'get', 'mon', 'th', '(', ')', '▁', '>', '▁today', '.', 'get', 'mon', 'th', '(', ')', ')', '\n\t\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t\t', 'el', 'se', '▁/', '/', '▁l', ""'"", 'ann', 'o', '▁e', '▁il', '▁m', 'ese', '▁son', 'o', '▁i', '▁med', 'es', 'im', 'i', '\n\t\t\t\t\t\t', 'if', '▁(', 'in', 'iz', 'io', '_', 'p', 'ren', '.', 'get', 'd', 'ate', '(', ')', '▁', '<', '▁today', '.', 'get', 'd', 'ate', '(', ')', ')', '\n\t\t\t\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t', '}', '\n\t\n\t', '/', '*', '\t', 'se', '▁la', '▁ric', 'er', 'ca', '▁vi', 'ene', '▁lanc', 'i', 'ata', '▁per', '▁un', '▁c', 'amb', 'io', '▁stan', 'za', '▁(', 'c', 'all', 'er', '▁=', '▁3', ')', '▁si', '▁de', 've', '\n\t', '▁*', '▁', '\t', 'im', 'ped', 'ire', '▁che', '▁la', '▁data', '▁di', '▁fine', '▁v', 'eng', 'a', '▁post', 'icip', 'ata', '▁r', 'is', 'pet', 'to', '▁la', '▁fine', '▁del', '▁s', 'og', 'gi', 'orn', 'o', '\n\t', '▁*', '\t', 'o', '▁ant', 'icip', 'ata', '▁r', 'is', 'pet', 'to', '▁la', '▁data', '▁del', '▁c', 'amb', 'io', '▁stan', 'za', '.', '\n\t', '▁*', '/', '\t\n\t', 'v', 'oid', '▁c', 'tr', 'lav', 'v', 'io', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\n\t\t', 'if', '▁(', 'ut', 'ils', '.', 'd', 'ate', 'eper', 'iod', 'oc', 'or', 'ret', 'ti', '(', 'this', ',', '▁data', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', '),', '▁data', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '(', ')', '▁&', '&', '▁n', 'ome', '_', 'ag', '.', 'get', 'text', '(', ').', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁n', 'ome', '▁d', 'ell', ""'"", 'agen', 'z', 'ia', '!', '▁""', ');', '\n\t\t\t\t', 'ret', 'urn', ';', '\n\t\t\t', '}', '\n\t\t\t\n\t\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t\t', 'ret', 'urn', ';', '\n\t\t\t', '}', '\n\t\t\t', 'if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁3', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'd', 'ata', '1', 'm', 'ag', 'g', 'ior', 'ed', 'ata', '2', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', '),', '▁save', '_', 'd', 'ate', ')', '▁)', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ion', 'e', ':', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁post', 'icip', 'ata', '"")', ';', '\n\t\t\t\t\t', 'd', 'ata', '_', 'f', 'ine', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 's', 'ave', '_', 'd', 'ate', ')', ')', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'd', 'ata', '1', 'min', 'ored', 'ata', '2', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', '),', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ')', '▁)', '▁)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ion', 'e', ':', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁preced', 'ent', 'e', '▁all', 'a', '▁data', '▁di', '▁in', 'iz', 'io', '"")', ';', '\n\t\t\t\t\t\t', 'd', 'ata', '_', 'f', 'ine', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 's', 'ave', '_', 'd', 'ate', ')', ')', ');', '\t\t\t\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '(', ');', '\n\t\t\t\t\t\t', 'st', 'art', 'av', 'v', 'io', '(', 'l', '_', 'dis', 'p', ',', '▁', '0)', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'd', 'at', 'ain', 'iz', 'io', 'is', 'not', 'be', 'for', 'et', 'od', 'ay', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '(', ');', '\n\t\t\t\t\t', 'st', 'art', 'av', 'v', 'io', '(', 'l', '_', 'dis', 'p', ',', '▁', '0)', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁in', 'iz', 'io', '▁de', 've', '▁ess', 'ere', '▁mag', 'gi', 'ore', '▁o', '▁ug', 'ual', 'e', '▁di', '▁qu', 'ella', '▁od', 'ier', 'na', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'ann', 'ull', 'a', '1', '(', ')', '\n\t', '{', '\n\t\t', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t', 'd', 'ata', '_', 'f', 'ine', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t', 'con', '_', 'ag', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t', 'if', '▁(', '▁con', '_', 'ag', '.', 'get', 'state', '(', ')', '▁)', '\n\t\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t', 'ann', 'ull', 'a', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t', 'av', 'v', 'io', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t', 'ann', 'ull', 'a', '1.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '(', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'av', 'v', 'io', '(', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', ',', '▁int', '▁k', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', 'st', 'art', 's', 'ear', 'ch', 'com', 'm', '(', 'l', '_', 'dis', 'p', ',', '▁k', ');', '\n\t\t\n\t\t', '//', '▁le', '▁date', '▁son', 'o', '▁cor', 'ret', 'te', '▁se', '▁si', '▁arr', 'iva', '▁qu', 'i', '▁in', '▁quant', 'o', '▁controll', 'ate', '▁in', '▁c', 'tr', 'lav', 'v', 'io', '(', ')', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'str', 'ing', '▁str', '▁=', '▁new', '▁string', '(', '""', '"")', ';', '\n\t\t', 'list', 'ac', 'om', 'mission', 'ament', 'i', '▁l', '_', 'com', 'm', '▁=', '▁new', '▁list', 'ac', 'om', 'mission', 'ament', 'i', '(', ');', '\n\t\t', 'list', 'ast', 'an', 'ze', '▁el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '(', ');', '\n\n\t\t', '//', '▁vari', 'ab', 'ili', '▁necess', 'ar', 'ie', '▁per', '▁pass', 'ag', 'gio', '▁de', 'i', '▁param', 'et', 'ri', '▁d', 'ella', '▁ins', 'er', 'isc', 'i', '\n\t\t', 'd', 'ata', '1', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'd', 'ata', '2', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ');', '\n\n\t\t', '//', '▁sc', 'ans', 'ion', 'e', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁n', 'ull', ';', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'att', 'ual', 'e', '▁=', '▁n', 'ull', ';', '\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁l', '_', 'dis', 'p', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t', '{', '\n\t\t\t', 'dis', 'p', '_', 'att', 'ual', 'e', '▁=', '▁l', '_', 'dis', 'p', '.', 'get', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'i', ');', '\n\t\t\t', 'if', '▁(', '▁disp', '_', 'att', 'ual', 'e', '.', 'is', 'dis', 'pon', 'ib', 'ile', '(', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', '),', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', '),', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ')', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'stan', 'za', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'dis', 'p', '_', 'att', 'ual', 'e', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'ad', 'd', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t', 'stan', 'ze', '_', 'dis', 'p', '.', 'ad', 'd', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t\n\t\t', 'if', '▁(', '!', 'stan', 'ze', '_', 'dis', 'p', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'av', 'v', 'io', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'ann', 'ull', 'a', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'd', 'ata', '_', 'f', 'ine', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'ann', 'ull', 'a', '1.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', 'con', '_', 'ag', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', 'str', '+', '(', 'el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'i', ')', ').', 't', 'ost', 'ring', '(', ')', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'k', '▁=', '=', '▁', '0)', '\n\t\t\t\t', 'if', '▁(', '!', 'con', '_', 'ag', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁n', 'ess', 'una', '▁stan', 'za', '▁dis', 'pon', 'ib', 'ile', '▁in', '▁t', 'ale', '▁period', 'o', '!', '▁""', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁n', 'ess', 'una', '▁stan', 'za', '▁dis', 'pon', 'ib', 'ile', '▁o', '▁comm', 'ision', 'ata', '▁in', '▁t', 'ale', '▁period', 'o', '!', '▁""', ');', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁starts', 'ear', 'ch', 'com', 'm', '(', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', ',', '▁int', '▁k', ')', '\n\t', '{', '\n\t\t', '//', '▁le', '▁date', '▁son', 'o', '▁cor', 'ret', 'te', '▁se', '▁si', '▁arr', 'iva', '▁qu', 'i', '▁in', '▁quant', 'o', '▁controll', 'ate', '▁in', '▁c', 'tr', 'lav', 'v', 'io', '(', ')', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'com', 'mission', 'ament', 'o', '▁c', ';', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁n', 'ull', ';', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'l', 'oc', '▁=', '▁n', 'ull', ';', '\n\t\t', 'list', 'ac', 'om', 'mission', 'ament', 'i', '▁l', '_', 'com', 'm', '▁=', '▁new', '▁list', 'ac', 'om', 'mission', 'ament', 'i', '(', ');', ';', '\n\t\t', 'list', 'ast', 'an', 'ze', '▁el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '(', ');', '\n\t\t', 'd', 'ate', '▁d', '1', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ');', '\n', '▁', '\t\t', 'd', 'ate', '▁d', '2', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ');', '\n\t\t\n\t\t', 'd', 'ata', '1', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'd', 'ata', '2', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ata', '_', 'f', 'ine', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'l', '_', 'com', 'm', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'com', 'mission', 'ament', 'is', 'enz', 'al', 'ike', '(', 'n', 'ome', '_', 'ag', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', 'l', '_', 'com', 'm', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁commission', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'l', '_', 'com', 'm', '.', 'is', 'empt', 'y', '(', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'n', 'om', 'i', '_', 'agen', 'z', 'ie', '▁=', '▁new', '▁string', '[', 'l', '_', 'com', 'm', '.', 'l', 'ength', '(', ')', ']', ';', '\n\t\t\t', 'int', '▁ind', 'ice', '_', 'n', 'om', 'i', '▁=', '▁0', ';', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁l', '_', 'com', 'm', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', '▁=', '▁l', '_', 'com', 'm', '.', 'get', 'com', 'mission', 'ament', 'o', '(', 'i', ');', '\n\t\t\t\t', '//', '▁controll', 'o', '▁che', '▁le', '▁date', '▁ins', 'er', 'ite', '▁app', 'art', 'en', 'gan', 'o', '▁al', '▁period', 'o', '▁commission', 'ato', '\n\t\t\t\t', 'if', '(', '▁(', '!', 'ut', 'ils', '.', 'd', 'ata', '1', 'm', 'ag', 'g', 'ior', 'ed', 'ata', '2', '(', 'c', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', '▁d', '1)', ')', '▁&', '&', '▁(', '!', '(', 'c', '.', 'get', 'fin', 'ec', 'omm', '(', ')', ').', 'be', 'fore', '(', 'd', '2)', ')', ')', '▁', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'dis', 'p', '_', 'l', 'oc', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'l', '_', 'dis', 'p', ',', '▁c', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁fal', 'se', ');', '\n\t\t\t\t\t', 'if', '▁(', 'dis', 'p', '_', 'l', 'oc', '.', 'is', 'dis', 'pon', 'ib', 'ile', '(', 'd', '1,', '▁d', '2,', '▁flag', '.', 'com', 'mission', 'ata', ')', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'za', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'dis', 'p', '_', 'l', 'oc', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t', 'el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'ad', 'd', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t\t\t', 'stan', 'ze', '_', 'dis', 'p', '.', 'ad', 'd', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t\t\t', 'n', 'om', 'i', '_', 'agen', 'z', 'ie', '[', 'ind', 'ice', '_', 'n', 'om', 'i', ']', '▁=', '▁new', '▁string', '(', 'c', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', ')', ');', '\n\t\t\t\t\t\t\t', 'ind', 'ice', '_', 'n', 'om', 'i', '+', '+', ';', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t\t\t', 'ret', 'urn', ';', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\t\n\t\t', 'if', '▁(', '!', 'stan', 'ze', '_', 'dis', 'p', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'av', 'v', 'io', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'ann', 'ull', 'a', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'd', 'ata', '_', 'in', 'iz', 'io', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'd', 'ata', '_', 'f', 'ine', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'ann', 'ull', 'a', '1.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', '""', 'com', 'mission', 'ata', '▁a', '▁""', '+', 'n', 'om', 'i', '_', 'agen', 'z', 'ie', '[', 'i', '-1', ']', '+', '""', '▁""', '+', '(', 'el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'i', ')', ').', 't', 'ost', 'ring', '(', ')', ');', '\n\t\t', '}', '\n\t', '}', '▁/', '/', '▁starts', 'ear', 'ch', 'com', 'm', '\n\t\n\t', 'v', 'oid', '▁rest', 'art', 'av', 'v', 'io', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'l', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t', 'st', 'art', 'ann', 'ull', 'a', '1', '(', ');', '\n\t\t', 'st', 'art', 'av', 'v', 'io', '(', 'l', '_', 'dis', 'p', ',', '▁1', ');', '\n\t', '}', '\n\t\n', '▁vo', 'id', '▁start', 'ins', 'er', 'iment', 'o', '(', ')', '\n', '▁{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁!', '=', '▁-', '1)', '\n\t\t\t', 'sw', 'itch', '▁(', 'c', 'all', 'er', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'ase', '▁1:', '▁visual', 'ins', 'ert', 'com', 'm', '(', ');', '▁break', ';', '\n\t\t\t\t', 'c', 'ase', '▁2:', '▁visual', 'ins', 'ert', 'p', 'ren', '(', ');', '▁break', ';', '\n\t\t\t\t', 'c', 'ase', '▁3:', '▁return', 'f', 're', 'ero', 'om', '(', ');', '▁break', ';', '\n\t\t\t', '}', '\t\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁se', 'le', 'z', 'ion', 'e', '!', '▁""', ');', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁look', 'dis', 'p', '(', ')', '\n', '▁{', '\n', '▁', '\t', '▁', '\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁m', 'asc', 'her', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '(', 'this', ',', '▁n', 'ome', '_', 'ag', '.', 'get', 'text', '(', ')', ');', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁visual', 'ins', 'ert', 'p', 'ren', '(', ')', '\n\t', '{', '\n', '▁this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁stan', 'za', '▁stan', 'za', '▁=', '▁stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '+', '1)', ';', '\n\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '(', ')', ')', '\n\t', '▁p', 'ren', '▁=', '▁new', '▁ins', 'er', 'isc', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2,', '▁n', 'ome', '_', 'ag', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'el', 'se', '▁', '\n\t', '▁p', 'ren', '▁=', '▁new', '▁ins', 'er', 'isc', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2,', '▁""', '"")', ';', '\n', '▁p', 'ren', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁p', 'ren', '.', 'm', 'ask', '_', 'ric', 'er', 'ca', '▁=', '▁this', ';', '\n', '▁}', '▁', '\n\n', '▁vo', 'id', '▁visual', 'ins', 'ert', 'com', 'm', '(', ')', '\n\t', '{', '\n', '▁this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁stan', 'za', '▁stan', 'za', '▁=', '▁stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '+', '1)', ';', '\n', '▁comm', '▁=', '▁new', '▁ins', 'er', 'isc', 'ic', 'om', 'mission', 'i', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2)', ';', '\n', '▁comm', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁comm', '.', 'm', 'ask', '_', 'ric', 'er', 'ca', '▁=', '▁this', ';', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁return', 'f', 're', 'ero', 'om', '(', ')', '\n\t', '{', '\n', '▁stan', 'za', '▁stan', 'za', '▁=', '▁stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '+', '1)', ';', '\n', '▁father', '.', 'stan', 'za', '2.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁father', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁father', '.', 'stan', 'za', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁father', '.', 'ric', 'er', 'ca', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'father', '.', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 'dis', 'pose', '(', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', '▁//', 'd', 'ichi', 'aro', '▁gl', 'i', '▁og', 'get', 'ti', '▁che', '▁mi', '▁serv', 'ir', 'ann', 'o', '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁finest', 'ra', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4,', '▁panel', '5', ';', '\n\t', 'l', 'abel', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', ',', '▁et', 'iche', 'tta', '4,', '▁et', 'iche', 'tta', '5', ';', '\n\t', 'but', 'ton', '▁av', 'v', 'io', ',', '▁ann', 'ulla', ',', '▁show', 'dis', 'p', ',', '▁ann', 'ulla', '1,', '▁con', 'fer', 'ma', ';', '\n\t', 'text', 'field', '▁data', '_', 'in', 'izio', ',', '▁data', '_', 'f', 'ine', ',', '▁n', 'ome', '_', 'ag', ';', '\n\t', 'list', '▁list', 'a', ';', '\n\t', 'check', 'box', '▁con', '_', 'ag', ';', '\n\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'ins', 'er', 'isc', 'ip', 'ren', 'ot', 'azione', '▁pren', ';', '\n\t', 'ins', 'er', 'isc', 'icom', 'mission', 'i', '▁comm', ';', '\n\t', 'frame', '▁fig', 'lio', ';', '\n\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '\n', '▁masc', 'her', 'ac', 'amb', 'io', '▁father', ';', '\n', '▁int', '▁call', 'er', ';', '\n', '▁list', 'ast', 'an', 'ze', '▁stan', 'ze', '_', 'dis', 'p', ';', '\n', '▁date', '▁save', '_', 'date', ';', '\n\t', 'string', '▁nom', 'i', '_', 'agen', 'zie', '[]', '▁=', '▁new', '▁string', '[', '0', ']', ';', '\n\n\t', '//', '▁se', 'gu', 'ono', '▁due', '▁vari', 'ab', 'ili', '▁necess', 'arie', '▁per', '▁il', '▁pass', 'aggio', '▁dei', '▁param', 'et', 'ri', '▁', '\n\t', '//', '▁della', '▁ins', 'er', 'isc', 'i', '\n', '▁string', '▁data', '1', ';', '\n', '▁string', '▁data', '2', ';', '\n', '▁', '\n', '▁public', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '(', 'string', '▁title', ',', '▁int', '▁c', ')', '▁', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n', '▁call', 'er', '▁=', '▁c', ';', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '\n', '▁data', '_', 'in', 'izio', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁data', '_', 'f', 'ine', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n\t\t', 'n', 'ome', '_', 'ag', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ind', 'iet', 'ro', '"");', '\n', '▁ann', 'ulla', '1', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', '▁s', 'ce', 'g', 'li', '▁""', ');', '\n', '▁av', 'v', 'io', '▁=', '▁new', '▁button', '(""', 'av', 'v', 'io', '▁ric', 'er', 'ca', '"");', '\n', '▁show', 'dis', 'p', '▁=', '▁new', '▁button', '(""', 'dis', 'pon', 'ib', 'il', 'ita', ""'"", '"");', '\n', '▁ann', 'ulla', '1.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '=', '▁new', '▁label', '(""', 'per', 'iod', 'o', '▁di', '▁s', 'og', 'gi', 'orno', '"");', '\n', '▁et', 'iche', 'tta', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', ':', '"");', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'data', '▁fine', ':', '"");', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '▁(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'etic', 'he', 'tta', '4', '▁=', '▁new', '▁label', '(""', '▁n', 'ome', '▁ag', 'enz', 'ia', '"");', '\n\t\t', 'etic', 'he', 'tta', '5', '▁=', '▁new', '▁label', '▁(""', 'p', 'ren', 'ot', 'azione', '▁di', '▁stan', 'ze', '▁commission', 'ate', ':', '"");', '\n', '▁et', 'iche', 'tta', '5.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\n', '▁//', 'cre', 'o', '▁la', '▁list', 'a', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '1', '5,', '▁false', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁check', 'box', '\n', '▁', '\t', 'con', '_', 'ag', '▁=', '▁new', '▁check', 'box', '(""', '▁pren', 'ot', 'azione', '▁tram', 'ite', '▁ag', 'enz', 'ia', '"",', '▁false', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁data', '_', 'in', 'izio', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'data', '_', 'f', 'ine', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁panel', '5', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '5.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁et', 'iche', 'tta', '5,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁con', '_', 'ag', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁et', 'iche', 'tta', '4,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '5,', '▁n', 'ome', '_', 'ag', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n\n', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁un', '▁pann', 'ello', '▁con', '▁due', '▁puls', 'anti', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁1', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁av', 'v', 'io', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁1', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁show', 'dis', 'p', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁1', ');', '▁', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁list', 'a', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁et', 'iche', 'tta', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '\n', '▁panel', '4', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '4.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁ann', 'ulla', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '4,', '▁con', 'fer', 'ma', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '3,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '5,', '▁', '0,', '▁2,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁3,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.', '0,', '▁0.', '0,', '▁10,', '▁10,', '▁', '0,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁4,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁2.', '0,', '▁2.', '0,', '▁10,', '▁10,', '▁10,', '▁10', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '4,', '▁', '0,', '▁7,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.', '0,', '▁1.', '0,', '▁10,', '▁10,', '▁15,', '▁10', ');', '\n\t\t\n\t\t', 'if', '▁(', 'call', 'er', '▁==', '▁1)', '\n\t\t', '{', '\t\t\n\t\t\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t\t\t', 'pack', '();', '\n\t\t', '}', '\n\t', '}', '\n\n', '▁//', 'gest', 'ione', '▁deg', 'li', '▁event', 'i', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁//', 'as', 'col', 't', 'atore', '▁del', '▁puls', 'ante', '▁av', 'v', 'io', ',', 'se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁vi', 'ene', '\n', '▁//', 'l', 'anc', 'iata', '▁la', '▁proced', 'ura', '▁di', '▁ric', 'er', 'ca', '▁stan', 'ze', '▁liber', 'e', '\n', '▁av', 'v', 'io', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'ct', 'r', 'lav', 'v', 'io', '();', '\n', '▁}', '▁', '\n', '▁}', ');', '\n\n', '▁//', 'as', 'col', 't', 'atore', '▁del', '▁puls', 'ante', '▁ann', 'ulla', ',', 'se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁pr', 'um', 'eto', '▁si', '▁torn', 'a', '\n', '▁//', 'alla', '▁masc', 'hera', '▁preced', 'ente', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁3)', '\n', '▁', '\t', 'father', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t', 'el', 'se', '\n', '▁', '\t', '▁', '\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁//', 'as', 'col', 't', 'atore', '▁del', '▁puls', 'ante', '▁show', 'dis', 'p', ',', 'se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁si', '▁', '\n', '▁//', 'most', 'rera', ""'"", '▁una', '▁masc', 'hera', '▁con', '▁le', '▁dis', 'pon', 'ib', 'il', 'ita', '▁dell', ""'"", 'al', 'ber', 'go', '\n', '▁show', 'dis', 'p', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'look', 'dis', 'p', '();', '▁', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁//', 'as', 'col', 't', 'atore', '▁del', '▁puls', 'ante', '▁ann', 'ulla', '1,', 'se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁si', '\n', '▁//', 'v', 'eng', 'ono', '▁ri', 'abil', 'it', 'ati', '▁i', '▁component', 'i', '▁del', '▁pann', 'ello', '▁in', '▁alto', '▁e', '\n', '▁//', 'dis', 'abil', 'it', 'ati', '▁qu', 'elli', '▁del', '▁pann', 'ello', '▁in', '▁basso', '\n', '▁ann', 'ulla', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'ann', 'ulla', '1', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n', '▁//', 'as', 'col', 't', 'atore', '▁del', '▁puls', 'ante', '▁con', 'fer', 'ma', ',', '▁se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁si', '▁ap', 're', '\n', '▁//', 'la', '▁finest', 'ra', '▁rig', 'u', 'ard', 'ante', '▁l', ""'"", 'ins', 'er', 'iment', 'o', '▁della', '▁pren', 'ot', 'azione', '\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'start', 'ins', 'er', 'iment', 'o', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\t\n\t\t', 'list', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'ins', 'er', 'iment', 'o', '();', '\n\t\t\t', '}', '\n', '▁}', ');', '\n\t\n\t\t', 'con', '_', 'ag', '.', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\n', '▁', '\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '())', '\n', '▁', '\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'el', 'se', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t\t', 'n', 'ome', '_', 'ag', '.', 's', 'ette', 'xt', '(""', '"");', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\t', '}', '\n\n\t', 'bo', 'olean', '▁dat', 'ain', 'izio', 'is', 'not', 'be', 'for', 'et', 'od', 'ay', '()', '\n\t', '{', '\n\t\t', 'date', '▁in', 'izio', '_', 'p', 'ren', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '());', '\n\t\t', 'date', '▁today', '▁=', '▁new', '▁date', '();', '\n\t\t\n\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'year', '()', '▁<', '▁today', '.', 'get', 'year', '())', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'year', '()', '▁>', '▁today', '.', 'get', 'year', '())', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', 'el', 'se', '▁//', '▁l', ""'"", 'ann', 'o', '▁e', ""'"", '▁il', '▁med', 'es', 'imo', '\n\t\t\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'month', '()', '▁<', '▁today', '.', 'get', 'month', '())', '\n\t\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'month', '()', '▁>', '▁today', '.', 'get', 'month', '())', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t', 'el', 'se', '▁//', '▁l', ""'"", 'ann', 'o', '▁e', '▁il', '▁m', 'ese', '▁son', 'o', '▁i', '▁med', 'es', 'imi', '\n\t\t\t\t\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'date', '()', '▁<', '▁today', '.', 'get', 'date', '())', '\n\t\t\t\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t', '}', '\n\t\n\t', '/', '*', '\t', 'se', '▁la', '▁ric', 'er', 'ca', '▁vi', 'ene', '▁lanc', 'iata', '▁per', '▁un', '▁camb', 'io', '▁stan', 'za', '▁(', 'call', 'er', '▁=', '▁3)', '▁si', '▁de', 've', '\n\t', '▁*', '▁', '\t', 'im', 'ped', 'ire', '▁che', '▁la', '▁data', '▁di', '▁fine', '▁v', 'eng', 'a', '▁post', 'icip', 'ata', '▁ris', 'pet', 'to', '▁la', '▁fine', '▁del', '▁s', 'og', 'gi', 'orno', '\n\t', '▁*', '\t', 'o', '▁anticip', 'ata', '▁ris', 'pet', 'to', '▁la', '▁data', '▁del', '▁camb', 'io', '▁stan', 'za', '.', '\n\t', '▁*', '/', '\t\n\t', 'v', 'oid', '▁c', 'tr', 'lav', 'v', 'io', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\n\t\t', 'if', '▁(', 'ut', 'ils', '.', 'date', 'eper', 'iod', 'oc', 'or', 'ret', 'ti', '(', 'this', ',', '▁data', '_', 'in', 'izio', '.', 'get', 'text', '(', '),', '▁data', '_', 'f', 'ine', '.', 'get', 'text', '()', '))', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '()', '▁&', '&', '▁n', 'ome', '_', 'ag', '.', 'get', 'text', '().', 'equ', 'als', '(""', '"")', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁n', 'ome', '▁dell', ""'"", 'agen', 'zia', '!', '▁""', ');', '\n\t\t\t\t', 'return', ';', '\n\t\t\t', '}', '\n\t\t\t\n\t\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t\t', 'if', '▁(', 'l', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t\t', 'return', ';', '\n\t\t\t', '}', '\n\t\t\t', 'if', '▁(', 'call', 'er', '▁==', '▁3)', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'data', '1', 'mag', 'g', 'ior', 'ed', 'ata', '2', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', '),', '▁save', '_', 'date', ')', '▁)', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ione', ':', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁post', 'icip', 'ata', '"");', '\n\t\t\t\t\t', 'data', '_', 'f', 'ine', '.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'save', '_', 'date', '))', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', '),', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '())', '▁)', '▁)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ione', ':', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁preced', 'ente', '▁alla', '▁data', '▁di', '▁in', 'izio', '"");', '\n\t\t\t\t\t\t', 'data', '_', 'f', 'ine', '.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'save', '_', 'date', '))', ');', '\t\t\t\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '();', '\n\t\t\t\t\t\t', 'start', 'av', 'v', 'io', '(', 'l', '_', 'dis', 'p', ',', '▁', '0)', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'dat', 'ain', 'izio', 'is', 'not', 'be', 'for', 'et', 'od', 'ay', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '();', '\n\t\t\t\t\t', 'start', 'av', 'v', 'io', '(', 'l', '_', 'dis', 'p', ',', '▁', '0)', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁in', 'izio', '▁de', 've', '▁ess', 'ere', '▁mag', 'gi', 'ore', '▁o', '▁ug', 'ual', 'e', '▁di', '▁qu', 'ella', '▁od', 'ier', 'na', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'ann', 'ulla', '1', '()', '\n\t', '{', '\n\t\t', 'data', '_', 'in', 'izio', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'data', '_', 'f', 'ine', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'con', '_', 'ag', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t', 'if', '▁(', '▁con', '_', 'ag', '.', 'get', 'state', '()', '▁)', '\n\t\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'ann', 'ulla', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t', 'av', 'v', 'io', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t', 'ann', 'ulla', '1.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '();', '\n\t\t', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '();', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'av', 'v', 'io', '(', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', ',', '▁int', '▁k', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '())', '\n\t\t\t', 'st', 'arts', 'earch', 'comm', '(', 'l', '_', 'dis', 'p', ',', '▁k', ');', '\n\t\t\n\t\t', '//', '▁le', '▁date', '▁son', 'o', '▁cor', 'ret', 'te', '▁se', '▁si', '▁arr', 'iva', '▁qui', '▁in', '▁quant', 'o', '▁controll', 'ate', '▁in', '▁c', 'tr', 'lav', 'v', 'io', '()', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'string', '▁str', '▁=', '▁new', '▁string', '(""', '"");', '\n\t\t', 'list', 'acom', 'mission', 'ament', 'i', '▁l', '_', 'comm', '▁=', '▁new', '▁list', 'acom', 'mission', 'ament', 'i', '();', '\n\t\t', 'list', 'ast', 'an', 'ze', '▁el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '();', '\n\n\t\t', '//', '▁vari', 'ab', 'ili', '▁necess', 'arie', '▁per', '▁pass', 'aggio', '▁dei', '▁param', 'et', 'ri', '▁della', '▁ins', 'er', 'isc', 'i', '\n\t\t', 'data', '1', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '());', '\n\t\t', 'data', '2', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '());', '\n\n\t\t', '//', '▁sc', 'ans', 'ione', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁null', ';', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'att', 'ual', 'e', '▁=', '▁null', ';', '\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁l', '_', 'dis', 'p', '.', 'length', '();', '▁i', '++', ')', '\n\t\t', '{', '\n\t\t\t', 'dis', 'p', '_', 'att', 'ual', 'e', '▁=', '▁l', '_', 'dis', 'p', '.', 'get', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'i', ');', '\n\t\t\t', 'if', '▁(', '▁disp', '_', 'att', 'ual', 'e', '.', 'is', 'dis', 'pon', 'ib', 'ile', '(', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()', '),', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '()', '),', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ')', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'stan', 'za', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'dis', 'p', '_', 'att', 'ual', 'e', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!=', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'add', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t', 'stan', 'ze', '_', 'dis', 'p', '.', 'add', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t\n\t\t', 'if', '▁(', '!', 'stan', 'ze', '_', 'dis', 'p', '.', 'is', 'empt', 'y', '())', '\n\t\t', '{', '\n\t\t\t', 'av', 'v', 'io', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t', 'ann', 'ulla', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t', 'data', '_', 'in', 'izio', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'data', '_', 'f', 'ine', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'ann', 'ulla', '1.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', 'con', '_', 'ag', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(', 'str', '+', '(', 'el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'i', ')', ').', 't', 'ost', 'ring', '());', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'k', '▁==', '▁', '0)', '\n\t\t\t\t', 'if', '▁(', '!', 'con', '_', 'ag', '.', 'get', 'state', '())', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁ness', 'una', '▁stan', 'za', '▁dis', 'pon', 'ib', 'ile', '▁in', '▁tale', '▁period', 'o', '!', '▁""', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁ness', 'una', '▁stan', 'za', '▁dis', 'pon', 'ib', 'ile', '▁o', '▁comm', 'ision', 'ata', '▁in', '▁tale', '▁period', 'o', '!', '▁""', ');', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁starts', 'earch', 'comm', '(', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', ',', '▁int', '▁k', ')', '\n\t', '{', '\n\t\t', '//', '▁le', '▁date', '▁son', 'o', '▁cor', 'ret', 'te', '▁se', '▁si', '▁arr', 'iva', '▁qui', '▁in', '▁quant', 'o', '▁controll', 'ate', '▁in', '▁c', 'tr', 'lav', 'v', 'io', '()', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'com', 'mission', 'amento', '▁c', ';', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁null', ';', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'loc', '▁=', '▁null', ';', '\n\t\t', 'list', 'acom', 'mission', 'ament', 'i', '▁l', '_', 'comm', '▁=', '▁new', '▁list', 'acom', 'mission', 'ament', 'i', '();', ';', '\n\t\t', 'list', 'ast', 'an', 'ze', '▁el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '▁=', '▁new', '▁list', 'ast', 'an', 'ze', '();', '\n\t\t', 'date', '▁d', '1', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '());', '\n', '▁', '\t\t', 'date', '▁d', '2', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '());', '\n\t\t\n\t\t', 'data', '1', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '());', '\n\t\t', 'data', '2', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'data', '_', 'f', 'ine', '.', 'get', 'text', '());', '\n\t\t', 'l', '_', 'comm', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'com', 'mission', 'ament', 'is', 'enz', 'al', 'ike', '(', 'n', 'ome', '_', 'ag', '.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '_', 'comm', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁commission', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'l', '_', 'comm', '.', 'is', 'empt', 'y', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'n', 'omi', '_', 'agen', 'zie', '▁=', '▁new', '▁string', '[', 'l', '_', 'comm', '.', 'length', '()', ']', ';', '\n\t\t\t', 'int', '▁ind', 'ice', '_', 'n', 'omi', '▁=', '▁0', ';', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁l', '_', 'comm', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', '▁=', '▁l', '_', 'comm', '.', 'get', 'com', 'mission', 'amento', '(', 'i', ');', '\n\t\t\t\t', '//', '▁controll', 'o', '▁che', '▁le', '▁date', '▁ins', 'er', 'ite', '▁app', 'arten', 'gan', 'o', '▁al', '▁period', 'o', '▁commission', 'ato', '\n\t\t\t\t', 'if', '(', '▁(', '!', 'ut', 'ils', '.', 'data', '1', 'mag', 'g', 'ior', 'ed', 'ata', '2', '(', 'c', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', '▁d', '1)', ')', '▁&', '&', '▁(', '!', '(', 'c', '.', 'get', 'fin', 'ec', 'omm', '()', ').', 'before', '(', 'd', '2)', '))', '▁', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'dis', 'p', '_', 'loc', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'l', '_', 'dis', 'p', ',', '▁c', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁false', ');', '\n\t\t\t\t\t', 'if', '▁(', 'dis', 'p', '_', 'loc', '.', 'is', 'dis', 'pon', 'ib', 'ile', '(', 'd', '1,', '▁d', '2,', '▁flag', '.', 'com', 'mission', 'ata', '))', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'za', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'dis', 'p', '_', 'loc', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!=', '▁null', ')', '\n\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t', 'el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'add', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t\t\t', 'stan', 'ze', '_', 'dis', 'p', '.', 'add', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t\t\t', 'n', 'omi', '_', 'agen', 'zie', '[', 'ind', 'ice', '_', 'n', 'omi', ']', '▁=', '▁new', '▁string', '(', 'c', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t\t\t\t\t\t', 'ind', 'ice', '_', 'n', 'omi', '++', ';', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t\t\t', 'return', ';', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\t\n\t\t', 'if', '▁(', '!', 'stan', 'ze', '_', 'dis', 'p', '.', 'is', 'empt', 'y', '())', '\n\t\t', '{', '\n\t\t\t', 'av', 'v', 'io', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t', 'ann', 'ulla', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t', 'data', '_', 'in', 'izio', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'data', '_', 'f', 'ine', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'ann', 'ulla', '1.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(""', 'com', 'mission', 'ata', '▁a', '▁""', '+', 'n', 'omi', '_', 'agen', 'zie', '[', 'i', '-1', ']', '+', '""', '▁""', '+', '(', 'el', 'en', 'co', '_', 'stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'i', ')', ').', 't', 'ost', 'ring', '());', '\n\t\t', '}', '\n\t', '}', '▁//', '▁starts', 'earch', 'comm', '\n\t\n\t', 'v', 'oid', '▁restart', 'av', 'v', 'io', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', 'l', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'start', 'ann', 'ulla', '1', '();', '\n\t\t', 'start', 'av', 'v', 'io', '(', 'l', '_', 'dis', 'p', ',', '▁1', ');', '\n\t', '}', '\n\t\n', '▁void', '▁start', 'ins', 'er', 'iment', 'o', '()', '\n', '▁{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', '()', '▁!=', '▁-', '1)', '\n\t\t\t', 'sw', 'itch', '▁(', 'call', 'er', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'case', '▁1:', '▁visual', 'ins', 'ert', 'comm', '();', '▁break', ';', '\n\t\t\t\t', 'case', '▁2:', '▁visual', 'ins', 'ert', 'p', 'ren', '();', '▁break', ';', '\n\t\t\t\t', 'case', '▁3:', '▁return', 'fre', 'ero', 'om', '();', '▁break', ';', '\n\t\t\t', '}', '\t\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁se', 'lez', 'ione', '!', '▁""', ');', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁look', 'dis', 'p', '()', '\n', '▁{', '\n', '▁', '\t', '▁', '\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '(', 'this', ',', '▁n', 'ome', '_', 'ag', '.', 'get', 'text', '());', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁visual', 'ins', 'ert', 'p', 'ren', '()', '\n\t', '{', '\n', '▁this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁stan', 'za', '▁stan', 'za', '▁=', '▁stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', '()', '+', '1)', ';', '\n\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '())', '\n\t', '▁pren', '▁=', '▁new', '▁ins', 'er', 'isc', 'ip', 'ren', 'ot', 'azione', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2,', '▁n', 'ome', '_', 'ag', '.', 'get', 'text', '());', '\n\t\t', 'el', 'se', '▁', '\n\t', '▁pren', '▁=', '▁new', '▁ins', 'er', 'isc', 'ip', 'ren', 'ot', 'azione', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2,', '▁""', '"");', '\n', '▁pren', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁pren', '.', 'mask', '_', 'ric', 'er', 'ca', '▁=', '▁this', ';', '\n', '▁}', '▁', '\n\n', '▁void', '▁visual', 'ins', 'ert', 'comm', '()', '\n\t', '{', '\n', '▁this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁stan', 'za', '▁stan', 'za', '▁=', '▁stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', '()', '+', '1)', ';', '\n', '▁comm', '▁=', '▁new', '▁ins', 'er', 'isc', 'icom', 'mission', 'i', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2)', ';', '\n', '▁comm', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁comm', '.', 'mask', '_', 'ric', 'er', 'ca', '▁=', '▁this', ';', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁return', 'fre', 'ero', 'om', '()', '\n\t', '{', '\n', '▁stan', 'za', '▁stan', 'za', '▁=', '▁stan', 'ze', '_', 'dis', 'p', '.', 'get', 'stan', 'za', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', '()', '+', '1)', ';', '\n', '▁father', '.', 'stan', 'za', '2.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁father', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁father', '.', 'stan', 'za', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁father', '.', 'ric', 'er', 'ca', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'father', '.', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t', 'dis', 'pose', '();', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', '▁//', 'd', 'ichi', 'aro', '▁gli', '▁og', 'get', 'ti', '▁che', '▁mi', '▁serv', 'ir', 'anno', '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁finest', 'ra', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4,', '▁panel', '5;', '\n\t', 'label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', ',', '▁et', 'iche', 'tta', '4,', '▁et', 'iche', 'tta', '5;', '\n\t', 'button', '▁av', 'vio', ',', '▁ann', 'ulla', ',', '▁show', 'disp', ',', '▁ann', 'ulla', '1,', '▁confer', 'ma', ';', '\n\t', 'text', 'field', '▁data', '_', 'in', 'izio', ',', '▁data', '_', 'fine', ',', '▁nome', '_', 'ag', ';', '\n\t', 'list', '▁list', 'a', ';', '\n\t', 'check', 'box', '▁con', '_', 'ag', ';', '\n\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'ins', 'er', 'iscip', 'ren', 'ot', 'azione', '▁pren', ';', '\n\t', 'ins', 'er', 'isc', 'icom', 'mission', 'i', '▁comm', ';', '\n\t', 'frame', '▁fig', 'lio', ';', '\n\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '\n', '▁masc', 'her', 'ac', 'amb', 'io', '▁father', ';', '\n', '▁int', '▁caller', ';', '\n', '▁list', 'ast', 'anze', '▁stan', 'ze', '_', 'disp', ';', '\n', '▁date', '▁save', '_', 'date', ';', '\n\t', 'string', '▁nomi', '_', 'agen', 'zie', '[]', '▁=', '▁new', '▁string', '[0', '];', '\n\n\t', '//', '▁segu', 'ono', '▁due', '▁vari', 'ab', 'ili', '▁necess', 'arie', '▁per', '▁il', '▁passaggio', '▁dei', '▁paramet', 'ri', '▁', '\n\t', '//', '▁della', '▁ins', 'er', 'isc', 'i', '\n', '▁string', '▁data', '1;', '\n', '▁string', '▁data', '2;', '\n', '▁', '\n', '▁public', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '(', 'string', '▁title', ',', '▁int', '▁c', ')', '▁', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n', '▁caller', '▁=', '▁c', ';', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '\n', '▁data', '_', 'in', 'izio', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁data', '_', 'fine', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n\t\t', 'n', 'ome', '_', 'ag', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ind', 'ietro', '"");', '\n', '▁ann', 'ulla', '1', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n', '▁confer', 'ma', '▁=', '▁new', '▁button', '(""', '▁sce', 'gli', '▁""', ');', '\n', '▁av', 'vio', '▁=', '▁new', '▁button', '(""', 'av', 'vio', '▁ricer', 'ca', '"");', '\n', '▁show', 'disp', '▁=', '▁new', '▁button', '(""', 'dis', 'pon', 'ibil', 'ita', ""'"", '"");', '\n', '▁ann', 'ulla', '1.', 'set', 'enabled', '(', 'false', ');', '\n', '▁confer', 'ma', '.', 'set', 'enabled', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '=', '▁new', '▁label', '(""', 'period', 'o', '▁di', '▁sog', 'gi', 'orno', '"");', '\n', '▁et', 'iche', 'tta', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', ':', '"");', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'data', '▁fine', ':', '"");', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '▁(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t', 'etic', 'he', 'tta', '4', '▁=', '▁new', '▁label', '(""', '▁nome', '▁ag', 'enzia', '"");', '\n\t\t', 'etic', 'he', 'tta', '5', '▁=', '▁new', '▁label', '▁(""', 'p', 'ren', 'ot', 'azione', '▁di', '▁stan', 'ze', '▁commission', 'ate', ':', '"");', '\n', '▁et', 'iche', 'tta', '5.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\n', '▁//', 'cre', 'o', '▁la', '▁list', 'a', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(1', '5,', '▁false', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁check', 'box', '\n', '▁', '\t', 'con', '_', 'ag', '▁=', '▁new', '▁check', 'box', '(""', '▁pren', 'ot', 'azione', '▁tram', 'ite', '▁ag', 'enzia', '"",', '▁false', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', ',', '▁0,', '▁0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁data', '_', 'in', 'izio', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'data', '_', 'fine', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁', '\n', '▁panel', '5', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '5.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '5,', '▁et', 'iche', 'tta', '5,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '5,', '▁con', '_', 'ag', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '5,', '▁et', 'iche', 'tta', '4,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '5,', '▁nome', '_', 'ag', ',', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n\n', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁un', '▁pann', 'ello', '▁con', '▁due', '▁puls', 'anti', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁1);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁av', 'vio', ',', '▁2,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁1);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁show', 'disp', ',', '▁3,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁1);', '▁', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁list', 'a', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁et', 'iche', 'tta', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'lista', ',', '▁0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.0,', '▁3.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '\n', '▁panel', '4', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '4.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁ann', 'ulla', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁0.', '3,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁10);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '4,', '▁confer', 'ma', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '3,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '5,', '▁0,', '▁2,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁15,', '▁10,', '▁10,', '▁10);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁3,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.0,', '▁0.', '0,', '▁10,', '▁10,', '▁0,', '▁10);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁4,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁2.0,', '▁2.0,', '▁10,', '▁10,', '▁10,', '▁10);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '4,', '▁0,', '▁7,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.0,', '▁1.0,', '▁10,', '▁10,', '▁15,', '▁10);', '\n\t\t\n\t\t', 'if', '▁(', 'call', 'er', '▁==', '▁1)', '\n\t\t', '{', '\t\t\n\t\t\t', 'panel', '5.', 'set', 'visible', '(', 'false', ');', '\n\t\t\t', 'pack', '();', '\n\t\t', '}', '\n\t', '}', '\n\n', '▁//', 'gest', 'ione', '▁degli', '▁event', 'i', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁//', 'as', 'colt', 'atore', '▁del', '▁puls', 'ante', '▁av', 'vio', ',', 'se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁vi', 'ene', '\n', '▁//', 'lanc', 'iata', '▁la', '▁proced', 'ura', '▁di', '▁ricer', 'ca', '▁stan', 'ze', '▁liber', 'e', '\n', '▁av', 'vio', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'ct', 'r', 'lav', 'vio', '();', '\n', '▁}', '▁', '\n', '▁}', ');', '\n\n', '▁//', 'as', 'colt', 'atore', '▁del', '▁puls', 'ante', '▁ann', 'ulla', ',', 'se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁pr', 'um', 'eto', '▁si', '▁torn', 'a', '\n', '▁//', 'alla', '▁maschera', '▁preced', 'ente', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁3)', '\n', '▁', '\t', 'father', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t', 'else', '\n', '▁', '\t', '▁', '\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁//', 'as', 'colt', 'atore', '▁del', '▁puls', 'ante', '▁show', 'disp', ',', 'se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁si', '▁', '\n', '▁//', 'most', 'rera', ""'"", '▁una', '▁maschera', '▁con', '▁le', '▁dis', 'pon', 'ibil', 'ita', '▁dell', ""'"", 'al', 'ber', 'go', '\n', '▁show', 'disp', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'look', 'disp', '();', '▁', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁//', 'as', 'colt', 'atore', '▁del', '▁puls', 'ante', '▁ann', 'ulla', '1,', 'se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁si', '\n', '▁//', 'v', 'eng', 'ono', '▁ri', 'abil', 'it', 'ati', '▁i', '▁component', 'i', '▁del', '▁pann', 'ello', '▁in', '▁alto', '▁e', '\n', '▁//', 'dis', 'abil', 'it', 'ati', '▁qu', 'elli', '▁del', '▁pann', 'ello', '▁in', '▁basso', '\n', '▁ann', 'ulla', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'ann', 'ulla', '1', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n', '▁//', 'as', 'colt', 'atore', '▁del', '▁puls', 'ante', '▁confer', 'ma', ',', '▁se', '▁il', '▁puls', 'ante', '▁vi', 'ene', '▁prem', 'uto', '▁si', '▁ap', 're', '\n', '▁//', 'la', '▁finest', 'ra', '▁rig', 'uard', 'ante', '▁l', ""'"", 'ins', 'er', 'imento', '▁della', '▁pren', 'ot', 'azione', '\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t\t', 'start', 'ins', 'er', 'imento', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\t\n\t\t', 'lista', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'ins', 'er', 'imento', '();', '\n\t\t\t', '}', '\n', '▁}', ');', '\n\t\n\t\t', 'con', '_', 'ag', '.', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\n', '▁', '\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '())', '\n', '▁', '\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'else', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t\t', 'n', 'ome', '_', 'ag', '.', 's', 'ette', 'xt', '("""");', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\t', '}', '\n\n\t', 'boolean', '▁dat', 'ain', 'izio', 'is', 'not', 'be', 'for', 'et', 'oday', '()', '\n\t', '{', '\n\t\t', 'date', '▁in', 'izio', '_', 'p', 'ren', '▁=', '▁date', 'utils', '.', 'convert', 'date', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '());', '\n\t\t', 'date', '▁today', '▁=', '▁new', '▁date', '();', '\n\t\t\n\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'year', '()', '▁<', '▁today', '.', 'get', 'year', '())', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', 'else', '\n\t\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'year', '()', '▁>', '▁today', '.', 'get', 'year', '())', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', 'else', '▁//', '▁l', ""'"", 'anno', '▁e', ""'"", '▁il', '▁medes', 'imo', '\n\t\t\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'month', '()', '▁<', '▁today', '.', 'get', 'month', '())', '\n\t\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'month', '()', '▁>', '▁today', '.', 'get', 'month', '())', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t', 'else', '▁//', '▁l', ""'"", 'anno', '▁e', '▁il', '▁m', 'ese', '▁sono', '▁i', '▁medes', 'imi', '\n\t\t\t\t\t\t', 'if', '▁(', 'in', 'izio', '_', 'p', 'ren', '.', 'get', 'date', '()', '▁<', '▁today', '.', 'get', 'date', '())', '\n\t\t\t\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t', '}', '\n\t\n\t', '/*', '\t', 'se', '▁la', '▁ricer', 'ca', '▁vi', 'ene', '▁lanc', 'iata', '▁per', '▁un', '▁cambio', '▁stanza', '▁(', 'call', 'er', '▁=', '▁3)', '▁si', '▁de', 've', '\n\t', '▁*', '▁', '\t', 'imped', 'ire', '▁che', '▁la', '▁data', '▁di', '▁fine', '▁v', 'enga', '▁post', 'icip', 'ata', '▁ris', 'petto', '▁la', '▁fine', '▁del', '▁sog', 'gi', 'orno', '\n\t', '▁*', '\t', 'o', '▁anticip', 'ata', '▁ris', 'petto', '▁la', '▁data', '▁del', '▁cambio', '▁stanza', '.', '\n\t', '▁*/', '\t\n\t', 'void', '▁ctr', 'lav', 'vio', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\n\t\t', 'if', '▁(', 'utils', '.', 'date', 'eper', 'iod', 'ocor', 'retti', '(', 'this', ',', '▁data', '_', 'in', 'izio', '.', 'get', 'text', '(),', '▁data', '_', 'fine', '.', 'get', 'text', '()))', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '()', '▁&&', '▁nome', '_', 'ag', '.', 'get', 'text', '().', 'equals', '(""', '""))', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁il', '▁nome', '▁dell', ""'"", 'agen', 'zia', '!', '▁""', ');', '\n\t\t\t\t', 'return', ';', '\n\t\t\t', '}', '\n\t\t\t\n\t\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁l', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t\t', 'if', '▁(', 'l', '_', 'disp', '▁==', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t\t', 'return', ';', '\n\t\t\t', '}', '\n\t\t\t', 'if', '▁(', 'call', 'er', '▁==', '▁3)', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'if', '▁(', 'utils', '.', 'data', '1', 'mag', 'gior', 'ed', 'ata', '2(', 'date', 'utils', '.', 'convert', 'date', '(', 'data', '_', 'fine', '.', 'get', 'text', '()),', '▁save', '_', 'date', ')', '▁)', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ione', ':', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁post', 'icip', 'ata', '"");', '\n\t\t\t\t\t', 'data', '_', 'fine', '.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'save', '_', 'date', '))', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'if', '▁(', 'utils', '.', 'data', '1', 'min', 'ored', 'ata', '2(', 'date', 'utils', '.', 'convert', 'date', '(', 'data', '_', 'fine', '.', 'get', 'text', '()),', '▁date', 'utils', '.', 'convert', 'date', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '())', '▁)', '▁)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'att', 'enz', 'ione', ':', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁preced', 'ente', '▁alla', '▁data', '▁di', '▁in', 'izio', '"");', '\n\t\t\t\t\t\t', 'data', '_', 'fine', '.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'save', '_', 'date', '))', ');', '\t\t\t\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'ze', '_', 'disp', '▁=', '▁new', '▁list', 'ast', 'anze', '();', '\n\t\t\t\t\t\t', 'start', 'av', 'vio', '(', 'l', '_', 'disp', ',', '▁', '0);', '\n\t\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'dat', 'ain', 'izio', 'is', 'not', 'be', 'for', 'et', 'oday', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'stan', 'ze', '_', 'disp', '▁=', '▁new', '▁list', 'ast', 'anze', '();', '\n\t\t\t\t\t', 'start', 'av', 'vio', '(', 'l', '_', 'disp', ',', '▁', '0);', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁in', 'izio', '▁de', 've', '▁ess', 'ere', '▁maggiore', '▁o', '▁ug', 'ual', 'e', '▁di', '▁qu', 'ella', '▁od', 'ierna', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'ann', 'ulla', '1', '()', '\n\t', '{', '\n\t\t', 'data', '_', 'in', 'izio', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'data', '_', 'fine', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'con', '_', 'ag', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t', 'if', '▁(', '▁con', '_', 'ag', '.', 'get', 'state', '()', '▁)', '\n\t\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'ann', 'ulla', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t', 'av', 'vio', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t', 'ann', 'ulla', '1.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t', 'lista', '.', 'remove', 'all', '();', '\n\t\t', 'stan', 'ze', '_', 'disp', '▁=', '▁new', '▁list', 'ast', 'anze', '();', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'av', 'vio', '(', 'list', 'adis', 'pon', 'ibil', 'ita', '▁l', '_', 'disp', ',', '▁int', '▁k', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '())', '\n\t\t\t', 'starts', 'earch', 'comm', '(', 'l', '_', 'disp', ',', '▁k', ');', '\n\t\t\n\t\t', '//', '▁le', '▁date', '▁sono', '▁cor', 'rette', '▁se', '▁si', '▁arriva', '▁qui', '▁in', '▁quant', 'o', '▁controll', 'ate', '▁in', '▁ctr', 'lav', 'vio', '()', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'string', '▁str', '▁=', '▁new', '▁string', '("""");', '\n\t\t', 'list', 'acom', 'mission', 'amenti', '▁l', '_', 'comm', '▁=', '▁new', '▁list', 'acom', 'mission', 'amenti', '();', '\n\t\t', 'list', 'ast', 'anze', '▁elenco', '_', 'stan', 'ze', '_', 'disp', '▁=', '▁new', '▁list', 'ast', 'anze', '();', '\n\n\t\t', '//', '▁vari', 'ab', 'ili', '▁necess', 'arie', '▁per', '▁passaggio', '▁dei', '▁paramet', 'ri', '▁della', '▁ins', 'er', 'isc', 'i', '\n\t\t', 'data', '1', '▁=', '▁date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '());', '\n\t\t', 'data', '2', '▁=', '▁date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'data', '_', 'fine', '.', 'get', 'text', '());', '\n\n\t\t', '//', '▁scans', 'ione', '▁delle', '▁dis', 'pon', 'ibil', 'ita', '\n\t\t', 'stan', 'za', '▁stanza', '▁=', '▁null', ';', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '_', 'att', 'ual', 'e', '▁=', '▁null', ';', '\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁l', '_', 'disp', '.', 'length', '();', '▁i', '++)', '\n\t\t', '{', '\n\t\t\t', 'disp', '_', 'att', 'ual', 'e', '▁=', '▁l', '_', 'disp', '.', 'get', 'dis', 'pon', 'ibil', 'ita', '(', 'i', ');', '\n\t\t\t', 'if', '▁(', '▁disp', '_', 'att', 'ual', 'e', '.', 'is', 'dis', 'pon', 'ib', 'ile', '(', '▁date', 'utils', '.', 'convert', 'date', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '()),', '▁date', 'utils', '.', 'convert', 'date', '(', 'data', '_', 'fine', '.', 'get', 'text', '()),', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ')', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'stan', 'za', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'disp', '_', 'att', 'ual', 'e', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!=', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'elen', 'co', '_', 'stan', 'ze', '_', 'disp', '.', 'add', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t', 'stan', 'ze', '_', 'disp', '.', 'add', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t\n\t\t', 'if', '▁(!', 'stan', 'ze', '_', 'disp', '.', 'isempty', '())', '\n\t\t', '{', '\n\t\t\t', 'av', 'vio', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t', 'ann', 'ulla', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t', 'data', '_', 'in', 'izio', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'data', '_', 'fine', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'ann', 'ulla', '1.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', 'con', '_', 'ag', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t', 'n', 'ome', '_', 'ag', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁elenco', '_', 'stan', 'ze', '_', 'disp', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t', 'lista', '.', 'add', 'item', '(', 'str', '+', '(', 'elen', 'co', '_', 'stan', 'ze', '_', 'disp', '.', 'get', 'stan', 'za', '(', 'i', ')).', 'tostring', '());', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'if', '▁(', 'k', '▁==', '▁0)', '\n\t\t\t\t', 'if', '▁(!', 'con', '_', 'ag', '.', 'get', 'state', '())', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁ness', 'una', '▁stanza', '▁dis', 'pon', 'ib', 'ile', '▁in', '▁tale', '▁period', 'o', '!', '▁""', ');', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁ness', 'una', '▁stanza', '▁dis', 'pon', 'ib', 'ile', '▁o', '▁comm', 'ision', 'ata', '▁in', '▁tale', '▁period', 'o', '!', '▁""', ');', '\t\n\t', '}', '\n\t\n\t', 'void', '▁starts', 'earch', 'comm', '(', 'list', 'adis', 'pon', 'ibil', 'ita', '▁l', '_', 'disp', ',', '▁int', '▁k', ')', '\n\t', '{', '\n\t\t', '//', '▁le', '▁date', '▁sono', '▁cor', 'rette', '▁se', '▁si', '▁arriva', '▁qui', '▁in', '▁quant', 'o', '▁controll', 'ate', '▁in', '▁ctr', 'lav', 'vio', '()', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'commission', 'amento', '▁c', ';', '\n\t\t', 'stan', 'za', '▁stanza', '▁=', '▁null', ';', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '_', 'loc', '▁=', '▁null', ';', '\n\t\t', 'list', 'acom', 'mission', 'amenti', '▁l', '_', 'comm', '▁=', '▁new', '▁list', 'acom', 'mission', 'amenti', '();', ';', '\n\t\t', 'list', 'ast', 'anze', '▁elenco', '_', 'stan', 'ze', '_', 'disp', '▁=', '▁new', '▁list', 'ast', 'anze', '();', '\n\t\t', 'date', '▁d', '1', '▁=', '▁date', 'utils', '.', 'convert', 'date', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '());', '\n', '▁', '\t\t', 'date', '▁d', '2', '▁=', '▁date', 'utils', '.', 'convert', 'date', '(', 'data', '_', 'fine', '.', 'get', 'text', '());', '\n\t\t\n\t\t', 'data', '1', '▁=', '▁date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'data', '_', 'in', 'izio', '.', 'get', 'text', '());', '\n\t\t', 'data', '2', '▁=', '▁date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'data', '_', 'fine', '.', 'get', 'text', '());', '\n\t\t', 'l', '_', 'comm', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'commission', 'ament', 'is', 'enz', 'alike', '(', 'n', 'ome', '_', 'ag', '.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '_', 'comm', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁commission', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', 'l', '_', 'comm', '.', 'isempty', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'n', 'omi', '_', 'agen', 'zie', '▁=', '▁new', '▁string', '[', 'l', '_', 'comm', '.', 'length', '()', '];', '\n\t\t\t', 'int', '▁ind', 'ice', '_', 'n', 'omi', '▁=', '▁0;', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁l', '_', 'comm', '.', 'length', '();', '▁i', '++)', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', '▁=', '▁l', '_', 'comm', '.', 'get', 'commission', 'amento', '(', 'i', ');', '\n\t\t\t\t', '//', '▁controll', 'o', '▁che', '▁le', '▁date', '▁ins', 'erite', '▁app', 'arten', 'gano', '▁al', '▁period', 'o', '▁commission', 'ato', '\n\t\t\t\t', 'if', '(', '▁(!', 'utils', '.', 'data', '1', 'mag', 'gior', 'ed', 'ata', '2(', 'c', '.', 'get', 'in', 'izi', 'oc', 'omm', '(),', '▁d', '1))', '▁&&', '▁(!', '(', 'c', '.', 'get', 'fin', 'ec', 'omm', '()', ').', 'before', '(', 'd', '2)', '))', '▁', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'disp', '_', 'loc', '▁=', '▁ut', 'ils', '.', 'get', 'disp', 'of', 'room', '(', 'l', '_', 'disp', ',', '▁c', '.', 'get', 'num', 'stan', 'za', '(),', '▁false', ');', '\n\t\t\t\t\t', 'if', '▁(', 'disp', '_', 'loc', '.', 'is', 'dis', 'pon', 'ib', 'ile', '(', 'd', '1,', '▁d', '2,', '▁flag', '.', 'commission', 'ata', '))', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'za', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'disp', '_', 'loc', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!=', '▁null', ')', '\n\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t', 'elen', 'co', '_', 'stan', 'ze', '_', 'disp', '.', 'add', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t\t\t', 'stan', 'ze', '_', 'disp', '.', 'add', 'stan', 'za', '(', 'stan', 'za', ');', '\n\t\t\t\t\t\t\t', 'n', 'omi', '_', 'agen', 'zie', '[', 'ind', 'ice', '_', 'n', 'omi', ']', '▁=', '▁new', '▁string', '(', 'c', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t\t\t\t\t\t', 'ind', 'ice', '_', 'n', 'omi', '++;', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t\t\t', 'return', ';', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\t\n\t\t', 'if', '▁(!', 'stan', 'ze', '_', 'disp', '.', 'isempty', '())', '\n\t\t', '{', '\n\t\t\t', 'av', 'vio', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t', 'ann', 'ulla', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t', 'data', '_', 'in', 'izio', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'data', '_', 'fine', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'ann', 'ulla', '1.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁elenco', '_', 'stan', 'ze', '_', 'disp', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t', 'lista', '.', 'add', 'item', '(""', 'commission', 'ata', '▁a', '▁""+', 'n', 'omi', '_', 'agen', 'zie', '[', 'i', '-1]', '+""', '▁""+', '(', 'elen', 'co', '_', 'stan', 'ze', '_', 'disp', '.', 'get', 'stan', 'za', '(', 'i', ')).', 'tostring', '());', '\n\t\t', '}', '\n\t', '}', '▁//', '▁starts', 'earch', 'comm', '\n\t\n\t', 'void', '▁restart', 'av', 'vio', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁l', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁(', 'l', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'start', 'ann', 'ulla', '1', '();', '\n\t\t', 'start', 'av', 'vio', '(', 'l', '_', 'disp', ',', '▁1);', '\n\t', '}', '\n\t\n', '▁void', '▁start', 'ins', 'er', 'imento', '()', '\n', '▁{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'if', '▁(', 'lista', '.', 'get', 'selected', 'index', '()', '▁!=', '▁-', '1)', '\n\t\t\t', 'switch', '▁(', 'call', 'er', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'case', '▁1:', '▁visual', 'insert', 'comm', '();', '▁break', ';', '\n\t\t\t\t', 'case', '▁2:', '▁visual', 'insert', 'p', 'ren', '();', '▁break', ';', '\n\t\t\t\t', 'case', '▁3:', '▁return', 'fre', 'eroom', '();', '▁break', ';', '\n\t\t\t', '}', '\t\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁man', 'ca', '▁la', '▁se', 'lez', 'ione', '!', '▁""', ');', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁look', 'disp', '()', '\n', '▁{', '\n', '▁', '\t', '▁', '\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'adis', 'pon', 'ibil', 'ita', '(', 'this', ',', '▁nome', '_', 'ag', '.', 'get', 'text', '());', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁visual', 'insert', 'p', 'ren', '()', '\n\t', '{', '\n', '▁this', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁stanza', '▁stanza', '▁=', '▁stan', 'ze', '_', 'disp', '.', 'get', 'stan', 'za', '(', 'lista', '.', 'get', 'selected', 'index', '()', '+', '1);', '\n\t\t', 'if', '▁(', 'con', '_', 'ag', '.', 'get', 'state', '())', '\n\t', '▁pren', '▁=', '▁new', '▁ins', 'er', 'iscip', 'ren', 'ot', 'azione', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2,', '▁nome', '_', 'ag', '.', 'get', 'text', '());', '\n\t\t', 'else', '▁', '\n\t', '▁pren', '▁=', '▁new', '▁ins', 'er', 'iscip', 'ren', 'ot', 'azione', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2,', '▁""', '"");', '\n', '▁pren', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁pren', '.', 'mask', '_', 'ric', 'er', 'ca', '▁=', '▁this', ';', '\n', '▁}', '▁', '\n\n', '▁void', '▁visual', 'insert', 'comm', '()', '\n\t', '{', '\n', '▁this', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁stanza', '▁stanza', '▁=', '▁stan', 'ze', '_', 'disp', '.', 'get', 'stan', 'za', '(', 'lista', '.', 'get', 'selected', 'index', '()', '+', '1);', '\n', '▁comm', '▁=', '▁new', '▁ins', 'er', 'isc', 'icom', 'mission', 'i', '(', 'stan', 'za', ',', '▁data', '1,', '▁data', '2);', '\n', '▁comm', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁comm', '.', 'mask', '_', 'ric', 'er', 'ca', '▁=', '▁this', ';', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁return', 'fre', 'eroom', '()', '\n\t', '{', '\n', '▁stanza', '▁stanza', '▁=', '▁stan', 'ze', '_', 'disp', '.', 'get', 'stan', 'za', '(', 'lista', '.', 'get', 'selected', 'index', '()', '+', '1);', '\n', '▁father', '.', 'stan', 'za', '2.', 's', 'ette', 'xt', '(', 'stan', 'za', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁father', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁father', '.', 'stan', 'za', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁father', '.', 'ric', 'er', 'ca', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'father', '.', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t', 'dis', 'pose', '();', '\n', '▁}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class maschera ricerca stanza extend frame dichiaro gli oggetti che serviranno per costruir finestra panel panel panel panel panel panel label etichetta etichetta etichetta etichetta etichetta etichetta button avvio annulla show disp annulla conferma text field data inizio data fine nome list lista checkbox con grid bag layout gridbag new grid bag layout inserisci prenotazion pren inserisci commissioni comm frame figlio frame padr new frame maschera cambio father int caller lista stanz stanz disp date save date string nomi agenzi new string seguono due variabili necessari per passaggio dei parametri della inserisci string data string data public maschera ricerca stanza string titl int super titl caller setup panel init pack void setup panel set font configurazion sistema font base creo text field data inizio new text field data fine new text field nome new text field nome set edit fals creo pulsanti disabilito due annulla new button indietro annulla new button annulla conferma new button sceg avvio new button avvio ricerca show disp new button disponibilita annulla set enabl fals conferma set enabl fals creo etichett etichetta new label periodo soggiorno etichetta set font configurazion sistema font titolo etichetta new label data inizio etichetta new label data fine etichetta new label risultato della ricerca etichetta set font configurazion sistema font titolo etichetta new label nome agenzia etichetta new label prenotazion stanz commission :""); etichetta5 set font configurazion sistema font_titolo creo lista lista new list fals creo checkbox con_ag new checkbox prenotazion tramit agenzia fals creo pannello alto panel1 new panel (); panel1 set layout gridbag util constrain panel1 etichetta grid bag constraint none grid bag constraint northwest util constrain panel1 etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel1 data_inizio grid bag constraint none grid bag constraint northwest util constrain panel1 etichetta2 grid bag constraint none grid bag constraint northwest util constrain panel1 data_fin grid bag constraint none grid bag constraint northwest panel5 new panel (); panel5 set layout gridbag util constrain panel5 etichetta5 grid bag constraint none grid bag constraint northwest util constrain panel5 con_ag grid bag constraint none grid bag constraint northwest util constrain panel5 etichetta4 grid bag constraint none grid bag constraint northwest util constrain panel5 nome_ag grid bag constraint none grid bag constraint northwest creo pannello con due pulsanti panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint northwest util constrain panel2 avvio grid bag constraint none grid bag constraint northwest util constrain panel2 show disp grid bag constraint none grid bag constraint northwest creo pannello contenent lista panel3 new panel (); panel3 set layout gridbag util constrain panel3 etichetta3 grid bag constraint none grid bag constraint west util constrain panel3 lista grid bag constraint grid bag constraint center creo pannello basso con due pulsanti panel4 new panel (); panel4 set layout gridbag util constrain panel4 annulla1 grid bag constraint none grid bag constraint southeast util constrain panel4 conferma grid bag constraint none grid bag constraint southwest attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint northwest util constrain panel5 grid bag constraint horizont grid bag constraint northwest util constrain panel2 grid bag constraint horizont grid bag constraint northeast util constrain panel3 grid bag constraint grid bag constraint center util constrain panel4 grid bag constraint horizont grid bag constraint southwest caller panel5 set visibl fals pack (); gestion deg eventi public void init ascoltator del pulsant avvio pulsant vien premuto vien lanciata procedura ricerca stanz liber avvio add action listen new action listen public void action perform action event ctrl avvio (); }); ascoltator del pulsant annulla pulsant vien prumeto torna alla maschera precedent annulla add action listen new action listen public void action perform action event dispos (); caller father set enabl true els padr set enabl true }); ascoltator del pulsant show disp pulsant vien premuto mostrera una maschera con disponibilita dell albergo show disp add action listen new action listen public void action perform action event look disp (); }); ascoltator del pulsant annulla1 pulsant vien premuto vengono riabilitati componenti del pannello alto disabilitati quelli del pannello basso annulla1 add action listen new action listen public void action perform action event start annulla1 (); }); ascoltator del pulsant conferma pulsant vien premuto apr finestra riguardant inserimento della prenotazion conferma add action listen new action listen public void action perform action event start inserimento (); }); lista add action listen new action listen public void action perform action event start inserimento (); }); con_ag add item listen new item listen public void item state chang item event con_ag get state ()) nome_ag set edit true els nome_ag set edit fals nome_ag set text (""""); }); boolean data inizio today date inizio_pren date util convert date data_inizio get text ()); date today new date (); inizio_pren get year today get year ()) return fals els inizio_pren get year today get year ()) return true els anno medesimo inizio_pren get month today get month ()) return fals els inizio_pren get month today get month ()) return true els anno mese sono medesimi inizio_pren get date today get date ()) return fals els return true ricerca vien lanciata per cambio stanza caller deve impedir che data fine venga posticipata rispetto fine del soggiorno anticipata rispetto data del cambio stanza void ctrl avvio frame msg util date eperiodo corretti data_inizio get text (), data_fin get text ())) con_ag get state nome_ag get text (). equal ("""")) msg new messag dialog manca nome dell agenzia ""); return lista disponibilita l_disp principal elenco disponibilita (); l_disp null msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return caller util data1maggior data2 date util convert date data_fin get text ()), save_d msg new avviso dialog attenzion data non puo esser posticipata ""); data_fin set text date util pars date date util give string date save_d ))); els util data1minor data2 date util convert date data_fin get text ()), date util convert date data_inizio get text ()) msg new avviso dialog attenzion data non puo esser precedent alla data inizio ""); data_fin set text date util pars date date util give string date save_d ))); els stanze_disp new lista stanz (); start avvio l_disp els data inizio today ()) stanze_disp new lista stanz (); start avvio l_disp els msg new messag dialog data inizio deve esser maggior ugual quella odierna ""); void start annulla1 data_inizio set edit true data_fin set edit true con_ag set enabl true con_ag get state nome_ag set edit true annulla set enabl true avvio set enabl true annulla1 set enabl fals conferma set enabl fals lista get item count lista remov (); stanze_disp new lista stanz (); void start avvio lista disponibilita l_disp int con_ag get state ()) start search comm l_disp date sono corrett arriva qui quanto control ctrl avvio frame msg string str new string (""""); lista commissionamenti l_comm new lista commissionamenti (); lista stanz elenco_stanze_disp new lista stanz (); variabili necessari per passaggio dei parametri della inserisci data1 date util pars date data_inizio get text ()); data2 date util pars date data_fin get text ()); scansion dell disponibilita stanza stanza null disponibilita disp_attual null int l_disp length (); ++) disp_attual l_disp get disponibilita disp_attual disponibil date util convert date data_inizio get text ()), date util convert date data_fin get text ()), flag disponibil stanza principal read stanza disp_attual get num stanza ()); stanza null elenco_stanze_disp add stanza stanza stanze_disp add stanza stanza els msg new messag dialog problemi con databas ""); stanze_disp empti ()) avvio set enabl fals annulla set enabl fals data_inizio set edit fals data_fin set edit fals annulla1 set enabl true conferma set enabl true con_ag set enabl fals nome_ag set edit fals int elenco_stanze_disp length (); ++) lista add item str elenco_stanze_disp get stanza )). string ()); els con_ag get state ()) msg new avviso dialog nessuna stanza disponibil tale periodo ""); els msg new avviso dialog nessuna stanza disponibil commisionata tale periodo ""); void start search comm lista disponibilita l_disp int date sono corrett arriva qui quanto control ctrl avvio frame msg commissionamento stanza stanza null disponibilita disp_loc null lista commissionamenti l_comm new lista commissionamenti ();; lista stanz elenco_stanze_disp new lista stanz (); date date util convert date data_inizio get text ()); date date util convert date data_fin get text ()); data1 date util pars date data_inizio get text ()); data2 date util pars date data_fin get text ()); l_comm principal found commissionamenti senza like nome_ag get text ()); l_comm null msg new messag dialog problemi con databas nella lettura dell commissioni ""); return l_comm empti nomi_agenzi new string l_comm length ()]; int indice_nomi int l_comm length (); ++) l_comm get commissionamento controllo che date inserit appartengano periodo commissionato util data1maggior data2 get inizio comm (), (!( get fine comm ()). ))) disp_loc util get disp room l_disp get num stanza (), fals disp_loc disponibil flag commissionata stanza principal read stanza disp_loc get num stanza ()); stanza null elenco_stanze_disp add stanza stanza stanze_disp add stanza stanza nomi_agenzi indice_nomi new string get nome agenzia ()); indice_nomi ++; els msg new messag dialog problemi con databas ""); return stanze_disp empti ()) avvio set enabl fals annulla set enabl fals data_inizio set edit fals data_fin set edit fals annulla1 set enabl true conferma set enabl true int elenco_stanze_disp length (); ++) lista add item commissionata nomi_agenzi ]+"" ""+( elenco_stanze_disp get stanza )). string ()); start search comm void restart avvio frame msg lista disponibilita l_disp principal elenco disponibilita (); l_disp null msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return start annulla1 (); start avvio l_disp void start inserimento frame msg lista get select index switch caller case visual insert comm (); break case visual insert pren (); break case return free room (); break els msg new messag dialog manca selezion ""); void look disp figlio new maschera disponibilita nome_ag get text ()); void visual insert pren set enabl fals stanza stanza stanze_disp get stanza lista get select index ()+ con_ag get state ()) pren new inserisci prenotazion stanza data1 data2 nome_ag get text ()); els pren new inserisci prenotazion stanza data1 data2 """"); pren set visibl true pren mask_ricerca void visual insert comm set enabl fals stanza stanza stanze_disp get stanza lista get select index ()+ comm new inserisci commissioni stanza data1 data2 comm set visibl true comm mask_ricerca void return free room stanza stanza stanze_disp get stanza lista get select index ()+ father stanza2 set text stanza get num stanza ()); father set enabl true father stanza1 set edit fals father ricerca set enabl fals father conferma set enabl true dispos ();"
51~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/ModificaBeniServizi.java~ModificaBeniServizi.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import moduli.BeneServizio;
import moduli.DataBase;
import moduli.ListaBeniServizi;

public class ModificaBeniServizi extends MascheraBeneServizio
{
	BeneServizio extra = null;
	Label elenco_extra1, elenco_extra2;
	Button annulla3;
		
	public ModificaBeniServizi()
	{
		super(""Modifica dei dati di un bene o servizio"");
		setupPannello();
		initialize();
	}
	
	void setupPannello()
	{
		panel[11].setLayout(gridbag);
		elenco_extra1 = new Label(""Scegliere il bene o servizio, appartenente"");
		elenco_extra2 = new Label(""alla categoria selezionata, da modificare"");
		elenco = new List(3, false);		
		annulla3 = new Button("" Fine "");
		Utils.constrain(panel[11], elenco_extra1, 0, 0, 5, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 0, 0, 0);
		Utils.constrain(panel[11], elenco_extra2, 0, 1, 5, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 0, 5, 0);
		Utils.constrain(panel[11], elenco, 0, 2, 5, 1,GridBagConstraints.HORIZONTAL,
				GridBagConstraints.CENTER, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], annulla3, 2, 3, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);
	}

	public void initialize()
	{
		scelta_piatto[4].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[4].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.DESSERT);
					p();
				}
			}
		});

		scelta_piatto[5].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[5].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.FRUTTA);
					p();
				}
			}
		});

		scelta_servizio[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_servizio[0].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.RICREATIVI);
					o();
				}
			}
		});

		scelta_servizio[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_servizio[1].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.ALTRO);
					o();
				}
			}
		});

		scelta_bevanda[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CAFFETTERIA);
					o();
				}
			}
		});

		scelta_bevanda[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.ANALCOLICI);
					o();
				}
			}
		});

		scelta_bevanda[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[2].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.ALCOLICI);
					o();
				}
			}
		});

		scelta_cibo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_cibo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.DOLCI);
					o();
				}
			}
		});

		scelta_cibo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_cibo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.SALATI);
					o();
				}
			}
		});

		scelta_antipasto[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_antipasto[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.FREDDI);
					o();
				}
			}
		});

		scelta_antipasto[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_antipasto[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CALDI);
					o();
				}
			}
		});

		scelta_primo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_primo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.SOLIDI);
					o();
				}
			}
		});

		scelta_primo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_primo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.LIQUIDI);
					o();
				}
			}
		});

		scelta_secondo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_secondo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CARNE);
					o();
				}
			}
		});

		scelta_secondo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_secondo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.PESCE);
					o();
				}
			}
		});

		scelta_contorno[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.VERDURA_COTTA);
					o();
				}
			}
		});

		scelta_contorno[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.VERDURA_CRUDA);
					o();
				}
			}
		});

		scelta_contorno[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[2].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.FORMAGGIO);
					o();
				}
			}
		});

		conferma.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startConferma();
			}
		});

		annulla3.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				padre.setEnabled(true);				
			}
		});

		elenco.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				beneSelezionato();
			}
		});
	} // init

	void startConferma()
	{
		int id;
		MessageDialog msg;
		
		if (!errore())
		{
			Float px = Float.valueOf(testo4.getText());
			int j;
			if ((j = (Principale.db).changeBeneServizio(extra.getCodExtra(),
							testo3.getText(), px.floatValue())) == DataBase.OK)
			{
				for(int i=1;i<13;++i)
					if(panel[i].isVisible())
						remove(panel[i]);
				panel[0].setVisible(true);
			}
			else
				msg = new MessageDialog(this, ""Problemi con il data base: ""+DataBase.strErrore(j));
		}
	}
	
	void beneSelezionato()
	{
		extra = L.getBeneServizio((elenco.getSelectedIndexes())[0]+1);
		remove(panel[11]);
		this.add(panel[10]);
		testo3.setText(extra.getDescrizione());
		testo4.setText(extra.getPxUnitario()+"""");
		panel[10].setVisible(true);
		setVisible(true);
	}
}"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'b', 'en', 'es', 'erv', 'iz', 'io', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'd', 'at', 'ab', 'ase', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', ';', '\n\n', 'publ', 'ic', '▁class', '▁mod', 'ific', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁ext', 'ends', '▁m', 'asc', 'her', 'ab', 'en', 'es', 'erv', 'iz', 'io', '\n', '{', '\n\t', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁extra', '▁=', '▁n', 'ull', ';', '\n\t', 'l', 'ab', 'el', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁el', 'en', 'co', '_', 'ext', 'ra', '2', ';', '\n\t', 'but', 'ton', '▁ann', 'ull', 'a', '3', ';', '\n\t\t\n\t', 'publ', 'ic', '▁mod', 'ific', 'ab', 'en', 'is', 'erv', 'iz', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', '""', 'mod', 'ific', 'a', '▁de', 'i', '▁d', 'ati', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'iz', 'io', '"")', ';', '\n\t\t', 'set', 'up', 'p', 'ann', 'ello', '(', ');', '\n\t\t', 'in', 'it', 'ial', 'ize', '(', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁set', 'up', 'p', 'ann', 'ello', '(', ')', '\n\t', '{', '\n\t\t', 'pan', 'el', '[', '11', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '1', '▁=', '▁new', '▁label', '(', '""', 's', 'ce', 'g', 'li', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'iz', 'io', ',', '▁app', 'art', 'en', 'ent', 'e', '"")', ';', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '2', '▁=', '▁new', '▁label', '(', '""', 'all', 'a', '▁categ', 'oria', '▁se', 'le', 'z', 'ion', 'ata', ',', '▁da', '▁mod', 'ific', 'are', '"")', ';', '\n\t\t', 'el', 'en', 'co', '▁=', '▁new', '▁list', '(', '3,', '▁fal', 'se', ');', '\t\t\n\t\t', 'ann', 'ull', 'a', '3', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁', '0,', '▁', '0,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁', '0,', '▁1,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', ',', '▁', '0,', '▁2,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁ann', 'ull', 'a', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁initial', 'ize', '(', ')', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'd', 'ess', 'ert', ');', '\n\t\t\t\t\t', 'p', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'fr', 'ut', 'ta', ');', '\n\t\t\t\t\t', 'p', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ric', 'reat', 'iv', 'i', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'al', 't', 'ro', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'aff', 'et', 'ter', 'ia', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'an', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'd', 'ol', 'ci', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'f', 'red', 'di', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'ald', 'i', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 's', 'ol', 'idi', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'car', 'ne', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'p', 'es', 'ce', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ver', 'd', 'ura', '_', 'c', 'ott', 'a', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'form', 'ag', 'gio', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'con', 'fer', 'ma', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '3.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\t\t\t\t\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'el', 'en', 'co', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'b', 'en', 'ese', 'le', 'z', 'ion', 'ato', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '(', ')', '\n\t', '{', '\n\t\t', 'int', '▁id', ';', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '!', 'er', 'r', 'ore', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'fl', 'o', 'at', '▁p', 'x', '▁=', '▁flo', 'at', '.', 'value', 'of', '(', 't', 'est', 'o', '4.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'change', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'ext', 'ra', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', '),', '\n\t\t\t\t\t\t\t', 't', 'est', 'o', '3.', 'get', 'text', '(', '),', '▁p', 'x', '.', 'fl', 'o', 'at', 'value', '(', ')', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '13', ';', '+', '+', 'i', ')', '\n\t\t\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', ']', '.', 'is', 'vis', 'ible', '(', ')', ')', '\n\t\t\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t\t\t', 'pan', 'el', '[', '0', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ben', 'ese', 'le', 'z', 'ion', 'ato', '(', ')', '\n\t', '{', '\n\t\t', 'ext', 'ra', '▁=', '▁l', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '(', 'el', 'en', 'co', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '10', ']', ');', '\n\t\t', 't', 'est', 'o', '3.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '4.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'p', 'x', 'un', 'itar', 'io', '(', ')', '+', '""', '"")', ';', '\n\t\t', 'pan', 'el', '[', '10', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'dat', 'abase', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', ';', '\n\n', 'public', '▁class', '▁mod', 'ific', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁extends', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '\n', '{', '\n\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁null', ';', '\n\t', 'l', 'abel', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁el', 'en', 'co', '_', 'ext', 'ra', '2', ';', '\n\t', 'but', 'ton', '▁ann', 'ulla', '3', ';', '\n\t\t\n\t', 'public', '▁mod', 'ific', 'ab', 'en', 'is', 'erv', 'iz', 'i', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'mod', 'ific', 'a', '▁dei', '▁d', 'ati', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'izio', '"");', '\n\t\t', 'set', 'up', 'p', 'ann', 'ello', '();', '\n\t\t', 'init', 'ial', 'ize', '();', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁setup', 'p', 'ann', 'ello', '()', '\n\t', '{', '\n\t\t', 'pan', 'el', '[', '11', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '1', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'g', 'li', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'izio', ',', '▁app', 'arten', 'ente', '"");', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '2', '▁=', '▁new', '▁label', '(""', 'alla', '▁categ', 'oria', '▁se', 'lez', 'ion', 'ata', ',', '▁da', '▁mod', 'ific', 'are', '"");', '\n\t\t', 'el', 'en', 'co', '▁=', '▁new', '▁list', '(', '3,', '▁false', ');', '\t\t\n\t\t', 'ann', 'ulla', '3', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁', '0,', '▁', '0,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁', '0,', '▁1,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', ',', '▁', '0,', '▁2,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁ann', 'ulla', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁initial', 'ize', '()', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'd', 'ess', 'ert', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'fr', 'utta', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ric', 'reat', 'iv', 'i', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'alt', 'ro', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'aff', 'etter', 'ia', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'an', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'd', 'ol', 'ci', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'fred', 'di', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'aldi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'sol', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'car', 'ne', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'pes', 'ce', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cott', 'a', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'form', 'aggio', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '3.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\t\t\t\t\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'el', 'en', 'co', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ben', 'ese', 'lez', 'ion', 'ato', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'v', 'oid', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t', 'int', '▁id', ';', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '!', 'er', 'r', 'ore', '())', '\n\t\t', '{', '\n\t\t\t', 'flo', 'at', '▁p', 'x', '▁=', '▁float', '.', 'value', 'of', '(', 'test', 'o', '4.', 'get', 'text', '());', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'change', 'ben', 'es', 'erv', 'izio', '(', 'ext', 'ra', '.', 'get', 'code', 'xt', 'ra', '(', '),', '\n\t\t\t\t\t\t\t', 'test', 'o', '3.', 'get', 'text', '(', '),', '▁p', 'x', '.', 'flo', 'at', 'value', '()', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t\t\t\t', 'if', '(', 'pan', 'el', '[', 'i', '].', 'is', 'vis', 'ible', '())', '\n\t\t\t\t\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', 'i', ']', ');', '\n\t\t\t\t', 'pan', 'el', '[', '0', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ben', 'ese', 'lez', 'ion', 'ato', '()', '\n\t', '{', '\n\t\t', 'ext', 'ra', '▁=', '▁l', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', '(', 'el', 'en', 'co', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '10', ']', ');', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'desc', 'riz', 'ione', '());', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'px', 'un', 'itar', 'io', '()', '+', '""', '"");', '\n\t\t', 'pan', 'el', '[', '10', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'import', '▁mod', 'uli', '.', 'database', ';', '\n', 'import', '▁mod', 'uli', '.', 'list', 'ab', 'enis', 'erv', 'izi', ';', '\n\n', 'public', '▁class', '▁mod', 'ific', 'ab', 'enis', 'erv', 'izi', '▁extends', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '\n', '{', '\n\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁null', ';', '\n\t', 'label', '▁elenco', '_', 'extra', '1,', '▁elenco', '_', 'extra', '2;', '\n\t', 'button', '▁ann', 'ulla', '3;', '\n\t\t\n\t', 'public', '▁mod', 'ific', 'ab', 'enis', 'erv', 'izi', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'mod', 'ific', 'a', '▁dei', '▁d', 'ati', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'izio', '"");', '\n\t\t', 'set', 'upp', 'ann', 'ello', '();', '\n\t\t', 'initial', 'ize', '();', '\n\t', '}', '\n\t\n\t', 'void', '▁setup', 'p', 'ann', 'ello', '()', '\n\t', '{', '\n\t\t', 'panel', '[', '11', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'elen', 'co', '_', 'extra', '1', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'gli', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'izio', ',', '▁app', 'arten', 'ente', '"");', '\n\t\t', 'elen', 'co', '_', 'extra', '2', '▁=', '▁new', '▁label', '(""', 'alla', '▁categ', 'oria', '▁se', 'lez', 'ion', 'ata', ',', '▁da', '▁mod', 'ific', 'are', '"");', '\n\t\t', 'elen', 'co', '▁=', '▁new', '▁list', '(3,', '▁false', ');', '\t\t\n\t\t', 'ann', 'ulla', '3', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', '_', 'extra', '1,', '▁0,', '▁0,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', '_', 'extra', '2,', '▁0,', '▁1,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', ',', '▁0,', '▁2,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁ann', 'ulla', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁initialize', '()', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'dess', 'ert', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'fr', 'utta', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ric', 'reat', 'ivi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'alt', 'ro', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'c', 'aff', 'etter', 'ia', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'anal', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'dol', 'ci', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'fred', 'di', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'c', 'aldi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'sol', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'carne', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'pes', 'ce', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cott', 'a', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'form', 'aggio', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'con', 'fer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '3.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\t\t\t\t\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'elen', 'co', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ben', 'ese', 'lez', 'ion', 'ato', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'void', '▁start', 'con', 'fer', 'ma', '()', '\n\t', '{', '\n\t\t', 'int', '▁id', ';', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(!', 'er', 'r', 'ore', '())', '\n\t\t', '{', '\n\t\t\t', 'float', '▁px', '▁=', '▁float', '.', 'value', 'of', '(', 'test', 'o', '4.', 'get', 'text', '());', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'change', 'ben', 'es', 'erv', 'izio', '(', 'extra', '.', 'get', 'code', 'xt', 'ra', '(),', '\n\t\t\t\t\t\t\t', 'test', 'o', '3.', 'get', 'text', '(),', '▁px', '.', 'float', 'value', '()))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '13', ';', '++', 'i', ')', '\n\t\t\t\t\t', 'if', '(', 'panel', '[', 'i', '].', 'is', 'visible', '())', '\n\t\t\t\t\t\t', 'remove', '(', 'panel', '[', 'i', ']);', '\n\t\t\t\t', 'panel', '[0', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'void', '▁ben', 'ese', 'lez', 'ion', 'ato', '()', '\n\t', '{', '\n\t\t', 'extra', '▁=', '▁l', '.', 'get', 'ben', 'es', 'erv', 'izio', '((', 'elen', 'co', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t', 'remove', '(', 'panel', '[', '11', ']);', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', '10]', ');', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'desc', 'riz', 'ione', '());', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'px', 'un', 'itario', '()', '+""', '"");', '\n\t\t', 'panel', '[', '10', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n', '}']"~"packag interfacc import java awt import java awt event import common util import moduli bene servizio import moduli data base import moduli lista beni servizi public class modifica beni servizi extend maschera bene servizio bene servizio extra null label elenco extra elenco extra button annulla public modifica beni servizi super modifica dei dati bene servizio setup pannello initi void setup pannello panel set layout gridbag elenco extra new label sceglier bene servizio appartenent elenco extra new label alla categoria selezionata modificar elenco new list fals annulla new button fine util constrain panel elenco extra grid bag constraint none grid bag constraint west util constrain panel elenco extra grid bag constraint none grid bag constraint west util constrain panel elenco grid bag constraint horizont grid bag constraint center util constrain panel annulla grid bag constraint none grid bag constraint center public void initi scelta piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) level codic compos code level bene servizio dessert (); }); scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) level codic compos code level bene servizio frutta (); }); scelta_servizio add item listen new item listen public void item state chang item event scelta_servizio get state ()) level codic compos code level bene servizio ricreativi (); }); scelta_servizio add item listen new item listen public void item state chang item event scelta_servizio get state ()) level codic compos code level bene servizio altro (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio caffetteria (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio analcolici (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio alcolici (); }); scelta_cibo add item listen new item listen public void item state chang item event scelta_cibo get state ()) level codic compos code level bene servizio dolci (); }); scelta_cibo add item listen new item listen public void item state chang item event scelta_cibo get state ()) level codic compos code level bene servizio salati (); }); scelta_antipasto add item listen new item listen public void item state chang item event scelta_antipasto get state ()) level codic compos code level bene servizio freddi (); }); scelta_antipasto add item listen new item listen public void item state chang item event scelta_antipasto get state ()) level codic compos code level bene servizio caldi (); }); scelta_primo add item listen new item listen public void item state chang item event scelta_primo get state ()) level codic compos code level bene servizio solidi (); }); scelta_primo add item listen new item listen public void item state chang item event scelta_primo get state ()) level codic compos code level bene servizio liquidi (); }); scelta_secondo add item listen new item listen public void item state chang item event scelta_secondo get state ()) level codic compos code level bene servizio carn (); }); scelta_secondo add item listen new item listen public void item state chang item event scelta_secondo get state ()) level codic compos code level bene servizio pesc (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio verdura_cotta (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio verdura_cruda (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio formaggio (); }); conferma add action listen new action listen public void action perform action event start conferma (); }); annulla3 add action listen new action listen public void action perform action event dispos (); padr set enabl true }); elenco add action listen new action listen public void action perform action event bene selezionato (); }); init void start conferma int messag dialog msg error ()) float float valu testo4 get text ()); int principal chang bene servizio extra get cod extra (), testo3 get text (), float valu ())) data base int ;++ panel visibl ()) remov panel ]); panel set visibl true els msg new messag dialog problemi con data base data base str error )); void bene selezionato extra get bene servizio elenco get select index ())[ remov panel ]); add panel ]); testo3 set text extra get descrizion ()); testo4 set text extra get unitario ()+""""); panel set visibl true set visibl true"
52~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/AskChiudiConto.java~AskChiudiConto.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import interfacce.MascheraVisualizzazioneConto;

public class AskChiudiConto extends Frame
{
   	Button button1, button2, button3;
   	MascheraVisualizzazioneConto padre;
   	Panel panel1, panel2;
   	Label message;
   	GridBagLayout gridbag = new GridBagLayout();
   	
   	public AskChiudiConto(MascheraVisualizzazioneConto parent)
   	{
      	super(""Cosa devo fare?"");
      	padre = parent;
      	padre.setEnabled(false);
      	setupPanel();
      	init();
      	pack();
      	setVisible(true);
   }

	void setupPanel()
	{
      	message = new Label(""ATTENZIONE: questa operazione comporta comporta la chiusura del soggiorno."");
      	button1 = new Button("" Annulla "");
      	button2 = new Button("" Stampa e chiudi "");
        this.setFont(ConfigurazioneSistema.font_titolo);
        panel1 = new Panel();
        panel1.setLayout(gridbag);
        Utils.constrain(panel1, message, 0, 0, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
      	//Creo il pannello in basso con due pulsanti                  
        panel2 = new Panel();
        panel2.setLayout(gridbag);
        Utils.constrain(panel2, button1, 0, 0, 1, 1, GridBagConstraints.NONE,
        	            GridBagConstraints.CENTER, 0.0, 0.0, 0, 0, 0, 15);
            Utils.constrain(panel2, button2, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 0, 15, 0, 0);             
        //Attacco i pannelli al frame
        this.setLayout(gridbag);
        Utils.constrain(this, panel1, 0, 1, 4, 2, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
        Utils.constrain(this, panel2, 0, 14, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
	}
   
   
   public void init()
   {
      button1.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
         	startAzione();
         }
      });
      
      button2.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			padre.startChiusura();
			startAzione();
         }
      });
   }
   
   void startAzione()
   {
       	setVisible(false);
        dispose();
        padre.dispose();
        padre.conto.setEnabled(true);
   }
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁inter', 'f', 'ac', 'ce', '.', 'm', 'asc', 'her', 'av', 'is', 'ual', 'iz', 'z', 'az', 'ion', 'ec', 'onto', ';', '\n\n', 'publ', 'ic', '▁class', '▁as', 'k', 'chi', 'ud', 'ic', 'onto', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'but', 'ton', '▁but', 'ton', '1,', '▁but', 'ton', '2,', '▁but', 'ton', '3', ';', '\n', '▁', '\t', 'm', 'asc', 'her', 'av', 'is', 'ual', 'iz', 'z', 'az', 'ion', 'ec', 'onto', '▁pad', 're', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2', ';', '\n', '▁', '\t', 'l', 'ab', 'el', '▁message', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁as', 'k', 'chi', 'ud', 'ic', 'onto', '(', 'm', 'asc', 'her', 'av', 'is', 'ual', 'iz', 'z', 'az', 'ion', 'ec', 'onto', '▁paren', 't', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', 'c', 'osa', '▁dev', 'o', '▁f', 'are', '?', '"")', ';', '\n', '▁', '\t', 'p', 'ad', 're', '▁=', '▁paren', 't', ';', '\n', '▁', '\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'el', '(', ');', '\n', '▁', '\t', 'in', 'it', '(', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁set', 'up', 'pan', 'el', '(', ')', '\n\t', '{', '\n', '▁', '\t', 'm', 'ess', 'age', '▁=', '▁new', '▁label', '(', '""', 'att', 'enz', 'ion', 'e', ':', '▁quest', 'a', '▁oper', 'az', 'ion', 'e', '▁comp', 'ort', 'a', '▁comp', 'ort', 'a', '▁la', '▁ch', 'ius', 'ura', '▁del', '▁s', 'og', 'gi', 'orn', 'o', '.""', ');', '\n', '▁', '\t', 'but', 'ton', '1', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ann', 'ull', 'a', '▁""', ');', '\n', '▁', '\t', 'but', 'ton', '2', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁stamp', 'a', '▁e', '▁chi', 'udi', '▁""', ');', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁message', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁but', 'ton', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁', '\t', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁but', 'ton', '2,', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁15,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁1,', '▁4,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', '}', '\n', '▁', '\n', '▁', '\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁but', 'ton', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁but', 'ton', '2.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'p', 'ad', 're', '.', 'st', 'art', 'ch', 'ius', 'ura', '(', ');', '\n\t\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁start', 'az', 'ion', 'e', '(', ')', '\n', '▁{', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'c', 'onto', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁inter', 'fac', 'ce', '.', 'm', 'asc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', ';', '\n\n', 'public', '▁class', '▁ask', 'chi', 'ud', 'ic', 'onto', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'but', 'ton', '▁button', '1,', '▁button', '2,', '▁button', '3', ';', '\n', '▁', '\t', 'm', 'asc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '▁pad', 're', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2', ';', '\n', '▁', '\t', 'l', 'abel', '▁message', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ask', 'chi', 'ud', 'ic', 'onto', '(', 'm', 'asc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '▁parent', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'c', 'osa', '▁dev', 'o', '▁fare', '?', '"");', '\n', '▁', '\t', 'pad', 're', '▁=', '▁parent', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'el', '();', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁setup', 'pan', 'el', '()', '\n\t', '{', '\n', '▁', '\t', 'mess', 'age', '▁=', '▁new', '▁label', '(""', 'att', 'enz', 'ione', ':', '▁quest', 'a', '▁oper', 'azione', '▁comp', 'ort', 'a', '▁comp', 'ort', 'a', '▁la', '▁ch', 'ius', 'ura', '▁del', '▁s', 'og', 'gi', 'orno', '.""', ');', '\n', '▁', '\t', 'but', 'ton', '1', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁', '\t', 'but', 'ton', '2', '▁=', '▁new', '▁button', '(""', '▁stamp', 'a', '▁e', '▁chi', 'udi', '▁""', ');', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁message', ',', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁button', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁', '\t', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁button', '2,', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁15,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁1,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', '}', '\n', '▁', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁button', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁button', '2.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'pad', 're', '.', 'start', 'ch', 'ius', 'ura', '();', '\n\t\t\t', 'start', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁start', 'azione', '()', '\n', '▁{', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'false', ');', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'dis', 'pose', '();', '\n', '▁pad', 're', '.', 'c', 'onto', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁inter', 'fac', 'ce', '.', 'masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', ';', '\n\n', 'public', '▁class', '▁ask', 'chi', 'ud', 'ic', 'onto', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'button', '▁button', '1,', '▁button', '2,', '▁button', '3;', '\n', '▁', '\t', 'masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '▁padre', ';', '\n', '▁', '\t', 'panel', '▁panel', '1,', '▁panel', '2;', '\n', '▁', '\t', 'label', '▁message', ';', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁ask', 'chi', 'ud', 'ic', 'onto', '(', 'masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '▁parent', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'c', 'osa', '▁devo', '▁fare', '?', '"");', '\n', '▁', '\t', 'pad', 're', '▁=', '▁parent', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'set', 'up', 'panel', '();', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n\t', 'void', '▁setup', 'panel', '()', '\n\t', '{', '\n', '▁', '\t', 'message', '▁=', '▁new', '▁label', '(""', 'att', 'enz', 'ione', ':', '▁quest', 'a', '▁oper', 'azione', '▁comp', 'orta', '▁comp', 'orta', '▁la', '▁ch', 'ius', 'ura', '▁del', '▁sog', 'gi', 'orno', '."");', '\n', '▁', '\t', 'button', '1', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁', '\t', 'button', '2', '▁=', '▁new', '▁button', '(""', '▁stampa', '▁e', '▁chi', 'udi', '▁""', ');', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁message', ',', '▁0,', '▁0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁button', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁', '\t', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁15', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁button', '2,', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁15,', '▁0,', '▁', '0);', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁1,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\t', '}', '\n', '▁', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁button', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁', '\t', 'start', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁button', '2.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'pad', 're', '.', 'start', 'ch', 'ius', 'ura', '();', '\n\t\t\t', 'start', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁start', 'azione', '()', '\n', '▁{', '\n', '▁', '\t', 'set', 'visible', '(', 'false', ');', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'dis', 'pose', '();', '\n', '▁padre', '.', 'c', 'onto', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import interfacc maschera visualizzazion conto public class ask chiudi conto extend frame button button button button maschera visualizzazion conto padr panel panel panel label messag grid bag layout gridbag new grid bag layout public ask chiudi conto maschera visualizzazion conto parent super cosa devo fare padr parent padr set enabl fals setup panel init pack set visibl true void setup panel messag new label attenzion questa operazion comporta comporta chiusura del soggiorno button new button annulla button new button stampa chiudi set font configurazion sistema font titolo panel new panel panel set layout gridbag util constrain panel messag grid bag constraint none grid bag constraint northwest creo pannello basso con due pulsanti panel new panel panel set layout gridbag util constrain panel button grid bag constraint none grid bag constraint center util constrain panel button grid bag constraint none grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint west public void init button1 add action listen new action listen public void action perform action event start azion (); }); button2 add action listen new action listen public void action perform action event padr start chiusura (); start azion (); }); void start azion set visibl fals dispos (); padr dispos (); padr conto set enabl true
53~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/SubBeniServizi.java~SubBeniServizi.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import common.utility.*;
import java.util.Random;

public class SubBeniServizi extends Frame
{
   Label label;
   Panel panel0, panel1;
   Button Inserimento, Modifica ,Cancellazione, Ricerca, Annulla ;
   GridBagLayout gridbag=new GridBagLayout();
   SubGestione s = new SubGestione();
   CancellaBeniServizi call_3;
   ModificaBeniServizi call_2;
   InserisciBeniServizi call_1;
   VediBeniServizi call_4;
   
   public SubBeniServizi()
   {
      super(""Gestione dei Beni&Servizi"");
      setup();
      init();
      pack();
   }

   void setup()
   {  
      this.setFont(ConfigurazioneSistema.font_sub);
      panel0=new Panel();
      panel0.setLayout(gridbag);
      panel0.setBackground(Color.white);
      //Caricamento di un'immagine scelta a caso tra quelle disponibili
      Random rnd = new Random();
      int num;
      if ((num = (rnd.nextInt() % 5) ) < 0)
      	  num = num * -1;
      num ++;	   
      String file_name = new String(""servizi""+num+"".jpg"");
      Immagine  figura = new Immagine(file_name);
      Etichetta etich = new Etichetta(""Beni&Servizi.gif"");
      Utils.constrain(panel0,etich, 0, 0, 2, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
      Utils.constrain(panel0,figura, 2, 0, 10, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
       
      panel1 = new Panel();
      panel1.setLayout(new GridLayout(5,1));
      Inserimento = new Button("" Inserimento "");
      Modifica = new Button(""Modifica"");
      Cancellazione = new Button("" Cancellazione "");
      Ricerca = new Button(""Ricerca..."");
      Annulla = new Button(""Indietro"");
      panel1.add(Inserimento);
      panel1.add(Modifica);
      panel1.add(Cancellazione);
      panel1.add(Ricerca);
      panel1.add(Annulla);

      this.setLayout(gridbag);
      Utils.constrain(this,panel0, 0, 0, 12, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
      Utils.constrain(this,panel1, 12, 0, 1, 12,GridBagConstraints.BOTH,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
   }

   void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            s.setEnabled(true);
         }
      });
      
      Inserimento.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            insBeneServizio();
         }
      });

      Modifica.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            modBeneServizio();
         }
      });

      Cancellazione.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            cancBeneServizio();
         }
      });
      
      Ricerca.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            vediBeneServizio();
         }
      });
   }

	void insBeneServizio()
	{
		this.setEnabled(false);
		call_1 = new InserisciBeniServizi(""Inserimento di beni e servizi"");
		call_1.padre = this;
		call_1.setVisible(true);
	}  

	void modBeneServizio()
	{
		this.setEnabled(false);
		call_2 = new ModificaBeniServizi();
		call_2.padre = this;
		call_2.setVisible(true);
	}  

	void cancBeneServizio()
	{
		this.setEnabled(false);
		call_3 = new CancellaBeniServizi();
		call_3.padre = this;
		call_3.setVisible(true);
	}
	
	void vediBeneServizio()
	{
		this.setEnabled(false);
		call_4 = new VediBeniServizi();
		call_4.padre = this;
		call_4.setVisible(true);
	}  
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'r', 'and', 'om', ';', '\n\n', 'publ', 'ic', '▁class', '▁sub', 'b', 'en', 'is', 'erv', 'iz', 'i', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1', ';', '\n', '▁but', 'ton', '▁ins', 'er', 'iment', 'o', ',', '▁mod', 'ific', 'a', '▁,', 'c', 'anc', 'ell', 'az', 'ion', 'e', ',', '▁ric', 'er', 'ca', ',', '▁ann', 'ull', 'a', '▁;', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁sub', 'gest', 'ion', 'e', '▁s', '▁=', '▁new', '▁sub', 'gest', 'ion', 'e', '(', ');', '\n', '▁canc', 'ell', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', '3', ';', '\n', '▁mod', 'ific', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', '2', ';', '\n', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', '1', ';', '\n', '▁v', 'ed', 'ib', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', '4', ';', '\n', '▁', '\n', '▁public', '▁sub', 'b', 'en', 'is', 'erv', 'iz', 'i', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'gest', 'ion', 'e', '▁de', 'i', '▁ben', 'i', '&', 's', 'erv', 'iz', 'i', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '▁', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'sub', ');', '\n', '▁pan', 'el', '0', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁pan', 'el', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁/', '/', 'car', 'ic', 'ament', 'o', '▁di', '▁un', ""'"", 'im', 'm', 'ag', 'ine', '▁sc', 'el', 'ta', '▁a', '▁cas', 'o', '▁tra', '▁qu', 'elle', '▁dis', 'pon', 'ib', 'ili', '\n', '▁rand', 'om', '▁r', 'nd', '▁=', '▁new', '▁rand', 'om', '(', ');', '\n', '▁int', '▁num', ';', '\n', '▁if', '▁(', '(', 'n', 'um', '▁=', '▁(', 'r', 'nd', '.', 'ne', 'xt', 'int', '(', ')', '▁', '%', '▁5', ')', '▁)', '▁', '<', '▁', '0)', '\n', '▁', '\t', '▁num', '▁=', '▁num', '▁*', '▁-', '1', ';', '\n', '▁num', '▁+', '+', ';', '\t', '▁', '\n', '▁string', '▁file', '_', 'name', '▁=', '▁new', '▁string', '(', '""', 's', 'erv', 'iz', 'i', '""', '+', 'n', 'um', '+', '"".', 'j', 'p', 'g', '"")', ';', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', 'f', 'ile', '_', 'name', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁et', 'ich', '▁=', '▁new', '▁et', 'ic', 'he', 'tt', 'a', '(', '""', 'b', 'en', 'i', '&', 's', 'erv', 'iz', 'i', '.', 'g', 'if', '"")', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'f', 'ig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'new', '▁gr', 'id', 'l', 'ay', 'out', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'iment', 'o', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ins', 'er', 'iment', 'o', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'mod', 'ific', 'a', '"")', ';', '\n', '▁canc', 'ell', 'az', 'ion', 'e', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁canc', 'ell', 'az', 'ion', 'e', '▁""', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ric', 'er', 'ca', '..', '.""', ');', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ind', 'iet', 'ro', '"")', ';', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ins', 'er', 'iment', 'o', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'mod', 'ific', 'a', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'c', 'anc', 'ell', 'az', 'ion', 'e', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ric', 'er', 'ca', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ann', 'ull', 'a', ');', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁s', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'iment', 'o', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁mod', 'ific', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ric', 'er', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁v', 'ed', 'ib', 'en', 'es', 'erv', 'iz', 'io', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁ins', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', '1', '▁=', '▁new', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '(', '""', 'ins', 'er', 'iment', 'o', '▁di', '▁ben', 'i', '▁e', '▁serv', 'iz', 'i', '"")', ';', '\n\t\t', 'c', 'all', '_', '1.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t\t', 'c', 'all', '_', '1.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '▁', '\n\n\t', 'v', 'oid', '▁mod', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', '2', '▁=', '▁new', '▁mod', 'ific', 'ab', 'en', 'is', 'erv', 'iz', 'i', '(', ');', '\n\t\t', 'c', 'all', '_', '2.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t\t', 'c', 'all', '_', '2.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '▁', '\n\n\t', 'v', 'oid', '▁canc', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', '3', '▁=', '▁new', '▁canc', 'ell', 'ab', 'en', 'is', 'erv', 'iz', 'i', '(', ');', '\n\t\t', 'c', 'all', '_', '3.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t\t', 'c', 'all', '_', '3.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁v', 'ed', 'ib', 'en', 'es', 'erv', 'iz', 'io', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'c', 'all', '_', '4', '▁=', '▁new', '▁v', 'ed', 'ib', 'en', 'is', 'erv', 'iz', 'i', '(', ');', '\n\t\t', 'c', 'all', '_', '4.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t\t', 'c', 'all', '_', '4.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'rand', 'om', ';', '\n\n', 'public', '▁class', '▁sub', 'ben', 'is', 'erv', 'iz', 'i', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1', ';', '\n', '▁button', '▁ins', 'er', 'iment', 'o', ',', '▁mod', 'ific', 'a', '▁,', 'canc', 'ell', 'azione', ',', '▁ric', 'er', 'ca', ',', '▁ann', 'ulla', '▁;', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁sub', 'gest', 'ione', '▁s', '▁=', '▁new', '▁sub', 'gest', 'ione', '();', '\n', '▁canc', 'ell', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', '3', ';', '\n', '▁mod', 'ific', 'ab', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', '2', ';', '\n', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', '1', ';', '\n', '▁ved', 'ib', 'en', 'is', 'erv', 'iz', 'i', '▁call', '_', '4', ';', '\n', '▁', '\n', '▁public', '▁sub', 'ben', 'is', 'erv', 'iz', 'i', '()', '\n', '▁{', '\n', '▁super', '(""', 'gest', 'ione', '▁dei', '▁ben', 'i', '&', 'serv', 'iz', 'i', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '▁', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁//', 'car', 'ic', 'amento', '▁di', '▁un', ""'"", 'im', 'mag', 'ine', '▁sc', 'el', 'ta', '▁a', '▁cas', 'o', '▁tra', '▁qu', 'elle', '▁dis', 'pon', 'ib', 'ili', '\n', '▁random', '▁r', 'nd', '▁=', '▁new', '▁random', '();', '\n', '▁int', '▁num', ';', '\n', '▁if', '▁(', '(', 'num', '▁=', '▁(', 'r', 'nd', '.', 'next', 'int', '()', '▁%', '▁5)', '▁)', '▁<', '▁', '0)', '\n', '▁', '\t', '▁num', '▁=', '▁num', '▁*', '▁-', '1', ';', '\n', '▁num', '▁+', '+', ';', '\t', '▁', '\n', '▁string', '▁file', '_', 'name', '▁=', '▁new', '▁string', '(""', 'serv', 'iz', 'i', '""', '+', 'num', '+', '"".', 'j', 'pg', '"");', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', 'file', '_', 'name', ');', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'ben', 'i', '&', 'serv', 'iz', 'i', '.', 'g', 'if', '"");', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'fig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'new', '▁grid', 'lay', 'out', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'iment', 'o', '▁=', '▁new', '▁button', '(""', '▁ins', 'er', 'iment', 'o', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁button', '(""', 'mod', 'ific', 'a', '"");', '\n', '▁canc', 'ell', 'azione', '▁=', '▁new', '▁button', '(""', '▁canc', 'ell', 'azione', '▁""', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁button', '(""', 'ric', 'er', 'ca', '...""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ind', 'iet', 'ro', '"");', '\n', '▁panel', '1.', 'add', '(', 'ins', 'er', 'iment', 'o', ');', '\n', '▁panel', '1.', 'add', '(', 'mod', 'ific', 'a', ');', '\n', '▁panel', '1.', 'add', '(', 'canc', 'ell', 'azione', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁s', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'iment', 'o', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'ben', 'es', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁mod', 'ific', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'ben', 'es', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'ben', 'es', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ric', 'er', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ved', 'ib', 'enes', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁ins', 'ben', 'es', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', '1', '▁=', '▁new', '▁ins', 'er', 'isc', 'ib', 'en', 'is', 'erv', 'iz', 'i', '(""', 'ins', 'er', 'iment', 'o', '▁di', '▁ben', 'i', '▁e', '▁serv', 'iz', 'i', '"");', '\n\t\t', 'call', '_', '1.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'call', '_', '1.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '▁', '\n\n\t', 'v', 'oid', '▁mod', 'ben', 'es', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', '2', '▁=', '▁new', '▁mod', 'ific', 'ab', 'en', 'is', 'erv', 'iz', 'i', '();', '\n\t\t', 'call', '_', '2.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'call', '_', '2.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '▁', '\n\n\t', 'v', 'oid', '▁canc', 'ben', 'es', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', '3', '▁=', '▁new', '▁canc', 'ell', 'ab', 'en', 'is', 'erv', 'iz', 'i', '();', '\n\t\t', 'call', '_', '3.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'call', '_', '3.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ved', 'ib', 'enes', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'call', '_', '4', '▁=', '▁new', '▁ved', 'ib', 'en', 'is', 'erv', 'iz', 'i', '();', '\n\t\t', 'call', '_', '4.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'call', '_', '4.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'random', ';', '\n\n', 'public', '▁class', '▁sub', 'ben', 'is', 'erv', 'izi', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1;', '\n', '▁button', '▁ins', 'er', 'imento', ',', '▁mod', 'ific', 'a', '▁,', 'canc', 'ell', 'azione', ',', '▁ricer', 'ca', ',', '▁ann', 'ulla', '▁;', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'layout', '();', '\n', '▁sub', 'gest', 'ione', '▁s', '▁=', '▁new', '▁sub', 'gest', 'ione', '();', '\n', '▁canc', 'ell', 'ab', 'enis', 'erv', 'izi', '▁call', '_', '3;', '\n', '▁mod', 'ific', 'ab', 'enis', 'erv', 'izi', '▁call', '_', '2;', '\n', '▁ins', 'er', 'isc', 'iben', 'is', 'erv', 'izi', '▁call', '_', '1;', '\n', '▁ved', 'iben', 'is', 'erv', 'izi', '▁call', '_', '4;', '\n', '▁', '\n', '▁public', '▁sub', 'ben', 'is', 'erv', 'izi', '()', '\n', '▁{', '\n', '▁super', '(""', 'gest', 'ione', '▁dei', '▁beni', '&', 'serv', 'izi', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '▁', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁//', 'car', 'ic', 'amento', '▁di', '▁un', ""'"", 'im', 'mag', 'ine', '▁scel', 'ta', '▁a', '▁cas', 'o', '▁tra', '▁qu', 'elle', '▁dis', 'pon', 'ib', 'ili', '\n', '▁random', '▁rnd', '▁=', '▁new', '▁random', '();', '\n', '▁int', '▁num', ';', '\n', '▁if', '▁((', 'num', '▁=', '▁(', 'r', 'nd', '.', 'next', 'int', '()', '▁%', '▁5)', '▁)', '▁<', '▁0)', '\n', '▁', '\t', '▁num', '▁=', '▁num', '▁*', '▁-', '1;', '\n', '▁num', '▁+', '+', ';', '\t', '▁', '\n', '▁string', '▁file', '_', 'name', '▁=', '▁new', '▁string', '(""', 'serv', 'izi', '""', '+', 'num', '+', '"".', 'jpg', '"");', '\n', '▁imm', 'agine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'agine', '(', 'file', '_', 'name', ');', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'beni', '&', 'serv', 'izi', '.', 'gif', '"");', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'et', 'ich', ',', '▁0,', '▁0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'fig', 'ura', ',', '▁2,', '▁0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'new', '▁grid', 'layout', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'imento', '▁=', '▁new', '▁button', '(""', '▁ins', 'er', 'imento', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁button', '(""', 'mod', 'ific', 'a', '"");', '\n', '▁canc', 'ell', 'azione', '▁=', '▁new', '▁button', '(""', '▁canc', 'ell', 'azione', '▁""', ');', '\n', '▁ricer', 'ca', '▁=', '▁new', '▁button', '(""', 'ric', 'er', 'ca', '...""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ind', 'ietro', '"");', '\n', '▁panel', '1.', 'add', '(', 'ins', 'er', 'imento', ');', '\n', '▁panel', '1.', 'add', '(', 'mod', 'ific', 'a', ');', '\n', '▁panel', '1.', 'add', '(', 'canc', 'ell', 'azione', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁12,', '▁0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁s', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'imento', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ins', 'ben', 'es', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁mod', 'ific', 'a', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'ben', 'es', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'ben', 'es', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ricer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ved', 'ib', 'enes', 'erv', 'izio', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁ins', 'ben', 'es', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_1', '▁=', '▁new', '▁ins', 'er', 'isc', 'iben', 'is', 'erv', 'izi', '(""', 'ins', 'er', 'imento', '▁di', '▁beni', '▁e', '▁serv', 'izi', '"");', '\n\t\t', 'call', '_', '1.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'call', '_', '1.', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '▁', '\n\n\t', 'void', '▁mod', 'ben', 'es', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_2', '▁=', '▁new', '▁mod', 'ific', 'ab', 'enis', 'erv', 'izi', '();', '\n\t\t', 'call', '_', '2.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'call', '_', '2.', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '▁', '\n\n\t', 'void', '▁canc', 'ben', 'es', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_3', '▁=', '▁new', '▁canc', 'ell', 'ab', 'enis', 'erv', 'izi', '();', '\n\t\t', 'call', '_', '3.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'call', '_', '3.', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁ved', 'ib', 'enes', 'erv', 'izio', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'call', '_', '4', '▁=', '▁new', '▁ved', 'iben', 'is', 'erv', 'izi', '();', '\n\t\t', 'call', '_', '4.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'call', '_', '4.', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '▁', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import java import common util import java util random public class sub beni servizi extend frame label label panel panel panel button inserimento modifica cancellazion ricerca annulla grid bag layout gridbag new grid bag layout sub gestion new sub gestion cancella beni servizi call modifica beni servizi call inserisci beni servizi call vedi beni servizi call public sub beni servizi super gestion dei beni servizi setup init pack void setup set font configurazion sistema font sub panel new panel panel set layout gridbag panel set background color white caricamento immagin scelta caso tra quell disponibili random rnd new random int num num rnd next int num num num string file name new string servizi num jpg immagin figura new immagin file name etichetta etich new etichetta beni servizi gif util constrain panel etich grid bag constraint vertic grid bag constraint center util constrain panel figura grid bag constraint vertic grid bag constraint center panel new panel panel set layout new grid layout inserimento new button inserimento modifica new button modifica cancellazion new button cancellazion ricerca new button ricerca ...""); annulla new button indietro ""); panel1 add inserimento panel1 add modifica panel1 add cancellazion panel1 add ricerca panel1 add annulla set layout gridbag util constrain panel0 grid bag constraint vertic grid bag constraint west util constrain panel1 grid bag constraint grid bag constraint west void init annulla add action listen new action listen public void action perform action event dispos (); set enabl true }); inserimento add action listen new action listen public void action perform action event bene servizio (); }); modifica add action listen new action listen public void action perform action event mod bene servizio (); }); cancellazion add action listen new action listen public void action perform action event canc bene servizio (); }); ricerca add action listen new action listen public void action perform action event vedi bene servizio (); }); void bene servizio set enabl fals call_1 new inserisci beni servizi inserimento beni servizi ""); call_1 padr call_1 set visibl true void mod bene servizio set enabl fals call_2 new modifica beni servizi (); call_2 padr call_2 set visibl true void canc bene servizio set enabl fals call_3 new cancella beni servizi (); call_3 padr call_3 set visibl true void vedi bene servizio set enabl fals call_4 new vedi beni servizi (); call_4 padr call_4 set visibl true"
54~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/InserisciStanze.java~InserisciStanze.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class InserisciStanze extends DescrittoreStanze
{
	public InserisciStanze()
	{
		super(""Inserimento dei dati delle stanze"", ""Inserisci"",1);
		init();
	}
	
	public void init()
	{
		Cerca.setEnabled(false);
		
		Azione.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startAzione();
			}
		});
	} // init

	void startAzione()
	{
		Frame msg;
		ListaStanze L_st = (Principale.db).elencoStanze();
		if ( L_st.length() < (Principale.config).getNumStanze() ) 
		{	
			if ( !errori() )
			{
				Stanza room = readDatiStanza();
				int j;
				if ((j = (Principale.db).writeStanza(room)) == DataBase.OK)
				{
					cleanFields();
				}
				else
					msg = new MessageDialog(this, ""Problemi con il data base: ""+DataBase.strErrore(j));
			}
		}
		else
			msg = new AvvisoDialog(this, ""Impossibile inserire la stanza: e' stato raggiunto il numero massimo di stanze gestibile"");			
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁ins', 'er', 'isc', 'istan', 'ze', '▁ext', 'ends', '▁desc', 'rit', 'tor', 'est', 'an', 'ze', '\n', '{', '\n\t', 'publ', 'ic', '▁ins', 'er', 'isc', 'istan', 'ze', '(', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', '""', 'ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁del', 'le', '▁stan', 'ze', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '1)', ';', '\n\t\t', 'in', 'it', '(', ');', '\n\t', '}', '\n\t\n\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n\t', '{', '\n\t\t', 'cer', 'ca', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\n\t\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\n\t', 'v', 'oid', '▁start', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ast', 'an', 'ze', '▁l', '_', 'st', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'ost', 'an', 'ze', '(', ');', '\n\t\t', 'if', '▁(', '▁l', '_', 'st', '.', 'l', 'ength', '(', ')', '▁', '<', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'n', 'um', 'stan', 'ze', '(', ')', '▁)', '▁', '\n\t\t', '{', '\t\n\t\t\t', 'if', '▁(', '▁!', 'er', 'ror', 'i', '(', ')', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'stan', 'za', '▁room', '▁=', '▁read', 'd', 'at', 'istan', 'za', '(', ');', '\n\t\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'est', 'an', 'za', '(', 'room', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'cle', 'an', 'field', 's', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'im', 'pos', 's', 'ib', 'ile', '▁ins', 'er', 'ire', '▁la', '▁stan', 'za', ':', '▁e', ""'"", '▁stat', 'o', '▁r', 'ag', 'gi', 'unt', 'o', '▁il', '▁num', 'ero', '▁mass', 'im', 'o', '▁di', '▁stan', 'ze', '▁g', 'est', 'ib', 'ile', '"")', ';', '\t\t\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'istan', 'ze', '▁extends', '▁desc', 'rit', 'tor', 'estan', 'ze', '\n', '{', '\n\t', 'public', '▁ins', 'er', 'isc', 'istan', 'ze', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁delle', '▁stan', 'ze', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '1)', ';', '\n\t\t', 'init', '();', '\n\t', '}', '\n\t\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'cer', 'ca', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\n\t\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'v', 'oid', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ast', 'an', 'ze', '▁l', '_', 'st', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'ostan', 'ze', '();', '\n\t\t', 'if', '▁(', '▁l', '_', 'st', '.', 'length', '()', '▁<', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'num', 'stan', 'ze', '()', '▁)', '▁', '\n\t\t', '{', '\t\n\t\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'stan', 'za', '▁room', '▁=', '▁read', 'dat', 'istan', 'za', '();', '\n\t\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t', 'if', '▁(', '(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'writ', 'estan', 'za', '(', 'room', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'cle', 'an', 'fields', '();', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'im', 'poss', 'ib', 'ile', '▁ins', 'er', 'ire', '▁la', '▁stan', 'za', ':', '▁e', ""'"", '▁stat', 'o', '▁rag', 'gi', 'unt', 'o', '▁il', '▁num', 'ero', '▁mass', 'imo', '▁di', '▁stan', 'ze', '▁gest', 'ib', 'ile', '"");', '\t\t\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ins', 'er', 'isc', 'istan', 'ze', '▁extends', '▁desc', 'rit', 'tor', 'estan', 'ze', '\n', '{', '\n\t', 'public', '▁ins', 'er', 'isc', 'istan', 'ze', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁delle', '▁stan', 'ze', '"",', '▁""', 'ins', 'er', 'isc', 'i', '"",', '1);', '\n\t\t', 'init', '();', '\n\t', '}', '\n\t\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'cer', 'ca', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\n\t\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'void', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'list', 'ast', 'anze', '▁l', '_', 'st', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'ostan', 'ze', '();', '\n\t\t', 'if', '▁(', '▁l', '_', 'st', '.', 'length', '()', '▁<', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'num', 'stan', 'ze', '()', '▁)', '▁', '\n\t\t', '{', '\t\n\t\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'stan', 'za', '▁room', '▁=', '▁read', 'dat', 'istan', 'za', '();', '\n\t\t\t\t', 'int', '▁j', ';', '\n\t\t\t\t', 'if', '▁((', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'writ', 'estan', 'za', '(', 'room', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'clean', 'fields', '();', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁data', '▁base', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'im', 'poss', 'ib', 'ile', '▁ins', 'er', 'ire', '▁la', '▁stanza', ':', '▁e', ""'"", '▁stato', '▁raggi', 'unto', '▁il', '▁numero', '▁massimo', '▁di', '▁stan', 'ze', '▁gest', 'ib', 'ile', '"");', '\t\t\t\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import moduli public class inserisci stanz extend descrittor stanz public inserisci stanz super inserimento dei dati dell stanz inserisci init public void init cerca set enabl fals azion add action listen new action listen public void action perform action event start azion init void start azion frame msg lista stanz principal elenco stanz length principal config get num stanz errori stanza room read dati stanza int principal write stanza room data base clean field els msg new messag dialog problemi con data base data base str error els msg new avviso dialog impossibil inserir stanza stato raggiunto numero massimo stanz gestibil
55~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/ModificaPrenotazione.java~ModificaPrenotazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class ModificaPrenotazione extends MascheraPrenotazione
{  
    Prenotazione p;
    RicercaPrenotazione parent;
	    
    public ModificaPrenotazione(Prenotazione pren, Stanza room, RicercaPrenotazione papa)
    {
        super(room,"""","""",""Modifica dei dati della prenotazione"",""Modifica"",2, pren.getPensionamento());
        p= pren;
        parent = papa;
        init();
    }
                     
    public void init()
    {
		Frame msg;
		writeDatiPren(p);
		testo[0].setEditable(false);
   		testo[4].setEditable(false);
   		testo[5].setEditable(false);
		testo[9].setText(DateUtils.parseDate(DateUtils.giveStringOfDate(p.getDataPren())));
		if (!p.getNomeAgenzia().equals(""""))
		{
			testo[6].setEditable(false);
			myCheckbox1.setState(true);
		}

    	Azione.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				if ( !errori() )
				{
					Prenotazione pren = readDatiPren();
					pren.setIdPrenotazione(p.getIdPrenotazione());
					pren.setDataPren(p.getDataPren());
					int j ;
					j = (Principale.db).changePrenotazione(pren.getIdPrenotazione(), pren.getNumStanza(), 
														pren.getNumPers(),pren.getNome(),pren.getCognome(), 
														pren.getNumTel(), pren.getInizioSogg(), pren.getFineSogg(), pren.getDataPren(),
														pren.getCaparra(), pren.getRichLettoAgg(), pren.getPensionamento(),
														pren.getTramiteAgenzia(), pren.getNomeAgenzia(), pren.getRichParticolari());	
					dispose();
					parent.creaLista(1);
					parent.setEnabled(true);
				}
			}
      });
      
      Assegna.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				startAssegnazione();
			}
      	});	

    } 
	
	void startAssegnazione()
	{
		Frame msg;
		ListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();
		if (elenco_disp == null)
		{
			msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return;
		}
		Utils.aggiornaDisp(elenco_disp,p.getNumStanza(),p.getInizioSogg(),p.getFineSogg(),Flag.ASSEGNATA,Flag.BLOCCATA,true);
		msg = new AvvisoDialog(this, "" Assegnata la stanza ""+p.getNumStanza()+"" alla prenotazione "");
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁mod', 'ific', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁ext', 'ends', '▁m', 'asc', 'her', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '\n', '{', '▁', '\n', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ';', '\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁paren', 't', ';', '\n\t', '▁', '\n', '▁public', '▁mod', 'ific', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ',', '▁stan', 'za', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁pap', 'a', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",', '""', '"",', '""', 'mod', 'ific', 'a', '▁de', 'i', '▁d', 'ati', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '"",', '""', 'mod', 'ific', 'a', '"",', '2,', '▁p', 'ren', '.', 'get', 'p', 'ension', 'ament', 'o', '(', ')', ');', '\n', '▁p', '=', '▁p', 'ren', ';', '\n', '▁paren', 't', '▁=', '▁pap', 'a', ';', '\n', '▁init', '(', ');', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n\t\t', 't', 'est', 'o', '[', '0', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '4', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '5', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '[', '9', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', '.', 'get', 'd', 'at', 'ap', 'ren', '(', ')', ')', ')', ');', '\n\t\t', 'if', '▁(', '!', 'p', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', ').', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 't', 'est', 'o', '[', '6', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t', 'my', 'che', 'ck', 'box', '1.', 'set', 'state', '(', 'tr', 'ue', ');', '\n\t\t', '}', '\n\n', '▁', '\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁!', 'er', 'ror', 'i', '(', ')', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', '▁=', '▁read', 'd', 'at', 'ip', 'ren', '(', ');', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'd', 'at', 'ap', 'ren', '(', 'p', '.', 'get', 'd', 'at', 'ap', 'ren', '(', ')', ');', '\n\t\t\t\t\t', 'int', '▁j', '▁;', '\n\t\t\t\t\t', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'change', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '),', '▁p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'n', 'ump', 'ers', '(', '),', 'p', 'ren', '.', 'get', 'n', 'ome', '(', '),', 'p', 'ren', '.', 'get', 'c', 'ogn', 'ome', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'n', 'um', 't', 'el', '(', '),', '▁p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁p', 'ren', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁p', 'ren', '.', 'get', 'd', 'at', 'ap', 'ren', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'c', 'ap', 'ar', 'ra', '(', '),', '▁p', 'ren', '.', 'get', 'rich', 'let', 'to', 'ag', 'g', '(', '),', '▁p', 'ren', '.', 'get', 'p', 'ension', 'ament', 'o', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'tr', 'am', 'ite', 'agen', 'z', 'ia', '(', '),', '▁p', 'ren', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', '),', '▁p', 'ren', '.', 'get', 'rich', 'part', 'ic', 'ol', 'ari', '(', ')', ');', '\t\n\t\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t\t', 'p', 'arent', '.', 'c', 'real', 'ista', '(', '1)', ';', '\n\t\t\t\t\t', 'p', 'arent', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\n', '▁as', 'se', 'g', 'na', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'as', 'se', 'gn', 'az', 'ion', 'e', '(', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\t\n\n', '▁}', '▁', '\n\t\n\t', 'v', 'oid', '▁start', 'as', 'se', 'gn', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t', 'ut', 'ils', '.', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'p', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', 'p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', 'fl', 'ag', '.', 'as', 'se', 'gn', 'ata', ',', 'fl', 'ag', '.', 'bl', 'oc', 'c', 'ata', ',', 'tr', 'ue', ');', '\n\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁as', 'se', 'gn', 'ata', '▁la', '▁stan', 'za', '▁""', '+', 'p', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', '+', '""', '▁all', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁""', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁mod', 'ific', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n', '▁pren', 'ot', 'azione', '▁p', ';', '\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ';', '\n\t', '▁', '\n', '▁public', '▁mod', 'ific', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁stan', 'za', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁papa', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",', '""', '"",', '""', 'mod', 'ific', 'a', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', '"",', '""', 'mod', 'ific', 'a', '"",', '2,', '▁pren', '.', 'get', 'p', 'ension', 'amento', '());', '\n', '▁p', '=', '▁pren', ';', '\n', '▁parent', '▁=', '▁papa', ';', '\n', '▁init', '();', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n\t\t', 'test', 'o', '[', '0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '4', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '5', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '()', '))', ');', '\n\t\t', 'if', '▁(', '!', 'p', '.', 'get', 'n', 'ome', 'agen', 'zia', '().', 'equ', 'als', '(""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '[', '6', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'my', 'check', 'box', '1.', 'set', 'state', '(', 'true', ');', '\n\t\t', '}', '\n\n', '▁', '\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', '▁=', '▁read', 'dat', 'ip', 'ren', '();', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'id', 'p', 'ren', 'ot', 'azione', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'dat', 'ap', 'ren', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '());', '\n\t\t\t\t\t', 'int', '▁j', '▁;', '\n\t\t\t\t\t', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'change', 'p', 'ren', 'ot', 'azione', '(', 'p', 'ren', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '(', '),', '▁pren', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'n', 'ump', 'ers', '(', '),', 'p', 'ren', '.', 'get', 'n', 'ome', '(', '),', 'p', 'ren', '.', 'get', 'c', 'ogn', 'ome', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'num', 'tel', '(', '),', '▁pren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁pren', '.', 'get', 'dat', 'ap', 'ren', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'cap', 'arra', '(', '),', '▁pren', '.', 'get', 'rich', 'let', 'to', 'agg', '(', '),', '▁pren', '.', 'get', 'p', 'ension', 'amento', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'tr', 'am', 'ite', 'agen', 'zia', '(', '),', '▁pren', '.', 'get', 'n', 'ome', 'agen', 'zia', '(', '),', '▁pren', '.', 'get', 'rich', 'part', 'icol', 'ari', '());', '\t\n\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t', 'p', 'arent', '.', 'c', 'real', 'ista', '(1)', ';', '\n\t\t\t\t\t', 'p', 'arent', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\n', '▁as', 'seg', 'na', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'asse', 'gn', 'azione', '();', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\t\n\n', '▁}', '▁', '\n\t\n\t', 'v', 'oid', '▁start', 'asse', 'gn', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'ut', 'ils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', 'p', '.', 'get', 'num', 'stan', 'za', '(', '),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', 'flag', '.', 'asse', 'gn', 'ata', ',', 'flag', '.', 'bl', 'occ', 'ata', ',', 'true', ');', '\n\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁as', 'se', 'gn', 'ata', '▁la', '▁stan', 'za', '▁""', '+', 'p', '.', 'get', 'num', 'stan', 'za', '()', '+', '""', '▁alla', '▁pren', 'ot', 'azione', '▁""', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁mod', 'ific', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '\n', '{', '▁', '\n', '▁pren', 'ot', 'azione', '▁p', ';', '\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁parent', ';', '\n\t', '▁', '\n', '▁public', '▁mod', 'ific', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁stanza', '▁room', ',', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁papa', ')', '\n', '▁{', '\n', '▁super', '(', 'room', ',""', '"",""', '"",""', 'mod', 'ific', 'a', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', '"",""', 'mod', 'ific', 'a', '"",', '2,', '▁pren', '.', 'get', 'pension', 'amento', '());', '\n', '▁p', '=', '▁pren', ';', '\n', '▁parent', '▁=', '▁papa', ';', '\n', '▁init', '();', '\n', '▁}', '\n', '▁', '\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'writ', 'ed', 'at', 'ip', 'ren', '(', 'p', ');', '\n\t\t', 'test', 'o', '[0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '4', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '5', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '()))', ');', '\n\t\t', 'if', '▁(!', 'p', '.', 'get', 'n', 'ome', 'agen', 'zia', '().', 'equals', '(""', '""))', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '[', '6', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t', 'my', 'check', 'box', '1.', 'set', 'state', '(', 'true', ');', '\n\t\t', '}', '\n\n', '▁', '\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', '▁=', '▁read', 'dat', 'ip', 'ren', '();', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'id', 'p', 'ren', 'ot', 'azione', '(', 'p', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'dat', 'ap', 'ren', '(', 'p', '.', 'get', 'dat', 'ap', 'ren', '());', '\n\t\t\t\t\t', 'int', '▁j', '▁;', '\n\t\t\t\t\t', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'change', 'p', 'ren', 'ot', 'azione', '(', 'p', 'ren', '.', 'getid', 'p', 'ren', 'ot', 'azione', '(),', '▁pren', '.', 'get', 'num', 'stan', 'za', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'n', 'ump', 'ers', '(),', 'p', 'ren', '.', 'get', 'n', 'ome', '(),', 'p', 'ren', '.', 'get', 'cogn', 'ome', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'num', 'tel', '(),', '▁pren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁pren', '.', 'get', 'dat', 'ap', 'ren', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'cap', 'arra', '(),', '▁pren', '.', 'get', 'rich', 'letto', 'agg', '(),', '▁pren', '.', 'get', 'pension', 'amento', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'p', 'ren', '.', 'get', 'tram', 'ite', 'agen', 'zia', '(),', '▁pren', '.', 'get', 'n', 'ome', 'agen', 'zia', '(),', '▁pren', '.', 'get', 'rich', 'part', 'icol', 'ari', '());', '\t\n\t\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t\t', 'parent', '.', 'c', 'real', 'ista', '(1)', ';', '\n\t\t\t\t\t', 'parent', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\n', '▁as', 'segna', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'asse', 'gn', 'azione', '();', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\t\n\n', '▁}', '▁', '\n\t\n\t', 'void', '▁start', 'asse', 'gn', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁elenco', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁(', 'elen', 'co', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'utils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'elen', 'co', '_', 'disp', ',', 'p', '.', 'get', 'num', 'stan', 'za', '(),', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', 'p', '.', 'get', 'f', 'ines', 'ogg', '(),', 'flag', '.', 'asse', 'gn', 'ata', ',', 'flag', '.', 'bl', 'occ', 'ata', ',', 'true', ');', '\n\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁as', 'se', 'gn', 'ata', '▁la', '▁stanza', '▁""+', 'p', '.', 'get', 'num', 'stan', 'za', '()', '+""', '▁alla', '▁pren', 'ot', 'azione', '▁""', ');', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class modifica prenotazion extend maschera prenotazion prenotazion ricerca prenotazion parent public modifica prenotazion prenotazion pren stanza room ricerca prenotazion papa super room modifica dei dati della prenotazion modifica pren get pensionamento pren parent papa init public void init frame msg write dati pren testo set edit fals testo set edit fals testo set edit fals testo set text date util pars date date util give string date get data pren get nome agenzia equal testo set edit fals checkbox set state true azion add action listen new action listen public void action perform action event errori prenotazion pren read dati pren pren set prenotazion get prenotazion pren set data pren get data pren int principal chang prenotazion pren get prenotazion pren get num stanza pren get num per pren get nome pren get cognom pren get num tel pren get inizio sogg pren get fine sogg pren get data pren pren get caparra pren get rich letto agg pren get pensionamento pren get tramit agenzia pren get nome agenzia pren get rich particolari dispos parent crea lista parent set enabl true assegna add action listen new action listen public void action perform action event start assegnazion }); void start assegnazion frame msg lista disponibilita elenco_disp principal elenco disponibilita (); elenco_disp null msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return util aggiorna disp elenco_disp get num stanza (), get inizio sogg (), get fine sogg (), flag assegnata flag bloccata true msg new avviso dialog assegnata stanza get num stanza ()+"" alla prenotazion "");"
56~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraPrenotazione.java~MascheraPrenotazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class MascheraPrenotazione extends Frame
{  
    //Dichiarazioni di variabili
    Panel panel1, panel2, panel3;
    Label  etichetta1, label1, label2, label3, label4, label5, label6, label7, 
    	label8, label9, label10, label11, label12, label13;
    List lista;
    public Button  Annulla, Azione, Assegna, Cancella;
    TextField  testo[];
    Choice mychoice;
    Checkbox[] checkboxes;
    Checkbox myCheckbox, myCheckbox1;
    CheckboxGroup pensione;
    GridBagLayout gridbag = new GridBagLayout();
	Frame padre = new Frame();
  	ListaPrenotazioni L;  
    Stanza stanza;
    int caller;
      
    
    public MascheraPrenotazione(Stanza s, String data_i, String data_f, String title, String caption, int c, char pens)
    {
        super(title);
        caller = c;
        stanza = s;
        setupPanels(data_i, data_f, caption, pens);
        inizializza();
        pack(); 
    }
                     
        void setupPanels(String data_i, String data_f, String caption, char pens)
        {  
			this.setFont(ConfigurazioneSistema.font_base);
            
            //Creo dei pulsanti e ne disabilito due  
            Annulla = new Button("" Fine "");
            Azione = new Button(caption);
            Assegna = new Button("" Assegna Stanza "");
            Cancella = new Button("" Cancella prenotazione "");

            //Creo le etichette
            etichetta1 = new Label (""Inserimento dei dati della prenotazione:"");
            etichetta1.setFont(ConfigurazioneSistema.font_titolo);
            label1 = new Label(""Numero stanza"");
            label2 = new Label(""Cognome"");
            label3 = new Label(""Nome"");
            label4 = new Label(""Numero telefonico"");
            label5 = new Label(""Numero persone"");
            label6 = new Label(""Data inizio"");
            label7 = new Label(""Data fine"");
            label8 = new Label(""Caparra versata ""+(Principale.config).getValuta()+""."");
            label9 = new Label(""Richieste particolari"");
            label11 = new Label(""Nome Agenzia"");
            label10 = new Label(""Tipo di pensionamento:"");
            label10.setFont(ConfigurazioneSistema.font_titolo);
			label12 = new Label(""Risultato della ricerca"");
			label12.setFont(ConfigurazioneSistema.font_titolo);
			label13 = new Label(""Data di prenotazione"");
            
            //Creo i TextField e ne rendo  alcuni non editabili
            testo=new TextField[11];
            testo[0] = new TextField("""", 4);
            testo[1] = new TextField("""", 20);
            testo[2] = new TextField("""", 20);
            testo[3] = new TextField("""", 10);
            testo[4] = new TextField("""", 12);
            testo[5] = new TextField("""", 12);
            testo[6] = new TextField("""", 10);
            testo[7] = new TextField("""", 20);
            testo[8] = new TextField("""", 20);
            testo[8].setEditable(false);
            testo[9] = new TextField("""", 12);
            testo[9].setEditable(false);
            testo[10] = new TextField("""",3); 
			
            //Creo un Checkbox ad esclusione 
            pensione = new CheckboxGroup();
            checkboxes = new Checkbox[4];
            checkboxes[0] = new Checkbox("" Solo pernottamento"", pensione, false);
            checkboxes[1] = new Checkbox("" Prima colazione"", pensione, false);
            checkboxes[2] = new Checkbox("" Mezza pensione"", pensione, false);
            checkboxes[3] = new Checkbox("" Pensione completa"", pensione, false);
		    switch (pens)
		    {
		  		case Flag.SOLO_PERNOTTAMENTO: 
		  			checkboxes[0] = new Checkbox("" Solo pernottamento"", pensione, true);
		  			break;
			  	case Flag.SOLO_COLAZIONE: 
					checkboxes[1] = new Checkbox("" Prima colazione"", pensione, true);
	  				break;
		  		case Flag.MEZZA_PENSIONE:
					checkboxes[2] = new Checkbox("" Mezza pensione"", pensione, true);
			 		break;
		  		case Flag.PENSIONE_COMPLETA: 
					checkboxes[3] = new Checkbox("" Pensione completa"", pensione, true);
		  			break;
		    }
            

            //Creo due Checkbox a se' stanti 
            myCheckbox = new Checkbox("" Letto aggiuntivo"", null, false);
			if (stanza != null)
	            if (stanza.getDispLettoAgg() == Const.NO)
    	        	myCheckbox.setEnabled(false);
            
            myCheckbox1 = new Checkbox("" Prenotazione tramite agenzia"", null, false);
			myCheckbox1.setEnabled(false);

            //Creo un Choice 
            if (caller == 1)
            {
            	mychoice = new Choice();
				if (stanza != null)
	            	for (int i=1; i<= stanza.getPostiLetto(); i++)
    		        	mychoice.addItem(""""+i);
    			else
    				mychoice.addItem(""1"");	        
            }
            //Creo il pannello in alto per inserimento dei dati del cliente
            panel1 = new Panel();
            panel1.setLayout(gridbag);
            Utils.constrain(panel1, etichetta1, 0, 0, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[0], 1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);
            Utils.constrain(panel1, label13, 2, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[9], 3, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);
            Utils.constrain(panel1, label2, 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[1], 1, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);
            Utils.constrain(panel1, label3, 2, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[2], 3, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label4, 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[3], 1, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label5, 2, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            if (caller == 1)
            	Utils.constrain(panel1, mychoice, 3, 3, 1, 1, GridBagConstraints.NONE,
                        	GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            else
            	Utils.constrain(panel1, testo[10], 3, 3, 1, 1, GridBagConstraints.NONE,
                        	GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label6, 0, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[4], 1, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label7, 2, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[5], 3, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label8, 0, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[6], 1, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label9, 0, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[7], 1, 6, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, myCheckbox, 0, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, myCheckbox1, 1, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label11, 2, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, testo[8], 3, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label10, 0, 8, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, checkboxes[0], 0, 9, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, checkboxes[1], 0, 10, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, checkboxes[2], 0, 11, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, checkboxes[3], 0, 12, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
           
            //Creo il pannello in basso con due pulsanti                  
            panel2 = new Panel();
            panel2.setLayout(gridbag);
            Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel2, Azione, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             
            if (caller == 2 )
            	Utils.constrain(panel2, Assegna, 2, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             
            if (caller == 5 )
            	Utils.constrain(panel2, Cancella, 2, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             
            
            	
            //Creo il pannello con la lista dei risultati della ricerca
            lista = new List(7,false);
            lista.setFont(ConfigurazioneSistema.font_allineato);
            
            panel3 = new Panel();
            panel3.setLayout(gridbag);
            Utils.constrain(panel3, label12, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel3, lista, 0, 1, 4, 3, GridBagConstraints.BOTH,
                        GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);             
            
            
            //Attacco i pannelli al frame
            this.setLayout(gridbag);
            Utils.constrain(this, panel1, 0, 1, 4, 13, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(this, panel2, 0, 14, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
        	Utils.constrain(this, panel3, 0, 15, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
        	panel3.setVisible(false);
        	pack();
        
        }

	public void inizializza()
    {
        Annulla.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                dispose();
                padre.setEnabled(true);   
            }       
        });
    }

	public Prenotazione readDatiPren()
	{
		Prenotazione pren = new Prenotazione();
		pren.setNumStanza(testo[0].getText());
		pren.setCognome(testo[1].getText());
		pren.setNome(testo[2].getText());
		pren.setNumTel(testo[3].getText());
		if (caller == 1)
			pren.setNumPers(Integer.parseInt(mychoice.getSelectedItem())); //Conversione String -> Int
		else
			pren.setNumPers(Integer.parseInt(testo[10].getText()));
		pren.setInizioSogg(DateUtils.convertDate(testo[4].getText()));
		pren.setFineSogg(DateUtils.convertDate(testo[5].getText()));
		
		if  ( (testo[6].getText().equals("""")) )
			pren.setCaparra(0);
		else
			pren.setCaparra((Float.valueOf(testo[6].getText())).floatValue());  // Conversione String -> Float
		pren.setRichParticolari(testo[7].getText());
		if (myCheckbox.getState() == true)
			pren.setRichLettoAgg(Const.SI);
		if (myCheckbox1.getState() == true)
		{
			pren.setTramiteAgenzia(Const.SI);
			pren.setNomeAgenzia(testo[8].getText());
		}	
		
		if (checkboxes[0].getState() == true)
			pren.setPensionamento(Flag.SOLO_PERNOTTAMENTO);
		else	
			if (checkboxes[1].getState() == true)
				pren.setPensionamento(Flag.SOLO_COLAZIONE);
			else
				if (checkboxes[2].getState() == true)
					pren.setPensionamento(Flag.MEZZA_PENSIONE);
				else
					pren.setPensionamento(Flag.PENSIONE_COMPLETA);		 		 
		 
		pren.setIdPrenotazione(Principale.config.getIdPrenotazione());
		return pren;
	}
	
	public void writeDatiPren(Prenotazione pren)
	{
		myCheckbox.setState(false);
		myCheckbox1.setState(false);
		testo[8].setText("""");
		testo[0].setText(pren.getNumStanza());
		testo[1].setText(pren.getCognome());
		testo[2].setText(pren.getNome());
		testo[3].setText(pren.getNumTel());
		
		testo[4].setText(DateUtils.giveStringOfDate(pren.getInizioSogg()));
		testo[5].setText(DateUtils.giveStringOfDate(pren.getFineSogg()));
		
		testo[6].setText(""""+pren.getCaparra());
		testo[7].setText(pren.getRichParticolari());
		testo[8].setText(pren.getNomeAgenzia());
		testo[9].setText(DateUtils.giveStringOfDate(pren.getDataPren()));
		if (caller != 1)
		{
			testo[10].setText(""""+pren.getNumPers());
		}
		if (pren.getTramiteAgenzia() == Const.SI)
		{	
			myCheckbox1.setState(true);
			testo[8].setText(pren.getNomeAgenzia());
		}
	}
	
	protected boolean errori()
	{
		boolean numeri_corretti;
		Frame msg;
		if (caller != 1)
		{
			if (Utils.isIntPos(testo[10].getText()))
			{
				int num = Integer.parseInt(testo[10].getText());
				if ( (num > stanza.getPostiLetto()) || (num <= 0) )
				{	
					msg = new MessageDialog(this,"" La stanza non puo' contenere ""+num+"" persone! ""); 
					return true;
				}
			}
			else
			{
				msg = new MessageDialog(this,"" Inserire correttamente il numero di persone ""); 
				return true; 
			}			
		}	
		if (!((testo[0].getText()).length() <= 4))
		{
			msg = new MessageDialog(this,"" Il numero di stanza deve avere al piu' 4 caratteri! ""); 
			return true;
		}
		if (!((testo[1].getText()).length() <= 20))
		{
			msg = new MessageDialog(this,"" Il cognome deve avere al piu' 20 caratteri! ""); 
			return true;
		}
		if (!((testo[2].getText()).length() <= 20))
		{
			msg = new MessageDialog(this,"" Il nome deve avere al piu' 20 caratteri! ""); 
			return true;
		}
		if (!((testo[3].getText()).length() <= 16))
		{
			msg = new MessageDialog(this,"" Il numero di telefono deve avere al piu' 16 caratteri! ""); 
			return true;
		}
		if ((testo[1].getText()).equals("""")) 
		{
			msg = new MessageDialog(this,"" Manca il cognome! ""); 
			return true;
		}
		if ((testo[2].getText()).equals("""")) 
		{
			msg = new MessageDialog(this,"" Manca il nome! ""); 
			return true;
		}
		if ((testo[3].getText()).equals(""""))
		{
			msg = new MessageDialog(this,"" Manca il numero di telefono! ""); 
			return true;
		}
		return false;
	}

	public void cleanFields()
	{
		testo[0].setText("""");
        testo[1].setText("""");
        testo[2].setText("""");
        testo[3].setText("""");
        testo[4].setText("""");
        testo[5].setText("""");
        testo[6].setText("""");
        testo[7].setText("""");
        testo[8].setText("""");	
	}	
	
	void creaLista()
	{
		Frame msg;
		Prenotazione p;		
		
		L = (Principale.db).foundPrenotazioni(testo[1].getText(),testo[2].getText());
		if (L != null)
		{
			if (!L.isEmpty())
			{
				if (lista.getItemCount() > 0)
					lista.removeAll();
				panel3.setVisible(true);
				pack();
				for(int i = 1; i<=L.length(); i++)
					lista.addItem(L.getPrenotazione(i).toString());
			}
			else
				msg = new AvvisoDialog(this, ""Prenotazione non trovata!"");
		}
		else
			msg = new MessageDialog(this, ""Problemi con il DataBase"");
	}			
			

	void aggiornaDisp(Prenotazione pren, char tipo)
	{
		Disponibilita disp_da_cambiare = new Disponibilita();
		ListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();
		if (elenco_disp == null)
		{
			Frame msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return;
		}
		
		disp_da_cambiare = Utils.getDispOfRoom(elenco_disp, pren.getNumStanza(),true);
		if (tipo == Flag.DISPONIBILE) //cancellazione della prenotazione
		{	
			disp_da_cambiare.setDisponibilita(pren.getInizioSogg(), pren.getFineSogg(), tipo, Flag.ASSEGNATA);
			disp_da_cambiare.setDisponibilita(pren.getInizioSogg(), pren.getFineSogg(), tipo, Flag.BLOCCATA);
		}
		else
			{
				disp_da_cambiare.setDisponibilita(pren.getInizioSogg(), pren.getFineSogg(), tipo, Flag.DISPONIBILE);
				disp_da_cambiare.setDisponibilita(pren.getInizioSogg(), pren.getFineSogg(), tipo, Flag.COMMISSIONATA);
			}			
		(Principale.db).changeDisponibilita( disp_da_cambiare.getNumStanza(), 
											disp_da_cambiare.getDispAnnoCorr(),
											disp_da_cambiare.getDispAnnoProx() );
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁ext', 'ends', '▁frame', '\n', '{', '▁', '\n', '▁/', '/', 'd', 'ich', 'i', 'ar', 'az', 'ion', 'i', '▁di', '▁vari', 'ab', 'ili', '\n', '▁pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3', ';', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '▁label', '6,', '▁label', '7,', '▁', '\n', '▁', '\t', 'l', 'ab', 'el', '8,', '▁label', '9,', '▁label', '1', '0,', '▁label', '1', '1,', '▁label', '1', '2,', '▁label', '13', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁public', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁az', 'ion', 'e', ',', '▁as', 'se', 'g', 'na', ',', '▁canc', 'ella', ';', '\n', '▁text', 'field', '▁test', 'o', '[', ']', ';', '\n', '▁choice', '▁my', 'cho', 'ice', ';', '\n', '▁check', 'box', '[', ']', '▁check', 'box', 'es', ';', '\n', '▁check', 'box', '▁my', 'che', 'ck', 'box', ',', '▁my', 'che', 'ck', 'box', '1', ';', '\n', '▁check', 'box', 'gro', 'up', '▁p', 'ension', 'e', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'az', 'ion', 'i', '▁l', ';', '▁', '\n', '▁stan', 'za', '▁stan', 'za', ';', '\n', '▁int', '▁call', 'er', ';', '\n', '▁', '\n', '▁', '\n', '▁public', '▁m', 'asc', 'her', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', 'stan', 'za', '▁s', ',', '▁string', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ',', '▁string', '▁title', ',', '▁string', '▁capt', 'ion', ',', '▁int', '▁c', ',', '▁char', '▁p', 'ens', ')', '\n', '▁{', '\n', '▁super', '(', 't', 'it', 'le', ');', '\n', '▁call', 'er', '▁=', '▁c', ';', '\n', '▁stan', 'za', '▁=', '▁s', ';', '\n', '▁set', 'up', 'pan', 'els', '(', 'd', 'ata', '_', 'i', ',', '▁data', '_', 'f', ',', '▁capt', 'ion', ',', '▁p', 'ens', ');', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n', '▁pack', '(', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', 'str', 'ing', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ',', '▁string', '▁capt', 'ion', ',', '▁char', '▁p', 'ens', ')', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁de', 'i', '▁p', 'uls', 'ant', 'i', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n', '▁az', 'ion', 'e', '▁=', '▁new', '▁but', 'ton', '(', 'c', 'apt', 'ion', ');', '\n', '▁as', 'se', 'g', 'na', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁as', 'se', 'g', 'na', '▁stan', 'za', '▁""', ');', '\n', '▁canc', 'ella', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁canc', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁""', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁stan', 'za', '"")', ';', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(', '""', 'c', 'ogn', 'ome', '"")', ';', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '"")', ';', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁tele', 'f', 'on', 'ico', '"")', ';', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁pers', 'one', '"")', ';', '\n', '▁label', '6', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁in', 'iz', 'io', '"")', ';', '\n', '▁label', '7', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁fine', '"")', ';', '\n', '▁label', '8', '▁=', '▁new', '▁label', '(', '""', 'c', 'ap', 'ar', 'ra', '▁vers', 'ata', '▁""', '+', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'val', 'ut', 'a', '(', ')', '+', '"".', '"")', ';', '\n', '▁label', '9', '▁=', '▁new', '▁label', '(', '""', 'rich', 'i', 'est', 'e', '▁part', 'ic', 'ol', 'ari', '"")', ';', '\n', '▁label', '11', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '▁ag', 'enz', 'ia', '"")', ';', '\n', '▁label', '10', '▁=', '▁new', '▁label', '(', '""', 't', 'ip', 'o', '▁di', '▁p', 'ension', 'ament', 'o', ':', '"")', ';', '\n', '▁label', '1', '0.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t\t', 'l', 'ab', 'el', '12', '▁=', '▁new', '▁label', '(', '""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', '"")', ';', '\n\t\t\t', 'l', 'ab', 'el', '1', '2.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t\t', 'l', 'ab', 'el', '13', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁di', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '"")', ';', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁al', 'c', 'un', 'i', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁test', 'o', '=', 'new', '▁text', 'field', '[', '11', ']', ';', '\n', '▁test', 'o', '[', '0', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁test', 'o', '[', '1', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '2', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '3', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁10', ');', '\n', '▁test', 'o', '[', '4', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁12', ');', '\n', '▁test', 'o', '[', '5', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁12', ');', '\n', '▁test', 'o', '[', '6', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁10', ');', '\n', '▁test', 'o', '[', '7', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '8', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '8', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '[', '9', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁12', ');', '\n', '▁test', 'o', '[', '9', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '[', '10', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '3)', ';', '▁', '\n\t\t\t\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '▁', '\n', '▁p', 'ension', 'e', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '4', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁solo', '▁per', 'n', 'ott', 'ament', 'o', '"",', '▁p', 'ension', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁prim', 'a', '▁col', 'az', 'ion', 'e', '"",', '▁p', 'ension', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁me', 'z', 'za', '▁p', 'ension', 'e', '"",', '▁p', 'ension', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁p', 'ension', 'e', '▁complet', 'a', '"",', '▁p', 'ension', 'e', ',', '▁fal', 'se', ');', '\n\t\t', '▁sw', 'itch', '▁(', 'p', 'ens', ')', '\n\t\t', '▁{', '\n\t\t', '▁', '\t\t', 'c', 'ase', '▁flag', '.', 's', 'olo', '_', 'per', 'n', 'ott', 'ament', 'o', ':', '▁', '\n\t\t', '▁', '\t\t\t', 'che', 'ck', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁solo', '▁per', 'n', 'ott', 'ament', 'o', '"",', '▁p', 'ension', 'e', ',', '▁true', ');', '\n\t\t', '▁', '\t\t\t', 'break', ';', '\n\t\t\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 's', 'olo', '_', 'col', 'az', 'ion', 'e', ':', '▁', '\n\t\t\t\t\t', 'che', 'ck', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁prim', 'a', '▁col', 'az', 'ion', 'e', '"",', '▁p', 'ension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t\t\t', 'break', ';', '\n\t\t', '▁', '\t\t', 'c', 'ase', '▁flag', '.', 'me', 'z', 'za', '_', 'p', 'ension', 'e', ':', '\n\t\t\t\t\t', 'che', 'ck', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁me', 'z', 'za', '▁p', 'ension', 'e', '"",', '▁p', 'ension', 'e', ',', '▁true', ');', '\n\t\t\t', '▁', '\t\t', 'break', ';', '\n\t\t', '▁', '\t\t', 'c', 'ase', '▁flag', '.', 'p', 'ension', 'e', '_', 'com', 'p', 'let', 'a', ':', '▁', '\n\t\t\t\t\t', 'che', 'ck', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁p', 'ension', 'e', '▁complet', 'a', '"",', '▁p', 'ension', 'e', ',', '▁true', ');', '\n\t\t', '▁', '\t\t\t', 'break', ';', '\n\t\t', '▁}', '\n', '▁', '\n\n', '▁/', '/', 'c', 're', 'o', '▁due', '▁check', 'box', '▁a', '▁se', ""'"", '▁st', 'ant', 'i', '▁', '\n', '▁my', 'che', 'ck', 'box', '▁=', '▁new', '▁check', 'box', '(', '""', '▁let', 'to', '▁ag', 'gi', 'unt', 'iv', 'o', '"",', '▁n', 'ull', ',', '▁fal', 'se', ');', '\n\t\t\t', 'if', '▁(', 'stan', 'za', '▁!', '=', '▁n', 'ull', ')', '\n\t', '▁if', '▁(', 'stan', 'za', '.', 'get', 'dis', 'p', 'let', 'to', 'ag', 'g', '(', ')', '▁=', '=', '▁const', '.', 'no', ')', '\n', '▁', '\t', '▁', '\t', 'my', 'che', 'ck', 'box', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\n', '▁my', 'che', 'ck', 'box', '1', '▁=', '▁new', '▁check', 'box', '(', '""', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁tr', 'am', 'ite', '▁ag', 'enz', 'ia', '"",', '▁n', 'ull', ',', '▁fal', 'se', ');', '\n\t\t\t', 'my', 'che', 'ck', 'box', '1.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁choice', '▁', '\n', '▁if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁1', ')', '\n', '▁{', '\n', '▁', '\t', 'my', 'cho', 'ice', '▁=', '▁new', '▁choice', '(', ');', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!', '=', '▁n', 'ull', ')', '\n\t', '▁', '\t', 'for', '▁(', 'int', '▁i', '=', '1', ';', '▁i', '<', '=', '▁stan', 'za', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', ');', '▁i', '+', '+', ')', '\n', '▁', '\t\t', '▁', '\t', 'my', 'cho', 'ice', '.', 'ad', 'd', 'it', 'em', '(', '""', '""', '+', 'i', ');', '\n', '▁', '\t\t\t', 'el', 'se', '\n', '▁', '\t\t\t\t', 'my', 'cho', 'ice', '.', 'ad', 'd', 'it', 'em', '(', '""', '1', '"")', ';', '\t', '▁', '\n', '▁}', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁per', '▁ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '0', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '3,', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '9', ']', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '2,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '1', ']', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '3,', '▁2,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '2', ']', ',', '▁3,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '4,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '3', ']', ',', '▁1,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁1', ')', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁my', 'cho', 'ice', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁else', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '10', ']', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '6,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '4', ']', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '7,', '▁2,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '5', ']', ',', '▁3,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '8,', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '6', ']', ',', '▁1,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '9,', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '7', ']', ',', '▁1,', '▁6,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁my', 'che', 'ck', 'box', ',', '▁', '0,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁my', 'che', 'ck', 'box', '1,', '▁1,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '1,', '▁2,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '8', ']', ',', '▁3,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '0,', '▁', '0,', '▁8,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁check', 'box', 'es', '[', '0', ']', ',', '▁', '0,', '▁9,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁check', 'box', 'es', '[', '1', ']', ',', '▁', '0,', '▁10,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁check', 'box', 'es', '[', '2', ']', ',', '▁', '0,', '▁11,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁check', 'box', 'es', '[', '3', ']', ',', '▁', '0,', '▁12,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁az', 'ion', 'e', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁2', '▁)', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁as', 'se', 'g', 'na', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁5', '▁)', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁canc', 'ella', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\t\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁con', '▁la', '▁list', 'a', '▁de', 'i', '▁r', 'is', 'ult', 'ati', '▁d', 'ella', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '7,', 'f', 'al', 'se', ');', '\n', '▁list', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '1', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁1,', '▁4,', '▁13,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁15,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '▁', '\n', '▁}', '▁', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'publ', 'ic', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁read', 'd', 'at', 'ip', 'ren', '(', ')', '\n\t', '{', '\n\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', '▁=', '▁new', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '(', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'n', 'um', 'stan', 'za', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'c', 'ogn', 'ome', '(', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'n', 'ome', '(', 't', 'est', 'o', '[', '2', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'n', 'um', 't', 'el', '(', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁1', ')', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ump', 'ers', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 'my', 'cho', 'ice', '.', 'get', 'se', 'lect', 'ed', 'it', 'em', '(', ')', ')', ');', '▁/', '/', 'con', 'vers', 'ion', 'e', '▁string', '▁-', '>', '▁int', '\n\t\t', 'el', 'se', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ump', 'ers', '(', 'in', 'te', 'ger', '.', 'par', 'se', 'int', '(', 't', 'est', 'o', '[', '10', ']', '.', 'get', 'text', '(', ')', ')', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'in', 'iz', 'ios', 'og', 'g', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 't', 'est', 'o', '[', '4', ']', '.', 'get', 'text', '(', ')', ')', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'f', 'ines', 'og', 'g', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 't', 'est', 'o', '[', '5', ']', '.', 'get', 'text', '(', ')', ')', ');', '\n\t\t\n\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '[', '6', ']', '.', 'get', 'text', '(', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t\t', 'p', 'ren', '.', 'set', 'c', 'ap', 'ar', 'ra', '(', '0)', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'p', 'ren', '.', 'set', 'c', 'ap', 'ar', 'ra', '(', '(', 'fl', 'o', 'at', '.', 'value', 'of', '(', 't', 'est', 'o', '[', '6', ']', '.', 'get', 'text', '(', ')', ')', ').', 'fl', 'o', 'at', 'value', '(', ')', ');', '▁/', '/', '▁convers', 'ion', 'e', '▁string', '▁-', '>', '▁flo', 'at', '\n\t\t', 'p', 'ren', '.', 'set', 'rich', 'part', 'ic', 'ol', 'ari', '(', 't', 'est', 'o', '[', '7', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', 'my', 'che', 'ck', 'box', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t', 'p', 'ren', '.', 'set', 'rich', 'let', 'to', 'ag', 'g', '(', 'con', 'st', '.', 'si', ');', '\n\t\t', 'if', '▁(', 'my', 'che', 'ck', 'box', '1.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', '.', 's', 'ett', 'ram', 'ite', 'agen', 'z', 'ia', '(', 'con', 'st', '.', 'si', ');', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ome', 'agen', 'z', 'ia', '(', 't', 'est', 'o', '[', '8', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', '}', '\t\n\t\t\n\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t', 'p', 'ren', '.', 'set', 'p', 'ension', 'ament', 'o', '(', 'fl', 'ag', '.', 's', 'olo', '_', 'per', 'n', 'ott', 'ament', 'o', ');', '\n\t\t', 'el', 'se', '\t\n\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t', 'p', 'ren', '.', 'set', 'p', 'ension', 'ament', 'o', '(', 'fl', 'ag', '.', 's', 'olo', '_', 'col', 'az', 'ion', 'e', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'p', 'ension', 'ament', 'o', '(', 'fl', 'ag', '.', 'me', 'z', 'za', '_', 'p', 'ension', 'e', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'p', 'ension', 'ament', 'o', '(', 'fl', 'ag', '.', 'p', 'ension', 'e', '_', 'com', 'p', 'let', 'a', ');', '\t\t', '▁', '\t\t', '▁', '\n\t\t', '▁', '\n\t\t', 'p', 'ren', '.', 'set', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t', 'ret', 'urn', '▁p', 'ren', ';', '\n\t', '}', '\n\t\n\t', 'publ', 'ic', '▁vo', 'id', '▁writ', 'ed', 'at', 'ip', 'ren', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ')', '\n\t', '{', '\n\t\t', 'my', 'che', 'ck', 'box', '.', 'set', 'state', '(', 'f', 'al', 'se', ');', '\n\t\t', 'my', 'che', 'ck', 'box', '1.', 'set', 'state', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '[', '8', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '[', '0', ']', '.', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '[', '1', ']', '.', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'c', 'ogn', 'ome', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '[', '2', ']', '.', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '[', '3', ']', '.', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'um', 't', 'el', '(', ')', ');', '\n\t\t\n\t\t', 't', 'est', 'o', '[', '4', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ')', ');', '\n\t\t', 't', 'est', 'o', '[', '5', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', 'ren', '.', 'get', 'f', 'ines', 'og', 'g', '(', ')', ')', ');', '\n\t\t\n\t\t', 't', 'est', 'o', '[', '6', ']', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'p', 'ren', '.', 'get', 'c', 'ap', 'ar', 'ra', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '[', '7', ']', '.', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'rich', 'part', 'ic', 'ol', 'ari', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '[', '8', ']', '.', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '[', '9', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'p', 'ren', '.', 'get', 'd', 'at', 'ap', 'ren', '(', ')', ')', ');', '\n\t\t', 'if', '▁(', 'c', 'all', 'er', '▁!', '=', '▁1', ')', '\n\t\t', '{', '\n\t\t\t', 't', 'est', 'o', '[', '10', ']', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'p', 'ren', '.', 'get', 'n', 'ump', 'ers', '(', ')', ');', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'p', 'ren', '.', 'get', 'tr', 'am', 'ite', 'agen', 'z', 'ia', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n\t\t', '{', '\t\n\t\t\t', 'my', 'che', 'ck', 'box', '1.', 'set', 'state', '(', 'tr', 'ue', ');', '\n\t\t\t', 't', 'est', 'o', '[', '8', ']', '.', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'pro', 't', 'ected', '▁bo', 'ole', 'an', '▁er', 'ror', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'bo', 'ole', 'an', '▁num', 'er', 'i', '_', 'cor', 'ret', 'ti', ';', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'c', 'all', 'er', '▁!', '=', '▁1', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 't', 'est', 'o', '[', '10', ']', '.', 'get', 'text', '(', ')', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁num', '▁=', '▁inte', 'ger', '.', 'par', 'se', 'int', '(', 't', 'est', 'o', '[', '10', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t\t', 'if', '▁(', '▁(', 'n', 'um', '▁', '>', '▁stan', 'za', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', ')', ')', '▁||', '▁(', 'n', 'um', '▁', '<', '=', '▁', '0)', '▁)', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stan', 'za', '▁non', '▁pu', 'o', ""'"", '▁cont', 'en', 'ere', '▁""', '+', 'n', 'um', '+', '""', '▁pers', 'one', '!', '▁""', ');', '▁', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁cor', 'ret', 't', 'ament', 'e', '▁il', '▁num', 'ero', '▁di', '▁pers', 'one', '▁""', ');', '▁', '\n\t\t\t\t', 'ret', 'urn', '▁true', ';', '▁', '\n\t\t\t', '}', '\t\t\t\n\t\t', '}', '\t\n\t\t', 'if', '▁(', '!', '(', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁4', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁num', 'ero', '▁di', '▁stan', 'za', '▁de', 've', '▁aver', 'e', '▁al', '▁p', 'i', 'u', ""'"", '▁4', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁20', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁co', 'gn', 'ome', '▁de', 've', '▁aver', 'e', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 't', 'est', 'o', '[', '2', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁20', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁n', 'ome', '▁de', 've', '▁aver', 'e', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁16', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁num', 'ero', '▁di', '▁tele', 'f', 'on', 'o', '▁de', 've', '▁aver', 'e', '▁al', '▁p', 'i', 'u', ""'"", '▁16', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁co', 'gn', 'ome', '!', '▁""', ');', '▁', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 't', 'est', 'o', '[', '2', ']', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁n', 'ome', '!', '▁""', ');', '▁', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', ')', ').', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁di', '▁tele', 'f', 'on', 'o', '!', '▁""', ');', '▁', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁clean', 'field', 's', '(', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '[', '0', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '1', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '2', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '3', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '4', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '5', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '6', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '7', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '8', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\t\n\t', '}', '\t\n\t\n\t', 'v', 'oid', '▁cre', 'al', 'ista', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ';', '\t\t\n\t\t\n\t\t', 'l', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'p', 'ren', 'ot', 'az', 'ion', 'i', '(', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', '),', 't', 'est', 'o', '[', '2', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', 'l', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'p', 'ack', '(', ');', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', 'l', '.', 'get', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'i', ').', 't', 'ost', 'ring', '(', ')', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁non', '▁tro', 'v', 'ata', '!', '"")', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '"")', ';', '\n\t', '}', '\t\t\t\n\t\t\t\n\n\t', 'v', 'oid', '▁ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'fr', 'ame', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', 'tr', 'ue', ');', '\n\t\t', 'if', '▁(', 't', 'ip', 'o', '▁=', '=', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ')', '▁/', '/', 'c', 'anc', 'ell', 'az', 'ion', 'e', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '\n\t\t', '{', '\t\n\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁p', 'ren', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'as', 'se', 'gn', 'ata', ');', '\n\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁p', 'ren', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'bl', 'oc', 'c', 'ata', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁p', 'ren', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁p', 'ren', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'com', 'mission', 'ata', ');', '\n\t\t\t', '}', '\t\t\t\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'anged', 'is', 'pon', 'ib', 'il', 'ita', '(', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '(', ')', '▁', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁frame', '\n', '{', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'az', 'ioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '▁label', '6,', '▁label', '7,', '▁', '\n', '▁', '\t', 'l', 'abel', '8,', '▁label', '9,', '▁label', '10,', '▁label', '1', '1,', '▁label', '1', '2,', '▁label', '13', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁public', '▁button', '▁ann', 'ulla', ',', '▁az', 'ione', ',', '▁as', 'seg', 'na', ',', '▁canc', 'ella', ';', '\n', '▁text', 'field', '▁test', 'o', '[]', ';', '\n', '▁choice', '▁my', 'choice', ';', '\n', '▁check', 'box', '[]', '▁check', 'box', 'es', ';', '\n', '▁check', 'box', '▁my', 'check', 'box', ',', '▁my', 'check', 'box', '1', ';', '\n', '▁check', 'box', 'group', '▁pension', 'e', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'az', 'ioni', '▁l', ';', '▁', '\n', '▁stan', 'za', '▁stan', 'za', ';', '\n', '▁int', '▁call', 'er', ';', '\n', '▁', '\n', '▁', '\n', '▁public', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '(', 'stan', 'za', '▁s', ',', '▁string', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ',', '▁string', '▁title', ',', '▁string', '▁capt', 'ion', ',', '▁int', '▁c', ',', '▁char', '▁pens', ')', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n', '▁call', 'er', '▁=', '▁c', ';', '\n', '▁stan', 'za', '▁=', '▁s', ';', '\n', '▁setup', 'pan', 'els', '(', 'data', '_', 'i', ',', '▁data', '_', 'f', ',', '▁capt', 'ion', ',', '▁pens', ');', '\n', '▁in', 'iz', 'ial', 'iz', 'za', '();', '\n', '▁pack', '();', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '(', 'string', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ',', '▁string', '▁capt', 'ion', ',', '▁char', '▁pens', ')', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁dei', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁az', 'ione', '▁=', '▁new', '▁button', '(', 'capt', 'ion', ');', '\n', '▁as', 'seg', 'na', '▁=', '▁new', '▁button', '(""', '▁as', 'seg', 'na', '▁stan', 'za', '▁""', ');', '\n', '▁canc', 'ella', '▁=', '▁new', '▁button', '(""', '▁canc', 'ella', '▁pren', 'ot', 'azione', '▁""', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stan', 'za', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'c', 'ogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁tele', 'f', 'on', 'ico', '"");', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁pers', 'one', '"");', '\n', '▁label', '6', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', '"");', '\n', '▁label', '7', '▁=', '▁new', '▁label', '(""', 'data', '▁fine', '"");', '\n', '▁label', '8', '▁=', '▁new', '▁label', '(""', 'cap', 'arra', '▁vers', 'ata', '▁""', '+', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n', '▁label', '9', '▁=', '▁new', '▁label', '(""', 'rich', 'iest', 'e', '▁part', 'icol', 'ari', '"");', '\n', '▁label', '11', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁ag', 'enz', 'ia', '"");', '\n', '▁label', '10', '▁=', '▁new', '▁label', '(""', 'tip', 'o', '▁di', '▁pension', 'amento', ':', '"");', '\n', '▁label', '10.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t\t', 'l', 'abel', '12', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', '"");', '\n\t\t\t', 'l', 'abel', '12.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t\t', 'l', 'abel', '13', '▁=', '▁new', '▁label', '(""', 'data', '▁di', '▁pren', 'ot', 'azione', '"");', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁test', 'o', '=', 'new', '▁text', 'field', '[', '11', ']', ';', '\n', '▁test', 'o', '[', '0', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁test', 'o', '[', '1]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '2', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '3', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10', ');', '\n', '▁test', 'o', '[', '4', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁test', 'o', '[', '5', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁test', 'o', '[', '6', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10', ');', '\n', '▁test', 'o', '[', '7', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '8', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '8', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '[', '9', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁test', 'o', '[', '9', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '[', '10', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3)', ';', '▁', '\n\t\t\t\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '▁', '\n', '▁pension', 'e', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '4', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁solo', '▁pern', 'ott', 'amento', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁prima', '▁col', 'azione', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁mez', 'za', '▁pension', 'e', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁pension', 'e', '▁complet', 'a', '"",', '▁pension', 'e', ',', '▁false', ');', '\n\t\t', '▁switch', '▁(', 'pens', ')', '\n\t\t', '▁{', '\n\t\t', '▁', '\t\t', 'case', '▁flag', '.', 's', 'olo', '_', 'per', 'n', 'ott', 'amento', ':', '▁', '\n\t\t', '▁', '\t\t\t', 'check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁solo', '▁pern', 'ott', 'amento', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t\t', '▁', '\t\t\t', 'break', ';', '\n\t\t\t', '▁', '\t', 'case', '▁flag', '.', 's', 'olo', '_', 'col', 'azione', ':', '▁', '\n\t\t\t\t\t', 'check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁prima', '▁col', 'azione', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t\t\t', 'break', ';', '\n\t\t', '▁', '\t\t', 'case', '▁flag', '.', 'mez', 'za', '_', 'p', 'ension', 'e', ':', '\n\t\t\t\t\t', 'check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁mez', 'za', '▁pension', 'e', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t\t\t', '▁', '\t\t', 'break', ';', '\n\t\t', '▁', '\t\t', 'case', '▁flag', '.', 'p', 'ension', 'e', '_', 'comp', 'let', 'a', ':', '▁', '\n\t\t\t\t\t', 'check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁pension', 'e', '▁complet', 'a', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t\t', '▁', '\t\t\t', 'break', ';', '\n\t\t', '▁}', '\n', '▁', '\n\n', '▁//', 'cre', 'o', '▁due', '▁check', 'box', '▁a', '▁se', ""'"", '▁st', 'anti', '▁', '\n', '▁my', 'check', 'box', '▁=', '▁new', '▁check', 'box', '(""', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', '"",', '▁null', ',', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'stan', 'za', '▁!=', '▁null', ')', '\n\t', '▁if', '▁(', 'stan', 'za', '.', 'get', 'dis', 'p', 'let', 'to', 'agg', '()', '▁==', '▁const', '.', 'no', ')', '\n', '▁', '\t', '▁', '\t', 'my', 'check', 'box', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\n', '▁my', 'check', 'box', '1', '▁=', '▁new', '▁check', 'box', '(""', '▁pren', 'ot', 'azione', '▁tram', 'ite', '▁ag', 'enz', 'ia', '"",', '▁null', ',', '▁false', ');', '\n\t\t\t', 'my', 'check', 'box', '1.', 'set', 'en', 'abled', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁un', '▁choice', '▁', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁1)', '\n', '▁{', '\n', '▁', '\t', 'my', 'choice', '▁=', '▁new', '▁choice', '();', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!=', '▁null', ')', '\n\t', '▁', '\t', 'for', '▁(', 'int', '▁i', '=1', ';', '▁i', '<', '=', '▁stan', 'za', '.', 'get', 'post', 'il', 'etto', '();', '▁i', '++', ')', '\n', '▁', '\t\t', '▁', '\t', 'my', 'choice', '.', 'add', 'it', 'em', '(""', '""', '+', 'i', ');', '\n', '▁', '\t\t\t', 'el', 'se', '\n', '▁', '\t\t\t\t', 'my', 'choice', '.', 'add', 'it', 'em', '(""', '1', '"");', '\t', '▁', '\n', '▁}', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁per', '▁ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '0', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '3,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '9', '],', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '2,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '1', '],', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '3,', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '2', '],', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '4,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '3', '],', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁1)', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁my', 'choice', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁', '\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁else', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '10', '],', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁', '\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '6,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '4', '],', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '7,', '▁2,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '5', '],', '▁3,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '8,', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '6', '],', '▁1,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '9,', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '7', '],', '▁1,', '▁6,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁my', 'check', 'box', ',', '▁', '0,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁my', 'check', 'box', '1,', '▁1,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '1,', '▁2,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '[', '8', '],', '▁3,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '10,', '▁', '0,', '▁8,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁check', 'box', 'es', '[', '0', '],', '▁', '0,', '▁9,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁check', 'box', 'es', '[', '1', '],', '▁', '0,', '▁10,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁check', 'box', 'es', '[', '2', '],', '▁', '0,', '▁11,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁check', 'box', 'es', '[', '3', '],', '▁', '0,', '▁12,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁az', 'ione', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁2', '▁)', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁as', 'seg', 'na', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁5', '▁)', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁canc', 'ella', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\t\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '7,', 'false', ');', '\n', '▁list', 'a', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '1', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁1,', '▁4,', '▁13,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'false', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n\t', 'public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '▁', '\n', '▁}', '▁', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'public', '▁pren', 'ot', 'azione', '▁read', 'dat', 'ip', 'ren', '()', '\n\t', '{', '\n\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', '▁=', '▁new', '▁pren', 'ot', 'azione', '();', '\n\t\t', 'p', 'ren', '.', 'set', 'num', 'stan', 'za', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '());', '\n\t\t', 'p', 'ren', '.', 'set', 'c', 'ogn', 'ome', '(', 'test', 'o', '[', '1', '].', 'get', 'text', '());', '\n\t\t', 'p', 'ren', '.', 'set', 'n', 'ome', '(', 'test', 'o', '[', '2', '].', 'get', 'text', '());', '\n\t\t', 'p', 'ren', '.', 'set', 'num', 'tel', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'call', 'er', '▁==', '▁1)', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ump', 'ers', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'my', 'choice', '.', 'get', 'se', 'lected', 'it', 'em', '())', ');', '▁//', 'con', 'vers', 'ione', '▁string', '▁-', '>', '▁int', '\n\t\t', 'el', 'se', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ump', 'ers', '(', 'inte', 'ger', '.', 'par', 'se', 'int', '(', 'test', 'o', '[', '10', '].', 'get', 'text', '())', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'in', 'iz', 'ios', 'ogg', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'test', 'o', '[', '4', '].', 'get', 'text', '())', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'f', 'ines', 'ogg', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '())', ');', '\n\t\t\n\t\t', 'if', '▁(', '▁(', 'test', 'o', '[', '6', '].', 'get', 'text', '().', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t\t', 'p', 'ren', '.', 'set', 'cap', 'arra', '(', '0)', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'p', 'ren', '.', 'set', 'cap', 'arra', '(', '(', 'flo', 'at', '.', 'value', 'of', '(', 'test', 'o', '[', '6', '].', 'get', 'text', '())', ').', 'flo', 'at', 'value', '());', '▁//', '▁convers', 'ione', '▁string', '▁-', '>', '▁float', '\n\t\t', 'p', 'ren', '.', 'set', 'rich', 'part', 'icol', 'ari', '(', 'test', 'o', '[', '7', '].', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'my', 'check', 'box', '.', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t', 'p', 'ren', '.', 'set', 'rich', 'let', 'to', 'agg', '(', 'const', '.', 'si', ');', '\n\t\t', 'if', '▁(', 'my', 'check', 'box', '1.', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', '.', 's', 'ett', 'ram', 'ite', 'agen', 'zia', '(', 'const', '.', 'si', ');', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ome', 'agen', 'zia', '(', 'test', 'o', '[', '8', '].', 'get', 'text', '());', '\n\t\t', '}', '\t\n\t\t\n\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t', 'p', 'ren', '.', 'set', 'p', 'ension', 'amento', '(', 'flag', '.', 's', 'olo', '_', 'per', 'n', 'ott', 'amento', ');', '\n\t\t', 'el', 'se', '\t\n\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t', 'p', 'ren', '.', 'set', 'p', 'ension', 'amento', '(', 'flag', '.', 's', 'olo', '_', 'col', 'azione', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'p', 'ension', 'amento', '(', 'flag', '.', 'mez', 'za', '_', 'p', 'ension', 'e', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'p', 'ension', 'amento', '(', 'flag', '.', 'p', 'ension', 'e', '_', 'comp', 'let', 'a', ');', '\t\t', '▁', '\t\t', '▁', '\n\t\t', '▁', '\n\t\t', 'p', 'ren', '.', 'set', 'id', 'p', 'ren', 'ot', 'azione', '(', 'princ', 'ip', 'ale', '.', 'con', 'fig', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t', 'return', '▁pren', ';', '\n\t', '}', '\n\t\n\t', 'public', '▁void', '▁writ', 'ed', 'at', 'ip', 'ren', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'my', 'check', 'box', '.', 'set', 'state', '(', 'false', ');', '\n\t\t', 'my', 'check', 'box', '1.', 'set', 'state', '(', 'false', ');', '\n\t\t', 'test', 'o', '[', '8', '].', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '[', '0', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'test', 'o', '[', '1', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'c', 'ogn', 'ome', '());', '\n\t\t', 'test', 'o', '[', '2', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', '());', '\n\t\t', 'test', 'o', '[', '3', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'num', 'tel', '());', '\n\t\t\n\t\t', 'test', 'o', '[', '4', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '())', ');', '\n\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', 'ren', '.', 'get', 'f', 'ines', 'ogg', '())', ');', '\n\t\t\n\t\t', 'test', 'o', '[', '6', '].', 's', 'ette', 'xt', '(""', '""', '+', 'p', 'ren', '.', 'get', 'cap', 'arra', '());', '\n\t\t', 'test', 'o', '[', '7', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'rich', 'part', 'icol', 'ari', '());', '\n\t\t', 'test', 'o', '[', '8', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'p', 'ren', '.', 'get', 'dat', 'ap', 'ren', '())', ');', '\n\t\t', 'if', '▁(', 'call', 'er', '▁!=', '▁1)', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '[', '10', '].', 's', 'ette', 'xt', '(""', '""', '+', 'p', 'ren', '.', 'get', 'n', 'ump', 'ers', '());', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'p', 'ren', '.', 'get', 'tr', 'am', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t', '{', '\t\n\t\t\t', 'my', 'check', 'box', '1.', 'set', 'state', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '[', '8', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'protected', '▁bo', 'olean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'bo', 'olean', '▁num', 'eri', '_', 'cor', 'ret', 'ti', ';', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'call', 'er', '▁!=', '▁1)', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'is', 'int', 'pos', '(', 'test', 'o', '[', '10', '].', 'get', 'text', '()', '))', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁num', '▁=', '▁integer', '.', 'par', 'se', 'int', '(', 'test', 'o', '[', '10', '].', 'get', 'text', '());', '\n\t\t\t\t', 'if', '▁(', '▁(', 'num', '▁>', '▁stan', 'za', '.', 'get', 'post', 'il', 'etto', '())', '▁||', '▁(', 'num', '▁<', '=', '▁', '0)', '▁)', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stan', 'za', '▁non', '▁pu', 'o', ""'"", '▁cont', 'en', 'ere', '▁""', '+', 'num', '+', '""', '▁pers', 'one', '!', '▁""', ');', '▁', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁cor', 'rett', 'ament', 'e', '▁il', '▁num', 'ero', '▁di', '▁pers', 'one', '▁""', ');', '▁', '\n\t\t\t\t', 'return', '▁true', ';', '▁', '\n\t\t\t', '}', '\t\t\t\n\t\t', '}', '\t\n\t\t', 'if', '▁(', '!', '(', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁4', '))', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁num', 'ero', '▁di', '▁stan', 'za', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁4', '▁car', 'atter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 'test', 'o', '[', '1', '].', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', '))', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁cogn', 'ome', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 'test', 'o', '[', '2', '].', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', '))', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁n', 'ome', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '!', '(', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁16', '))', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁num', 'ero', '▁di', '▁tele', 'f', 'ono', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁16', '▁car', 'atter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'test', 'o', '[', '1', '].', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁cogn', 'ome', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'test', 'o', '[', '2', '].', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁n', 'ome', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '()', ').', 'equ', 'als', '(""', '"")', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁num', 'ero', '▁di', '▁tele', 'f', 'ono', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁clean', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '[', '0', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '1', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '2', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '3', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '4', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '6', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '7', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '8', '].', 's', 'ette', 'xt', '(""', '"");', '\t\n\t', '}', '\t\n\t\n\t', 'v', 'oid', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t\t\n\t\t\n\t\t', 'l', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'p', 'ren', 'ot', 'az', 'ioni', '(', 'test', 'o', '[', '1', '].', 'get', 'text', '(', '),', 'test', 'o', '[', '2', '].', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(', 'l', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', 'i', ').', 't', 'ost', 'ring', '());', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 'p', 'ren', 'ot', 'azione', '▁non', '▁tro', 'v', 'ata', '!', '"");', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '"");', '\n\t', '}', '\t\t\t\n\t\t\t\n\n\t', 'v', 'oid', '▁ag', 'gi', 'orn', 'ad', 'isp', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁pren', '.', 'get', 'num', 'stan', 'za', '(', '),', 'true', ');', '\n\t\t', 'if', '▁(', 'tip', 'o', '▁==', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ')', '▁//', 'canc', 'ell', 'azione', '▁della', '▁pren', 'ot', 'azione', '\n\t\t', '{', '\t\n\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'asse', 'gn', 'ata', ');', '\n\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'bl', 'occ', 'ata', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'com', 'mission', 'ata', ');', '\n\t\t\t', '}', '\t\t\t\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'changed', 'is', 'pon', 'ib', 'il', 'ita', '(', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '()', '▁', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁frame', '\n', '{', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'azioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3;', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '▁label', '6,', '▁label', '7,', '▁', '\n', '▁', '\t', 'label', '8,', '▁label', '9,', '▁label', '10,', '▁label', '11,', '▁label', '12,', '▁label', '13', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁public', '▁button', '▁ann', 'ulla', ',', '▁az', 'ione', ',', '▁as', 'segna', ',', '▁canc', 'ella', ';', '\n', '▁text', 'field', '▁testo', '[]', ';', '\n', '▁choice', '▁my', 'choice', ';', '\n', '▁check', 'box', '[]', '▁check', 'boxes', ';', '\n', '▁check', 'box', '▁my', 'check', 'box', ',', '▁my', 'check', 'box', '1;', '\n', '▁check', 'box', 'group', '▁pension', 'e', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'azioni', '▁l', ';', '▁', '\n', '▁stanza', '▁stanza', ';', '\n', '▁int', '▁caller', ';', '\n', '▁', '\n', '▁', '\n', '▁public', '▁masc', 'her', 'ap', 'ren', 'ot', 'azione', '(', 'stan', 'za', '▁s', ',', '▁string', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ',', '▁string', '▁title', ',', '▁string', '▁caption', ',', '▁int', '▁c', ',', '▁char', '▁pens', ')', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n', '▁caller', '▁=', '▁c', ';', '\n', '▁stanza', '▁=', '▁s', ';', '\n', '▁setup', 'pan', 'els', '(', 'data', '_', 'i', ',', '▁data', '_', 'f', ',', '▁caption', ',', '▁pens', ');', '\n', '▁in', 'iz', 'ial', 'izza', '();', '\n', '▁pack', '();', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '(', 'string', '▁data', '_', 'i', ',', '▁string', '▁data', '_', 'f', ',', '▁string', '▁caption', ',', '▁char', '▁pens', ')', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁dei', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁az', 'ione', '▁=', '▁new', '▁button', '(', 'caption', ');', '\n', '▁as', 'segna', '▁=', '▁new', '▁button', '(""', '▁as', 'segna', '▁stanza', '▁""', ');', '\n', '▁canc', 'ella', '▁=', '▁new', '▁button', '(""', '▁canc', 'ella', '▁pren', 'ot', 'azione', '▁""', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁della', '▁pren', 'ot', 'azione', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stanza', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'cogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁telef', 'on', 'ico', '"");', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁pers', 'one', '"");', '\n', '▁label', '6', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', '"");', '\n', '▁label', '7', '▁=', '▁new', '▁label', '(""', 'data', '▁fine', '"");', '\n', '▁label', '8', '▁=', '▁new', '▁label', '(""', 'cap', 'arra', '▁vers', 'ata', '▁""+', '(', 'princip', 'ale', '.', 'config', ').', 'get', 'val', 'uta', '()', '+', '"".', '"");', '\n', '▁label', '9', '▁=', '▁new', '▁label', '(""', 'rich', 'iest', 'e', '▁part', 'icol', 'ari', '"");', '\n', '▁label', '11', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁ag', 'enzia', '"");', '\n', '▁label', '10', '▁=', '▁new', '▁label', '(""', 'tip', 'o', '▁di', '▁pension', 'amento', ':', '"");', '\n', '▁label', '10.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t\t', 'label', '12', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', '"");', '\n\t\t\t', 'label', '12.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t\t', 'label', '13', '▁=', '▁new', '▁label', '(""', 'data', '▁di', '▁pren', 'ot', 'azione', '"");', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁testo', '=', 'new', '▁text', 'field', '[', '11', '];', '\n', '▁testo', '[0]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁testo', '[1]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '[', '2]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '[', '3]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10);', '\n', '▁testo', '[', '4]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁testo', '[', '5]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁testo', '[', '6]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10);', '\n', '▁testo', '[', '7]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '[', '8]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '[', '8', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '[', '9', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁12', ');', '\n', '▁testo', '[', '9', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '[', '10]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3);', '▁', '\n\t\t\t\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '▁', '\n', '▁pension', 'e', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'boxes', '▁=', '▁new', '▁check', 'box', '[', '4', '];', '\n', '▁check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁solo', '▁pern', 'ott', 'amento', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁prima', '▁col', 'azione', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', '▁mez', 'za', '▁pension', 'e', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', '▁pension', 'e', '▁complet', 'a', '"",', '▁pension', 'e', ',', '▁false', ');', '\n\t\t', '▁switch', '▁(', 'pens', ')', '\n\t\t', '▁{', '\n\t\t', '▁', '\t\t', 'case', '▁flag', '.', 'solo', '_', 'per', 'nott', 'amento', ':', '▁', '\n\t\t', '▁', '\t\t\t', 'check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁solo', '▁pern', 'ott', 'amento', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t\t', '▁', '\t\t\t', 'break', ';', '\n\t\t\t', '▁', '\t', 'case', '▁flag', '.', 'solo', '_', 'col', 'azione', ':', '▁', '\n\t\t\t\t\t', 'check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁prima', '▁col', 'azione', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t\t\t', 'break', ';', '\n\t\t', '▁', '\t\t', 'case', '▁flag', '.', 'mez', 'za', '_', 'pension', 'e', ':', '\n\t\t\t\t\t', 'check', 'boxes', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', '▁mez', 'za', '▁pension', 'e', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t\t\t', '▁', '\t\t', 'break', ';', '\n\t\t', '▁', '\t\t', 'case', '▁flag', '.', 'pension', 'e', '_', 'comp', 'leta', ':', '▁', '\n\t\t\t\t\t', 'check', 'boxes', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', '▁pension', 'e', '▁complet', 'a', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t\t', '▁', '\t\t\t', 'break', ';', '\n\t\t', '▁}', '\n', '▁', '\n\n', '▁//', 'cre', 'o', '▁due', '▁check', 'box', '▁a', '▁se', ""'"", '▁st', 'anti', '▁', '\n', '▁my', 'check', 'box', '▁=', '▁new', '▁check', 'box', '(""', '▁let', 'to', '▁ag', 'gi', 'unt', 'ivo', '"",', '▁null', ',', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'stan', 'za', '▁!=', '▁null', ')', '\n\t', '▁if', '▁(', 'stan', 'za', '.', 'get', 'disp', 'letto', 'agg', '()', '▁==', '▁const', '.', 'no', ')', '\n', '▁', '\t', '▁', '\t', 'my', 'check', 'box', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\n', '▁my', 'check', 'box', '1', '▁=', '▁new', '▁check', 'box', '(""', '▁pren', 'ot', 'azione', '▁tram', 'ite', '▁ag', 'enzia', '"",', '▁null', ',', '▁false', ');', '\n\t\t\t', 'my', 'check', 'box', '1.', 'set', 'enabled', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁un', '▁choice', '▁', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁1)', '\n', '▁{', '\n', '▁', '\t', 'my', 'choice', '▁=', '▁new', '▁choice', '();', '\n\t\t\t\t', 'if', '▁(', 'stan', 'za', '▁!=', '▁null', ')', '\n\t', '▁', '\t', 'for', '▁(', 'int', '▁i', '=1', ';', '▁i', '<', '=', '▁stanza', '.', 'get', 'post', 'il', 'etto', '();', '▁i', '++)', '\n', '▁', '\t\t', '▁', '\t', 'my', 'choice', '.', 'add', 'item', '(""', '""', '+', 'i', ');', '\n', '▁', '\t\t\t', 'else', '\n', '▁', '\t\t\t\t', 'my', 'choice', '.', 'add', 'item', '(""', '1', '"");', '\t', '▁', '\n', '▁}', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁per', '▁ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[0', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '13,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '9', '],', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '2,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[1', '],', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '3,', '▁2,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '2', '],', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '4,', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '3', '],', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁1)', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁my', 'choice', ',', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁', '\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁else', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '10', '],', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁', '\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '6,', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '4', '],', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '7,', '▁2,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '5', '],', '▁3,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '8,', '▁0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '6', '],', '▁1,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '9,', '▁0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '7', '],', '▁1,', '▁6,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁my', 'check', 'box', ',', '▁0,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁my', 'check', 'box', '1,', '▁1,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '11,', '▁2,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '[', '8', '],', '▁3,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '10,', '▁0,', '▁8,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁check', 'boxes', '[0', '],', '▁0,', '▁9,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁check', 'boxes', '[1', '],', '▁0,', '▁10,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁check', 'boxes', '[', '2', '],', '▁0,', '▁11,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁check', 'boxes', '[', '3', '],', '▁0,', '▁12,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁az', 'ione', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁2', '▁)', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁as', 'segna', ',', '▁2,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁if', '▁(', 'call', 'er', '▁==', '▁5', '▁)', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁canc', 'ella', ',', '▁2,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\t\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ricer', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '7,', 'false', ');', '\n', '▁list', 'a', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁label', '12,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁list', 'a', ',', '▁0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.0,', '▁3.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁1,', '▁4,', '▁13,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'panel', '3.', 'set', 'visible', '(', 'false', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n\t', 'public', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '▁', '\n', '▁}', '▁', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'public', '▁pren', 'ot', 'azione', '▁read', 'dat', 'ip', 'ren', '()', '\n\t', '{', '\n\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', '▁=', '▁new', '▁pren', 'ot', 'azione', '();', '\n\t\t', 'p', 'ren', '.', 'set', 'num', 'stan', 'za', '(', 'test', 'o', '[0', '].', 'get', 'text', '());', '\n\t\t', 'p', 'ren', '.', 'set', 'cogn', 'ome', '(', 'test', 'o', '[1', '].', 'get', 'text', '());', '\n\t\t', 'p', 'ren', '.', 'set', 'n', 'ome', '(', 'test', 'o', '[', '2', '].', 'get', 'text', '());', '\n\t\t', 'p', 'ren', '.', 'set', 'num', 'tel', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'call', 'er', '▁==', '▁1)', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ump', 'ers', '(', 'integer', '.', 'parse', 'int', '(', 'my', 'choice', '.', 'get', 'selected', 'item', '())', ');', '▁//', 'con', 'vers', 'ione', '▁string', '▁->', '▁int', '\n\t\t', 'else', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ump', 'ers', '(', 'integer', '.', 'parse', 'int', '(', 'test', 'o', '[', '10', '].', 'get', 'text', '())', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'in', 'iz', 'ios', 'ogg', '(', 'date', 'utils', '.', 'convert', 'date', '(', 'test', 'o', '[', '4', '].', 'get', 'text', '())', ');', '\n\t\t', 'p', 'ren', '.', 'set', 'f', 'ines', 'ogg', '(', 'date', 'utils', '.', 'convert', 'date', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '())', ');', '\n\t\t\n\t\t', 'if', '▁(', '▁(', 'test', 'o', '[', '6', '].', 'get', 'text', '().', 'equals', '(""', '""))', '▁)', '\n\t\t\t', 'p', 'ren', '.', 'set', 'cap', 'arra', '(', '0);', '\n\t\t', 'else', '\n\t\t\t', 'p', 'ren', '.', 'set', 'cap', 'arra', '((', 'float', '.', 'value', 'of', '(', 'test', 'o', '[', '6', '].', 'get', 'text', '())', ').', 'float', 'value', '());', '▁//', '▁convers', 'ione', '▁string', '▁->', '▁float', '\n\t\t', 'p', 'ren', '.', 'set', 'rich', 'part', 'icol', 'ari', '(', 'test', 'o', '[', '7', '].', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'my', 'check', 'box', '.', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t', 'p', 'ren', '.', 'set', 'rich', 'letto', 'agg', '(', 'const', '.', 'si', ');', '\n\t\t', 'if', '▁(', 'my', 'check', 'box', '1.', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', '.', 'sett', 'ram', 'ite', 'agen', 'zia', '(', 'const', '.', 'si', ');', '\n\t\t\t', 'p', 'ren', '.', 'set', 'n', 'ome', 'agen', 'zia', '(', 'test', 'o', '[', '8', '].', 'get', 'text', '());', '\n\t\t', '}', '\t\n\t\t\n\t\t', 'if', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t', 'p', 'ren', '.', 'set', 'pension', 'amento', '(', 'flag', '.', 'solo', '_', 'per', 'nott', 'amento', ');', '\n\t\t', 'else', '\t\n\t\t\t', 'if', '▁(', 'check', 'boxes', '[1', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t', 'p', 'ren', '.', 'set', 'pension', 'amento', '(', 'flag', '.', 'solo', '_', 'col', 'azione', ');', '\n\t\t\t', 'else', '\n\t\t\t\t', 'if', '▁(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'pension', 'amento', '(', 'flag', '.', 'mez', 'za', '_', 'pension', 'e', ');', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'p', 'ren', '.', 'set', 'pension', 'amento', '(', 'flag', '.', 'pension', 'e', '_', 'comp', 'leta', ');', '\t\t', '▁', '\t\t', '▁', '\n\t\t', '▁', '\n\t\t', 'p', 'ren', '.', 'set', 'id', 'p', 'ren', 'ot', 'azione', '(', 'princip', 'ale', '.', 'config', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t', 'return', '▁pren', ';', '\n\t', '}', '\n\t\n\t', 'public', '▁void', '▁writ', 'ed', 'at', 'ip', 'ren', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'my', 'check', 'box', '.', 'set', 'state', '(', 'false', ');', '\n\t\t', 'my', 'check', 'box', '1.', 'set', 'state', '(', 'false', ');', '\n\t\t', 'test', 'o', '[', '8', '].', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '[0', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'test', 'o', '[1', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'cogn', 'ome', '());', '\n\t\t', 'test', 'o', '[', '2', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', '());', '\n\t\t', 'test', 'o', '[', '3', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'num', 'tel', '());', '\n\t\t\n\t\t', 'test', 'o', '[', '4', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '())', ');', '\n\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', 'ren', '.', 'get', 'f', 'ines', 'ogg', '())', ');', '\n\t\t\n\t\t', 'test', 'o', '[', '6', '].', 's', 'ette', 'xt', '(""', '""', '+', 'p', 'ren', '.', 'get', 'cap', 'arra', '());', '\n\t\t', 'test', 'o', '[', '7', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'rich', 'part', 'icol', 'ari', '());', '\n\t\t', 'test', 'o', '[', '8', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t', 'test', 'o', '[', '9', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'p', 'ren', '.', 'get', 'dat', 'ap', 'ren', '())', ');', '\n\t\t', 'if', '▁(', 'call', 'er', '▁!=', '▁1)', '\n\t\t', '{', '\n\t\t\t', 'test', 'o', '[', '10', '].', 's', 'ette', 'xt', '(""', '""', '+', 'p', 'ren', '.', 'get', 'n', 'ump', 'ers', '());', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'p', 'ren', '.', 'get', 'tram', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t', '{', '\t\n\t\t\t', 'my', 'check', 'box', '1.', 'set', 'state', '(', 'true', ');', '\n\t\t\t', 'test', 'o', '[', '8', '].', 's', 'ette', 'xt', '(', 'p', 'ren', '.', 'get', 'n', 'ome', 'agen', 'zia', '());', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'protected', '▁boolean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'boolean', '▁num', 'eri', '_', 'cor', 'retti', ';', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'if', '▁(', 'call', 'er', '▁!=', '▁1)', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'utils', '.', 'is', 'int', 'pos', '(', 'test', 'o', '[', '10', '].', 'get', 'text', '()))', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁num', '▁=', '▁integer', '.', 'parse', 'int', '(', 'test', 'o', '[', '10', '].', 'get', 'text', '());', '\n\t\t\t\t', 'if', '▁(', '▁(', 'num', '▁>', '▁stanza', '.', 'get', 'post', 'il', 'etto', '())', '▁||', '▁(', 'num', '▁<', '=', '▁0)', '▁)', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stanza', '▁non', '▁pu', 'o', ""'"", '▁cont', 'en', 'ere', '▁""+', 'num', '+""', '▁pers', 'one', '!', '▁""', ');', '▁', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁cor', 'rett', 'amente', '▁il', '▁numero', '▁di', '▁pers', 'one', '▁""', ');', '▁', '\n\t\t\t\t', 'return', '▁true', ';', '▁', '\n\t\t\t', '}', '\t\t\t\n\t\t', '}', '\t\n\t\t', 'if', '▁(!', '((', 'test', 'o', '[0', '].', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁4', '))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁numero', '▁di', '▁stanza', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁4', '▁car', 'atter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(!', '((', 'test', 'o', '[1', '].', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', '))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁cogn', 'ome', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(!', '((', 'test', 'o', '[', '2', '].', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', '))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁nome', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(!', '((', 'test', 'o', '[', '3', '].', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁16', '))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁il', '▁numero', '▁di', '▁telef', 'ono', '▁de', 've', '▁aver', 'e', '▁al', '▁pi', 'u', ""'"", '▁16', '▁car', 'atter', 'i', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁((', 'test', 'o', '[1', '].', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁cogn', 'ome', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁((', 'test', 'o', '[', '2', '].', 'get', 'text', '()', ').', 'equals', '(""', '""))', '▁', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁nome', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁((', 'test', 'o', '[', '3', '].', 'get', 'text', '()', ').', 'equals', '(""', '""))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁man', 'ca', '▁il', '▁numero', '▁di', '▁telef', 'ono', '!', '▁""', ');', '▁', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁clean', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '[0', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[1', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[', '2', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[', '3', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[', '4', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[', '5', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[', '6', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[', '7', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[', '8', '].', 's', 'ette', 'xt', '("""");', '\t\n\t', '}', '\t\n\t\n\t', 'void', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t\t\n\t\t\n\t\t', 'l', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'p', 'ren', 'ot', 'azioni', '(', 'test', 'o', '[1', '].', 'get', 'text', '(),', 'test', 'o', '[', '2', '].', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(!', 'l', '.', 'isempty', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'lista', '.', 'remove', 'all', '();', '\n\t\t\t\t', 'panel', '3.', 'set', 'visible', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1;', '▁i', '<', '=', 'l', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t\t', 'lista', '.', 'add', 'item', '(', 'l', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', 'i', ').', 'tostring', '());', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 'p', 'ren', 'ot', 'azione', '▁non', '▁trov', 'ata', '!', '"");', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', '"");', '\n\t', '}', '\t\t\t\n\t\t\t\n\n\t', 'void', '▁ag', 'gi', 'orn', 'ad', 'isp', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁char', '▁tipo', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '_', 'da', '_', 'camb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁elenco', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁(', 'elen', 'co', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'disp', 'of', 'room', '(', 'elen', 'co', '_', 'disp', ',', '▁pren', '.', 'get', 'num', 'stan', 'za', '(),', 'true', ');', '\n\t\t', 'if', '▁(', 'tip', 'o', '▁==', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ')', '▁//', 'canc', 'ell', 'azione', '▁della', '▁pren', 'ot', 'azione', '\n\t\t', '{', '\t\n\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁tipo', ',', '▁flag', '.', 'asse', 'gn', 'ata', ');', '\n\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁tipo', ',', '▁flag', '.', 'bl', 'occ', 'ata', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', '{', '\n\t\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁tipo', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁pren', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁tipo', ',', '▁flag', '.', 'commission', 'ata', ');', '\n\t\t\t', '}', '\t\t\t\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'changed', 'is', 'pon', 'ibil', 'ita', '(', '▁disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'num', 'stan', 'za', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'disp', 'ann', 'oc', 'orr', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'disp', 'ann', 'op', 'rox', '()', '▁);', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class maschera prenotazion extend frame dichiarazioni variabili panel panel panel panel label etichetta label label label label label label label label label label label label label list lista public button annulla azion assegna cancella text field testo choic mychoic checkbox checkbox checkbox checkbox checkbox checkbox group pension grid bag layout gridbag new grid bag layout frame padr new frame lista prenotazioni stanza stanza int caller public maschera prenotazion stanza string data string data string titl string caption int char pen super titl caller stanza setup panel data data caption pen inizializza pack void setup panel string data string data string caption char pen set font configurazion sistema font base creo dei pulsanti disabilito due annulla new button fine azion new button caption assegna new button assegna stanza cancella new button cancella prenotazion creo etichett etichetta new label inserimento dei dati della prenotazion etichetta set font configurazion sistema font titolo label new label numero stanza label new label cognom label new label nome label new label numero telefonico label new label numero person label new label data inizio label new label data fine label new label caparra versata principal config get valuta label new label richiest particolari label new label nome agenzia ""); label10 new label tipo pensionamento :""); label10 set font configurazion sistema font_titolo label12 new label risultato della ricerca ""); label12 set font configurazion sistema font_titolo label13 new label data prenotazion ""); creo text field rendo alcuni non editabili testo new text field testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", testo set edit fals testo new text field ("""", testo set edit fals testo new text field ("""", creo checkbox esclusion pension new checkbox group (); checkbox new checkbox checkbox new checkbox solo pernottamento pension fals checkbox new checkbox prima colazion pension fals checkbox new checkbox mezza pension pension fals checkbox new checkbox pension completa pension fals switch pen case flag solo_pernottamento checkbox new checkbox solo pernottamento pension true break case flag solo_colazion checkbox new checkbox prima colazion pension true break case flag mezza_pension checkbox new checkbox mezza pension pension true break case flag pensione_completa checkbox new checkbox pension completa pension true break creo due checkbox stanti checkbox new checkbox letto aggiuntivo null fals stanza null stanza get disp letto agg const checkbox set enabl fals checkbox1 new checkbox prenotazion tramit agenzia null fals checkbox1 set enabl fals creo choic caller mychoic new choic (); stanza null int stanza get posti letto (); ++) mychoic add item (""""+ els mychoic add item ""); creo pannello alto per inserimento dei dati del client panel1 new panel (); panel1 set layout gridbag util constrain panel1 etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel1 label1 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label13 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label2 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label3 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label4 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label5 grid bag constraint none grid bag constraint northwest caller util constrain panel1 mychoic grid bag constraint none grid bag constraint northwest els util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label6 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label7 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label8 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label9 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint horizont grid bag constraint northwest util constrain panel1 checkbox grid bag constraint none grid bag constraint northwest util constrain panel1 checkbox1 grid bag constraint none grid bag constraint northwest util constrain panel1 label11 grid bag constraint none grid bag constraint northwest util constrain panel1 testo grid bag constraint none grid bag constraint northwest util constrain panel1 label10 grid bag constraint none grid bag constraint northwest util constrain panel1 checkbox grid bag constraint none grid bag constraint northwest util constrain panel1 checkbox grid bag constraint none grid bag constraint northwest util constrain panel1 checkbox grid bag constraint none grid bag constraint northwest util constrain panel1 checkbox grid bag constraint none grid bag constraint northwest creo pannello basso con due pulsanti panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint center util constrain panel2 azion grid bag constraint none grid bag constraint center caller util constrain panel2 assegna grid bag constraint none grid bag constraint center caller util constrain panel2 cancella grid bag constraint none grid bag constraint center creo pannello con lista dei risultati della ricerca lista new list fals lista set font configurazion sistema font_allineato panel3 new panel (); panel3 set layout gridbag util constrain panel3 label12 grid bag constraint none grid bag constraint west util constrain panel3 lista grid bag constraint grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint west util constrain panel3 grid bag constraint horizont grid bag constraint west panel3 set visibl fals pack (); public void inizializza annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); public prenotazion read dati pren prenotazion pren new prenotazion (); pren set num stanza testo get text ()); pren set cognom testo get text ()); pren set nome testo get text ()); pren set num tel testo get text ()); caller pren set num per integ pars int mychoic get select item ())); conversion string int els pren set num per integ pars int testo get text ())); pren set inizio sogg date util convert date testo get text ())); pren set fine sogg date util convert date testo get text ())); testo get text (). equal ("""")) pren set caparra els pren set caparra float valu testo get text ())). float valu ()); conversion string float pren set rich particolari testo get text ()); checkbox get state true pren set rich letto agg const checkbox1 get state true pren set tramit agenzia const pren set nome agenzia testo get text ()); checkbox get state true pren set pensionamento flag solo_pernottamento els checkbox get state true pren set pensionamento flag solo_colazion els checkbox get state true pren set pensionamento flag mezza_pension els pren set pensionamento flag pensione_completa pren set prenotazion principal config get prenotazion ()); return pren public void write dati pren prenotazion pren checkbox set state fals checkbox1 set state fals testo set text (""""); testo set text pren get num stanza ()); testo set text pren get cognom ()); testo set text pren get nome ()); testo set text pren get num tel ()); testo set text date util give string date pren get inizio sogg ())); testo set text date util give string date pren get fine sogg ())); testo set text (""""+ pren get caparra ()); testo set text pren get rich particolari ()); testo set text pren get nome agenzia ()); testo set text date util give string date pren get data pren ())); caller testo set text (""""+ pren get num per ()); pren get tramit agenzia const checkbox1 set state true testo set text pren get nome agenzia ()); protect boolean errori boolean numeri_corretti frame msg caller util int pos testo get text ())) int num integ pars int testo get text ()); num stanza get posti letto ()) num msg new messag dialog stanza non puo contener num person ""); return true els msg new messag dialog inserir correttament numero person ""); return true (!(( testo get text ()). length msg new messag dialog numero stanza deve aver piu caratteri ""); return true (!(( testo get text ()). length msg new messag dialog cognom deve aver piu caratteri ""); return true (!(( testo get text ()). length msg new messag dialog nome deve aver piu caratteri ""); return true (!(( testo get text ()). length msg new messag dialog numero telefono deve aver piu caratteri ""); return true testo get text ()). equal ("""")) msg new messag dialog manca cognom ""); return true testo get text ()). equal ("""")) msg new messag dialog manca nome ""); return true testo get text ()). equal ("""")) msg new messag dialog manca numero telefono ""); return true return fals public void clean field testo set text (""""); testo set text (""""); testo set text (""""); testo set text (""""); testo set text (""""); testo set text (""""); testo set text (""""); testo set text (""""); testo set text (""""); void crea lista frame msg prenotazion principal found prenotazioni testo get text (), testo get text ()); null empti ()) lista get item count lista remov (); panel3 set visibl true pack (); int length (); ++) lista add item get prenotazion string ()); els msg new avviso dialog prenotazion non trovata !""); els msg new messag dialog problemi con data base ""); void aggiorna disp prenotazion pren char tipo disponibilita disp_da_cambiar new disponibilita (); lista disponibilita elenco_disp principal elenco disponibilita (); elenco_disp null frame msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return disp_da_cambiar util get disp room elenco_disp pren get num stanza (), true tipo flag disponibil cancellazion della prenotazion disp_da_cambiar set disponibilita pren get inizio sogg (), pren get fine sogg (), tipo flag assegnata disp_da_cambiar set disponibilita pren get inizio sogg (), pren get fine sogg (), tipo flag bloccata els disp_da_cambiar set disponibilita pren get inizio sogg (), pren get fine sogg (), tipo flag disponibil disp_da_cambiar set disponibilita pren get inizio sogg (), pren get fine sogg (), tipo flag commissionata principal chang disponibilita disp_da_cambiar get num stanza (), disp_da_cambiar get disp anno corr (), disp_da_cambiar get disp anno prox"
57~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/VediBeniServizi.java~VediBeniServizi.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import moduli.BeneServizio;
import moduli.DataBase;
import moduli.ListaBeniServizi;

public class VediBeniServizi extends MascheraBeneServizio
{
	BeneServizio extra = null;
	Label elenco_extra1, elenco_extra2, desc_extra, px_extra;
	TextField desc, prezzo;
	Button annulla3, annulla_canc;
		
	public VediBeniServizi()
	{
		super(""Visualizzazione dei dati di un bene o servizio"");
		setupPannello();
		initialize();
	}
	
	void setupPannello()
	{
		panel[11].setLayout(gridbag);
		elenco_extra1 = new Label(""Scegliere il bene o servizio, appartenente"");
		elenco_extra2 = new Label(""alla categoria selezionata, da visualizzare"");
		annulla3 = new Button("" Fine "");
		Utils.constrain(panel[11], elenco_extra1, 0, 0, 5, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 0, 0, 0);
		Utils.constrain(panel[11], elenco_extra2, 0, 1, 5, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 0, 5, 0);
		Utils.constrain(panel[11], elenco, 0, 2, 5, 1,GridBagConstraints.HORIZONTAL,
				GridBagConstraints.CENTER, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[11], annulla3, 2, 3, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);

		panel[12].setLayout(gridbag);
		desc_extra = new Label(""Nome del bene"");
		px_extra = new Label(""Prezzo del bene"");
		desc = new TextField("""",40);
		prezzo = new TextField("""",10);
		desc.setEditable(false);
		prezzo.setEditable(false);
		annulla_canc = new Button("" Indietro "");
		Utils.constrain(panel[12], desc_extra, 0, 0, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], desc, 1, 0, 4, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);
		Utils.constrain(panel[12], px_extra, 0, 1, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 0.0, 0.0, 5, 5, 5, 0);
		Utils.constrain(panel[12], prezzo, 1, 1, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 0);
		Utils.constrain(panel[12], annulla_canc, 1, 2, 1, 1,GridBagConstraints.NONE,
				GridBagConstraints.EAST, 1.0, 0.0, 5, 5, 0, 5);
	}

	public void initialize()
	{
		scelta_piatto[4].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[4].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.DESSERT);
					p();
				}
			}
		});

		scelta_piatto[5].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_piatto[5].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.FRUTTA);
					p();
				}
			}
		});

		scelta_servizio[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_servizio[0].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.RICREATIVI);
					o();
				}
			}
		});

		scelta_servizio[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_servizio[1].getState())
				{
					level = 1;
					codice = composeCode(level, BeneServizio.ALTRO);
					o();
				}
			}
		});

		scelta_bevanda[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CAFFETTERIA);
					o();
				}
			}
		});

		scelta_bevanda[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.ANALCOLICI);
					o();
				}
			}
		});

		scelta_bevanda[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_bevanda[2].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.ALCOLICI);
					o();
				}
			}
		});

		scelta_cibo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_cibo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.DOLCI);
					o();
				}
			}
		});

		scelta_cibo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_cibo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.SALATI);
					o();
				}
			}
		});

		scelta_antipasto[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_antipasto[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.FREDDI);
					o();
				}
			}
		});

		scelta_antipasto[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_antipasto[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CALDI);
					o();
				}
			}
		});

		scelta_primo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_primo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.SOLIDI);
					o();
				}
			}
		});

		scelta_primo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_primo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.LIQUIDI);
					o();
				}
			}
		});

		scelta_secondo[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_secondo[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.CARNE);
					o();
				}
			}
		});

		scelta_secondo[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_secondo[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.PESCE);
					o();
				}
			}
		});

		scelta_contorno[0].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[0].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.VERDURA_COTTA);
					o();
				}
			}
		});

		scelta_contorno[1].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[1].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.VERDURA_CRUDA);
					o();
				}
			}
		});

		scelta_contorno[2].addItemListener(new ItemListener()
		{
			public void itemStateChanged(ItemEvent e)
			{
				if(scelta_contorno[2].getState())
				{
					level = 2;
					codice = composeCode(level, BeneServizio.FORMAGGIO);
					o();
				}
			}
		});

		annulla_canc.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				goBack();
			}
		});

		annulla3.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				padre.setEnabled(true);
			}
		});

		elenco.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				beneSelezionato();
			}
		});
	} // init

	void beneSelezionato()
	{
		extra = L.getBeneServizio((elenco.getSelectedIndexes())[0]+1);
		remove(panel[11]);
		this.add(panel[12]);
		desc.setText(extra.getDescrizione());
		prezzo.setText(extra.getPxUnitario()+"""");
		panel[12].setVisible(true);
		setVisible(true);
	}
	
	void goBack()
	{
		remove(panel[12]);
		this.add(panel[11]);
		panel[11].setVisible(true);
		setVisible(true);
	}
}"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'b', 'en', 'es', 'erv', 'iz', 'io', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'd', 'at', 'ab', 'ase', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', ';', '\n\n', 'publ', 'ic', '▁class', '▁v', 'ed', 'ib', 'en', 'is', 'erv', 'iz', 'i', '▁ext', 'ends', '▁m', 'asc', 'her', 'ab', 'en', 'es', 'erv', 'iz', 'io', '\n', '{', '\n\t', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁extra', '▁=', '▁n', 'ull', ';', '\n\t', 'l', 'ab', 'el', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁desc', '_', 'ext', 'ra', ',', '▁p', 'x', '_', 'ext', 'ra', ';', '\n\t', 'text', 'field', '▁desc', ',', '▁pre', 'z', 'zo', ';', '\n\t', 'but', 'ton', '▁ann', 'ull', 'a', '3,', '▁ann', 'ull', 'a', '_', 'c', 'anc', ';', '\n\t\t\n\t', 'publ', 'ic', '▁v', 'ed', 'ib', 'en', 'is', 'erv', 'iz', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁de', 'i', '▁d', 'ati', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'iz', 'io', '"")', ';', '\n\t\t', 'set', 'up', 'p', 'ann', 'ello', '(', ');', '\n\t\t', 'in', 'it', 'ial', 'ize', '(', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁set', 'up', 'p', 'ann', 'ello', '(', ')', '\n\t', '{', '\n\t\t', 'pan', 'el', '[', '11', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '1', '▁=', '▁new', '▁label', '(', '""', 's', 'ce', 'g', 'li', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'iz', 'io', ',', '▁app', 'art', 'en', 'ent', 'e', '"")', ';', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '2', '▁=', '▁new', '▁label', '(', '""', 'all', 'a', '▁categ', 'oria', '▁se', 'le', 'z', 'ion', 'ata', ',', '▁da', '▁visual', 'iz', 'z', 'are', '"")', ';', '\n\t\t', 'ann', 'ull', 'a', '3', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁', '0,', '▁', '0,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁', '0,', '▁1,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁el', 'en', 'co', ',', '▁', '0,', '▁2,', '▁5,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', ']', ',', '▁ann', 'ull', 'a', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', 'pan', 'el', '[', '12', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n\t\t', 'des', 'c', '_', 'ext', 'ra', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '▁del', '▁bene', '"")', ';', '\n\t\t', 'p', 'x', '_', 'ext', 'ra', '▁=', '▁new', '▁label', '(', '""', 'pre', 'z', 'zo', '▁del', '▁bene', '"")', ';', '\n\t\t', 'des', 'c', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4', '0)', ';', '\n\t\t', 'pre', 'z', 'zo', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '0)', ';', '\n\t\t', 'des', 'c', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'pre', 'z', 'zo', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'ann', 'ull', 'a', '_', 'c', 'anc', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁desc', '_', 'ext', 'ra', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁desc', ',', '▁1,', '▁', '0,', '▁4,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁p', 'x', '_', 'ext', 'ra', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁pre', 'z', 'zo', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', ']', ',', '▁ann', 'ull', 'a', '_', 'c', 'anc', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n\t\t\t\t', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁initial', 'ize', '(', ')', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '4', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'd', 'ess', 'ert', ');', '\n\t\t\t\t\t', 'p', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'p', 'i', 'att', 'o', '[', '5', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'fr', 'ut', 'ta', ');', '\n\t\t\t\t\t', 'p', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ric', 'reat', 'iv', 'i', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 's', 'erv', 'iz', 'io', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'al', 't', 'ro', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'aff', 'et', 'ter', 'ia', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'an', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'd', 'ol', 'ci', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ib', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'f', 'red', 'di', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'c', 'ald', 'i', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 's', 'ol', 'idi', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'im', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'car', 'ne', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'p', 'es', 'ce', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ver', 'd', 'ura', '_', 'c', 'ott', 'a', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orn', 'o', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'iz', 'io', '.', 'form', 'ag', 'gio', ');', '\n\t\t\t\t\t', 'o', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '_', 'c', 'anc', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'g', 'ob', 'ack', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '3.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'el', 'en', 'co', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'b', 'en', 'ese', 'le', 'z', 'ion', 'ato', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\n\t', 'v', 'oid', '▁ben', 'ese', 'le', 'z', 'ion', 'ato', '(', ')', '\n\t', '{', '\n\t\t', 'ext', 'ra', '▁=', '▁l', '.', 'get', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', '(', 'el', 'en', 'co', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'des', 'c', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', ');', '\n\t\t', 'pre', 'z', 'zo', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'p', 'x', 'un', 'itar', 'io', '(', ')', '+', '""', '"")', ';', '\n\t\t', 'pan', 'el', '[', '12', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁go', 'back', '(', ')', '\n\t', '{', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'this', '.', 'ad', 'd', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'pan', 'el', '[', '11', ']', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'dat', 'abase', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'list', 'ab', 'en', 'is', 'erv', 'iz', 'i', ';', '\n\n', 'public', '▁class', '▁ved', 'ib', 'en', 'is', 'erv', 'iz', 'i', '▁extends', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '\n', '{', '\n\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁null', ';', '\n\t', 'l', 'abel', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁desc', '_', 'ext', 'ra', ',', '▁p', 'x', '_', 'ext', 'ra', ';', '\n\t', 'text', 'field', '▁desc', ',', '▁pre', 'z', 'zo', ';', '\n\t', 'but', 'ton', '▁ann', 'ulla', '3,', '▁ann', 'ulla', '_', 'canc', ';', '\n\t\t\n\t', 'public', '▁ved', 'ib', 'en', 'is', 'erv', 'iz', 'i', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'vis', 'ual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'izio', '"");', '\n\t\t', 'set', 'up', 'p', 'ann', 'ello', '();', '\n\t\t', 'init', 'ial', 'ize', '();', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁setup', 'p', 'ann', 'ello', '()', '\n\t', '{', '\n\t\t', 'pan', 'el', '[', '11', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '1', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'g', 'li', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'izio', ',', '▁app', 'arten', 'ente', '"");', '\n\t\t', 'el', 'en', 'co', '_', 'ext', 'ra', '2', '▁=', '▁new', '▁label', '(""', 'alla', '▁categ', 'oria', '▁se', 'lez', 'ion', 'ata', ',', '▁da', '▁visual', 'izz', 'are', '"");', '\n\t\t', 'ann', 'ulla', '3', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', '_', 'ext', 'ra', '1,', '▁', '0,', '▁', '0,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', '_', 'ext', 'ra', '2,', '▁', '0,', '▁1,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁el', 'en', 'co', ',', '▁', '0,', '▁2,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '11', '],', '▁ann', 'ulla', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', 'pan', 'el', '[', '12', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n\t\t', 'desc', '_', 'ext', 'ra', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁del', '▁bene', '"");', '\n\t\t', 'px', '_', 'ext', 'ra', '▁=', '▁new', '▁label', '(""', 'pre', 'z', 'zo', '▁del', '▁bene', '"");', '\n\t\t', 'desc', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4', '0)', ';', '\n\t\t', 'pre', 'z', 'zo', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n\t\t', 'desc', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'pre', 'z', 'zo', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'ann', 'ulla', '_', 'canc', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁desc', '_', 'ext', 'ra', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁desc', ',', '▁1,', '▁', '0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁p', 'x', '_', 'ext', 'ra', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁pre', 'z', 'zo', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0)', ';', '\n\t\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '12', '],', '▁ann', 'ulla', '_', 'canc', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁', '0,', '▁5', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁initial', 'ize', '()', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'd', 'ess', 'ert', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'att', 'o', '[', '5', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'fr', 'utta', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ric', 'reat', 'iv', 'i', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'alt', 'ro', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'aff', 'etter', 'ia', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'an', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'd', 'ol', 'ci', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'fred', 'di', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'ast', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'c', 'aldi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'sol', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'car', 'ne', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'pes', 'ce', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cott', 'a', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2', ';', '\n\t\t\t\t\t', 'c', 'od', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁ben', 'es', 'erv', 'izio', '.', 'form', 'aggio', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '_', 'canc', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'g', 'ob', 'ack', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '3.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'el', 'en', 'co', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ben', 'ese', 'lez', 'ion', 'ato', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'v', 'oid', '▁ben', 'ese', 'lez', 'ion', 'ato', '()', '\n\t', '{', '\n\t\t', 'ext', 'ra', '▁=', '▁l', '.', 'get', 'ben', 'es', 'erv', 'izio', '(', '(', 'el', 'en', 'co', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'desc', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'desc', 'riz', 'ione', '());', '\n\t\t', 'pre', 'z', 'zo', '.', 's', 'ette', 'xt', '(', 'ext', 'ra', '.', 'get', 'px', 'un', 'itar', 'io', '()', '+', '""', '"");', '\n\t\t', 'pan', 'el', '[', '12', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁go', 'back', '()', '\n\t', '{', '\n\t\t', 'rem', 'ove', '(', 'pan', 'el', '[', '12', ']', ');', '\n\t\t', 'this', '.', 'add', '(', 'pan', 'el', '[', '11', ']', ');', '\n\t\t', 'pan', 'el', '[', '11', '].', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'ben', 'es', 'erv', 'izio', ';', '\n', 'import', '▁mod', 'uli', '.', 'database', ';', '\n', 'import', '▁mod', 'uli', '.', 'list', 'ab', 'enis', 'erv', 'izi', ';', '\n\n', 'public', '▁class', '▁ved', 'iben', 'is', 'erv', 'izi', '▁extends', '▁masc', 'her', 'ab', 'enes', 'erv', 'izio', '\n', '{', '\n\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁null', ';', '\n\t', 'label', '▁elenco', '_', 'extra', '1,', '▁elenco', '_', 'extra', '2,', '▁desc', '_', 'extra', ',', '▁px', '_', 'extra', ';', '\n\t', 'text', 'field', '▁desc', ',', '▁pre', 'zzo', ';', '\n\t', 'button', '▁ann', 'ulla', '3,', '▁ann', 'ulla', '_', 'canc', ';', '\n\t\t\n\t', 'public', '▁ved', 'iben', 'is', 'erv', 'izi', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'visual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁di', '▁un', '▁bene', '▁o', '▁serv', 'izio', '"");', '\n\t\t', 'set', 'upp', 'ann', 'ello', '();', '\n\t\t', 'initial', 'ize', '();', '\n\t', '}', '\n\t\n\t', 'void', '▁setup', 'p', 'ann', 'ello', '()', '\n\t', '{', '\n\t\t', 'panel', '[', '11', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'elen', 'co', '_', 'extra', '1', '▁=', '▁new', '▁label', '(""', 's', 'ce', 'gli', 'ere', '▁il', '▁bene', '▁o', '▁serv', 'izio', ',', '▁app', 'arten', 'ente', '"");', '\n\t\t', 'elen', 'co', '_', 'extra', '2', '▁=', '▁new', '▁label', '(""', 'alla', '▁categ', 'oria', '▁se', 'lez', 'ion', 'ata', ',', '▁da', '▁visual', 'izz', 'are', '"");', '\n\t\t', 'ann', 'ulla', '3', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', '_', 'extra', '1,', '▁0,', '▁0,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', '_', 'extra', '2,', '▁0,', '▁1,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁elenco', ',', '▁0,', '▁2,', '▁5,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '11', '],', '▁ann', 'ulla', '3,', '▁2,', '▁3,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n\t\t', 'panel', '[', '12', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n\t\t', 'desc', '_', 'extra', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '▁del', '▁bene', '"");', '\n\t\t', 'px', '_', 'extra', '▁=', '▁new', '▁label', '(""', 'pre', 'zzo', '▁del', '▁bene', '"");', '\n\t\t', 'desc', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4', '0);', '\n\t\t', 'pre', 'zzo', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n\t\t', 'desc', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'pre', 'zzo', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'ann', 'ulla', '_', 'canc', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁desc', '_', 'extra', ',', '▁0,', '▁0,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁desc', ',', '▁1,', '▁0,', '▁4,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁px', '_', 'extra', ',', '▁0,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁pre', 'zzo', ',', '▁1,', '▁1,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁', '0);', '\n\t\t', 'utils', '.', 'con', 'strain', '(', 'panel', '[', '12', '],', '▁ann', 'ulla', '_', 'canc', ',', '▁1,', '▁2,', '▁1,', '▁1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n\t\t\t\t', 'grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁0,', '▁5', ');', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁initialize', '()', '\n\t', '{', '\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '4', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'dess', 'ert', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pi', 'atto', '[', '5', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'fr', 'utta', ');', '\n\t\t\t\t\t', 'p', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ric', 'reat', 'ivi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'serv', 'izio', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁1;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'alt', 'ro', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'c', 'aff', 'etter', 'ia', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'anal', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'be', 'v', 'anda', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'al', 'col', 'ici', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'dol', 'ci', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'c', 'ibo', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'sal', 'ati', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'fred', 'di', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'ant', 'ip', 'asto', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'c', 'aldi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'sol', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'pr', 'imo', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'li', 'qu', 'idi', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'carne', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'second', 'o', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'second', 'o', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'pes', 'ce', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cott', 'a', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'ver', 'd', 'ura', '_', 'cr', 'uda', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '(', 'sc', 'el', 'ta', '_', 'cont', 'orno', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'level', '▁=', '▁2;', '\n\t\t\t\t\t', 'cod', 'ice', '▁=', '▁compos', 'ec', 'ode', '(', 'level', ',', '▁benes', 'erv', 'izio', '.', 'form', 'aggio', ');', '\n\t\t\t\t\t', 'o', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '_', 'canc', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'gob', 'ack', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '3.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\n\t\t', 'elen', 'co', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ben', 'ese', 'lez', 'ion', 'ato', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\n\t', 'void', '▁ben', 'ese', 'lez', 'ion', 'ato', '()', '\n\t', '{', '\n\t\t', 'extra', '▁=', '▁l', '.', 'get', 'ben', 'es', 'erv', 'izio', '((', 'elen', 'co', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t', 'remove', '(', 'panel', '[', '11', ']);', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', '12', ']);', '\n\t\t', 'desc', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'desc', 'riz', 'ione', '());', '\n\t\t', 'pre', 'zzo', '.', 's', 'ette', 'xt', '(', 'extra', '.', 'get', 'px', 'un', 'itario', '()', '+""', '"");', '\n\t\t', 'panel', '[', '12', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁go', 'back', '()', '\n\t', '{', '\n\t\t', 'remove', '(', 'panel', '[', '12', ']);', '\n\t\t', 'this', '.', 'add', '(', 'panel', '[', '11', ']);', '\n\t\t', 'panel', '[', '11', '].', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'set', 'visible', '(', 'true', ');', '\n\t', '}', '\n', '}']"~"packag interfacc import java awt import java awt event import common util import moduli bene servizio import moduli data base import moduli lista beni servizi public class vedi beni servizi extend maschera bene servizio bene servizio extra null label elenco extra elenco extra desc extra extra text field desc prezzo button annulla annulla canc public vedi beni servizi super visualizzazion dei dati bene servizio setup pannello initi void setup pannello panel set layout gridbag elenco extra new label sceglier bene servizio appartenent elenco extra new label alla categoria selezionata visualizzar annulla new button fine util constrain panel elenco extra grid bag constraint none grid bag constraint west util constrain panel elenco extra grid bag constraint none grid bag constraint west util constrain panel elenco grid bag constraint horizont grid bag constraint center util constrain panel annulla grid bag constraint none grid bag constraint center panel set layout gridbag desc extra new label nome del bene px_extra new label prezzo del bene ""); desc new text field ("""", prezzo new text field ("""", desc set edit fals prezzo set edit fals annulla_canc new button indietro ""); util constrain panel desc_extra grid bag constraint none grid bag constraint west util constrain panel desc grid bag constraint none grid bag constraint west util constrain panel px_extra grid bag constraint none grid bag constraint west util constrain panel prezzo grid bag constraint none grid bag constraint west util constrain panel annulla_canc grid bag constraint none grid bag constraint east public void initi scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) level codic compos code level bene servizio dessert (); }); scelta_piatto add item listen new item listen public void item state chang item event scelta_piatto get state ()) level codic compos code level bene servizio frutta (); }); scelta_servizio add item listen new item listen public void item state chang item event scelta_servizio get state ()) level codic compos code level bene servizio ricreativi (); }); scelta_servizio add item listen new item listen public void item state chang item event scelta_servizio get state ()) level codic compos code level bene servizio altro (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio caffetteria (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio analcolici (); }); scelta_bevanda add item listen new item listen public void item state chang item event scelta_bevanda get state ()) level codic compos code level bene servizio alcolici (); }); scelta_cibo add item listen new item listen public void item state chang item event scelta_cibo get state ()) level codic compos code level bene servizio dolci (); }); scelta_cibo add item listen new item listen public void item state chang item event scelta_cibo get state ()) level codic compos code level bene servizio salati (); }); scelta_antipasto add item listen new item listen public void item state chang item event scelta_antipasto get state ()) level codic compos code level bene servizio freddi (); }); scelta_antipasto add item listen new item listen public void item state chang item event scelta_antipasto get state ()) level codic compos code level bene servizio caldi (); }); scelta_primo add item listen new item listen public void item state chang item event scelta_primo get state ()) level codic compos code level bene servizio solidi (); }); scelta_primo add item listen new item listen public void item state chang item event scelta_primo get state ()) level codic compos code level bene servizio liquidi (); }); scelta_secondo add item listen new item listen public void item state chang item event scelta_secondo get state ()) level codic compos code level bene servizio carn (); }); scelta_secondo add item listen new item listen public void item state chang item event scelta_secondo get state ()) level codic compos code level bene servizio pesc (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio verdura_cotta (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio verdura_cruda (); }); scelta_contorno add item listen new item listen public void item state chang item event scelta_contorno get state ()) level codic compos code level bene servizio formaggio (); }); annulla_canc add action listen new action listen public void action perform action event back (); }); annulla3 add action listen new action listen public void action perform action event dispos (); padr set enabl true }); elenco add action listen new action listen public void action perform action event bene selezionato (); }); init void bene selezionato extra get bene servizio elenco get select index ())[ remov panel ]); add panel ]); desc set text extra get descrizion ()); prezzo set text extra get unitario ()+""""); panel set visibl true set visibl true void back remov panel ]); add panel ]); panel set visibl true set visibl true"
58~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/SubPrenotazione.java~SubPrenotazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import common.utility.*;

public class SubPrenotazione extends Frame
{
   Label label;
   Panel panel0, panel1;
   Button Inserimento, Modifica, Cancellazione, Ricerca, Annulla ;
   GridBagLayout gridbag = new GridBagLayout();
   Frame p = new Frame();
   static public MascheraRicercaStanza ric_stanza = null;
   static public RicercaPrenotazione ric_pren = null;
   	
   
   public SubPrenotazione()
   {
      super(""Prenotazione"");
      setup();
      init();
      pack();
   }

   void setup()
   {
      Immagine  figura = new Immagine(""camera2.jpg"");
      Etichetta etich = new Etichetta(""Prenotazioni.gif"");
      this.setFont(ConfigurazioneSistema.font_sub);
      panel0=new Panel();
      panel0.setLayout(gridbag);
      panel0.setBackground(Color.white);
      
      Utils.constrain(panel0,etich, 0, 0, 2, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
      Utils.constrain(panel0,figura, 2, 0, 10, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
       
      panel1 = new Panel();
      panel1.setLayout(new GridLayout(5,1));
      Inserimento = new Button("" Inserimento "");
      Modifica = new Button("" Modifica "");
      Cancellazione = new Button("" Cancellazione "");
      Ricerca = new Button("" Ricerca... "");
      Annulla = new Button("" Indietro "");
      panel1.add(Inserimento);
      panel1.add(Modifica);
      panel1.add(Cancellazione);
	  panel1.add(Ricerca);
      panel1.add(Annulla);
      this.setLayout(gridbag);
      Utils.constrain(this,panel0, 0, 0, 12, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
      Utils.constrain(this,panel1, 12, 0, 1, 12,GridBagConstraints.BOTH,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);


   }

   void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            if (Principale.call_list != null)
            	(Principale.call_list).dispose();
            p.setEnabled(true);
         }
      });
      
      Inserimento.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            insPrenotazione();
         }
      });
      
      Modifica.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            modPrenotazione();
         }
      });
      
      Cancellazione.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            cancPrenotazione();
         }
      });
   	  
   	  Ricerca.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            vediPrenotazione();
         }
      });		
   }

	void insPrenotazione()
	{
		this.setEnabled(false);
		ric_stanza = new MascheraRicercaStanza(""Ricerca stanze per prenotazioni"",2);
		ric_stanza.setVisible(true);
		ric_stanza.padre = this;
	}
	
	void modPrenotazione()
	{
		this.setEnabled(false);
		ric_pren = new RicercaPrenotazione(""Ricerca prenotazione per modifica"",1);
		ric_pren.setVisible(true);
		ric_pren.padre = this;
	}
	
	void cancPrenotazione()
	{
		this.setEnabled(false);
		ric_pren = new RicercaPrenotazione(""Ricerca prenotazione per cancellazione"",2);
		ric_pren.setVisible(true);
		ric_pren.padre = this;
	}
	
	void vediPrenotazione()
	{
		this.setEnabled(false);
		ric_pren = new RicercaPrenotazione(""Ricerca prenotazione per visualizzazione"",4);
		ric_pren.setVisible(true);
		ric_pren.padre = this;
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁sub', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1', ';', '\n', '▁but', 'ton', '▁ins', 'er', 'iment', 'o', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'az', 'ion', 'e', ',', '▁ric', 'er', 'ca', ',', '▁ann', 'ull', 'a', '▁;', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁st', 'atic', '▁public', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '▁ric', '_', 'stan', 'za', '▁=', '▁n', 'ull', ';', '\n', '▁st', 'atic', '▁public', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁ric', '_', 'p', 'ren', '▁=', '▁n', 'ull', ';', '\n', '▁', '\t\n', '▁', '\n', '▁public', '▁sub', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'p', 'ren', 'ot', 'az', 'ion', 'e', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', '""', 'c', 'amer', 'a', '2.', 'j', 'p', 'g', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁et', 'ich', '▁=', '▁new', '▁et', 'ic', 'he', 'tt', 'a', '(', '""', 'p', 'ren', 'ot', 'az', 'ion', 'i', '.', 'g', 'if', '"")', ';', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'sub', ');', '\n', '▁pan', 'el', '0', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁pan', 'el', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'f', 'ig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'new', '▁gr', 'id', 'l', 'ay', 'out', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'iment', 'o', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ins', 'er', 'iment', 'o', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁mod', 'ific', 'a', '▁""', ');', '\n', '▁canc', 'ell', 'az', 'ion', 'e', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁canc', 'ell', 'az', 'ion', 'e', '▁""', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ric', 'er', 'ca', '...', '▁""', ');', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ins', 'er', 'iment', 'o', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'mod', 'ific', 'a', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'c', 'anc', 'ell', 'az', 'ion', 'e', ');', '\n\t', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ric', 'er', 'ca', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ann', 'ull', 'a', ');', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁if', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'c', 'all', '_', 'list', '▁!', '=', '▁n', 'ull', ')', '\n', '▁', '\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'c', 'all', '_', 'list', ').', 'dis', 'pose', '(', ');', '\n', '▁p', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'iment', 'o', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁insp', 'ren', 'ot', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁mod', 'ific', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁canc', 'ell', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\t', '▁', '\n', '▁', '\t', '▁ric', 'er', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁v', 'ed', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\t\t\n', '▁}', '\n\n\t', 'v', 'oid', '▁insp', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'ric', '_', 'stan', 'za', '▁=', '▁new', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '(', '""', 'ric', 'er', 'ca', '▁stan', 'ze', '▁per', '▁p', 'ren', 'ot', 'az', 'ion', 'i', '"",', '2)', ';', '\n\t\t', 'ric', '_', 'stan', 'za', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'ric', '_', 'stan', 'za', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁mod', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', '""', 'ric', 'er', 'ca', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁per', '▁mod', 'ific', 'a', '"",', '1)', ';', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁canc', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', '""', 'ric', 'er', 'ca', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁per', '▁canc', 'ell', 'az', 'ion', 'e', '"",', '2)', ';', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁v', 'ed', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', '""', 'ric', 'er', 'ca', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁per', '▁visual', 'iz', 'z', 'az', 'ion', 'e', '"",', '4)', ';', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'public', '▁class', '▁sub', 'p', 'ren', 'ot', 'azione', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1', ';', '\n', '▁button', '▁ins', 'er', 'iment', 'o', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'azione', ',', '▁ric', 'er', 'ca', ',', '▁ann', 'ulla', '▁;', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '();', '\n', '▁static', '▁public', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '▁ric', '_', 'stan', 'za', '▁=', '▁null', ';', '\n', '▁static', '▁public', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁ric', '_', 'p', 'ren', '▁=', '▁null', ';', '\n', '▁', '\t\n', '▁', '\n', '▁public', '▁sub', 'p', 'ren', 'ot', 'azione', '()', '\n', '▁{', '\n', '▁super', '(""', 'p', 'ren', 'ot', 'azione', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(""', 'camer', 'a', '2.', 'j', 'pg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'p', 'ren', 'ot', 'az', 'ioni', '.', 'g', 'if', '"");', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'fig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'new', '▁grid', 'lay', 'out', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'iment', 'o', '▁=', '▁new', '▁button', '(""', '▁ins', 'er', 'iment', 'o', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁button', '(""', '▁mod', 'ific', 'a', '▁""', ');', '\n', '▁canc', 'ell', 'azione', '▁=', '▁new', '▁button', '(""', '▁canc', 'ell', 'azione', '▁""', ');', '\n', '▁ric', 'er', 'ca', '▁=', '▁new', '▁button', '(""', '▁ric', 'er', 'ca', '...', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'ins', 'er', 'iment', 'o', ');', '\n', '▁panel', '1.', 'add', '(', 'mod', 'ific', 'a', ');', '\n', '▁panel', '1.', 'add', '(', 'canc', 'ell', 'azione', ');', '\n\t', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁if', '▁(', 'princ', 'ip', 'ale', '.', 'call', '_', 'list', '▁!=', '▁null', ')', '\n', '▁', '\t', '(', 'princ', 'ip', 'ale', '.', 'call', '_', 'list', ').', 'dis', 'pose', '();', '\n', '▁p', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'iment', 'o', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁insp', 'ren', 'ot', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁mod', 'ific', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'p', 'ren', 'ot', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁canc', 'ell', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'p', 'ren', 'ot', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\t', '▁', '\n', '▁', '\t', '▁ric', 'er', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ved', 'ip', 'ren', 'ot', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\t\t\n', '▁}', '\n\n\t', 'v', 'oid', '▁insp', 'ren', 'ot', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'stan', 'za', '▁=', '▁new', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '(""', 'ric', 'er', 'ca', '▁stan', 'ze', '▁per', '▁pren', 'ot', 'az', 'ioni', '"",', '2)', ';', '\n\t\t', 'ric', '_', 'stan', 'za', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'stan', 'za', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁mod', 'p', 'ren', 'ot', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', 'ric', 'er', 'ca', '▁pren', 'ot', 'azione', '▁per', '▁mod', 'ific', 'a', '"",', '1)', ';', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁canc', 'p', 'ren', 'ot', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', 'ric', 'er', 'ca', '▁pren', 'ot', 'azione', '▁per', '▁canc', 'ell', 'azione', '"",', '2)', ';', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ved', 'ip', 'ren', 'ot', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', 'ric', 'er', 'ca', '▁pren', 'ot', 'azione', '▁per', '▁visual', 'izz', 'azione', '"",', '4)', ';', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n\n', 'public', '▁class', '▁sub', 'p', 'ren', 'ot', 'azione', '▁extends', '▁frame', '\n', '{', '\n', '▁label', '▁label', ';', '\n', '▁panel', '▁panel', '0,', '▁panel', '1;', '\n', '▁button', '▁ins', 'er', 'imento', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'azione', ',', '▁ricer', 'ca', ',', '▁ann', 'ulla', '▁;', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁frame', '▁p', '▁=', '▁new', '▁frame', '();', '\n', '▁static', '▁public', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '▁ric', '_', 'stan', 'za', '▁=', '▁null', ';', '\n', '▁static', '▁public', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁ric', '_', 'p', 'ren', '▁=', '▁null', ';', '\n', '▁', '\t\n', '▁', '\n', '▁public', '▁sub', 'p', 'ren', 'ot', 'azione', '()', '\n', '▁{', '\n', '▁super', '(""', 'p', 'ren', 'ot', 'azione', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁imm', 'agine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'agine', '(""', 'camera', '2.', 'jpg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'p', 'ren', 'ot', 'azioni', '.', 'gif', '"");', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'et', 'ich', ',', '▁0,', '▁0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'fig', 'ura', ',', '▁2,', '▁0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'new', '▁grid', 'layout', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'imento', '▁=', '▁new', '▁button', '(""', '▁ins', 'er', 'imento', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁button', '(""', '▁mod', 'ific', 'a', '▁""', ');', '\n', '▁canc', 'ell', 'azione', '▁=', '▁new', '▁button', '(""', '▁canc', 'ell', 'azione', '▁""', ');', '\n', '▁ricer', 'ca', '▁=', '▁new', '▁button', '(""', '▁ricer', 'ca', '...', '▁""', ');', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'ins', 'er', 'imento', ');', '\n', '▁panel', '1.', 'add', '(', 'mod', 'ific', 'a', ');', '\n', '▁panel', '1.', 'add', '(', 'canc', 'ell', 'azione', ');', '\n\t', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁12,', '▁0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁if', '▁(', 'princip', 'ale', '.', 'call', '_', 'list', '▁!=', '▁null', ')', '\n', '▁', '\t', '(', 'princip', 'ale', '.', 'call', '_', 'list', ').', 'dis', 'pose', '();', '\n', '▁p', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'imento', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁insp', 'ren', 'ot', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁mod', 'ific', 'a', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁mod', 'p', 'ren', 'ot', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁canc', 'ell', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁canc', 'p', 'ren', 'ot', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\t', '▁', '\n', '▁', '\t', '▁ricer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁ved', 'ip', 'ren', 'ot', 'azione', '();', '\n', '▁}', '\n', '▁}', ');', '\t\t\n', '▁}', '\n\n\t', 'void', '▁insp', 'ren', 'ot', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'stan', 'za', '▁=', '▁new', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '(""', 'ric', 'er', 'ca', '▁stan', 'ze', '▁per', '▁pren', 'ot', 'azioni', '"",', '2);', '\n\t\t', 'ric', '_', 'stan', 'za', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'stan', 'za', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁mod', 'p', 'ren', 'ot', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', 'ric', 'er', 'ca', '▁pren', 'ot', 'azione', '▁per', '▁mod', 'ific', 'a', '"",', '1);', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁canc', 'p', 'ren', 'ot', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', 'ric', 'er', 'ca', '▁pren', 'ot', 'azione', '▁per', '▁canc', 'ell', 'azione', '"",', '2);', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n\t\n\t', 'void', '▁ved', 'ip', 'ren', 'ot', 'azione', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', 'ric', 'er', 'ca', '▁pren', 'ot', 'azione', '▁per', '▁visual', 'izz', 'azione', '"",', '4);', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'ric', '_', 'p', 'ren', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import java import common util public class sub prenotazion extend frame label label panel panel panel button inserimento modifica cancellazion ricerca annulla grid bag layout gridbag new grid bag layout frame new frame static public maschera ricerca stanza ric stanza null static public ricerca prenotazion ric pren null public sub prenotazion super prenotazion setup init pack void setup immagin figura new immagin camera jpg etichetta etich new etichetta prenotazioni gif set font configurazion sistema font sub panel new panel panel set layout gridbag panel set background color white util constrain panel etich grid bag constraint vertic grid bag constraint center util constrain panel figura grid bag constraint vertic grid bag constraint center panel new panel panel set layout new grid layout inserimento new button inserimento modifica new button modifica cancellazion new button cancellazion ricerca new button ricerca annulla new button indietro panel add inserimento panel add modifica panel add cancellazion panel add ricerca panel add annulla set layout gridbag util constrain panel grid bag constraint vertic grid bag constraint west util constrain panel1 grid bag constraint grid bag constraint west void init annulla add action listen new action listen public void action perform action event dispos (); principal call_list null principal call_list dispos (); set enabl true }); inserimento add action listen new action listen public void action perform action event prenotazion (); }); modifica add action listen new action listen public void action perform action event mod prenotazion (); }); cancellazion add action listen new action listen public void action perform action event canc prenotazion (); }); ricerca add action listen new action listen public void action perform action event vedi prenotazion (); }); void prenotazion set enabl fals ric_stanza new maschera ricerca stanza ricerca stanz per prenotazioni ric_stanza set visibl true ric_stanza padr void mod prenotazion set enabl fals ric_pren new ricerca prenotazion ricerca prenotazion per modifica ric_pren set visibl true ric_pren padr void canc prenotazion set enabl fals ric_pren new ricerca prenotazion ricerca prenotazion per cancellazion ric_pren set visibl true ric_pren padr void vedi prenotazion set enabl fals ric_pren new ricerca prenotazion ricerca prenotazion per visualizzazion ric_pren set visibl true ric_pren padr
59~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/VediAddebito.java~VediAddebito.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class VediAddebito extends Frame
{
   	TextField num_stanza, desc, quantita, tot, tot_addebiti;
   	Label etich1, etich2, etich3, etich4, etich5, etich6;
   	Panel panel1, panel2;
   	Button Annulla;
   	GridBagLayout gridbag = new GridBagLayout();
   	Frame padre = new Frame();
	Addebito add;
  	float addebiti_totali; 	
   	public VediAddebito(Frame p, Addebito a, float tot)
   	{
      	super(""Visualizzazione dei dati dell'addebito scelto"");
      	padre = p;
      	add = a;
      	addebiti_totali = tot;
      	padre.setEnabled(false);
      	setupPanels();
      	inizializza();
      	pack();
      	setVisible(true);
   	}

   	void setupPanels()
   	{
	    this.setFont(ConfigurazioneSistema.font_base);
      	//Creo le etichette
      	etich1 = new Label(""Dati dell'addebito"");
      	etich1.setFont(ConfigurazioneSistema.font_titolo);
      	etich2 = new Label(""Numero Stanza"");
      	etich3 = new Label(""Descrizione"");
      	etich4 = new Label(""Quantita"");
      	etich5 = new Label(""Addebito relativo"");
      	etich6 = new Label(""Totale addebiti sulla stanza ""+add.getNumStanza());
      	etich6.setFont(ConfigurazioneSistema.font_titolo);
      
      	//Creo i TextField e ne rendo  alcuni non editabili
      	num_stanza = new TextField("""",4);
      	desc = new TextField("""",32);
     	quantita = new TextField("""",6);
      	tot = new TextField("""",8);
      	tot_addebiti = new TextField("""",10);
      	
      	//Disabilita i TextField
      	num_stanza.setEditable(false);
      	desc.setEditable(false);
     	quantita.setEditable(false);
      	tot.setEditable(false);
      	tot_addebiti.setEditable(false);

      	//Creo i pulsanti
      	Annulla = new Button("" Indietro "");

      	//Creo il pannello
      	panel1 = new Panel();
      	panel1.setLayout(gridbag);
      	Utils.constrain(panel1, etich1, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0); 
      	Utils.constrain(panel1, etich2, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
 	    Utils.constrain(panel1,num_stanza, 1, 1, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich3, 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,desc, 1, 2, 2, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich4, 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,quantita , 1, 3, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich5, 2, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1,tot , 3, 3, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(panel1, etich6, 0, 4, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 15, 5, 5, 5);
      	Utils.constrain(panel1, tot_addebiti, 2, 4, 1, 1, GridBagConstraints.NONE,
                    GridBagConstraints.NORTHWEST, 1.0, 0.0, 15, 5, 5, 5);

      	panel2 = new Panel();
     	panel2.setLayout(gridbag);
      	Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 0, 0, 0, 15);
		
      	//Attacco i pannelli al frame
      	this.setLayout(gridbag);
      	Utils.constrain(this, panel1, 0, 0, 6, 5, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
      	Utils.constrain(this, panel2, 0, 5, 6, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
   }

   public void inizializza()
   {
      writeDatiTel();
      
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			dispose();
			padre.setEnabled(true);
         }
      });
   }

	void writeDatiTel()
	{
      	String d = new String("""");
      	BeneServizio extra = (Principale.db).readBeneServizio(add.getCodExtra());
		if (extra == null)
			d = new String("""");
		else
		d = new String(extra.getDescrizione());	
      	num_stanza.setText(add.getNumStanza());
      	desc.setText(d);
     	quantita.setText(""""+add.getQuantita());
      	tot.setText(""""+add.getTotAddebito());
      	tot_addebiti.setText(""""+addebiti_totali);
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁v', 'ed', 'i', 'ad', 'de', 'bit', 'o', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'text', 'field', '▁num', '_', 'stan', 'za', ',', '▁desc', ',', '▁quant', 'ita', ',', '▁to', 't', ',', '▁to', 't', '_', 'ad', 'de', 'bit', 'i', ';', '\n', '▁', '\t', 'l', 'ab', 'el', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2', ';', '\n', '▁', '\t', 'but', 'ton', '▁ann', 'ull', 'a', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁', '\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '\n\t', 'ad', 'de', 'bit', 'o', '▁add', ';', '\n', '▁', '\t', 'fl', 'o', 'at', '▁add', 'e', 'bit', 'i', '_', 't', 'ot', 'ali', ';', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁v', 'ed', 'i', 'ad', 'de', 'bit', 'o', '(', 'fr', 'ame', '▁p', ',', '▁add', 'e', 'bit', 'o', '▁a', ',', '▁flo', 'at', '▁to', 't', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁de', 'i', '▁d', 'ati', '▁d', 'ell', ""'"", 'ad', 'de', 'bit', 'o', '▁sc', 'el', 'to', '"")', ';', '\n', '▁', '\t', 'p', 'ad', 're', '▁=', '▁p', ';', '\n', '▁', '\t', 'ad', 'd', '▁=', '▁a', ';', '\n', '▁', '\t', 'ad', 'de', 'bit', 'i', '_', 't', 'ot', 'ali', '▁=', '▁to', 't', ';', '\n', '▁', '\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'els', '(', ');', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '(', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'v', 'oid', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁', '\t', '//', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(', '""', 'd', 'ati', '▁d', 'ell', ""'"", 'ad', 'de', 'bit', 'o', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁stan', 'za', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(', '""', 'des', 'c', 'ri', 'z', 'ion', 'e', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(', '""', 'qu', 'ant', 'ita', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(', '""', 'ad', 'de', 'bit', 'o', '▁rel', 'at', 'iv', 'o', '"")', ';', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(', '""', 't', 'ot', 'ale', '▁add', 'e', 'bit', 'i', '▁s', 'ull', 'a', '▁stan', 'za', '▁""', '+', 'ad', 'd', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁', '\t', 'et', 'ich', '6.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\n', '▁', '\t', '//', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁al', 'c', 'un', 'i', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁', '\t', 'des', 'c', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '3', '2)', ';', '\n', '▁', '\t', 'qu', 'ant', 'ita', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '6)', ';', '\n', '▁', '\t', 't', 'ot', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '8)', ';', '\n', '▁', '\t', 't', 'ot', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '0)', ';', '\n', '▁', '\t\n', '▁', '\t', '//', 'dis', 'abil', 'ita', '▁i', '▁text', 'field', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'des', 'c', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'qu', 'ant', 'ita', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 't', 'ot', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 't', 'ot', '_', 'ad', 'de', 'bit', 'i', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\n', '▁', '\t', '//', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n', '▁', '\t', 'ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n\n', '▁', '\t', '//', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '\n', '▁', '\t', 'pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁', '\t', 'pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'n', 'um', '_', 'stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '3,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'des', 'c', ',', '▁1,', '▁2,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '4,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'qu', 'ant', 'ita', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 't', 'ot', '▁,', '▁3,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '6,', '▁', '0,', '▁4,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁15,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁to', 't', '_', 'ad', 'de', 'bit', 'i', ',', '▁2,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁15,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁', '\t', 'pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁', '\t', 'pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁15', ');', '\n\t\t\n', '▁', '\t', '//', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁', '\t', 'this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁6,', '▁5,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁5,', '▁6,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁in', 'iz', 'ial', 'iz', 'za', '(', ')', '\n', '▁{', '\n', '▁writ', 'ed', 'at', 'it', 'el', '(', ');', '\n', '▁', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁writ', 'ed', 'at', 'it', 'el', '(', ')', '\n\t', '{', '\n', '▁', '\t', 'str', 'ing', '▁d', '▁=', '▁new', '▁string', '(', '""', '"")', ';', '\n', '▁', '\t', 'b', 'en', 'es', 'erv', 'iz', 'io', '▁extra', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'b', 'en', 'es', 'erv', 'iz', 'io', '(', 'ad', 'd', '.', 'get', 'c', 'ode', 'xt', 'ra', '(', ')', ');', '\n\t\t', 'if', '▁(', 'ext', 'ra', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t', 'd', '▁=', '▁new', '▁string', '(', '""', '"")', ';', '\n\t\t', 'el', 'se', '\n\t\t', 'd', '▁=', '▁new', '▁string', '(', 'ext', 'ra', '.', 'get', 'des', 'c', 'ri', 'z', 'ion', 'e', '(', ')', ');', '\t\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'ad', 'd', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n', '▁', '\t', 'des', 'c', '.', 's', 'ette', 'xt', '(', 'd', ');', '\n', '▁', '\t', 'qu', 'ant', 'ita', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'ad', 'd', '.', 'get', 'qu', 'ant', 'ita', '(', ')', ');', '\n', '▁', '\t', 't', 'ot', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'ad', 'd', '.', 'get', 't', 'ot', 'ad', 'de', 'bit', 'o', '(', ')', ');', '\n', '▁', '\t', 't', 'ot', '_', 'ad', 'de', 'bit', 'i', '.', 's', 'ette', 'xt', '(', '""', '""', '+', 'ad', 'de', 'bit', 'i', '_', 't', 'ot', 'ali', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ved', 'iad', 'de', 'bit', 'o', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'text', 'field', '▁num', '_', 'stan', 'za', ',', '▁desc', ',', '▁quant', 'ita', ',', '▁tot', ',', '▁tot', '_', 'ad', 'de', 'bit', 'i', ';', '\n', '▁', '\t', 'l', 'abel', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2', ';', '\n', '▁', '\t', 'but', 'ton', '▁ann', 'ulla', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁', '\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '\n\t', 'ad', 'de', 'bit', 'o', '▁add', ';', '\n', '▁', '\t', 'flo', 'at', '▁add', 'e', 'bit', 'i', '_', 'tot', 'ali', ';', '▁', '\t\n', '▁', '\t', 'public', '▁ved', 'iad', 'de', 'bit', 'o', '(', 'frame', '▁p', ',', '▁add', 'e', 'bit', 'o', '▁a', ',', '▁float', '▁tot', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'vis', 'ual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁dell', ""'"", 'ad', 'de', 'bit', 'o', '▁sc', 'el', 'to', '"");', '\n', '▁', '\t', 'pad', 're', '▁=', '▁p', ';', '\n', '▁', '\t', 'add', '▁=', '▁a', ';', '\n', '▁', '\t', 'ad', 'de', 'bit', 'i', '_', 'tot', 'ali', '▁=', '▁tot', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'els', '();', '\n', '▁', '\t', 'in', 'iz', 'ial', 'iz', 'za', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'v', 'oid', '▁setup', 'pan', 'els', '()', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁dell', ""'"", 'ad', 'de', 'bit', 'o', '"");', '\n', '▁', '\t', 'et', 'ich', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stan', 'za', '"");', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'desc', 'riz', 'ione', '"");', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'qu', 'ant', 'ita', '"");', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'ad', 'de', 'bit', 'o', '▁rel', 'at', 'ivo', '"");', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'tot', 'ale', '▁add', 'e', 'bit', 'i', '▁sull', 'a', '▁stan', 'za', '▁""', '+', 'add', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', 'et', 'ich', '6.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁', '\t', '//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁', '\t', 'desc', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '2)', ';', '\n', '▁', '\t', 'qu', 'ant', 'ita', '▁=', '▁new', '▁text', 'field', '(""', '"",', '6)', ';', '\n', '▁', '\t', 'tot', '▁=', '▁new', '▁text', 'field', '(""', '"",', '8)', ';', '\n', '▁', '\t', 'tot', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n', '▁', '\t\n', '▁', '\t', '//', 'dis', 'abil', 'ita', '▁i', '▁text', 'field', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'desc', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'qu', 'ant', 'ita', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'tot', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'tot', '_', 'ad', 'de', 'bit', 'i', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁', '\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '\n', '▁', '\t', 'pan', 'el', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁', '\t', 'pan', 'el', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '1,', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'num', '_', 'stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '3,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'desc', ',', '▁1,', '▁2,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '4,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'qu', 'ant', 'ita', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'tot', '▁,', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ich', '6,', '▁', '0,', '▁4,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁15,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁tot', '_', 'ad', 'de', 'bit', 'i', ',', '▁2,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁15,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁', '\t', 'pan', 'el', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁', '\t', 'pan', 'el', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁15', ');', '\n\t\t\n', '▁', '\t', '//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁', '\t', 'this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁6,', '▁5,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁5,', '▁6,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'iz', 'za', '()', '\n', '▁{', '\n', '▁writ', 'ed', 'at', 'it', 'el', '();', '\n', '▁', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁writ', 'ed', 'at', 'it', 'el', '()', '\n\t', '{', '\n', '▁', '\t', 'string', '▁d', '▁=', '▁new', '▁string', '(""', '"");', '\n', '▁', '\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'ben', 'es', 'erv', 'izio', '(', 'add', '.', 'get', 'code', 'xt', 'ra', '());', '\n\t\t', 'if', '▁(', 'ext', 'ra', '▁==', '▁null', ')', '\n\t\t\t', 'd', '▁=', '▁new', '▁string', '(""', '"");', '\n\t\t', 'el', 'se', '\n\t\t', 'd', '▁=', '▁new', '▁string', '(', 'ext', 'ra', '.', 'get', 'desc', 'riz', 'ione', '());', '\t\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'add', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', 'desc', '.', 's', 'ette', 'xt', '(', 'd', ');', '\n', '▁', '\t', 'qu', 'ant', 'ita', '.', 's', 'ette', 'xt', '(""', '""', '+', 'add', '.', 'get', 'qu', 'ant', 'ita', '());', '\n', '▁', '\t', 'tot', '.', 's', 'ette', 'xt', '(""', '""', '+', 'add', '.', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁', '\t', 'tot', '_', 'ad', 'de', 'bit', 'i', '.', 's', 'ette', 'xt', '(""', '""', '+', 'ad', 'de', 'bit', 'i', '_', 'tot', 'ali', ');', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ved', 'iad', 'de', 'bit', 'o', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'text', 'field', '▁num', '_', 'stan', 'za', ',', '▁desc', ',', '▁quant', 'ita', ',', '▁tot', ',', '▁tot', '_', 'ad', 'de', 'bit', 'i', ';', '\n', '▁', '\t', 'label', '▁et', 'ich', '1,', '▁et', 'ich', '2,', '▁et', 'ich', '3,', '▁et', 'ich', '4,', '▁et', 'ich', '5,', '▁et', 'ich', '6;', '\n', '▁', '\t', 'panel', '▁panel', '1,', '▁panel', '2;', '\n', '▁', '\t', 'button', '▁ann', 'ulla', ';', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁', '\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '\n\t', 'ad', 'de', 'bit', 'o', '▁add', ';', '\n', '▁', '\t', 'float', '▁add', 'e', 'bit', 'i', '_', 'tot', 'ali', ';', '▁', '\t\n', '▁', '\t', 'public', '▁ved', 'iad', 'de', 'bit', 'o', '(', 'frame', '▁p', ',', '▁add', 'e', 'bit', 'o', '▁a', ',', '▁float', '▁tot', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'visual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁dell', ""'"", 'ad', 'de', 'bit', 'o', '▁scel', 'to', '"");', '\n', '▁', '\t', 'pad', 're', '▁=', '▁p', ';', '\n', '▁', '\t', 'add', '▁=', '▁a', ';', '\n', '▁', '\t', 'ad', 'de', 'bit', 'i', '_', 'tot', 'ali', '▁=', '▁tot', ';', '\n', '▁', '\t', 'pad', 're', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t', 'set', 'up', 'pan', 'els', '();', '\n', '▁', '\t', 'in', 'iz', 'ial', 'izza', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', 'set', 'visible', '(', 'true', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'void', '▁setup', 'pan', 'els', '()', '\n', '▁', '\t', '{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\t', '//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁', '\t', 'et', 'ich', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁dell', ""'"", 'ad', 'de', 'bit', 'o', '"");', '\n', '▁', '\t', 'et', 'ich', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\t', 'et', 'ich', '2', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stanza', '"");', '\n', '▁', '\t', 'et', 'ich', '3', '▁=', '▁new', '▁label', '(""', 'desc', 'riz', 'ione', '"");', '\n', '▁', '\t', 'et', 'ich', '4', '▁=', '▁new', '▁label', '(""', 'quant', 'ita', '"");', '\n', '▁', '\t', 'et', 'ich', '5', '▁=', '▁new', '▁label', '(""', 'ad', 'de', 'bit', 'o', '▁rel', 'ativo', '"");', '\n', '▁', '\t', 'et', 'ich', '6', '▁=', '▁new', '▁label', '(""', 'tot', 'ale', '▁add', 'e', 'bit', 'i', '▁sulla', '▁stanza', '▁""+', 'add', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', 'et', 'ich', '6.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁', '\t', '//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁', '\t', 'desc', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '2);', '\n', '▁', '\t', 'quant', 'ita', '▁=', '▁new', '▁text', 'field', '(""', '"",', '6);', '\n', '▁', '\t', 'tot', '▁=', '▁new', '▁text', 'field', '(""', '"",', '8);', '\n', '▁', '\t', 'tot', '_', 'ad', 'de', 'bit', 'i', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n', '▁', '\t\n', '▁', '\t', '//', 'dis', 'abil', 'ita', '▁i', '▁text', 'field', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'desc', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'quant', 'ita', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'tot', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'tot', '_', 'ad', 'de', 'bit', 'i', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁', '\t', 'ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n\n', '▁', '\t', '//', 'cre', 'o', '▁il', '▁pann', 'ello', '\n', '▁', '\t', 'panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁', '\t', 'panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '1,', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '2,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'num', '_', 'stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '3,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'desc', ',', '▁1,', '▁2,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '4,', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'quant', 'ita', '▁,', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', 'tot', '▁,', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'ich', '6,', '▁0,', '▁4,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁15,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁tot', '_', 'ad', 'de', 'bit', 'i', ',', '▁2,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁15,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁', '\t', 'panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁', '\t', 'panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁15', ');', '\n\t\t\n', '▁', '\t', '//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁', '\t', 'this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁6,', '▁5,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁5,', '▁6,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁in', 'iz', 'ial', 'izza', '()', '\n', '▁{', '\n', '▁writ', 'ed', 'at', 'itel', '();', '\n', '▁', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pose', '();', '\n\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁writ', 'ed', 'at', 'itel', '()', '\n\t', '{', '\n', '▁', '\t', 'string', '▁d', '▁=', '▁new', '▁string', '("""");', '\n', '▁', '\t', 'ben', 'es', 'erv', 'izio', '▁extra', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'ben', 'es', 'erv', 'izio', '(', 'add', '.', 'get', 'code', 'xt', 'ra', '());', '\n\t\t', 'if', '▁(', 'extra', '▁==', '▁null', ')', '\n\t\t\t', 'd', '▁=', '▁new', '▁string', '("""");', '\n\t\t', 'else', '\n\t\t', 'd', '▁=', '▁new', '▁string', '(', 'extra', '.', 'get', 'desc', 'riz', 'ione', '());', '\t\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 's', 'ette', 'xt', '(', 'add', '.', 'get', 'num', 'stan', 'za', '());', '\n', '▁', '\t', 'desc', '.', 's', 'ette', 'xt', '(', 'd', ');', '\n', '▁', '\t', 'quant', 'ita', '.', 's', 'ette', 'xt', '(""', '""', '+', 'add', '.', 'get', 'quant', 'ita', '());', '\n', '▁', '\t', 'tot', '.', 's', 'ette', 'xt', '(""', '""', '+', 'add', '.', 'gett', 'ot', 'ad', 'de', 'bit', 'o', '());', '\n', '▁', '\t', 'tot', '_', 'ad', 'de', 'bit', 'i', '.', 's', 'ette', 'xt', '(""', '""', '+', 'ad', 'de', 'bit', 'i', '_', 'tot', 'ali', ');', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli public class vedi addebito extend frame text field num stanza desc quantita tot tot addeb label etich etich etich etich etich etich panel panel panel button annulla grid bag layout gridbag new grid bag layout frame padr new frame addebito add float addeb totali public vedi addebito frame addebito float tot super visualizzazion dei dati dell addebito scelto padr add addeb totali tot padr set enabl fals setup panel inizializza pack set visibl true void setup panel set font configurazion sistema font base creo etichett etich new label dati dell addebito etich set font configurazion sistema font titolo etich new label numero stanza etich new label descrizion etich new label quantita etich new label addebito relativo etich new label total addeb sulla stanza add get num stanza etich set font configurazion sistema font titolo creo text field rendo alcuni non editabili num stanza new text field desc new text field quantita new text field tot new text field tot addeb new text field disabilita text field num stanza set edit fals desc set edit fals quantita set edit fals tot set edit fals tot addeb set edit fals creo pulsanti annulla new button indietro creo pannello panel new panel panel set layout gridbag util constrain panel etich1 grid bag constraint none grid bag constraint northwest util constrain panel1 etich2 grid bag constraint none grid bag constraint northwest util constrain panel1 num_stanza grid bag constraint none grid bag constraint northwest util constrain panel1 etich3 grid bag constraint none grid bag constraint northwest util constrain panel1 desc grid bag constraint none grid bag constraint northwest util constrain panel1 etich4 grid bag constraint none grid bag constraint northwest util constrain panel1 quantita grid bag constraint none grid bag constraint northwest util constrain panel1 etich5 grid bag constraint none grid bag constraint northwest util constrain panel1 tot grid bag constraint none grid bag constraint northwest util constrain panel1 etich6 grid bag constraint none grid bag constraint northwest util constrain panel1 tot_addeb grid bag constraint none grid bag constraint northwest panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint none grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint west public void inizializza write dati tel (); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); void write dati tel string new string (""""); bene servizio extra principal read bene servizio add get cod extra ()); extra null new string (""""); els new string extra get descrizion ()); num_stanza set text add get num stanza ()); desc set text quantita set text (""""+ add get quantita ()); tot set text (""""+ add get tot addebito ()); tot_addeb set text (""""+ addebiti_totali"
60~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/SubCommissioni.java~SubCommissioni.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import common.utility.*;

public class SubCommissioni extends Frame
{
   	Label label;
   	Panel panel0, panel1;
   	Button Inserimento, Modifica, Cancellazione, Ricerca, Annulla;
   	GridBagLayout gridbag=new GridBagLayout();
   	Frame p = new Frame();
   	MascheraRicercaStanza mask_ric;
	ModificaCommissioni mask_mod; 
	CancellaCommissioni mask_canc;
	VediCommissione mask_vis;
	
    public SubCommissioni()
    {
        super(""Commissioni"");
        setup();
        init();
        pack();
    }

    void setup()
    {
        this.setFont(ConfigurazioneSistema.font_sub);
        panel0=new Panel();
        panel0.setLayout(gridbag);
        panel0.setBackground(Color.white);
        Immagine  figura = new Immagine(""camera2.jpg"");
        Etichetta etich = new Etichetta(""Commissioni.gif"");
        Utils.constrain(panel0,etich, 0, 0, 2, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
        Utils.constrain(panel0,figura, 2, 0, 10, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.CENTER, 0.5, 1.0,0,0,0,0);
       
        panel1 = new Panel();
        panel1.setLayout(new GridLayout(5,1));
        Inserimento = new Button("" Inserimento "");
        Modifica = new Button("" Modifica "");
        Cancellazione = new Button("" Cancellazione "");
		Ricerca = new Button("" Ricerca... "");        
        Annulla = new Button("" Indietro "");
        panel1.add(Inserimento);
        panel1.add(Modifica);
        panel1.add(Cancellazione);
        panel1.add(Ricerca);
        panel1.add(Annulla);
 
        this.setLayout(gridbag);
        Utils.constrain(this,panel0, 0, 0, 12, 12,GridBagConstraints.VERTICAL,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
        Utils.constrain(this,panel1, 12, 0, 1, 12,GridBagConstraints.BOTH,
                     GridBagConstraints.WEST, 1.0, 1.0, 0, 0, 0, 0);
    }

    void init()
    {
        Annulla.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                dispose();
                p.setEnabled(true);
            }
        });
      
        Inserimento.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                startRic();
            }
        });
      
        Modifica.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                startMod();
            }
        });

        Cancellazione.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                startCanc();
            }
        });
        
        Ricerca.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                startVis();
            }
        });
    }

	void startRic()
	{
		this.setEnabled(false);
		mask_ric = new MascheraRicercaStanza(""Ricerca stanze per commissioni"",1);
		mask_ric.setVisible(true);
		mask_ric.padre = this; 
	}
	
	void startMod()
	{
		this.setEnabled(false);
		mask_mod = new ModificaCommissioni();
		mask_mod.setVisible(true);
		mask_mod.padre = this; 
	}
	
	void startCanc()
	{
		this.setEnabled(false);
		mask_canc = new CancellaCommissioni();
		mask_canc.setVisible(true);
		mask_canc.padre = this; 
	}

	void startVis()
	{
		this.setEnabled(false);
		mask_vis = new VediCommissione();
		mask_vis.setVisible(true);
		mask_vis.padre = this; 
	}
	
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁sub', 'com', 'mission', 'i', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'l', 'ab', 'el', '▁label', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '0,', '▁pan', 'el', '1', ';', '\n', '▁', '\t', 'but', 'ton', '▁ins', 'er', 'iment', 'o', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'az', 'ion', 'e', ',', '▁ric', 'er', 'ca', ',', '▁ann', 'ull', 'a', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁', '\t', 'fr', 'ame', '▁p', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁', '\t', 'm', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '▁m', 'ask', '_', 'ric', ';', '\n\t', 'mod', 'ific', 'ac', 'om', 'mission', 'i', '▁m', 'ask', '_', 'mod', ';', '▁', '\n\t', 'c', 'anc', 'ell', 'ac', 'om', 'mission', 'i', '▁m', 'ask', '_', 'c', 'anc', ';', '\n\t', 'ved', 'ic', 'om', 'mission', 'e', '▁m', 'ask', '_', 'vis', ';', '\n\t\n', '▁public', '▁sub', 'com', 'mission', 'i', '(', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'com', 'mission', 'i', '"")', ';', '\n', '▁set', 'up', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', ')', '\n', '▁{', '\n', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'sub', ');', '\n', '▁pan', 'el', '0', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '0.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁pan', 'el', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(', '""', 'c', 'amer', 'a', '2.', 'j', 'p', 'g', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁et', 'ich', '▁=', '▁new', '▁et', 'ic', 'he', 'tt', 'a', '(', '""', 'com', 'mission', 'i', '.', 'g', 'if', '"")', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'f', 'ig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'new', '▁gr', 'id', 'l', 'ay', 'out', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'iment', 'o', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ins', 'er', 'iment', 'o', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁mod', 'ific', 'a', '▁""', ');', '\n', '▁canc', 'ell', 'az', 'ion', 'e', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁canc', 'ell', 'az', 'ion', 'e', '▁""', ');', '\n\t\t', 'ric', 'er', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ric', 'er', 'ca', '...', '▁""', ');', '▁', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ins', 'er', 'iment', 'o', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'mod', 'ific', 'a', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'c', 'anc', 'ell', 'az', 'ion', 'e', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ric', 'er', 'ca', ');', '\n', '▁pan', 'el', '1.', 'ad', 'd', '(', 'ann', 'ull', 'a', ');', '\n', '▁', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁p', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'iment', 'o', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁start', 'ric', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁mod', 'ific', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁start', 'mod', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁start', 'c', 'anc', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ric', 'er', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁start', 'vis', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'ric', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'm', 'ask', '_', 'ric', '▁=', '▁new', '▁m', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'an', 'za', '(', '""', 'ric', 'er', 'ca', '▁stan', 'ze', '▁per', '▁commission', 'i', '"",', '1)', ';', '\n\t\t', 'm', 'ask', '_', 'ric', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'm', 'ask', '_', 'ric', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'mod', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'm', 'ask', '_', 'mod', '▁=', '▁new', '▁mod', 'ific', 'ac', 'om', 'mission', 'i', '(', ');', '\n\t\t', 'm', 'ask', '_', 'mod', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'm', 'ask', '_', 'mod', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'c', 'anc', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'm', 'ask', '_', 'c', 'anc', '▁=', '▁new', '▁canc', 'ell', 'ac', 'om', 'mission', 'i', '(', ');', '\n\t\t', 'm', 'ask', '_', 'c', 'anc', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'm', 'ask', '_', 'c', 'anc', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'vis', '(', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'm', 'ask', '_', 'vis', '▁=', '▁new', '▁v', 'ed', 'ic', 'om', 'mission', 'e', '(', ');', '\n\t\t', 'm', 'ask', '_', 'vis', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'm', 'ask', '_', 'vis', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n\n', 'public', '▁class', '▁sub', 'com', 'mission', 'i', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'l', 'abel', '▁label', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '0,', '▁panel', '1', ';', '\n', '▁', '\t', 'but', 'ton', '▁ins', 'er', 'iment', 'o', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'azione', ',', '▁ric', 'er', 'ca', ',', '▁ann', 'ulla', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁', '\t', 'frame', '▁p', '▁=', '▁new', '▁frame', '();', '\n', '▁', '\t', 'm', 'asc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '▁mask', '_', 'ric', ';', '\n\t', 'mod', 'ific', 'acom', 'mission', 'i', '▁mask', '_', 'mod', ';', '▁', '\n\t', 'canc', 'ell', 'acom', 'mission', 'i', '▁mask', '_', 'canc', ';', '\n\t', 'ved', 'icom', 'mission', 'e', '▁mask', '_', 'vis', ';', '\n\t\n', '▁public', '▁sub', 'com', 'mission', 'i', '()', '\n', '▁{', '\n', '▁super', '(""', 'com', 'mission', 'i', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'ag', 'ine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'ag', 'ine', '(""', 'camer', 'a', '2.', 'j', 'pg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'com', 'mission', 'i', '.', 'g', 'if', '"");', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'et', 'ich', ',', '▁', '0,', '▁', '0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '0,', 'fig', 'ura', ',', '▁2,', '▁', '0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,', '0,', '0,', '0,', '0)', ';', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'new', '▁grid', 'lay', 'out', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'iment', 'o', '▁=', '▁new', '▁button', '(""', '▁ins', 'er', 'iment', 'o', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁button', '(""', '▁mod', 'ific', 'a', '▁""', ');', '\n', '▁canc', 'ell', 'azione', '▁=', '▁new', '▁button', '(""', '▁canc', 'ell', 'azione', '▁""', ');', '\n\t\t', 'ric', 'er', 'ca', '▁=', '▁new', '▁button', '(""', '▁ric', 'er', 'ca', '...', '▁""', ');', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'ins', 'er', 'iment', 'o', ');', '\n', '▁panel', '1.', 'add', '(', 'mod', 'ific', 'a', ');', '\n', '▁panel', '1.', 'add', '(', 'canc', 'ell', 'azione', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n', '▁', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '0,', '▁', '0,', '▁', '0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vert', 'ical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '▁12,', '▁', '0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁p', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'iment', 'o', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'ric', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁mod', 'ific', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'mod', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'canc', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ric', 'er', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'vis', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'ric', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'mask', '_', 'ric', '▁=', '▁new', '▁masc', 'her', 'ar', 'ic', 'er', 'cast', 'anza', '(""', 'ric', 'er', 'ca', '▁stan', 'ze', '▁per', '▁commission', 'i', '"",', '1)', ';', '\n\t\t', 'mask', '_', 'ric', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'mask', '_', 'ric', '.', 'pad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'mod', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'mask', '_', 'mod', '▁=', '▁new', '▁mod', 'ific', 'acom', 'mission', 'i', '();', '\n\t\t', 'mask', '_', 'mod', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'mask', '_', 'mod', '.', 'pad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'canc', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'mask', '_', 'canc', '▁=', '▁new', '▁canc', 'ell', 'acom', 'mission', 'i', '();', '\n\t\t', 'mask', '_', 'canc', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'mask', '_', 'canc', '.', 'pad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'vis', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'mask', '_', 'vis', '▁=', '▁new', '▁ved', 'icom', 'mission', 'e', '();', '\n\t\t', 'mask', '_', 'vis', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'mask', '_', 'vis', '.', 'pad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n\n', 'public', '▁class', '▁sub', 'commission', 'i', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'label', '▁label', ';', '\n', '▁', '\t', 'panel', '▁panel', '0,', '▁panel', '1;', '\n', '▁', '\t', 'button', '▁ins', 'er', 'imento', ',', '▁mod', 'ific', 'a', ',', '▁canc', 'ell', 'azione', ',', '▁ricer', 'ca', ',', '▁ann', 'ulla', ';', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'layout', '();', '\n', '▁', '\t', 'frame', '▁p', '▁=', '▁new', '▁frame', '();', '\n', '▁', '\t', 'masc', 'her', 'aric', 'er', 'cast', 'anza', '▁mask', '_', 'ric', ';', '\n\t', 'mod', 'ific', 'acom', 'mission', 'i', '▁mask', '_', 'mod', ';', '▁', '\n\t', 'canc', 'ell', 'acom', 'mission', 'i', '▁mask', '_', 'canc', ';', '\n\t', 'ved', 'icom', 'mission', 'e', '▁mask', '_', 'vis', ';', '\n\t\n', '▁public', '▁sub', 'commission', 'i', '()', '\n', '▁{', '\n', '▁super', '(""', 'commission', 'i', '"");', '\n', '▁setup', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', '()', '\n', '▁{', '\n', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'sub', ');', '\n', '▁panel', '0', '=', 'new', '▁panel', '();', '\n', '▁panel', '0.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁panel', '0.', 'set', 'background', '(', 'color', '.', 'white', ');', '\n', '▁imm', 'agine', '▁fig', 'ura', '▁=', '▁new', '▁imm', 'agine', '(""', 'camera', '2.', 'jpg', '"");', '\n', '▁et', 'iche', 'tta', '▁et', 'ich', '▁=', '▁new', '▁et', 'iche', 'tta', '(""', 'commission', 'i', '.', 'gif', '"");', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'et', 'ich', ',', '▁0,', '▁0,', '▁2,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '0,', 'fig', 'ura', ',', '▁2,', '▁0,', '▁10,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '5,', '▁1.', '0,0,', '0,0,', '0);', '\n', '▁', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'new', '▁grid', 'layout', '(', '5,', '1)', ');', '\n', '▁ins', 'er', 'imento', '▁=', '▁new', '▁button', '(""', '▁ins', 'er', 'imento', '▁""', ');', '\n', '▁mod', 'ific', 'a', '▁=', '▁new', '▁button', '(""', '▁mod', 'ific', 'a', '▁""', ');', '\n', '▁canc', 'ell', 'azione', '▁=', '▁new', '▁button', '(""', '▁canc', 'ell', 'azione', '▁""', ');', '\n\t\t', 'ric', 'er', 'ca', '▁=', '▁new', '▁button', '(""', '▁ricer', 'ca', '...', '▁""', ');', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n', '▁panel', '1.', 'add', '(', 'ins', 'er', 'imento', ');', '\n', '▁panel', '1.', 'add', '(', 'mod', 'ific', 'a', ');', '\n', '▁panel', '1.', 'add', '(', 'canc', 'ell', 'azione', ');', '\n', '▁panel', '1.', 'add', '(', 'ric', 'er', 'ca', ');', '\n', '▁panel', '1.', 'add', '(', 'ann', 'ulla', ');', '\n', '▁', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '0,', '▁0,', '▁0,', '▁12,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'vertical', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '▁12,', '▁0,', '▁1,', '▁12,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁}', '\n\n', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁p', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ins', 'er', 'imento', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'ric', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁mod', 'ific', 'a', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'mod', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁canc', 'ell', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'canc', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁ricer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁start', 'vis', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n\n\t', 'void', '▁start', 'ric', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'mask', '_', 'ric', '▁=', '▁new', '▁masc', 'her', 'aric', 'er', 'cast', 'anza', '(""', 'ric', 'er', 'ca', '▁stan', 'ze', '▁per', '▁commission', 'i', '"",', '1);', '\n\t\t', 'mask', '_', 'ric', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'mask', '_', 'ric', '.', 'pad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'mod', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'mask', '_', 'mod', '▁=', '▁new', '▁mod', 'ific', 'acom', 'mission', 'i', '();', '\n\t\t', 'mask', '_', 'mod', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'mask', '_', 'mod', '.', 'pad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'canc', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'mask', '_', 'canc', '▁=', '▁new', '▁canc', 'ell', 'acom', 'mission', 'i', '();', '\n\t\t', 'mask', '_', 'canc', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'mask', '_', 'canc', '.', 'pad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\n\t', 'void', '▁start', 'vis', '()', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'mask', '_', 'vis', '▁=', '▁new', '▁ved', 'icom', 'mission', 'e', '();', '\n\t\t', 'mask', '_', 'vis', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'mask', '_', 'vis', '.', 'pad', 're', '▁=', '▁this', ';', '▁', '\n\t', '}', '\n\t\n', '}', '\n']"~packag interfacc import java awt import java awt event import java import common util public class sub commissioni extend frame label label panel panel panel button inserimento modifica cancellazion ricerca annulla grid bag layout gridbag new grid bag layout frame new frame maschera ricerca stanza mask ric modifica commissioni mask mod cancella commissioni mask canc vedi commission mask vis public sub commissioni super commissioni setup init pack void setup set font configurazion sistema font sub panel new panel panel set layout gridbag panel set background color white immagin figura new immagin camera jpg etichetta etich new etichetta commissioni gif util constrain panel etich grid bag constraint vertic grid bag constraint center util constrain panel figura grid bag constraint vertic grid bag constraint center panel new panel panel set layout new grid layout inserimento new button inserimento modifica new button modifica cancellazion new button cancellazion ricerca new button ricerca annulla new button indietro panel add inserimento panel add modifica panel add cancellazion panel add ricerca panel add annulla set layout gridbag util constrain panel grid bag constraint vertic grid bag constraint west util constrain panel1 grid bag constraint grid bag constraint west void init annulla add action listen new action listen public void action perform action event dispos (); set enabl true }); inserimento add action listen new action listen public void action perform action event start ric (); }); modifica add action listen new action listen public void action perform action event start mod (); }); cancellazion add action listen new action listen public void action perform action event start canc (); }); ricerca add action listen new action listen public void action perform action event start vis (); }); void start ric set enabl fals mask_ric new maschera ricerca stanza ricerca stanz per commissioni mask_ric set visibl true mask_ric padr void start mod set enabl fals mask_mod new modifica commissioni (); mask_mod set visibl true mask_mod padr void start canc set enabl fals mask_canc new cancella commissioni (); mask_canc set visibl true mask_canc padr void start vis set enabl fals mask_vi new vedi commission (); mask_vi set visibl true mask_vi padr
61~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraVisualizzazioneConto.java~MascheraVisualizzazioneConto.java~"package interfacce;
import java.awt.*;
import java.io.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;
import java.util.Date;
import java.util.Properties;

public class MascheraVisualizzazioneConto extends Frame
{
   	Button Stampa,OK,Partenza;
   	TextField testo1, testo2, testo3, testo4;
   	Label etichetta, label1, label2, label3, label4;
   	Panel  panel1, panel2, panel3;
   	GridBagLayout gridbag = new GridBagLayout();
   	TextArea text;
   	BufferedReader inStream;
	int chiusura; 
	
	MascheraCalcoloConto conto = new MascheraCalcoloConto(new Frame());

   	public MascheraVisualizzazioneConto(String t0, String t1, String t2, String t3, 
   										String t4, int tipo)
   	{
      	super(""Visualizzazione del conto"");
      	chiusura = tipo;
      	setup(t0,t1,t2,t3,t4);
   	  	readConto();	
      	init();
      	pack();
   	}

   void setup(String t0, String t1, String t2, String t3, String t4)
   {
      for (int i=0; i<conto.testo.length-1; i++)
			conto.testo[i].setText("""");
	  this.setFont(ConfigurazioneSistema.font_base);
      etichetta = new Label(""Intestazione"");
      etichetta.setFont(ConfigurazioneSistema.font_titolo);
      label1 = new Label(""Stanza numero"");
      label2 = new Label(""Cognome"");
      label3 = new Label(""Nome"");
      label4 = new Label(""Lista stanze"");
      Stampa = new Button(""  Stampa  "");
      OK = new Button("" Indietro "");
      Partenza = new Button("" Chiudi conto "");
      testo1 = new TextField("""",4);
      testo2 = new TextField("""",20);
      testo3 = new TextField("""",20);
      testo4 = new TextField("""",30);
      testo1.setText(t0+t3);
      testo2.setText(t1);
      testo3.setText(t2);
      testo4.setText(t4);
      testo1.setEditable(false);
      testo2.setEditable(false);
      testo3.setEditable(false);
      testo4.setEditable(false);
      
      text = new TextArea(25,50);
      text.setEditable(false);
      text.setFont(ConfigurazioneSistema.font_allineato);

      panel1=new Panel();
      panel1.setLayout(gridbag);
      Utils.constrain(panel1,etichetta,0,0,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,1.0,0.0,0,0,5,0);   
      Utils.constrain(panel1,label1,0,1,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,0.0,0.0,5,0,5,0);   
      Utils.constrain(panel1,testo1,1,1,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,1.0,0.0,5,0,5,0);   
      Utils.constrain(panel1,label2,0,2,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,0.0,0.0,5,0,5,0);   
      Utils.constrain(panel1,testo2,1,2,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,1.0,0.0,5,0,5,0);   
      Utils.constrain(panel1,label3,2,2,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,1.0,0.0,5,0,5,0);   
      Utils.constrain(panel1,testo3,3,2,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,1.0,0.0,5,0,5,0);   
      Utils.constrain(panel1,label4,0,3,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,1.0,0.0,5,0,5,0);   
      Utils.constrain(panel1,testo4,1,3,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.NORTHWEST,1.0,0.0,5,0,5,0);                  


      panel2=new Panel();
      panel2.setLayout(gridbag);
      Utils.constrain(panel2,text,0,0,4,4,GridBagConstraints.BOTH,
                     GridBagConstraints.NORTHWEST,1.0,1.0,5,0,5,0);   


      panel3=new Panel();
      panel3.setLayout(gridbag);
      Utils.constrain(panel3,Stampa,0,0,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.SOUTHEAST,0,0.0,5,5,5,5);   
      Utils.constrain(panel3,Partenza,1,0,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.CENTER,0,0.0,5,5,5,5);   
      Utils.constrain(panel3,OK,2,0,1,1,GridBagConstraints.NONE,
                     GridBagConstraints.SOUTHWEST,0.0,0.0,5,5,5,5);   

      this.setLayout(gridbag);
      Utils.constrain(this,panel1,0,0,4,3,GridBagConstraints.HORIZONTAL,
                     GridBagConstraints.NORTHWEST,1.0,0.0,10,10,10,10);   
      Utils.constrain(this,panel2,0,3,4,6,GridBagConstraints.BOTH,
                     GridBagConstraints.NORTHWEST,1.0,1.0,10,10,10,10);   
      Utils.constrain(this,panel3,0,9,4,1,GridBagConstraints.HORIZONTAL,
                     GridBagConstraints.SOUTHWEST,1.0,0.0,10,10,10,10);   

   }

   public void init()
   {
      OK.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
	      	conto.setEnabled(true);
         }
      });
      
      Stampa.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			startStampa();
         }
      });
      
      Partenza.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			startChiudiConto();	         	
         	
         }
      });
   
   }

	void readConto()
	{
		Frame msg;
		DataInputStream inStream;
		try
		{
			inStream = new DataInputStream(new FileInputStream(""conto.abg""));
		}
		catch (IOException ex)
		{
			msg = new MessageDialog(this, "" Errore nell'apertura del file del conto! "");
			return;
		}
		try
		{
			String newText="""";
			String line;
			while((line=inStream.readLine())!=null)
				newText=newText+line+""\n"";
			text.setText(newText);
			inStream.close();
		}
		catch (IOException ex)
		{
			msg = new MessageDialog(this, "" Errore durante la lettura del file del conto! "");
		}		
	}

	void startChiudiConto()
	{
		Frame msg;
		AskChiudiConto ask;

		Date today = new Date();
		Date fine_effettiva;
		if (conto.checkboxes[3].getState())
			fine_effettiva = conto.fine_sogg_anticipato;
		else
			fine_effettiva = conto.data_fine_magg;
		if ( Utils.data1MinoreData2( fine_effettiva, today ) )
			ask = new AskChiudiConto(this);
		else
		{
			msg = new AvvisoDialog(this, "" Non e' possibile chiudere il conto fino al giorno della partenza! "");
		}
	}

	void startChiusura()
	{
		switch (chiusura)
		{
			case 1: chiudiStanza(testo1.getText(), conto.date_inizio[0], conto.date_fine[0],1); break;
			case 2: chiudiSingolo(); break;
			case 3: chiudiComitiva(); break;	
		}
	}
	
	void chiudiStanza(String stanza, Date data_inizio, Date data_fine,int caller)
	{
		long id;
		Soggiornante sogg;
		ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(stanza, false);
		id = (L_sogg.getSoggiornante(1)).getIdPrenotazione();
		ListaDisponibilita L_disp = (Principale.db).elencoDisponibilita();
		Frame msg;

		if (L_disp == null)
		{
			msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return;
		}
		
		// cancellazione della prenotazione 
		(Principale.db).delPrenotazione(id);

		// spostamento nello storico e cancellazione dei soggiornanti
		for(int i = 1; i <= L_sogg.length(); i++)
		{	
			sogg = L_sogg.getSoggiornante(i);
			if ( !(sogg.getCognome()).equals("""") &&
				 !(sogg.getNome()).equals("""") &&
				 !(sogg.getIndirizzo()).equals("""") &&
				 !(sogg.getComune()).equals("""") &&
				 !(sogg.getCitta()).equals("""") &&
				 !(sogg.getNumTel()).equals("""") &&
				 !(sogg.getCap()).equals("""") &&
				 !(sogg.getNumDoc()).equals("""") )
			{
				int j =	(Principale.db).writeStorico(sogg.toCliente());
				if (j != DataBase.OK)
				{
					msg = new MessageDialog(this, "" Problemi con il database nella scrittura nello storico! "");
					return;
				}
			}
			(Principale.db).delSoggiornante(stanza,sogg.getIdSoggiornante());
		}
		// cancellazione degli addebiti
		(Principale.db).delAddebito(stanza);
		
		// cancellazione dei supp e rid dai beni/servizi
		(Principale.db).delSuppRid(stanza);
		
		// cancellazione delle telefonate
		(Principale.db).delTelefonate(stanza);
		
		// aggiornamento delle disponibilita: questo devono essere fatto affinche'
		// le informazioni riportate dalla machera di visualizzazione delle disponibilita'
		// sia coerente
		if (conto.qualcuno_tramite_agenzia)
		{
			Utils.aggiornaDisp(L_disp, stanza, data_inizio, data_fine, Flag.DISPONIBILE, Flag.OCCUPATA, true);
			Utils.restoreCommissioni(stanza);
		}
		else
		{
			Disponibilita disp = (Principale.db).readDisponibilita(stanza);
			if (disp != null)
			{
				disp.setDisponibilita(data_inizio, data_fine, Flag.DISPONIBILE, Flag.OCCUPATA);
				(Principale.db).changeDisponibilita(disp.getNumStanza(), disp.getDispAnnoCorr(), disp.getDispAnnoProx());
			}
		}
		if (caller == 1)
			startStampa();
	}
	
	void  chiudiSingolo()
	{
		if (conto.checkboxes[3].getState())
		{
			(Principale.db).anticipaFineSogg(conto.sogg_x_conto_sing.getNumStanza(),
									conto.sogg_x_conto_sing.getIdSoggiornante(),
									conto.fine_sogg_anticipato);
		}
		(Principale.db).reversePagato(conto.sogg_x_conto_sing.getNumStanza(),
									  conto.sogg_x_conto_sing.getIdSoggiornante());
	}
	
	void  chiudiComitiva()
	{
		for (int i=0; i < conto.L_st.length; i++)
			chiudiStanza(conto.L_st[i], conto.date_inizio[i], conto.date_fine[i],2);
		startStampa();
	}

	void startStampa()
	{
		Properties prop = new Properties();
		Toolkit tk = Toolkit.getDefaultToolkit();
		PrintJob pj = tk.getPrintJob(this,""Stampa del conto"",prop);
		
		if (pj != null)
		{
			Graphics g = pj.getGraphics();
			text.printAll(g);
			g.dispose();
			pj.end();
		}
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'pro', 'per', 'ties', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'av', 'is', 'ual', 'iz', 'z', 'az', 'ion', 'ec', 'onto', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'but', 'ton', '▁stamp', 'a', ',', 'ok', ',', 'part', 'en', 'za', ';', '\n', '▁', '\t', 'text', 'field', '▁test', 'o', '1,', '▁test', 'o', '2,', '▁test', 'o', '3,', '▁test', 'o', '4', ';', '\n', '▁', '\t', 'l', 'ab', 'el', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁', '\t', 'text', 'are', 'a', '▁text', ';', '\n', '▁', '\t', 'b', 'uf', 'fer', 'ed', 'read', 'er', '▁inst', 'ream', ';', '\n\t', 'int', '▁ch', 'ius', 'ura', ';', '▁', '\n\t\n\t', 'm', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '▁cont', 'o', '▁=', '▁new', '▁m', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '(', 'new', '▁frame', '(', ')', ');', '\n\n', '▁', '\t', 'publ', 'ic', '▁m', 'asc', 'her', 'av', 'is', 'ual', 'iz', 'z', 'az', 'ion', 'ec', 'onto', '(', 'str', 'ing', '▁t', '0,', '▁string', '▁t', '1,', '▁string', '▁t', '2,', '▁string', '▁t', '3,', '▁', '\n', '▁', '\t\t\t\t\t\t\t\t\t\t', 'str', 'ing', '▁t', '4,', '▁int', '▁tip', 'o', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁del', '▁cont', 'o', '"")', ';', '\n', '▁', '\t', 'ch', 'ius', 'ura', '▁=', '▁tip', 'o', ';', '\n', '▁', '\t', 'set', 'up', '(', 't', '0,', 't', '1,', 't', '2,', 't', '3,', 't', '4)', ';', '\n', '▁', '\t', '▁', '\t', 'read', 'c', 'onto', '(', ');', '\t\n', '▁', '\t', 'in', 'it', '(', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', '}', '\n\n', '▁vo', 'id', '▁set', 'up', '(', 'str', 'ing', '▁t', '0,', '▁string', '▁t', '1,', '▁string', '▁t', '2,', '▁string', '▁t', '3,', '▁string', '▁t', '4)', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'c', 'onto', '.', 't', 'est', 'o', '.', 'l', 'ength', '-1', ';', '▁i', '+', '+', ')', '\n\t\t\t', 'c', 'onto', '.', 't', 'est', 'o', '[', 'i', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '▁=', '▁new', '▁label', '(', '""', 'int', 'est', 'az', 'ion', 'e', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'stan', 'za', '▁num', 'ero', '"")', ';', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(', '""', 'c', 'ogn', 'ome', '"")', ';', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '"")', ';', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(', '""', 'list', 'a', '▁stan', 'ze', '"")', ';', '\n', '▁stamp', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁stamp', 'a', '▁""', ');', '\n', '▁ok', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁part', 'en', 'za', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁chi', 'udi', '▁cont', 'o', '▁""', ');', '\n', '▁test', 'o', '1', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '4)', ';', '\n', '▁test', 'o', '2', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '20', ');', '\n', '▁test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '20', ');', '\n', '▁test', 'o', '4', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '3', '0)', ';', '\n', '▁test', 'o', '1.', 's', 'ette', 'xt', '(', 't', '0', '+', 't', '3)', ';', '\n', '▁test', 'o', '2.', 's', 'ette', 'xt', '(', 't', '1)', ';', '\n', '▁test', 'o', '3.', 's', 'ette', 'xt', '(', 't', '2)', ';', '\n', '▁test', 'o', '4.', 's', 'ette', 'xt', '(', 't', '4)', ';', '\n', '▁test', 'o', '1.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁test', 'o', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\n', '▁text', '▁=', '▁new', '▁text', 'are', 'a', '(', '2', '5,', '5', '0)', ';', '\n', '▁text', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁text', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n\n', '▁pan', 'el', '1', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'etic', 'he', 'tt', 'a', ',', '0,', '0,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '0,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'l', 'ab', 'el', '1,', '0,', '1,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '0.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 't', 'est', 'o', '1,', '1,', '1,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'l', 'ab', 'el', '2,', '0,', '2,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '0.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 't', 'est', 'o', '2,', '1,', '2,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'l', 'ab', 'el', '3,', '2,', '2,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 't', 'est', 'o', '3,', '3,', '2,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'l', 'ab', 'el', '4,', '0,', '3,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 't', 'est', 'o', '4,', '1,', '3,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n\n\n', '▁pan', 'el', '2', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', 'text', ',', '0,', '0,', '4,', '4,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '1.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n\n\n', '▁pan', 'el', '3', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'st', 'amp', 'a', ',', '0,', '0,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'so', 'ut', 'heast', ',', '0,', '0.', '0,', '5,', '5,', '5,', '5)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'part', 'en', 'za', ',', '1,', '0,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '0,', '0.', '0,', '5,', '5,', '5,', '5)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'ok', ',', '2,', '0,', '1,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '0.', '0,', '0.', '0,', '5,', '5,', '5,', '5)', ';', '▁', '\n\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '0,', '0,', '4,', '3,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '0.', '0,', '1', '0,', '1', '0,', '1', '0,', '1', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '2,', '0,', '3,', '4,', '6,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '1.', '0,', '1.', '0,', '1', '0,', '1', '0,', '1', '0,', '1', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '3,', '0,', '9,', '4,', '1,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '1.', '0,', '0.', '0,', '1', '0,', '1', '0,', '1', '0,', '1', '0)', ';', '▁', '\n\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ok', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n\t', '▁', '\t', 'c', 'onto', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁stamp', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'st', 'art', 'st', 'amp', 'a', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁part', 'en', 'za', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'st', 'art', 'chi', 'ud', 'ic', 'onto', '(', ');', '\t', '▁', '\t\n', '▁', '\t\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁read', 'c', 'onto', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'd', 'at', 'ain', 'put', 'stream', '▁inst', 'ream', ';', '\n\t\t', 't', 'ry', '\n\t\t', '{', '\n\t\t\t', 'in', 'stream', '▁=', '▁new', '▁dat', 'ain', 'put', 'stream', '(', 'new', '▁file', 'in', 'put', 'stream', '(', '""', 'c', 'onto', '.', 'ab', 'g', '"")', ');', '\n\t\t', '}', '\n\t\t', 'c', 'atch', '▁(', 'io', 'ex', 'ception', '▁ex', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁er', 'r', 'ore', '▁n', 'ell', ""'"", 'ap', 'ert', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t', 't', 'ry', '\n\t\t', '{', '\n\t\t\t', 'str', 'ing', '▁new', 'text', '=""', '""', ';', '\n\t\t\t', 'str', 'ing', '▁line', ';', '\n\t\t\t', 'while', '(', '(', 'line', '=', 'in', 'stream', '.', 'read', 'line', '(', ')', ')', '!', '=', 'n', 'ull', ')', '\n\t\t\t\t', 'new', 'text', '=', 'new', 'text', '+', 'line', '+', '""', '\\', 'n', '""', ';', '\n\t\t\t', 'text', '.', 's', 'ette', 'xt', '(', 'new', 'text', ');', '\n\t\t\t', 'in', 'stream', '.', 'cl', 'ose', '(', ');', '\n\t\t', '}', '\n\t\t', 'c', 'atch', '▁(', 'io', 'ex', 'ception', '▁ex', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁er', 'r', 'ore', '▁dur', 'ante', '▁la', '▁lett', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '!', '▁""', ');', '\n\t\t', '}', '\t\t\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'chi', 'ud', 'ic', 'onto', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'ask', 'chi', 'ud', 'ic', 'onto', '▁as', 'k', ';', '\n\n\t\t', 'd', 'ate', '▁today', '▁=', '▁new', '▁date', '(', ');', '\n\t\t', 'd', 'ate', '▁fine', '_', 'eff', 'ett', 'iva', ';', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', 'f', 'ine', '_', 'eff', 'ett', 'iva', '▁=', '▁cont', 'o', '.', 'f', 'ine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'f', 'ine', '_', 'eff', 'ett', 'iva', '▁=', '▁cont', 'o', '.', 'd', 'ata', '_', 'f', 'ine', '_', 'm', 'ag', 'g', ';', '\n\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'd', 'ata', '1', 'min', 'ored', 'ata', '2', '(', '▁fine', '_', 'eff', 'ett', 'iva', ',', '▁today', '▁)', '▁)', '\n\t\t\t', 'ask', '▁=', '▁new', '▁as', 'k', 'chi', 'ud', 'ic', 'onto', '(', 'this', ');', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁chi', 'ud', 'ere', '▁il', '▁cont', 'o', '▁fin', 'o', '▁al', '▁gi', 'orn', 'o', '▁d', 'ella', '▁part', 'en', 'za', '!', '▁""', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'ch', 'ius', 'ura', '(', ')', '\n\t', '{', '\n\t\t', 'sw', 'itch', '▁(', 'ch', 'ius', 'ura', ')', '\n\t\t', '{', '\n\t\t\t', 'c', 'ase', '▁1:', '▁chi', 'ud', 'istan', 'za', '(', 't', 'est', 'o', '1.', 'get', 'text', '(', '),', '▁cont', 'o', '.', 'd', 'ate', '_', 'in', 'iz', 'io', '[', '0', ']', ',', '▁cont', 'o', '.', 'd', 'ate', '_', 'f', 'ine', '[', '0', ']', ',', '1)', ';', '▁break', ';', '\n\t\t\t', 'c', 'ase', '▁2:', '▁chi', 'ud', 'ising', 'olo', '(', ');', '▁break', ';', '\n\t\t\t', 'c', 'ase', '▁3:', '▁chi', 'ud', 'ic', 'om', 'it', 'iva', '(', ');', '▁break', ';', '\t\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁chi', 'ud', 'istan', 'za', '(', 'str', 'ing', '▁stan', 'za', ',', '▁date', '▁data', '_', 'in', 'iz', 'io', ',', '▁date', '▁data', '_', 'f', 'ine', ',', 'int', '▁call', 'er', ')', '\n\t', '{', '\n\t\t', 'long', '▁id', ';', '\n\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', ';', '\n\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'stan', 'za', ',', '▁fal', 'se', ');', '\n\t\t', 'id', '▁=', '▁(', 'l', '_', 'so', 'g', 'g', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', '1)', ').', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ');', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\n\t\t', 'if', '▁(', 'l', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'az', 'ion', 'e', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'id', ');', '\n\n\t\t', '//', '▁sp', 'ost', 'ament', 'o', '▁n', 'ello', '▁stor', 'ico', '▁e', '▁canc', 'ell', 'az', 'ion', 'e', '▁de', 'i', '▁s', 'og', 'gi', 'orn', 'ant', 'i', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t', '{', '\t\n\t\t\t', 'so', 'g', 'g', '▁=', '▁l', '_', 'so', 'g', 'g', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'i', ');', '\n\t\t\t', 'if', '▁(', '▁!', '(', 'so', 'g', 'g', '.', 'get', 'c', 'ogn', 'ome', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'g', 'g', '.', 'get', 'n', 'ome', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'g', 'g', '.', 'get', 'ind', 'ir', 'iz', 'zo', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'g', 'g', '.', 'get', 'com', 'une', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'g', 'g', '.', 'get', 'c', 'itt', 'a', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'g', 'g', '.', 'get', 'n', 'um', 't', 'el', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'g', 'g', '.', 'get', 'c', 'ap', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'g', 'g', '.', 'get', 'n', 'um', 'd', 'oc', '(', ')', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁j', '▁=', '\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'writ', 'est', 'or', 'ico', '(', 'so', 'g', 'g', '.', 't', 'oc', 'l', 'ient', 'e', '(', ')', ');', '\n\t\t\t\t', 'if', '▁(', 'j', '▁!', '=', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁sc', 'rit', 't', 'ura', '▁n', 'ello', '▁stor', 'ico', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'so', 'g', 'gi', 'orn', 'ante', '(', 'stan', 'za', ',', 'so', 'g', 'g', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', ')', ');', '\n\t\t', '}', '\n\t\t', '//', '▁canc', 'ell', 'az', 'ion', 'e', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'az', 'ion', 'e', '▁de', 'i', '▁supp', '▁e', '▁rid', '▁d', 'ai', '▁ben', 'i', '/', 's', 'erv', 'iz', 'i', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'els', 'up', 'pr', 'id', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'az', 'ion', 'e', '▁del', 'le', '▁tele', 'f', 'on', 'ate', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'te', 'le', 'f', 'on', 'ate', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁ag', 'gi', 'orn', 'ament', 'o', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ':', '▁quest', 'o', '▁dev', 'on', 'o', '▁ess', 'ere', '▁f', 'att', 'o', '▁aff', 'in', 'che', ""'"", '\n\t\t', '//', '▁le', '▁inform', 'az', 'ion', 'i', '▁r', 'ip', 'ort', 'ate', '▁dall', 'a', '▁mac', 'her', 'a', '▁di', '▁visual', 'iz', 'z', 'az', 'ion', 'e', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '\n\t\t', '//', '▁s', 'ia', '▁co', 'er', 'ent', 'e', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'qu', 'al', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', ')', '\n\t\t', '{', '\n\t\t\t', 'ut', 'ils', '.', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'l', '_', 'dis', 'p', ',', '▁stan', 'za', ',', '▁data', '_', 'in', 'iz', 'io', ',', '▁data', '_', 'f', 'ine', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'oc', 'c', 'up', 'ata', ',', '▁true', ');', '\n\t\t\t', 'ut', 'ils', '.', 'rest', 'or', 'ec', 'om', 'mission', 'i', '(', 'stan', 'za', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'stan', 'za', ');', '\n\t\t\t', 'if', '▁(', 'dis', 'p', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'p', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'd', 'ata', '_', 'in', 'iz', 'io', ',', '▁data', '_', 'f', 'ine', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'oc', 'c', 'up', 'ata', ');', '\n\t\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'anged', 'is', 'pon', 'ib', 'il', 'ita', '(', 'dis', 'p', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁disp', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '▁disp', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '(', ')', ');', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'c', 'all', 'er', '▁=', '=', '▁1', ')', '\n\t\t\t', 'st', 'art', 'st', 'amp', 'a', '(', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁chi', 'ud', 'ising', 'olo', '(', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ant', 'icip', 'af', 'ines', 'og', 'g', '(', 'c', 'onto', '.', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '\n\t\t\t\t\t\t\t\t\t', 'c', 'onto', '.', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', '),', '\n\t\t\t\t\t\t\t\t\t', 'c', 'onto', '.', 'f', 'ine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', ');', '\n\t\t', '}', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 're', 'vers', 'ep', 'ag', 'ato', '(', 'c', 'onto', '.', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '\n\t\t\t\t\t\t\t\t\t', '▁cont', 'o', '.', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', ')', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁chi', 'ud', 'ic', 'om', 'it', 'iva', '(', ')', '\n\t', '{', '\n\t\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '▁', '<', '▁cont', 'o', '.', 'l', '_', 'st', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t', 'chi', 'ud', 'istan', 'za', '(', 'c', 'onto', '.', 'l', '_', 'st', '[', 'i', ']', ',', '▁cont', 'o', '.', 'd', 'ate', '_', 'in', 'iz', 'io', '[', 'i', ']', ',', '▁cont', 'o', '.', 'd', 'ate', '_', 'f', 'ine', '[', 'i', ']', ',', '2)', ';', '\n\t\t', 'st', 'art', 'st', 'amp', 'a', '(', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'st', 'amp', 'a', '(', ')', '\n\t', '{', '\n\t\t', 'pro', 'per', 'ties', '▁prop', '▁=', '▁new', '▁properties', '(', ');', '\n\t\t', 't', 'ool', 'k', 'it', '▁t', 'k', '▁=', '▁to', 'olk', 'it', '.', 'get', 'de', 'fa', 'ult', 't', 'ool', 'k', 'it', '(', ');', '\n\t\t', 'pr', 'int', 'j', 'ob', '▁p', 'j', '▁=', '▁t', 'k', '.', 'get', 'pr', 'int', 'j', 'ob', '(', 'this', ',""', 'st', 'amp', 'a', '▁del', '▁cont', 'o', '"",', 'p', 'rop', ');', '\n\t\t\n\t\t', 'if', '▁(', 'p', 'j', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'gr', 'aph', 'ics', '▁g', '▁=', '▁p', 'j', '.', 'get', 'gr', 'aph', 'ics', '(', ');', '\n\t\t\t', 'text', '.', 'pr', 'int', 'all', '(', 'g', ');', '\n\t\t\t', 'g', '.', 'dis', 'pose', '(', ');', '\n\t\t\t', 'p', 'j', '.', 'end', '(', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'io', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'proper', 'ties', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'but', 'ton', '▁stamp', 'a', ',', 'ok', ',', 'part', 'enza', ';', '\n', '▁', '\t', 'text', 'field', '▁test', 'o', '1,', '▁test', 'o', '2,', '▁test', 'o', '3,', '▁test', 'o', '4', ';', '\n', '▁', '\t', 'l', 'abel', '▁et', 'iche', 'tta', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '1,', '▁panel', '2,', '▁panel', '3', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁', '\t', 'text', 'area', '▁text', ';', '\n', '▁', '\t', 'b', 'uffer', 'ed', 'read', 'er', '▁inst', 'ream', ';', '\n\t', 'int', '▁ch', 'ius', 'ura', ';', '▁', '\n\t\n\t', 'm', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '▁cont', 'o', '▁=', '▁new', '▁masc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '(', 'new', '▁frame', '());', '\n\n', '▁', '\t', 'public', '▁masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '(', 'string', '▁t', '0,', '▁string', '▁t', '1,', '▁string', '▁t', '2,', '▁string', '▁t', '3,', '▁', '\n', '▁', '\t\t\t\t\t\t\t\t\t\t', 'string', '▁t', '4,', '▁int', '▁tip', 'o', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'vis', 'ual', 'izz', 'azione', '▁del', '▁cont', 'o', '"");', '\n', '▁', '\t', 'ch', 'ius', 'ura', '▁=', '▁tip', 'o', ';', '\n', '▁', '\t', 'set', 'up', '(', 't', '0,', 't', '1,', 't', '2,', 't', '3,', 't', '4)', ';', '\n', '▁', '\t', '▁', '\t', 'read', 'c', 'onto', '();', '\t\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', '}', '\n\n', '▁void', '▁setup', '(', 'string', '▁t', '0,', '▁string', '▁t', '1,', '▁string', '▁t', '2,', '▁string', '▁t', '3,', '▁string', '▁t', '4)', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'c', 'onto', '.', 'test', 'o', '.', 'length', '-1', ';', '▁i', '++', ')', '\n\t\t\t', 'c', 'onto', '.', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '(""', '"");', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁et', 'iche', 'tta', '▁=', '▁new', '▁label', '(""', 'int', 'est', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁num', 'ero', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'c', 'ogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(""', 'list', 'a', '▁stan', 'ze', '"");', '\n', '▁stamp', 'a', '▁=', '▁new', '▁button', '(""', '▁stamp', 'a', '▁""', ');', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁part', 'enza', '▁=', '▁new', '▁button', '(""', '▁chi', 'udi', '▁cont', 'o', '▁""', ');', '\n', '▁test', 'o', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4)', ';', '\n', '▁test', 'o', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁test', 'o', '4', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '0)', ';', '\n', '▁test', 'o', '1.', 's', 'ette', 'xt', '(', 't', '0', '+', 't', '3)', ';', '\n', '▁test', 'o', '2.', 's', 'ette', 'xt', '(', 't', '1)', ';', '\n', '▁test', 'o', '3.', 's', 'ette', 'xt', '(', 't', '2)', ';', '\n', '▁test', 'o', '4.', 's', 'ette', 'xt', '(', 't', '4)', ';', '\n', '▁test', 'o', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\n', '▁text', '▁=', '▁new', '▁text', 'area', '(', '2', '5,', '5', '0)', ';', '\n', '▁text', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁text', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\n', '▁panel', '1', '=', 'new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'etic', 'he', 'tta', ',', '0,', '0,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '0,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'l', 'abel', '1,', '0,', '1,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '0.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'test', 'o', '1,', '1,', '1,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'l', 'abel', '2,', '0,', '2,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '0.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'test', 'o', '2,', '1,', '2,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'l', 'abel', '3,', '2,', '2,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'test', 'o', '3,', '3,', '2,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'l', 'abel', '4,', '0,', '3,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', 'test', 'o', '4,', '1,', '3,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n\n\n', '▁panel', '2', '=', 'new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', 'text', ',', '0,', '0,', '4,', '4,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '1.', '0,', '5,', '0,', '5,', '0)', ';', '▁', '\n\n\n', '▁panel', '3', '=', 'new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'st', 'ampa', ',', '0,', '0,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '0,', '0.', '0,', '5,', '5,', '5,', '5)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'part', 'enza', ',', '1,', '0,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '0,', '0.', '0,', '5,', '5,', '5,', '5)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', 'ok', ',', '2,', '0,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '0.', '0,', '0.', '0,', '5,', '5,', '5,', '5)', ';', '▁', '\n\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '1,', '0,', '0,', '4,', '3,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '10,', '10,', '10,', '10)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '2,', '0,', '3,', '4,', '6,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '1.', '0,', '10,', '10,', '10,', '10)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '3,', '0,', '9,', '4,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '1.', '0,', '0.', '0,', '10,', '10,', '10,', '10)', ';', '▁', '\n\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n\t', '▁', '\t', 'c', 'onto', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁stamp', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'st', 'ampa', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁part', 'enza', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'chi', 'ud', 'ic', 'onto', '();', '\t', '▁', '\t\n', '▁', '\t\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁read', 'c', 'onto', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'dat', 'ain', 'put', 'stream', '▁inst', 'ream', ';', '\n\t\t', 'try', '\n\t\t', '{', '\n\t\t\t', 'in', 'stream', '▁=', '▁new', '▁dat', 'ain', 'put', 'stream', '(', 'new', '▁file', 'in', 'put', 'stream', '(""', 'c', 'onto', '.', 'ab', 'g', '"")', ');', '\n\t\t', '}', '\n\t\t', 'c', 'atch', '▁(', 'io', 'exception', '▁ex', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁err', 'ore', '▁nell', ""'"", 'ap', 'ert', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'try', '\n\t\t', '{', '\n\t\t\t', 'string', '▁new', 'text', '=""', '"";', '\n\t\t\t', 'string', '▁line', ';', '\n\t\t\t', 'while', '(', '(', 'line', '=', 'in', 'stream', '.', 'read', 'line', '())', '!', '=', 'n', 'ull', ')', '\n\t\t\t\t', 'new', 'text', '=', 'new', 'text', '+', 'line', '+', '""', '\\', 'n', '"";', '\n\t\t\t', 'text', '.', 's', 'ette', 'xt', '(', 'new', 'text', ');', '\n\t\t\t', 'in', 'stream', '.', 'cl', 'ose', '();', '\n\t\t', '}', '\n\t\t', 'c', 'atch', '▁(', 'io', 'exception', '▁ex', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁err', 'ore', '▁dur', 'ante', '▁la', '▁lett', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '!', '▁""', ');', '\n\t\t', '}', '\t\t\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'chi', 'ud', 'ic', 'onto', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'ask', 'chi', 'ud', 'ic', 'onto', '▁ask', ';', '\n\n\t\t', 'date', '▁today', '▁=', '▁new', '▁date', '();', '\n\t\t', 'date', '▁fine', '_', 'eff', 'ett', 'iva', ';', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t', 'f', 'ine', '_', 'eff', 'ett', 'iva', '▁=', '▁cont', 'o', '.', 'f', 'ine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'f', 'ine', '_', 'eff', 'ett', 'iva', '▁=', '▁cont', 'o', '.', 'data', '_', 'f', 'ine', '_', 'mag', 'g', ';', '\n\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2', '(', '▁fine', '_', 'eff', 'ett', 'iva', ',', '▁today', '▁)', '▁)', '\n\t\t\t', 'ask', '▁=', '▁new', '▁ask', 'chi', 'ud', 'ic', 'onto', '(', 'this', ');', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁chi', 'ud', 'ere', '▁il', '▁cont', 'o', '▁fin', 'o', '▁al', '▁gi', 'orno', '▁della', '▁part', 'enza', '!', '▁""', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'ch', 'ius', 'ura', '()', '\n\t', '{', '\n\t\t', 'sw', 'itch', '▁(', 'ch', 'ius', 'ura', ')', '\n\t\t', '{', '\n\t\t\t', 'case', '▁1:', '▁chi', 'ud', 'istan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '(', '),', '▁cont', 'o', '.', 'date', '_', 'in', 'izio', '[', '0', '],', '▁cont', 'o', '.', 'date', '_', 'f', 'ine', '[', '0', '],', '1)', ';', '▁break', ';', '\n\t\t\t', 'case', '▁2:', '▁chi', 'ud', 'ising', 'olo', '();', '▁break', ';', '\n\t\t\t', 'case', '▁3:', '▁chi', 'ud', 'icom', 'it', 'iva', '();', '▁break', ';', '\t\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁chi', 'ud', 'istan', 'za', '(', 'string', '▁stan', 'za', ',', '▁date', '▁data', '_', 'in', 'izio', ',', '▁date', '▁data', '_', 'f', 'ine', ',', 'int', '▁call', 'er', ')', '\n\t', '{', '\n\t\t', 'long', '▁id', ';', '\n\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', ';', '\n\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'stan', 'za', ',', '▁false', ');', '\n\t\t', 'id', '▁=', '▁(', 'l', '_', 'so', 'gg', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(1)', ').', 'get', 'id', 'p', 'ren', 'ot', 'azione', '();', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\n\t\t', 'if', '▁(', 'l', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'azione', '▁della', '▁pren', 'ot', 'azione', '▁', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'p', 'ren', 'ot', 'azione', '(', 'id', ');', '\n\n\t\t', '//', '▁sp', 'ost', 'amento', '▁n', 'ello', '▁stor', 'ico', '▁e', '▁canc', 'ell', 'azione', '▁dei', '▁s', 'og', 'gi', 'orn', 'anti', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁l', '_', 'so', 'gg', '.', 'length', '();', '▁i', '++', ')', '\n\t\t', '{', '\t\n\t\t\t', 'so', 'gg', '▁=', '▁l', '_', 'so', 'gg', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'i', ');', '\n\t\t\t', 'if', '▁(', '▁!', '(', 'so', 'gg', '.', 'get', 'c', 'ogn', 'ome', '()', ').', 'equ', 'als', '(""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'n', 'ome', '()', ').', 'equ', 'als', '(""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'ind', 'ir', 'iz', 'zo', '()', ').', 'equ', 'als', '(""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'com', 'une', '()', ').', 'equ', 'als', '(""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'c', 'itta', '()', ').', 'equ', 'als', '(""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'num', 'tel', '()', ').', 'equ', 'als', '(""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'cap', '()', ').', 'equ', 'als', '(""', '"")', '▁&', '&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'num', 'doc', '()', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁j', '▁=', '\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'writ', 'est', 'or', 'ico', '(', 'so', 'gg', '.', 'toc', 'l', 'iente', '());', '\n\t\t\t\t', 'if', '▁(', 'j', '▁!=', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁sc', 'ritt', 'ura', '▁n', 'ello', '▁stor', 'ico', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'so', 'g', 'gi', 'orn', 'ante', '(', 'stan', 'za', ',', 'so', 'gg', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '());', '\n\t\t', '}', '\n\t\t', '//', '▁canc', 'ell', 'azione', '▁deg', 'li', '▁add', 'e', 'bit', 'i', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'azione', '▁dei', '▁supp', '▁e', '▁rid', '▁dai', '▁ben', 'i', '/', 'serv', 'iz', 'i', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'd', 'els', 'up', 'pr', 'id', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'azione', '▁delle', '▁tele', 'f', 'on', 'ate', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'tele', 'f', 'on', 'ate', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁ag', 'gi', 'orn', 'amento', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ':', '▁quest', 'o', '▁devon', 'o', '▁ess', 'ere', '▁f', 'att', 'o', '▁aff', 'in', 'che', ""'"", '\n\t\t', '//', '▁le', '▁inform', 'az', 'ioni', '▁rip', 'ort', 'ate', '▁dall', 'a', '▁mac', 'hera', '▁di', '▁visual', 'izz', 'azione', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '\n\t\t', '//', '▁s', 'ia', '▁co', 'er', 'ente', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'ut', 'ils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'l', '_', 'dis', 'p', ',', '▁stan', 'za', ',', '▁data', '_', 'in', 'izio', ',', '▁data', '_', 'f', 'ine', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'occup', 'ata', ',', '▁true', ');', '\n\t\t\t', 'ut', 'ils', '.', 'rest', 'or', 'ec', 'om', 'mission', 'i', '(', 'stan', 'za', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'stan', 'za', ');', '\n\t\t\t', 'if', '▁(', 'dis', 'p', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'p', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'data', '_', 'in', 'izio', ',', '▁data', '_', 'f', 'ine', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'occup', 'ata', ');', '\n\t\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'changed', 'is', 'pon', 'ib', 'il', 'ita', '(', 'dis', 'p', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁disp', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '▁disp', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '());', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'call', 'er', '▁==', '▁1)', '\n\t\t\t', 'start', 'st', 'ampa', '();', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁chi', 'ud', 'ising', 'olo', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '\n\t\t', '{', '\n\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'ant', 'icip', 'af', 'ines', 'ogg', '(', 'c', 'onto', '.', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'num', 'stan', 'za', '(', '),', '\n\t\t\t\t\t\t\t\t\t', 'c', 'onto', '.', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', '),', '\n\t\t\t\t\t\t\t\t\t', 'c', 'onto', '.', 'f', 'ine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', ');', '\n\t\t', '}', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 're', 'vers', 'ep', 'ag', 'ato', '(', 'c', 'onto', '.', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'num', 'stan', 'za', '(', '),', '\n\t\t\t\t\t\t\t\t\t', '▁cont', 'o', '.', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '());', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁chi', 'ud', 'icom', 'it', 'iva', '()', '\n\t', '{', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '▁<', '▁cont', 'o', '.', 'l', '_', 'st', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t', 'chi', 'ud', 'istan', 'za', '(', 'c', 'onto', '.', 'l', '_', 'st', '[', 'i', '],', '▁cont', 'o', '.', 'date', '_', 'in', 'izio', '[', 'i', '],', '▁cont', 'o', '.', 'date', '_', 'f', 'ine', '[', 'i', '],', '2)', ';', '\n\t\t', 'start', 'st', 'ampa', '();', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'st', 'ampa', '()', '\n\t', '{', '\n\t\t', 'proper', 'ties', '▁prop', '▁=', '▁new', '▁properties', '();', '\n\t\t', 't', 'ool', 'kit', '▁tk', '▁=', '▁to', 'olk', 'it', '.', 'get', 'de', 'fault', 't', 'ool', 'kit', '();', '\n\t\t', 'print', 'j', 'ob', '▁pj', '▁=', '▁tk', '.', 'get', 'print', 'j', 'ob', '(', 'this', ',""', 'st', 'ampa', '▁del', '▁cont', 'o', '"",', 'prop', ');', '\n\t\t\n\t\t', 'if', '▁(', 'p', 'j', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'graph', 'ics', '▁g', '▁=', '▁pj', '.', 'get', 'graph', 'ics', '();', '\n\t\t\t', 'text', '.', 'print', 'all', '(', 'g', ');', '\n\t\t\t', 'g', '.', 'dis', 'pose', '();', '\n\t\t\t', 'p', 'j', '.', 'end', '();', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'io', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁java', '.', 'util', '.', 'properties', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'button', '▁stampa', ',', 'ok', ',', 'part', 'enza', ';', '\n', '▁', '\t', 'text', 'field', '▁testo', '1,', '▁testo', '2,', '▁testo', '3,', '▁testo', '4;', '\n', '▁', '\t', 'label', '▁et', 'iche', 'tta', ',', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4;', '\n', '▁', '\t', 'panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3;', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁', '\t', 'text', 'area', '▁text', ';', '\n', '▁', '\t', 'buffer', 'ed', 'reader', '▁inst', 'ream', ';', '\n\t', 'int', '▁ch', 'ius', 'ura', ';', '▁', '\n\t\n\t', 'masc', 'her', 'acal', 'col', 'oc', 'onto', '▁cont', 'o', '▁=', '▁new', '▁masc', 'her', 'acal', 'col', 'oc', 'onto', '(', 'new', '▁frame', '());', '\n\n', '▁', '\t', 'public', '▁masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '(', 'string', '▁t', '0,', '▁string', '▁t', '1,', '▁string', '▁t', '2,', '▁string', '▁t', '3,', '▁', '\n', '▁', '\t\t\t\t\t\t\t\t\t\t', 'string', '▁t', '4,', '▁int', '▁tipo', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', 'visual', 'izz', 'azione', '▁del', '▁cont', 'o', '"");', '\n', '▁', '\t', 'ch', 'ius', 'ura', '▁=', '▁tipo', ';', '\n', '▁', '\t', 'set', 'up', '(', 't', '0,', 't', '1,', 't', '2,', 't', '3,', 't', '4);', '\n', '▁', '\t', '▁', '\t', 'read', 'c', 'onto', '();', '\t\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\t', '}', '\n\n', '▁void', '▁setup', '(', 'string', '▁t', '0,', '▁string', '▁t', '1,', '▁string', '▁t', '2,', '▁string', '▁t', '3,', '▁string', '▁t', '4)', '\n', '▁{', '\n', '▁for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'c', 'onto', '.', 'test', 'o', '.', 'length', '-1;', '▁i', '++)', '\n\t\t\t', 'c', 'onto', '.', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '("""");', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁et', 'iche', 'tta', '▁=', '▁new', '▁label', '(""', 'int', 'est', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁numero', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'cogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(""', 'lista', '▁stan', 'ze', '"");', '\n', '▁stampa', '▁=', '▁new', '▁button', '(""', '▁stampa', '▁""', ');', '\n', '▁ok', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n', '▁part', 'enza', '▁=', '▁new', '▁button', '(""', '▁chi', 'udi', '▁cont', 'o', '▁""', ');', '\n', '▁testo', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '4);', '\n', '▁testo', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁testo', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '20', ');', '\n', '▁testo', '4', '▁=', '▁new', '▁text', 'field', '(""', '"",', '3', '0);', '\n', '▁testo', '1.', 's', 'ette', 'xt', '(', 't', '0+', 't', '3);', '\n', '▁testo', '2.', 's', 'ette', 'xt', '(', 't', '1);', '\n', '▁testo', '3.', 's', 'ette', 'xt', '(', 't', '2);', '\n', '▁testo', '4.', 's', 'ette', 'xt', '(', 't', '4);', '\n', '▁testo', '1.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁testo', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\n', '▁text', '▁=', '▁new', '▁text', 'area', '(2', '5,5', '0);', '\n', '▁text', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁text', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\n', '▁panel', '1=', 'new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'etic', 'he', 'tta', ',', '0,0,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,0,', '0,', '5,', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'label', '1,', '0,', '1,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '0.', '0,', '0.', '0,', '5,', '0,', '5,', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'test', 'o', '1,', '1,', '1,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'label', '2,', '0,', '2,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '0.', '0,', '0.', '0,', '5,', '0,', '5,', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'test', 'o', '2,', '1,', '2,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'label', '3,', '2,', '2,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'test', 'o', '3,', '3,', '2,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'label', '4,', '0,', '3,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', 'test', 'o', '4,', '1,', '3,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '5,', '0,', '5,', '0);', '▁', '\n\n\n', '▁panel', '2=', 'new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', 'text', ',', '0,0,', '4,', '4,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '1.', '0,', '5,', '0,', '5,', '0);', '▁', '\n\n\n', '▁panel', '3=', 'new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'st', 'ampa', ',', '0,0,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '0,', '0.', '0,', '5,', '5,', '5,', '5);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'part', 'enza', ',', '1,', '0,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '0,', '0.', '0,', '5,', '5,', '5,', '5);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', 'ok', ',', '2,', '0,', '1,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '0.', '0,', '0.', '0,', '5,', '5,', '5,', '5);', '▁', '\n\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '1,', '0,0,', '4,', '3,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '0.', '0,', '10,', '10,', '10,', '10)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '2,', '0,', '3,4,', '6,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '1.', '0,', '1.', '0,', '10,', '10,', '10,', '10)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '3,', '0,', '9,', '4,', '1,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '1.', '0,', '0.', '0,', '10,', '10,', '10,', '10)', ';', '▁', '\n\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ok', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n\t', '▁', '\t', 'c', 'onto', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁stampa', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'st', 'ampa', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁part', 'enza', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'chi', 'ud', 'ic', 'onto', '();', '\t', '▁', '\t\n', '▁', '\t\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁}', '\n\n\t', 'void', '▁read', 'c', 'onto', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'dat', 'ain', 'put', 'stream', '▁inst', 'ream', ';', '\n\t\t', 'try', '\n\t\t', '{', '\n\t\t\t', 'in', 'stream', '▁=', '▁new', '▁dat', 'ain', 'put', 'stream', '(', 'new', '▁file', 'input', 'stream', '(""', 'c', 'onto', '.', 'ab', 'g', '""));', '\n\t\t', '}', '\n\t\t', 'catch', '▁(', 'io', 'exception', '▁ex', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁err', 'ore', '▁nell', ""'"", 'apert', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'try', '\n\t\t', '{', '\n\t\t\t', 'string', '▁new', 'text', '=""', '"";', '\n\t\t\t', 'string', '▁line', ';', '\n\t\t\t', 'while', '((', 'line', '=', 'in', 'stream', '.', 'read', 'line', '())', '!', '=', 'null', ')', '\n\t\t\t\t', 'new', 'text', '=', 'new', 'text', '+', 'line', '+""', '\\', 'n', '"";', '\n\t\t\t', 'text', '.', 's', 'ette', 'xt', '(', 'new', 'text', ');', '\n\t\t\t', 'in', 'stream', '.', 'close', '();', '\n\t\t', '}', '\n\t\t', 'catch', '▁(', 'io', 'exception', '▁ex', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁err', 'ore', '▁durante', '▁la', '▁lett', 'ura', '▁del', '▁file', '▁del', '▁cont', 'o', '!', '▁""', ');', '\n\t\t', '}', '\t\t\n\t', '}', '\n\n\t', 'void', '▁start', 'chi', 'ud', 'ic', 'onto', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'ask', 'chi', 'ud', 'ic', 'onto', '▁ask', ';', '\n\n\t\t', 'date', '▁today', '▁=', '▁new', '▁date', '();', '\n\t\t', 'date', '▁fine', '_', 'eff', 'ett', 'iva', ';', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t', 'fine', '_', 'eff', 'ett', 'iva', '▁=', '▁cont', 'o', '.', 'fine', '_', 'so', 'gg', '_', 'anticip', 'ato', ';', '\n\t\t', 'else', '\n\t\t\t', 'fine', '_', 'eff', 'ett', 'iva', '▁=', '▁cont', 'o', '.', 'data', '_', 'fine', '_', 'mag', 'g', ';', '\n\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2(', '▁fine', '_', 'eff', 'ett', 'iva', ',', '▁today', '▁)', '▁)', '\n\t\t\t', 'ask', '▁=', '▁new', '▁ask', 'chi', 'ud', 'ic', 'onto', '(', 'this', ');', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁chi', 'ud', 'ere', '▁il', '▁cont', 'o', '▁fino', '▁al', '▁giorno', '▁della', '▁part', 'enza', '!', '▁""', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t', 'void', '▁start', 'ch', 'ius', 'ura', '()', '\n\t', '{', '\n\t\t', 'switch', '▁(', 'ch', 'ius', 'ura', ')', '\n\t\t', '{', '\n\t\t\t', 'case', '▁1:', '▁chi', 'ud', 'istan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '(),', '▁cont', 'o', '.', 'date', '_', 'in', 'izio', '[0', '],', '▁cont', 'o', '.', 'date', '_', 'fine', '[0', '],', '1);', '▁break', ';', '\n\t\t\t', 'case', '▁2:', '▁chi', 'ud', 'ising', 'olo', '();', '▁break', ';', '\n\t\t\t', 'case', '▁3:', '▁chi', 'ud', 'icom', 'it', 'iva', '();', '▁break', ';', '\t\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'void', '▁chi', 'ud', 'istan', 'za', '(', 'string', '▁stanza', ',', '▁date', '▁data', '_', 'in', 'izio', ',', '▁date', '▁data', '_', 'fine', ',', 'int', '▁caller', ')', '\n\t', '{', '\n\t\t', 'long', '▁id', ';', '\n\t\t', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', ';', '\n\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'stan', 'za', ',', '▁false', ');', '\n\t\t', 'id', '▁=', '▁(', 'l', '_', 'so', 'gg', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(1)', ').', 'getid', 'p', 'ren', 'ot', 'azione', '();', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁l', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'frame', '▁msg', ';', '\n\n\t\t', 'if', '▁(', 'l', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'azione', '▁della', '▁pren', 'ot', 'azione', '▁', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'del', 'p', 'ren', 'ot', 'azione', '(', 'id', ');', '\n\n\t\t', '//', '▁sp', 'ost', 'amento', '▁nello', '▁stor', 'ico', '▁e', '▁canc', 'ell', 'azione', '▁dei', '▁sog', 'gi', 'orn', 'anti', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁l', '_', 'so', 'gg', '.', 'length', '();', '▁i', '++)', '\n\t\t', '{', '\t\n\t\t\t', 'so', 'gg', '▁=', '▁l', '_', 'so', 'gg', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(', 'i', ');', '\n\t\t\t', 'if', '▁(', '▁!', '(', 'so', 'gg', '.', 'get', 'cogn', 'ome', '()', ').', 'equals', '(""', '"")', '▁&&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'n', 'ome', '()', ').', 'equals', '(""', '"")', '▁&&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'ind', 'ir', 'iz', 'zo', '()', ').', 'equals', '(""', '"")', '▁&&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'com', 'une', '()', ').', 'equals', '(""', '"")', '▁&&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'c', 'itta', '()', ').', 'equals', '(""', '"")', '▁&&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'num', 'tel', '()', ').', 'equals', '(""', '"")', '▁&&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'cap', '()', ').', 'equals', '(""', '"")', '▁&&', '\n\t\t\t\t', '▁!', '(', 'so', 'gg', '.', 'get', 'num', 'doc', '()', ').', 'equals', '(""', '"")', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'int', '▁j', '▁=', '\t', '(', 'princip', 'ale', '.', 'db', ').', 'writ', 'estor', 'ico', '(', 'so', 'gg', '.', 'toc', 'l', 'iente', '());', '\n\t\t\t\t', 'if', '▁(', 'j', '▁!=', '▁database', '.', 'ok', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁sc', 'ritt', 'ura', '▁nello', '▁stor', 'ico', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'del', 'so', 'ggi', 'orn', 'ante', '(', 'stan', 'za', ',', 'so', 'gg', '.', 'getid', 'so', 'ggi', 'orn', 'ante', '());', '\n\t\t', '}', '\n\t\t', '//', '▁canc', 'ell', 'azione', '▁degli', '▁add', 'e', 'bit', 'i', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'del', 'ad', 'de', 'bit', 'o', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'azione', '▁dei', '▁supp', '▁e', '▁rid', '▁dai', '▁beni', '/', 'serv', 'izi', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'd', 'els', 'up', 'pr', 'id', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁canc', 'ell', 'azione', '▁delle', '▁telef', 'onate', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'del', 'tele', 'f', 'onate', '(', 'stan', 'za', ');', '\n\t\t\n\t\t', '//', '▁ag', 'gi', 'orn', 'amento', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ':', '▁quest', 'o', '▁devon', 'o', '▁ess', 'ere', '▁f', 'atto', '▁aff', 'in', 'che', ""'"", '\n\t\t', '//', '▁le', '▁inform', 'azioni', '▁rip', 'ort', 'ate', '▁dalla', '▁mac', 'hera', '▁di', '▁visual', 'izz', 'azione', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '\n\t\t', '//', '▁sia', '▁coer', 'ente', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'utils', '.', 'aggi', 'orn', 'ad', 'isp', '(', 'l', '_', 'disp', ',', '▁stanza', ',', '▁data', '_', 'in', 'izio', ',', '▁data', '_', 'fine', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'occup', 'ata', ',', '▁true', ');', '\n\t\t\t', 'utils', '.', 'rest', 'orec', 'om', 'mission', 'i', '(', 'stan', 'za', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'dis', 'pon', 'ibil', 'ita', '(', 'stan', 'za', ');', '\n\t\t\t', 'if', '▁(', 'disp', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'disp', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'data', '_', 'in', 'izio', ',', '▁data', '_', 'fine', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'occup', 'ata', ');', '\n\t\t\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'changed', 'is', 'pon', 'ibil', 'ita', '(', 'disp', '.', 'get', 'num', 'stan', 'za', '(),', '▁disp', '.', 'get', 'disp', 'ann', 'oc', 'orr', '(),', '▁disp', '.', 'get', 'disp', 'ann', 'op', 'rox', '());', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'call', 'er', '▁==', '▁1)', '\n\t\t\t', 'start', 'st', 'ampa', '();', '\n\t', '}', '\n\t\n\t', 'void', '▁chi', 'ud', 'ising', 'olo', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'c', 'onto', '.', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '\n\t\t', '{', '\n\t\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'anticip', 'af', 'ines', 'ogg', '(', 'c', 'onto', '.', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'num', 'stan', 'za', '(),', '\n\t\t\t\t\t\t\t\t\t', 'c', 'onto', '.', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'getid', 'so', 'ggi', 'orn', 'ante', '(),', '\n\t\t\t\t\t\t\t\t\t', 'c', 'onto', '.', 'fine', '_', 'so', 'gg', '_', 'anticip', 'ato', ');', '\n\t\t', '}', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'revers', 'ep', 'ag', 'ato', '(', 'c', 'onto', '.', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'num', 'stan', 'za', '(),', '\n\t\t\t\t\t\t\t\t\t', '▁cont', 'o', '.', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'getid', 'so', 'ggi', 'orn', 'ante', '());', '\n\t', '}', '\n\t\n\t', 'void', '▁chi', 'ud', 'icom', 'it', 'iva', '()', '\n\t', '{', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '▁<', '▁cont', 'o', '.', 'l', '_', 'st', '.', 'length', ';', '▁i', '++)', '\n\t\t\t', 'chi', 'ud', 'istan', 'za', '(', 'c', 'onto', '.', 'l', '_', 'st', '[', 'i', '],', '▁cont', 'o', '.', 'date', '_', 'in', 'izio', '[', 'i', '],', '▁cont', 'o', '.', 'date', '_', 'fine', '[', 'i', '],', '2);', '\n\t\t', 'start', 'st', 'ampa', '();', '\n\t', '}', '\n\n\t', 'void', '▁start', 'st', 'ampa', '()', '\n\t', '{', '\n\t\t', 'properties', '▁prop', '▁=', '▁new', '▁properties', '();', '\n\t\t', 'tool', 'kit', '▁tk', '▁=', '▁toolkit', '.', 'get', 'default', 'tool', 'kit', '();', '\n\t\t', 'print', 'job', '▁pj', '▁=', '▁tk', '.', 'get', 'print', 'job', '(', 'this', ',""', 'st', 'ampa', '▁del', '▁cont', 'o', '"",', 'prop', ');', '\n\t\t\n\t\t', 'if', '▁(', 'pj', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'graphics', '▁g', '▁=', '▁pj', '.', 'get', 'graphics', '();', '\n\t\t\t', 'text', '.', 'print', 'all', '(', 'g', ');', '\n\t\t\t', 'g', '.', 'dis', 'pose', '();', '\n\t\t\t', 'pj', '.', 'end', '();', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java import java awt event import common util import common def import moduli import java util date import java util properti public class maschera visualizzazion conto extend frame button stampa partenza text field testo testo testo testo label etichetta label label label label panel panel panel panel grid bag layout gridbag new grid bag layout text area text buffer reader stream int chiusura maschera calcolo conto conto new maschera calcolo conto new frame public maschera visualizzazion conto string string string string string int tipo super visualizzazion del conto chiusura tipo setup read conto init pack void setup string string string string string int conto testo length conto testo set text set font configurazion sistema font base etichetta new label intestazion etichetta set font configurazion sistema font titolo label new label stanza numero label new label cognom label new label nome label new label lista stanz stampa new button stampa new button indietro partenza new button chiudi conto testo new text field testo new text field testo new text field testo new text field testo set text testo2 set text testo3 set text testo4 set text testo1 set edit fals testo2 set edit fals testo3 set edit fals testo4 set edit fals text new text area text set edit fals text set font configurazion sistema font_allineato panel1 new panel (); panel1 set layout gridbag util constrain panel1 etichetta grid bag constraint none grid bag constraint northwest util constrain panel1 label1 grid bag constraint none grid bag constraint northwest util constrain panel1 testo1 grid bag constraint none grid bag constraint northwest util constrain panel1 label2 grid bag constraint none grid bag constraint northwest util constrain panel1 testo2 grid bag constraint none grid bag constraint northwest util constrain panel1 label3 grid bag constraint none grid bag constraint northwest util constrain panel1 testo3 grid bag constraint none grid bag constraint northwest util constrain panel1 label4 grid bag constraint none grid bag constraint northwest util constrain panel1 testo4 grid bag constraint none grid bag constraint northwest panel2 new panel (); panel2 set layout gridbag util constrain panel2 text grid bag constraint grid bag constraint northwest panel3 new panel (); panel3 set layout gridbag util constrain panel3 stampa grid bag constraint none grid bag constraint southeast util constrain panel3 partenza grid bag constraint none grid bag constraint center util constrain panel3 grid bag constraint none grid bag constraint southwest set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint northwest util constrain panel2 grid bag constraint grid bag constraint northwest util constrain panel3 grid bag constraint horizont grid bag constraint southwest public void init add action listen new action listen public void action perform action event dispos (); conto set enabl true }); stampa add action listen new action listen public void action perform action event start stampa (); }); partenza add action listen new action listen public void action perform action event start chiudi conto (); }); void read conto frame msg data input stream stream tri stream new data input stream new file input stream conto abg "")); catch ioexcept msg new messag dialog error nell apertura del file del conto ""); return tri string new text =""""; string line line stream read line ())!= null new text new text line +""\ text set text new text stream close (); catch ioexcept msg new messag dialog error durant lettura del file del conto ""); void start chiudi conto frame msg ask chiudi conto ask date today new date (); date fine_effettiva conto checkbox get state ()) fine_effettiva conto fine_sogg_anticipato els fine_effettiva conto data_fine_magg util data1minor data2 fine_effettiva today ask new ask chiudi conto els msg new avviso dialog non possibil chiuder conto fino giorno della partenza ""); void start chiusura switch chiusura case chiudi stanza testo1 get text (), conto date_inizio conto date_fin break case chiudi singolo (); break case chiudi comitiva (); break void chiudi stanza string stanza date data_inizio date data_fin int caller long soggiornant sogg lista soggiornanti l_sogg principal found soggiornanti stanza fals l_sogg get soggiornant )). get prenotazion (); lista disponibilita l_disp principal elenco disponibilita (); frame msg l_disp null msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return cancellazion della prenotazion principal del prenotazion spostamento nello storico cancellazion dei soggiornanti int l_sogg length (); ++) sogg l_sogg get soggiornant sogg get cognom ()). equal ("""") sogg get nome ()). equal ("""") sogg get indirizzo ()). equal ("""") sogg get comun ()). equal ("""") sogg get citta ()). equal ("""") sogg get num tel ()). equal ("""") sogg get cap ()). equal ("""") sogg get num doc ()). equal ("""") int principal write storico sogg client ()); data base msg new messag dialog problemi con databas nella scrittura nello storico ""); return principal del soggiornant stanza sogg get soggiornant ()); cancellazion deg addeb principal del addebito stanza cancellazion dei supp rid dai beni servizi principal del supp rid stanza cancellazion dell telefon principal del telefon stanza aggiornamento dell disponibilita questo devono esser fatto affinch informazioni riport dalla machera visualizzazion dell disponibilita sia coerent conto util aggiorna disp l_disp stanza data_inizio data_fin flag disponibil flag occupata true util restor commissioni stanza els disponibilita disp principal read disponibilita stanza disp null disp set disponibilita data_inizio data_fin flag disponibil flag occupata principal chang disponibilita disp get num stanza (), disp get disp anno corr (), disp get disp anno prox ()); caller start stampa (); void chiudi singolo conto checkbox get state ()) principal anticipa fine sogg conto sogg_x_conto_s get num stanza (), conto sogg_x_conto_s get soggiornant (), conto fine_sogg_anticipato principal revers pagato conto sogg_x_conto_s get num stanza (), conto sogg_x_conto_s get soggiornant ()); void chiudi comitiva int conto l_st length ++) chiudi stanza conto l_st conto date_inizio conto date_fin start stampa (); void start stampa properti prop new properti (); toolkit toolkit get default toolkit (); print job get print job stampa del conto prop null graphic get graphic (); text print dispos (); end ();"
62~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/RicercaTelefonate.java~RicercaTelefonate.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class RicercaTelefonate extends Frame 
{  
	Prenotazione prenotazione;
    
    //Dichiarazioni di variabili
    Panel panel1, panel2, panel3;
    Label  etichetta1, label1, label3;
    List lista;
    Button  Annulla, Cerca;
    TextField stanza;
    GridBagLayout gridbag = new GridBagLayout();
	Frame padre = new Frame();
    Frame figlio;
    ListaTelefonate L;
    Telefonata tel;
    int tot_scatti = 0;
    
    public RicercaTelefonate(Frame p)
    {
        super(""Ricerca delle telefonate"");
        padre = p;
        padre.setEnabled(false);
        setupPanels();
        init();
        pack();
        setVisible(true); 
    }
                     
        void setupPanels()
        {  
			this.setFont(ConfigurazioneSistema.font_base);
            //Creo due pulsanti  
            Annulla = new Button("" Fine  "");
            Cerca = new Button("" Cerca "");

            //Creo le etichette
            etichetta1 = new Label (""Inserire la stanza addebitata                         "");
            etichetta1.setFont(ConfigurazioneSistema.font_titolo);
            label1 = new Label(""Numero Stanza"");
			label3 = new Label(""Risultato della ricerca"");
			label3.setFont(ConfigurazioneSistema.font_titolo);
            
            //Creo i TextField e ne rendo  alcuni non editabili
            stanza = new TextField("""", 4);
			
            //Creo il pannello in alto per inserimento dei dati del cliente
            panel1 = new Panel();
            panel1.setLayout(gridbag);
            Utils.constrain(panel1, etichetta1, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel1, stanza, 1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);
           
            //Creo il pannello in basso con due pulsanti                  
            panel2 = new Panel();
            panel2.setLayout(gridbag);
            Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel2, Cerca, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             
            
            //Creo il pannello con la lista dei risultati della ricerca
            lista = new List(10,false);
            lista.setFont(ConfigurazioneSistema.font_allineato);
            
            panel3 = new Panel();
            panel3.setLayout(gridbag);
            Utils.constrain(panel3, label3, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel3, lista, 0, 1, 4, 3, GridBagConstraints.BOTH,
                        GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);             
            
            
            //Attacco i pannelli al frame
            this.setLayout(gridbag);
            Utils.constrain(this, panel1, 0, 1, 4, 2, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(this, panel2, 0, 14, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
        	Utils.constrain(this, panel3, 0, 15, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
        	panel3.setVisible(false);
        	pack();
        
        }

    public void init()
    {
		lista.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				tel = L.getTelefonata((lista.getSelectedIndexes())[0]+1);
				startVediTelefonata(tel);
			}
      	});
 

		
	stanza.addActionListener(new ActionListener()
	{
		public void actionPerformed(ActionEvent e)
		{
			if (noErrors())
				creaLista();
		}			      	
	});
	
    Cerca.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				if (noErrors())
					creaLista();
			}	
      	});
      
  	Annulla.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				dispose();
				padre.setEnabled(true);
			}
      	});    	
    } 

	void startVediTelefonata(Telefonata tel)
	{
		figlio = new MascheraTelefonate(this, tel, tot_scatti); 
	}	
	
	
	public void creaLista()
	{
		Frame msg;
		tot_scatti = 0;
		L = (Principale.db).foundTelefonate(stanza.getText());
		if (L != null)
		{
			if (!L.isEmpty())
			{
				if (lista.getItemCount() > 0)
					lista.removeAll();
				panel3.setVisible(true);
				pack();
				for(int i = 1; i<=L.length(); i++)
				{	
					lista.addItem(L.getTelefonata(i).toString());			
					tot_scatti += L.getTelefonata(i).getNumScatti();
				}
			}
			else
				msg = new AvvisoDialog(this, "" Nessuna telefonata addebitata "");
		}
		else
			msg = new MessageDialog(this, ""Problemi con il DataBase!"");
	}			

	boolean noErrors()
	{
		Frame msg;
		//Disponibilita disp = new Disponibilita();
		if ((stanza.getText().equals("""")) ) 
		{
			msg = new AvvisoDialog(this,""Inserire il numero della stanza"");
			return false;
		}
		else
			if( (Principale.db).readStanza(stanza.getText()) == null )
			{
				msg = new MessageDialog(this,""La stanza inserita e' inesistente!"");
				return false;
			}
		return true;	
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '▁ext', 'ends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', 'ot', 'az', 'ion', 'e', ';', '\n', '▁', '\n', '▁/', '/', 'd', 'ich', 'i', 'ar', 'az', 'ion', 'i', '▁di', '▁vari', 'ab', 'ili', '\n', '▁pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3', ';', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁label', '1,', '▁label', '3', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁cer', 'ca', ';', '\n', '▁text', 'field', '▁stan', 'za', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁frame', '▁fig', 'l', 'io', ';', '\n', '▁list', 'ate', 'le', 'f', 'on', 'ate', '▁l', ';', '\n', '▁tele', 'f', 'on', 'ata', '▁tel', ';', '\n', '▁int', '▁to', 't', '_', 'sc', 'att', 'i', '▁=', '▁0', ';', '\n', '▁', '\n', '▁public', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '(', 'fr', 'ame', '▁p', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'ric', 'er', 'ca', '▁del', 'le', '▁tele', 'f', 'on', 'ate', '"")', ';', '\n', '▁pad', 're', '▁=', '▁p', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁set', 'vis', 'ible', '(', 'tr', 'ue', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁la', '▁stan', 'za', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁stan', 'za', '"")', ';', '\n\t\t\t', 'l', 'ab', 'el', '3', '▁=', '▁new', '▁label', '(', '""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', '"")', ';', '\n\t\t\t', 'l', 'ab', 'el', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁al', 'c', 'un', 'i', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁stan', 'za', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n\t\t\t\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁per', '▁ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁cer', 'ca', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁con', '▁la', '▁list', 'a', '▁de', 'i', '▁r', 'is', 'ult', 'ati', '▁d', 'ella', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '1', '0,', 'f', 'al', 'se', ');', '\n', '▁list', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁1,', '▁4,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁15,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n\t\t', 'list', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 't', 'el', '▁=', '▁l', '.', 'get', 'te', 'le', 'f', 'on', 'ata', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'st', 'art', 'ved', 'ite', 'le', 'f', 'on', 'ata', '(', 't', 'el', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\n\t\t\n\t', 'stan', 'za', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t', '{', '\n\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'no', 'er', 'r', 'ors', '(', ')', ')', '\n\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t', '}', '\t\t\t', '▁', '\t\n\t', '}', ');', '\n\t\n', '▁cer', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'no', 'er', 'r', 'ors', '(', ')', ')', '\n\t\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'ved', 'ite', 'le', 'f', 'on', 'ata', '(', 'te', 'le', 'f', 'on', 'ata', '▁tel', ')', '\n\t', '{', '\n\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁m', 'asc', 'her', 'ate', 'le', 'f', 'on', 'ate', '(', 'this', ',', '▁tel', ',', '▁to', 't', '_', 'sc', 'att', 'i', ');', '▁', '\n\t', '}', '\t\n\t\n\t\n\t', 'publ', 'ic', '▁vo', 'id', '▁cre', 'al', 'ista', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 't', 'ot', '_', 'sc', 'att', 'i', '▁=', '▁0', ';', '\n\t\t', 'l', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'te', 'le', 'f', 'on', 'ate', '(', 'stan', 'za', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', 'l', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'p', 'ack', '(', ');', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', 'l', '.', 'get', 'te', 'le', 'f', 'on', 'ata', '(', 'i', ').', 't', 'ost', 'ring', '(', ')', ');', '\t\t\t\n\t\t\t\t\t', 't', 'ot', '_', 'sc', 'att', 'i', '▁+', '=', '▁l', '.', 'get', 'te', 'le', 'f', 'on', 'ata', '(', 'i', ').', 'get', 'n', 'um', 'sc', 'att', 'i', '(', ');', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁n', 'ess', 'una', '▁tele', 'f', 'on', 'ata', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '!', '"")', ';', '\n\t', '}', '\t\t\t\n\n\t', 'bo', 'ole', 'an', '▁no', 'er', 'r', 'ors', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', '//', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', '(', 'stan', 'za', '.', 'get', 'text', '(', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁d', 'ella', '▁stan', 'za', '"")', ';', '\n\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '(', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'text', '(', ')', ')', '▁=', '=', '▁n', 'ull', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁e', ""'"", '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t\t', '}', '\n\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '▁extends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'az', 'ioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '3', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁cer', 'ca', ';', '\n', '▁text', 'field', '▁stan', 'za', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '\n', '▁frame', '▁fig', 'lio', ';', '\n', '▁list', 'ate', 'le', 'f', 'on', 'ate', '▁l', ';', '\n', '▁tele', 'f', 'on', 'ata', '▁tel', ';', '\n', '▁int', '▁tot', '_', 'sc', 'atti', '▁=', '▁0', ';', '\n', '▁', '\n', '▁public', '▁ric', 'erc', 'ate', 'le', 'f', 'on', 'ate', '(', 'frame', '▁p', ')', '\n', '▁{', '\n', '▁super', '(""', 'ric', 'er', 'ca', '▁delle', '▁tele', 'f', 'on', 'ate', '"");', '\n', '▁pad', 're', '▁=', '▁p', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁set', 'vis', 'ible', '(', 'true', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁due', '▁puls', 'anti', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁la', '▁stan', 'za', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stan', 'za', '"");', '\n\t\t\t', 'l', 'abel', '3', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', '"");', '\n\t\t\t', 'l', 'abel', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁stan', 'za', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n\t\t\t\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁per', '▁ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁stan', 'za', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁cer', 'ca', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '10,', 'false', ');', '\n', '▁list', 'a', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁1,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'false', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'list', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'tel', '▁=', '▁l', '.', 'get', 'tele', 'f', 'on', 'ata', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'start', 'ved', 'ite', 'le', 'f', 'on', 'ata', '(', 'tel', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\n\t\t\n\t', 'stan', 'za', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t', '{', '\n\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'no', 'er', 'rors', '())', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t', '}', '\t\t\t', '▁', '\t\n\t', '}', ');', '\n\t\n', '▁cer', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'no', 'er', 'rors', '())', '\n\t\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'ved', 'ite', 'le', 'f', 'on', 'ata', '(', 'tele', 'f', 'on', 'ata', '▁tel', ')', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ate', 'le', 'f', 'on', 'ate', '(', 'this', ',', '▁tel', ',', '▁tot', '_', 'sc', 'atti', ');', '▁', '\n\t', '}', '\t\n\t\n\t\n\t', 'public', '▁void', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'tot', '_', 'sc', 'atti', '▁=', '▁0', ';', '\n\t\t', 'l', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'tele', 'f', 'on', 'ate', '(', 'stan', 'za', '.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(', 'l', '.', 'get', 'tele', 'f', 'on', 'ata', '(', 'i', ').', 't', 'ost', 'ring', '());', '\t\t\t\n\t\t\t\t\t', 'tot', '_', 'sc', 'atti', '▁+', '=', '▁l', '.', 'get', 'tele', 'f', 'on', 'ata', '(', 'i', ').', 'get', 'num', 'sc', 'atti', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁ness', 'una', '▁tele', 'f', 'on', 'ata', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t', '}', '\t\t\t\n\n\t', 'bo', 'olean', '▁no', 'er', 'rors', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', '//', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', '(', 'stan', 'za', '.', 'get', 'text', '().', 'equ', 'als', '(""', '"")', ')', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁della', '▁stan', 'za', '"");', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '(', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'text', '())', '▁==', '▁null', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁e', ""'"", '▁in', 'es', 'ist', 'ente', '!', '"");', '\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ric', 'erc', 'ate', 'lef', 'onate', '▁extends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'azioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3;', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '3;', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁cer', 'ca', ';', '\n', '▁text', 'field', '▁stanza', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '\n', '▁frame', '▁fig', 'lio', ';', '\n', '▁list', 'ate', 'lef', 'onate', '▁l', ';', '\n', '▁telef', 'on', 'ata', '▁tel', ';', '\n', '▁int', '▁tot', '_', 'sc', 'atti', '▁=', '▁0;', '\n', '▁', '\n', '▁public', '▁ric', 'erc', 'ate', 'lef', 'onate', '(', 'frame', '▁p', ')', '\n', '▁{', '\n', '▁super', '(""', 'ric', 'er', 'ca', '▁delle', '▁telef', 'onate', '"");', '\n', '▁padre', '▁=', '▁p', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁set', 'visible', '(', 'true', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁due', '▁puls', 'anti', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁la', '▁stanza', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁stanza', '"");', '\n\t\t\t', 'label', '3', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', '"");', '\n\t\t\t', 'label', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁stanza', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n\t\t\t\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁per', '▁ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁stanza', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁cer', 'ca', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ricer', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '10,', 'false', ');', '\n', '▁list', 'a', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁label', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁list', 'a', ',', '▁0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.0,', '▁3.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁1,', '▁4,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'panel', '3.', 'set', 'visible', '(', 'false', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'lista', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'tel', '▁=', '▁l', '.', 'get', 'tele', 'fon', 'ata', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t\t', 'start', 'ved', 'ite', 'lef', 'on', 'ata', '(', 'tel', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\n\t\t\n\t', 'stan', 'za', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t', '{', '\n\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'no', 'errors', '())', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t', '}', '\t\t\t', '▁', '\t\n\t', '}', ');', '\n\t\n', '▁cer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', 'no', 'errors', '())', '\n\t\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n', '▁}', '▁', '\n\n\t', 'void', '▁start', 'ved', 'ite', 'lef', 'on', 'ata', '(', 'tele', 'fon', 'ata', '▁tel', ')', '\n\t', '{', '\n\t\t', 'fig', 'lio', '▁=', '▁new', '▁masc', 'her', 'ate', 'lef', 'onate', '(', 'this', ',', '▁tel', ',', '▁tot', '_', 'sc', 'atti', ');', '▁', '\n\t', '}', '\t\n\t\n\t\n\t', 'public', '▁void', '▁cre', 'al', 'ista', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'tot', '_', 'sc', 'atti', '▁=', '▁0;', '\n\t\t', 'l', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'tele', 'f', 'onate', '(', 'stan', 'za', '.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(!', 'l', '.', 'isempty', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'lista', '.', 'remove', 'all', '();', '\n\t\t\t\t', 'panel', '3.', 'set', 'visible', '(', 'true', ');', '\n\t\t\t\t', 'pack', '();', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1;', '▁i', '<', '=', 'l', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'lista', '.', 'add', 'item', '(', 'l', '.', 'get', 'tele', 'fon', 'ata', '(', 'i', ').', 'tostring', '());', '\t\t\t\n\t\t\t\t\t', 'tot', '_', 'sc', 'atti', '▁+=', '▁l', '.', 'get', 'tele', 'fon', 'ata', '(', 'i', ').', 'get', 'num', 'sc', 'atti', '();', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁ness', 'una', '▁telef', 'on', 'ata', '▁add', 'e', 'bit', 'ata', '▁""', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t', '}', '\t\t\t\n\n\t', 'boolean', '▁no', 'errors', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', '//', 'dis', 'pon', 'ibil', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁((', 'stan', 'za', '.', 'get', 'text', '().', 'equals', '(""', '""))', '▁)', '▁', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁numero', '▁della', '▁stanza', '"");', '\n\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'if', '(', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', '.', 'get', 'text', '())', '▁==', '▁null', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stanza', '▁ins', 'er', 'ita', '▁e', ""'"", '▁ines', 'ist', 'ente', '!', '"");', '\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\t\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class ricerca telefon extend frame prenotazion prenotazion dichiarazioni variabili panel panel panel panel label etichetta label label list lista button annulla cerca text field stanza grid bag layout gridbag new grid bag layout frame padr new frame frame figlio lista telefon telefonata tel int tot scatti public ricerca telefon frame super ricerca dell telefon padr padr set enabl fals setup panel init pack set visibl true void setup panel set font configurazion sistema font base creo due pulsanti annulla new button fine cerca new button cerca creo etichett etichetta new label inserir stanza addebitata etichetta set font configurazion sistema font titolo label new label numero stanza label new label risultato della ricerca label set font configurazion sistema font titolo creo text field rendo alcuni non editabili stanza new text field creo pannello alto per inserimento dei dati del client panel new panel panel set layout gridbag util constrain panel etichetta grid bag constraint none grid bag constraint northwest util constrain panel label grid bag constraint none grid bag constraint northwest util constrain panel stanza grid bag constraint none grid bag constraint northwest creo pannello basso con due pulsanti panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint center util constrain panel2 cerca grid bag constraint none grid bag constraint center creo pannello con lista dei risultati della ricerca lista new list fals lista set font configurazion sistema font_allineato panel3 new panel (); panel3 set layout gridbag util constrain panel3 label3 grid bag constraint none grid bag constraint west util constrain panel3 lista grid bag constraint grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint west util constrain panel3 grid bag constraint horizont grid bag constraint west panel3 set visibl fals pack (); public void init lista add action listen new action listen public void action perform action event tel get telefonata lista get select index ())[ start vedi telefonata tel }); stanza add action listen new action listen public void action perform action event error ()) crea lista (); }); cerca add action listen new action listen public void action perform action event error ()) crea lista (); }); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); void start vedi telefonata telefonata tel figlio new maschera telefon tel tot_scatti public void crea lista frame msg tot_scatti principal found telefon stanza get text ()); null empti ()) lista get item count lista remov (); panel3 set visibl true pack (); int length (); ++) lista add item get telefonata string ()); tot_scatti get telefonata get num scatti (); els msg new avviso dialog nessuna telefonata addebitata ""); els msg new messag dialog problemi con data base !""); boolean error frame msg disponibilita disp new disponibilita (); stanza get text (). equal ("""")) msg new avviso dialog inserir numero della stanza ""); return fals els principal read stanza stanza get text ()) null msg new messag dialog stanza inserita inesistent !""); return fals return true"
63~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/ModificaCommissioni.java~ModificaCommissioni.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;
import moduli.Commissionamento;

public class ModificaCommissioni extends MascheraCommissioni
{
	Commissionamento commissione;
   	
   	public ModificaCommissioni()
   	{
      	super("""", """", ""Modifica i dati delle commissioni"", ""Modifica"", 2);
      	nome_agenzia.setEditable(true);
      	deabilita();
      	init();
   	}

 	public void init()
 	{     	
		lista.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		commissione = L.getCommissionamento(lista.getSelectedIndex()+1);
				writeDatiComm(commissione);
				abilita();
				panel5.setVisible(false);
				pack();
         	}
		});
   
		nome_agenzia.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				creaLista();
			}			      	
		});

    	Azione.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		startAzione();
			}
      	});
      
     	Cerca.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		creaLista();
			}
      	});	
	}
	
	void deabilita()
	{
      	num_stanza.setEditable(false);
      	num_tel_agenzia.setEditable(false);
        inizio_comm.setEditable(false);
        fine_comm.setEditable(false);
        scadenza_comm.setEditable(false); 
       	num_stanza.setEditable(false);
       	Azione.setEnabled(false);
	}
	
	void abilita()
	{
      	num_tel_agenzia.setEditable(true);
        scadenza_comm.setEditable(true); 
       	Azione.setEnabled(true);
	}
	
	void startAzione()
	{
		Frame msg;
		
		if ( !errori() )
		{
			Commissionamento comm = readDatiComm();
			int j;
			if (( j = (Principale.db).changeCommissionamento(commissione.getIdCommissionamento(), comm.getNumStanza(), comm.getNomeAgenzia(),comm.getNumTel(),
									 		comm.getInizioComm(), comm.getFineComm(), comm.getScadenzaComm(), comm.getScaduto())) == DataBase.OK)
			{						
				cleanFields();
				deabilita();
			}
			else
				msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j));
		}
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'com', 'mission', 'ament', 'o', ';', '\n\n', 'publ', 'ic', '▁class', '▁mod', 'ific', 'ac', 'om', 'mission', 'i', '▁ext', 'ends', '▁m', 'asc', 'her', 'ac', 'om', 'mission', 'i', '\n', '{', '\n\t', 'com', 'mission', 'ament', 'o', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁mod', 'ific', 'ac', 'om', 'mission', 'i', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', '"",', '▁""', '"",', '▁""', 'mod', 'ific', 'a', '▁i', '▁d', 'ati', '▁del', 'le', '▁commission', 'i', '"",', '▁""', 'mod', 'ific', 'a', '"",', '▁2', ');', '\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 'de', 'abil', 'ita', '(', ');', '\n', '▁', '\t', 'in', 'it', '(', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n', '▁', '\t', '{', '▁', '\t\n\t\t', 'list', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'com', 'mission', 'e', '▁=', '▁l', '.', 'get', 'com', 'mission', 'ament', 'o', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '+', '1)', ';', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'com', 'mission', 'e', ');', '\n\t\t\t\t', 'abil', 'ita', '(', ');', '\n\t\t\t\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n', '▁', '\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'cer', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁de', 'abil', 'ita', '(', ')', '\n\t', '{', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁in', 'iz', 'io', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁fine', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '▁', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ab', 'il', 'ita', '(', ')', '\n\t', '{', '\n', '▁', '\t', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '▁', '\n', '▁', '\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'er', 'ror', 'i', '(', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'com', 'mission', 'ament', 'o', '▁comm', '▁=', '▁read', 'd', 'atic', 'omm', '(', ');', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '(', '▁j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'ang', 'ec', 'om', 'mission', 'ament', 'o', '(', 'com', 'mission', 'e', '.', 'get', 'id', 'com', 'mission', 'ament', 'o', '(', '),', '▁comm', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁comm', '.', 'get', 'n', 'ome', 'agen', 'z', 'ia', '(', '),', 'com', 'm', '.', 'get', 'n', 'um', 't', 'el', '(', '),', '\n\t\t\t\t\t\t\t\t\t', '▁', '\t\t', 'com', 'm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(', '),', '▁comm', '.', 'get', 'sc', 'ad', 'enz', 'ac', 'omm', '(', '),', '▁comm', '.', 'get', 'sc', 'ad', 'ut', 'o', '(', ')', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\t\t\t\t\t\t\n\t\t\t\t', 'cle', 'an', 'field', 's', '(', ');', '\n\t\t\t\t', 'de', 'abil', 'ita', '(', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'com', 'mission', 'amento', ';', '\n\n', 'public', '▁class', '▁mod', 'ific', 'acom', 'mission', 'i', '▁extends', '▁masc', 'her', 'acom', 'mission', 'i', '\n', '{', '\n\t', 'com', 'mission', 'amento', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁mod', 'ific', 'acom', 'mission', 'i', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', '"",', '▁""', '"",', '▁""', 'mod', 'ific', 'a', '▁i', '▁d', 'ati', '▁delle', '▁commission', 'i', '"",', '▁""', 'mod', 'ific', 'a', '"",', '▁2', ');', '\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'de', 'abil', 'ita', '();', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '▁', '\t\n\t\t', 'list', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'com', 'mission', 'e', '▁=', '▁l', '.', 'get', 'com', 'mission', 'amento', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', '()', '+', '1)', ';', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'com', 'mission', 'e', ');', '\n\t\t\t\t', 'abil', 'ita', '();', '\n\t\t\t\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t\t\t\t', 'pack', '();', '\n', '▁', '\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n', '▁', '\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'cer', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁de', 'abil', 'ita', '()', '\n\t', '{', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁in', 'izio', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁fine', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '▁', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'azione', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁ab', 'il', 'ita', '()', '\n\t', '{', '\n', '▁', '\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'true', ');', '▁', '\n', '▁', '\t', 'azione', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'com', 'mission', 'amento', '▁comm', '▁=', '▁read', 'd', 'atic', 'omm', '();', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '(', '▁j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'chang', 'ec', 'om', 'mission', 'amento', '(', 'com', 'mission', 'e', '.', 'get', 'id', 'com', 'mission', 'amento', '(', '),', '▁comm', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁comm', '.', 'get', 'n', 'ome', 'agen', 'zia', '(', '),', 'comm', '.', 'get', 'num', 'tel', '(', '),', '\n\t\t\t\t\t\t\t\t\t', '▁', '\t\t', 'comm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(', '),', '▁comm', '.', 'get', 'sc', 'ad', 'enz', 'ac', 'omm', '(', '),', '▁comm', '.', 'get', 'sc', 'ad', 'uto', '()', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\t\t\t\t\t\t\n\t\t\t\t', 'cle', 'an', 'fields', '();', '\n\t\t\t\t', 'de', 'abil', 'ita', '();', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'commission', 'amento', ';', '\n\n', 'public', '▁class', '▁mod', 'ific', 'acom', 'mission', 'i', '▁extends', '▁masc', 'her', 'acom', 'mission', 'i', '\n', '{', '\n\t', 'commission', 'amento', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁mod', 'ific', 'acom', 'mission', 'i', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', '"",', '▁"""",', '▁""', 'mod', 'ific', 'a', '▁i', '▁d', 'ati', '▁delle', '▁commission', 'i', '"",', '▁""', 'mod', 'ific', 'a', '"",', '▁2', ');', '\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'de', 'abil', 'ita', '();', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '▁', '\t\n\t\t', 'lista', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'commission', 'e', '▁=', '▁l', '.', 'get', 'commission', 'amento', '(', 'lista', '.', 'get', 'selected', 'index', '()', '+', '1);', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'commission', 'e', ');', '\n\t\t\t\t', 'abil', 'ita', '();', '\n\t\t\t\t', 'panel', '5.', 'set', 'visible', '(', 'false', ');', '\n\t\t\t\t', 'pack', '();', '\n', '▁', '\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n', '▁', '\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'cer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\t\n\t', '}', '\n\t\n\t', 'void', '▁de', 'abil', 'ita', '()', '\n\t', '{', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁in', 'izio', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁fine', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '▁', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'azione', '.', 'set', 'enabled', '(', 'false', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁abil', 'ita', '()', '\n\t', '{', '\n', '▁', '\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'true', ');', '▁', '\n', '▁', '\t', 'azione', '.', 'set', 'enabled', '(', 'true', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'commission', 'amento', '▁comm', '▁=', '▁read', 'd', 'atic', 'omm', '();', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁((', '▁j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'chang', 'ecom', 'mission', 'amento', '(', 'commission', 'e', '.', 'getid', 'commission', 'amento', '(),', '▁comm', '.', 'get', 'num', 'stan', 'za', '(),', '▁comm', '.', 'get', 'n', 'ome', 'agen', 'zia', '(),', 'comm', '.', 'get', 'num', 'tel', '(),', '\n\t\t\t\t\t\t\t\t\t', '▁', '\t\t', 'comm', '.', 'get', 'in', 'izi', 'oc', 'omm', '(),', '▁comm', '.', 'get', 'fin', 'ec', 'omm', '(),', '▁comm', '.', 'get', 'sc', 'ad', 'enz', 'ac', 'omm', '(),', '▁comm', '.', 'get', 'sc', 'ad', 'uto', '()))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\t\t\t\t\t\t\n\t\t\t\t', 'clean', 'fields', '();', '\n\t\t\t\t', 'de', 'abil', 'ita', '();', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import moduli import moduli commissionamento public class modifica commissioni extend maschera commissioni commissionamento commission public modifica commissioni super modifica dati dell commissioni modifica nome agenzia set edit true deabilita init public void init lista add action listen new action listen public void action perform action event commission get commissionamento lista get select index write dati comm commission abilita panel set visibl fals pack nome agenzia add action listen new action listen public void action perform action event crea lista azion add action listen new action listen public void action perform action event start azion cerca add action listen new action listen public void action perform action event crea lista void deabilita num stanza set edit fals num tel agenzia set edit fals inizio comm set edit fals fine comm set edit fals scadenza comm set edit fals num stanza set edit fals azion set enabl fals void abilita num tel agenzia set edit true scadenza comm set edit true azion set enabl true void start azion frame msg errori commissionamento comm read dati comm int principal chang commissionamento commission get commissionamento comm get num stanza comm get nome agenzia comm get num tel comm get inizio comm comm get fine comm comm get scadenza comm comm get scaduto data base clean field (); deabilita (); els msg new messag dialog problemi con databas data base str error ));
64~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraDisponibilita.java~MascheraDisponibilita.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.ListaDisponibilita;
import moduli.Disponibilita;
import moduli.ListaCommissionamenti;
import moduli.Commissionamento;


public class MascheraDisponibilita extends Frame
{
   Button Indietro, Visualizza;
   TextField testo;
   Label etichetta1, etichetta2, etichetta3, label3, label5, label1;
   Panel panel[];
   CheckboxGroup checkbox_group;
   Checkbox[] checkboxes;
   GridBagLayout gridbag = new GridBagLayout();
   List lista_disp;
   Frame padre;
   Costanti cost;
   int anno_corr, anno_prox;
   String agenzia;
   
   ListaDisponibilita L;

   public MascheraDisponibilita(Frame parent, String nome_ag)
   {
      super(""Disponibilita delle stanze"");
      padre = parent;
      agenzia = new String(nome_ag);
      padre.setEnabled(false);
      setupPanels();
      pack();
      init();
      this.setVisible(true);
   }

   void setupPanels()
   {
	  this.setFont(ConfigurazioneSistema.font_base);
      //Creo i pulsanti
      Indietro = new Button("" Indietro "");
      //Annulla.setFont(new Font(""Courier"", Font.PLAIN, 12));
      Visualizza = new Button(""Visualizza disponibilita"");
      Visualizza.setEnabled(false);
      //Conferma.setFont(new Font(""Courier"", Font.PLAIN, 12));

      //Creo le etichette
      etichetta1 = new Label(""Selezionare il tipo di ricerca che si desidera effettuare:"");
      etichetta1.setFont(ConfigurazioneSistema.font_titolo);
      etichetta2 = new Label(""Risultato della ricerca:"");
      etichetta2.setFont(ConfigurazioneSistema.font_titolo);
      etichetta3 = new Label(""Ricerca per stanza:"");
      etichetta3.setFont(ConfigurazioneSistema.font_titolo);
      label1 = new Label(""Stanza numero"");

      //Creo un Checkbox ad esclusione
      checkbox_group = new CheckboxGroup();
      checkboxes = new Checkbox[2];
      checkboxes[0] = new Checkbox("" Ricerca per stanza"",checkbox_group,false);
      checkboxes[1] = new Checkbox("" Ricerca su tutte le stanze"",checkbox_group,false);


      //Creo il TextField e lo rendo non editabili
      testo = new TextField("""", 4);
      testo.setEditable(false);

      //creo una Lista
      lista_disp = new List(10, false);

      panel=new Panel[5];
      for(int i=0;i<panel.length;++i)
      {
         panel[i]=new Panel();
         panel[i].setLayout(gridbag);
      }
      
      //Creo il pannello in alto a sinistra
      Utils.constrain(panel[1], etichetta1, 0, 0, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0); 
      Utils.constrain(panel[1], checkboxes[0], 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0); 
      Utils.constrain(panel[1], checkboxes[1], 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
            
      //Creo il pannello ricerca per stanza
      Utils.constrain(panel[2], etichetta3, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[2], label1, 0, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[2], testo, 1, 1, 1, 1, GridBagConstraints.NONE,
                      GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);

      //Creo il pannello dei pulsanti
      Utils.constrain(panel[0], Indietro, 1, 0, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.EAST, 0.3, 0.0, 10, 0, 10, 5);
      Utils.constrain(panel[0], Visualizza, 3, 0, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.WEST, 0.3, 0.0, 10, 5, 10, 0);

      //Creo il pannello contenente la list_soggiornanti 
      Utils.constrain(panel[4], etichetta2, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[4], lista_disp, 0, 1, 1, 1, GridBagConstraints.BOTH,
                         GridBagConstraints.NORTHWEST, 1.0, 1.0, 0, 5, 0, 20);

      //Attacco i pannelli al frame
      this.setLayout(gridbag);
      Utils.constrain(this, panel[1], 0, 0, 5, 4, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[2], 0, 4, 5, 2, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[0], 0, 6, 5, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.SOUTHEAST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[4], 0, 7, 5, 7, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
   }

   public void init()
   {
      cost = new Costanti();
      anno_corr = cost.getAnnoCorr();
      anno_prox = cost.getAnnoProx();
      
      checkboxes[0].addItemListener(new ItemListener()   
      {
         public void itemStateChanged(ItemEvent e)
         {
                testo.setEditable(true);
				Visualizza.setEnabled(true);
				if (lista_disp.getItemCount() > 0)
					lista_disp.removeAll();
         }
      });
                      
      checkboxes[1].addItemListener(new ItemListener()   
      {
         public void itemStateChanged(ItemEvent e)
         {
                testo.setEditable(false);
				testo.setText("""");
				Visualizza.setEnabled(true);
				if (lista_disp.getItemCount() > 0)
					lista_disp.removeAll();
         }
      });

      Visualizza.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			Disponibilita disp = new Disponibilita();
			String str = new String("""");
			//Tramuto temporaneamente tutti i commissionamenti di una certa agenzia 
			//in disponibilita
		
			ListaDisponibilita L_disp = (Principale.db).elencoDisponibilita();
			if (!agenzia.equals(""""))
			{
				ListaCommissionamenti L_comm = (Principale.db).foundCommissionamenti(agenzia);		
				Commissionamento comm;
				for (int i = 1; i <= L_comm.length(); i++)
				{
					comm = L_comm.getCommissionamento(i);
					disp = Utils.getDispOfRoom(L_disp,comm.getNumStanza(),true);		
					disp.setDisponibilita(comm.getInizioComm(),comm.getFineComm(),Flag.DISPONIBILE, Flag.COMMISSIONATA);
					L_disp.addDisponibilita(disp);
				}
				str = new String(""  ---  commissioni ""+agenzia);
			}
			if (L_disp.length() > 0)
				lista_disp.addItem(""TABELLA DELLE DISPONIBILITA'""+str);
			if (checkboxes[0].getState())
				showDispOfRoom(L_disp,testo.getText());
			else
				showDispOfHotel(L_disp);	
         }
       });

      Indietro.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            padre.setEnabled(true);
          }
       });
   }
   
	void showDispOfRoom(ListaDisponibilita L, String room)
	{
		Frame msg;
		Disponibilita disp;
		String aus;
		
		if (room.equals(""""))
				msg = new MessageDialog(this,""Inserire il numero della stanza per la ricerca delle sue dispoibilita"");
		else
		{	
			disp = Utils.getDispOfRoom(L, room, false);
			if (disp == null)
			{	
				msg = new MessageDialog(this,""La stanza inserita e' inesistente!"");
				if (lista_disp.getItemCount() > 0)
					lista_disp.removeAll();
			}	
			else
			{
				lista_disp.addItem("""");
				lista_disp.addItem(""Disponibilita' stanza n. ""+room+"" per l'anno ""+anno_corr);
				aus = new String(Utils.scanVectorForDisp(disp.getDispAnnoCorr(), anno_corr, (Principale.config).getStagAnnoCorr()));
				if (aus.equals(""""))
					lista_disp.addItem(""NESSUNA DISPONIBILITA'"");
				else
					lista_disp.addItem(aus);
				lista_disp.addItem("""");
				lista_disp.addItem(""Disponibilita' stanza n. ""+room+"" per l'anno ""+anno_prox);
				aus = new String(Utils.scanVectorForDisp(disp.getDispAnnoProx(), anno_prox, (Principale.config).getStagAnnoProx()));
				if (aus.equals(""""))
					lista_disp.addItem(""NESSUNA DISPONIBILITA'"");
				else
					lista_disp.addItem(aus);
			}				
		}	
	}
	
	void showDispOfHotel(ListaDisponibilita L)
	{
		Frame msg;
		if (L.length() == 0)
			msg = new AvvisoDialog(this,""Nessuna stanza trovata!"");
		else
			for (int i = 1; i <= L.length(); i++)
				showDispOfRoom(L, (L.getDisponibilita(i)).getNumStanza());
	}   
}

"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'dis', 'pon', 'ib', 'il', 'ita', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'list', 'ac', 'om', 'mission', 'ament', 'i', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'com', 'mission', 'ament', 'o', ';', '\n\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁but', 'ton', '▁ind', 'iet', 'ro', ',', '▁visual', 'iz', 'za', ';', '\n', '▁text', 'field', '▁test', 'o', ';', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁label', '3,', '▁label', '5,', '▁label', '1', ';', '\n', '▁pan', 'el', '▁pan', 'el', '[', ']', ';', '\n', '▁check', 'box', 'gro', 'up', '▁check', 'box', '_', 'gro', 'up', ';', '\n', '▁check', 'box', '[', ']', '▁check', 'box', 'es', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁list', '▁list', 'a', '_', 'dis', 'p', ';', '\n', '▁frame', '▁pad', 're', ';', '\n', '▁cost', 'ant', 'i', '▁cost', ';', '\n', '▁int', '▁ann', 'o', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'pro', 'x', ';', '\n', '▁string', '▁ag', 'enz', 'ia', ';', '\n', '▁', '\n', '▁list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', ';', '\n\n', '▁public', '▁m', 'asc', 'her', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '(', 'fr', 'ame', '▁paren', 't', ',', '▁string', '▁n', 'ome', '_', 'ag', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'dis', 'pon', 'ib', 'il', 'ita', '▁del', 'le', '▁stan', 'ze', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁ag', 'enz', 'ia', '▁=', '▁new', '▁string', '(', 'n', 'ome', '_', 'ag', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁init', '(', ');', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n', '▁ind', 'iet', 'ro', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁/', '/', 'ann', 'ull', 'a', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ')', ');', '\n', '▁visual', 'iz', 'za', '▁=', '▁new', '▁but', 'ton', '(', '""', 'vis', 'ual', 'iz', 'za', '▁dis', 'pon', 'ib', 'il', 'ita', '"")', ';', '\n', '▁visual', 'iz', 'za', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁/', '/', 'con', 'fer', 'ma', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ')', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'se', 'le', 'z', 'ion', 'are', '▁il', '▁tip', 'o', '▁di', '▁ric', 'er', 'ca', '▁che', '▁si', '▁des', 'ider', 'a', '▁eff', 'ett', 'u', 'are', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2', '▁=', '▁new', '▁label', '(', '""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3', '▁=', '▁new', '▁label', '(', '""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'stan', 'za', '▁num', 'ero', '"")', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'gro', 'up', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁ric', 'er', 'ca', '▁per', '▁stan', 'za', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n', '▁check', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁ric', 'er', 'ca', '▁su', '▁t', 'ut', 'te', '▁le', '▁stan', 'ze', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁text', 'field', '▁e', '▁lo', '▁ren', 'do', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁test', 'o', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁test', 'o', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', 'a', '▁list', 'a', '\n', '▁list', 'a', '_', 'dis', 'p', '▁=', '▁new', '▁list', '(', '1', '0,', '▁fal', 'se', ');', '\n\n', '▁pan', 'el', '=', 'new', '▁pan', 'el', '[', '5', ']', ';', '\n', '▁for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', 'pan', 'el', '.', 'l', 'ength', ';', '+', '+', 'i', ')', '\n', '▁{', '\n', '▁pan', 'el', '[', 'i', ']', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '[', 'i', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁}', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁a', '▁sin', 'ist', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '0', ']', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '1', ']', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁stan', 'za', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁test', 'o', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁de', 'i', '▁p', 'uls', 'ant', 'i', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', ']', ',', '▁ind', 'iet', 'ro', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁', '0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', ']', ',', '▁visual', 'iz', 'za', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁cont', 'en', 'ent', 'e', '▁la', '▁list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁list', 'a', '_', 'dis', 'p', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '1', ']', ',', '▁', '0,', '▁', '0,', '▁5,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '2', ']', ',', '▁', '0,', '▁4,', '▁5,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '0', ']', ',', '▁', '0,', '▁6,', '▁5,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'so', 'ut', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '4', ']', ',', '▁', '0,', '▁7,', '▁5,', '▁7,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁cost', '▁=', '▁new', '▁cost', 'ant', 'i', '(', ');', '\n', '▁ann', 'o', '_', 'cor', 'r', '▁=', '▁cost', '.', 'get', 'ann', 'oc', 'or', 'r', '(', ');', '\n', '▁ann', 'o', '_', 'pro', 'x', '▁=', '▁cost', '.', 'get', 'ann', 'op', 'ro', 'x', '(', ');', '\n', '▁', '\n', '▁check', 'box', 'es', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁test', 'o', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '_', 'dis', 'p', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'box', 'es', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁test', 'o', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 't', 'est', 'o', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '_', 'dis', 'p', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁visual', 'iz', 'za', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t\t', 'str', 'ing', '▁str', '▁=', '▁new', '▁string', '(', '""', '"")', ';', '\n\t\t\t', '//', 'tr', 'am', 'ut', 'o', '▁tem', 'por', 'ane', 'ament', 'e', '▁t', 'ut', 'ti', '▁i', '▁commission', 'ament', 'i', '▁di', '▁un', 'a', '▁cert', 'a', '▁ag', 'enz', 'ia', '▁', '\n\t\t\t', '//', 'in', '▁dis', 'pon', 'ib', 'il', 'ita', '\n\t\t\n\t\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t\t', 'if', '▁(', '!', 'agen', 'z', 'ia', '.', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'list', 'ac', 'om', 'mission', 'ament', 'i', '▁l', '_', 'com', 'm', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'com', 'mission', 'ament', 'i', '(', 'agen', 'z', 'ia', ');', '\t\t\n\t\t\t\t', 'com', 'mission', 'ament', 'o', '▁comm', ';', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁l', '_', 'com', 'm', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'com', 'm', '▁=', '▁l', '_', 'com', 'm', '.', 'get', 'com', 'mission', 'ament', 'o', '(', 'i', ');', '\n\t\t\t\t\t', 'dis', 'p', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'l', '_', 'dis', 'p', ',', 'com', 'm', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', 'tr', 'ue', ');', '\t\t\n\t\t\t\t\t', 'dis', 'p', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'com', 'm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', 'com', 'm', '.', 'get', 'fin', 'ec', 'omm', '(', '),', 'fl', 'ag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'com', 'mission', 'ata', ');', '\n\t\t\t\t\t', 'l', '_', 'dis', 'p', '.', 'ad', 'd', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'dis', 'p', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'str', '▁=', '▁new', '▁string', '(', '""', '▁-', '-', '-', '▁commission', 'i', '▁""', '+', 'agen', 'z', 'ia', ');', '\n\t\t\t', '}', '\n\t\t\t', 'if', '▁(', 'l', '_', 'dis', 'p', '.', 'l', 'ength', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', '""', 't', 'ab', 'ella', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '""', '+', 'str', ');', '\n\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'sh', 'ow', 'dis', 'p', 'of', 'room', '(', 'l', '_', 'dis', 'p', ',', 't', 'est', 'o', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'sh', 'ow', 'dis', 'p', 'of', 'h', 'ot', 'el', '(', 'l', '_', 'dis', 'p', ');', '\t\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ind', 'iet', 'ro', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n\t', 'v', 'oid', '▁show', 'dis', 'p', 'of', 'room', '(', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', ',', '▁string', '▁room', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', ';', '\n\t\t', 'str', 'ing', '▁aus', ';', '\n\t\t\n\t\t', 'if', '▁(', 'room', '.', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁d', 'ella', '▁stan', 'za', '▁per', '▁la', '▁ric', 'er', 'ca', '▁del', 'le', '▁s', 'ue', '▁dis', 'po', 'ib', 'il', 'ita', '"")', ';', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\t\n\t\t\t', 'dis', 'p', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'l', ',', '▁room', ',', '▁fal', 'se', ');', '\n\t\t\t', 'if', '▁(', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁e', ""'"", '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '_', 'dis', 'p', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t', '}', '\t\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', '""', '"")', ';', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', '""', 'dis', 'pon', 'ib', 'il', 'ita', ""'"", '▁stan', 'za', '▁n', '.', '▁""', '+', 'room', '+', '""', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t\t', 'aus', '▁=', '▁new', '▁string', '(', 'ut', 'ils', '.', 'sc', 'an', 'v', 'ector', 'ford', 'is', 'p', '(', 'dis', 'p', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '▁ann', 'o', '_', 'cor', 'r', ',', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'st', 'ag', 'ann', 'oc', 'or', 'r', '(', ')', ')', ');', '\n\t\t\t\t', 'if', '▁(', 'aus', '.', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', '""', 'ness', 'una', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '"")', ';', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', 'aus', ');', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', '""', '"")', ';', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', '""', 'dis', 'pon', 'ib', 'il', 'ita', ""'"", '▁stan', 'za', '▁n', '.', '▁""', '+', 'room', '+', '""', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t\t', 'aus', '▁=', '▁new', '▁string', '(', 'ut', 'ils', '.', 'sc', 'an', 'v', 'ector', 'ford', 'is', 'p', '(', 'dis', 'p', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '(', '),', '▁ann', 'o', '_', 'pro', 'x', ',', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'con', 'f', 'ig', ').', 'get', 'st', 'ag', 'ann', 'op', 'ro', 'x', '(', ')', ')', ');', '\n\t\t\t\t', 'if', '▁(', 'aus', '.', 'equ', 'als', '(', '""', '"")', ')', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', '""', 'ness', 'una', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '"")', ';', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'ad', 'd', 'it', 'em', '(', 'aus', ');', '\n\t\t\t', '}', '\t\t\t\t\n\t\t', '}', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁show', 'dis', 'p', 'of', 'h', 'ot', 'el', '(', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'l', '.', 'l', 'ength', '(', ')', '▁=', '=', '▁', '0)', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'ness', 'una', '▁stan', 'za', '▁tro', 'v', 'ata', '!', '"")', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁l', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t', 'sh', 'ow', 'dis', 'p', 'of', 'room', '(', 'l', ',', '▁(', 'l', '.', 'get', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'i', ')', ').', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t', '}', '▁', '\n', '}', '\n\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'dis', 'pon', 'ib', 'il', 'ita', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'list', 'acom', 'mission', 'ament', 'i', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'com', 'mission', 'amento', ';', '\n\n\n', 'public', '▁class', '▁masc', 'her', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ind', 'iet', 'ro', ',', '▁visual', 'iz', 'za', ';', '\n', '▁text', 'field', '▁test', 'o', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁label', '3,', '▁label', '5,', '▁label', '1', ';', '\n', '▁panel', '▁panel', '[]', ';', '\n', '▁check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁check', 'box', '[]', '▁check', 'box', 'es', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁list', '▁list', 'a', '_', 'dis', 'p', ';', '\n', '▁frame', '▁pad', 're', ';', '\n', '▁cost', 'anti', '▁cost', ';', '\n', '▁int', '▁ann', 'o', '_', 'cor', 'r', ',', '▁ann', 'o', '_', 'pro', 'x', ';', '\n', '▁string', '▁ag', 'enz', 'ia', ';', '\n', '▁', '\n', '▁list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', ';', '\n\n', '▁public', '▁masc', 'her', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '(', 'frame', '▁parent', ',', '▁string', '▁n', 'ome', '_', 'ag', ')', '\n', '▁{', '\n', '▁super', '(""', 'dis', 'pon', 'ib', 'il', 'ita', '▁delle', '▁stan', 'ze', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁ag', 'enz', 'ia', '▁=', '▁new', '▁string', '(', 'n', 'ome', '_', 'ag', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁pack', '();', '\n', '▁init', '();', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ind', 'iet', 'ro', '▁=', '▁new', '▁button', '(""', '▁ind', 'iet', 'ro', '▁""', ');', '\n', '▁//', 'ann', 'ulla', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n', '▁visual', 'iz', 'za', '▁=', '▁new', '▁button', '(""', 'vis', 'ual', 'iz', 'za', '▁dis', 'pon', 'ib', 'il', 'ita', '"");', '\n', '▁visual', 'iz', 'za', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁//', 'con', 'fer', 'ma', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'se', 'lez', 'ion', 'are', '▁il', '▁tip', 'o', '▁di', '▁ric', 'er', 'ca', '▁che', '▁si', '▁des', 'ider', 'a', '▁eff', 'ett', 'u', 'are', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', ':', '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁num', 'ero', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁ric', 'er', 'ca', '▁per', '▁stan', 'za', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n', '▁check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁ric', 'er', 'ca', '▁su', '▁tut', 'te', '▁le', '▁stan', 'ze', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\n\n', '▁//', 'cre', 'o', '▁il', '▁text', 'field', '▁e', '▁lo', '▁ren', 'do', '▁non', '▁edit', 'ab', 'ili', '\n', '▁test', 'o', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁test', 'o', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁una', '▁list', 'a', '\n', '▁list', 'a', '_', 'dis', 'p', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\n', '▁panel', '=', 'new', '▁panel', '[', '5', ']', ';', '\n', '▁for', '(', 'int', '▁i', '=0', ';', 'i', '<', 'pan', 'el', '.', 'length', ';', '++', 'i', ')', '\n', '▁{', '\n', '▁panel', '[', 'i', ']', '=', 'new', '▁panel', '();', '\n', '▁panel', '[', 'i', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁}', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁sin', 'ist', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '0', '],', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '1', '],', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁stan', 'za', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁et', 'iche', 'tta', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁test', 'o', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁puls', 'anti', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', '],', '▁ind', 'iet', 'ro', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁', '0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', '],', '▁visual', 'iz', 'za', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁list', '_', 'so', 'g', 'gi', 'orn', 'anti', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁et', 'iche', 'tta', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁list', 'a', '_', 'dis', 'p', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '1', '],', '▁', '0,', '▁', '0,', '▁5,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '2', '],', '▁', '0,', '▁4,', '▁5,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '0', '],', '▁', '0,', '▁6,', '▁5,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '4', '],', '▁', '0,', '▁7,', '▁5,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁cost', '▁=', '▁new', '▁cost', 'anti', '();', '\n', '▁ann', 'o', '_', 'cor', 'r', '▁=', '▁cost', '.', 'get', 'ann', 'oc', 'or', 'r', '();', '\n', '▁ann', 'o', '_', 'pro', 'x', '▁=', '▁cost', '.', 'get', 'ann', 'op', 'ro', 'x', '();', '\n', '▁', '\n', '▁check', 'box', 'es', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁{', '\n', '▁test', 'o', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '_', 'dis', 'p', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'rem', 'ove', 'all', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'box', 'es', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁{', '\n', '▁test', 'o', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'test', 'o', '.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '_', 'dis', 'p', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'rem', 'ove', 'all', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁visual', 'iz', 'za', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t\t', 'string', '▁str', '▁=', '▁new', '▁string', '(""', '"");', '\n\t\t\t', '//', 'tr', 'am', 'uto', '▁tempor', 'ane', 'ament', 'e', '▁tut', 'ti', '▁i', '▁commission', 'ament', 'i', '▁di', '▁una', '▁cert', 'a', '▁ag', 'enz', 'ia', '▁', '\n\t\t\t', '//', 'in', '▁dis', 'pon', 'ib', 'il', 'ita', '\n\t\t\n\t\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t\t', 'if', '▁(', '!', 'agen', 'zia', '.', 'equ', 'als', '(""', '"")', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'list', 'acom', 'mission', 'ament', 'i', '▁l', '_', 'comm', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'com', 'mission', 'ament', 'i', '(', 'agen', 'zia', ');', '\t\t\n\t\t\t\t', 'com', 'mission', 'amento', '▁comm', ';', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁l', '_', 'comm', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'comm', '▁=', '▁l', '_', 'comm', '.', 'get', 'com', 'mission', 'amento', '(', 'i', ');', '\n\t\t\t\t\t', 'dis', 'p', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'l', '_', 'dis', 'p', ',', 'comm', '.', 'get', 'num', 'stan', 'za', '(', '),', 'true', ');', '\t\t\n\t\t\t\t\t', 'dis', 'p', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'comm', '.', 'get', 'in', 'iz', 'i', 'oc', 'omm', '(', '),', 'comm', '.', 'get', 'fin', 'ec', 'omm', '(', '),', 'flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'com', 'mission', 'ata', ');', '\n\t\t\t\t\t', 'l', '_', 'dis', 'p', '.', 'add', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'dis', 'p', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'str', '▁=', '▁new', '▁string', '(""', '▁-', '--', '▁commission', 'i', '▁""', '+', 'agen', 'zia', ');', '\n\t\t\t', '}', '\n\t\t\t', 'if', '▁(', 'l', '_', 'dis', 'p', '.', 'length', '()', '▁>', '▁', '0)', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(""', 'tab', 'ella', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', '\'""', '+', 'str', ');', '\n\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', 'show', 'dis', 'p', 'of', 'room', '(', 'l', '_', 'dis', 'p', ',', 'test', 'o', '.', 'get', 'text', '());', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'show', 'dis', 'p', 'of', 'hot', 'el', '(', 'l', '_', 'dis', 'p', ');', '\t\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ind', 'iet', 'ro', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n\t', 'v', 'oid', '▁show', 'dis', 'p', 'of', 'room', '(', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', ',', '▁string', '▁room', ')', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', ';', '\n\t\t', 'string', '▁aus', ';', '\n\t\t\n\t\t', 'if', '▁(', 'room', '.', 'equ', 'als', '(""', '"")', ')', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁della', '▁stan', 'za', '▁per', '▁la', '▁ric', 'er', 'ca', '▁delle', '▁sue', '▁dis', 'po', 'ib', 'il', 'ita', '"");', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\t\n\t\t\t', 'dis', 'p', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'l', ',', '▁room', ',', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stan', 'za', '▁ins', 'er', 'ita', '▁e', ""'"", '▁in', 'es', 'ist', 'ente', '!', '"");', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '_', 'dis', 'p', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t', '}', '\t\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(""', '"");', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(""', 'dis', 'pon', 'ib', 'il', 'ita', ""'"", '▁stan', 'za', '▁n', '.', '▁""', '+', 'room', '+', '""', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'cor', 'r', ');', '\n\t\t\t\t', 'aus', '▁=', '▁new', '▁string', '(', 'ut', 'ils', '.', 'sc', 'an', 'v', 'ector', 'ford', 'isp', '(', 'dis', 'p', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '▁ann', 'o', '_', 'cor', 'r', ',', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'st', 'ag', 'ann', 'oc', 'or', 'r', '())', ');', '\n\t\t\t\t', 'if', '▁(', 'aus', '.', 'equ', 'als', '(""', '"")', ')', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(""', 'ness', 'una', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '"");', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(', 'aus', ');', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(""', '"");', '\n\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(""', 'dis', 'pon', 'ib', 'il', 'ita', ""'"", '▁stan', 'za', '▁n', '.', '▁""', '+', 'room', '+', '""', '▁per', '▁l', ""'"", 'ann', 'o', '▁""', '+', 'ann', 'o', '_', 'pro', 'x', ');', '\n\t\t\t\t', 'aus', '▁=', '▁new', '▁string', '(', 'ut', 'ils', '.', 'sc', 'an', 'v', 'ector', 'ford', 'isp', '(', 'dis', 'p', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '(', '),', '▁ann', 'o', '_', 'pro', 'x', ',', '▁(', 'princ', 'ip', 'ale', '.', 'con', 'fig', ').', 'get', 'st', 'ag', 'ann', 'op', 'ro', 'x', '())', ');', '\n\t\t\t\t', 'if', '▁(', 'aus', '.', 'equ', 'als', '(""', '"")', ')', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(""', 'ness', 'una', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '"");', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'list', 'a', '_', 'dis', 'p', '.', 'add', 'it', 'em', '(', 'aus', ');', '\n\t\t\t', '}', '\t\t\t\t\n\t\t', '}', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁show', 'dis', 'p', 'of', 'hot', 'el', '(', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁l', ')', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'l', '.', 'length', '()', '▁==', '▁', '0)', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', 'ness', 'una', '▁stan', 'za', '▁tro', 'v', 'ata', '!', '"");', '\n\t\t', 'el', 'se', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁l', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t', 'show', 'dis', 'p', 'of', 'room', '(', 'l', ',', '▁(', 'l', '.', 'get', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'i', ')', ').', 'get', 'num', 'stan', 'za', '());', '\n\t', '}', '▁', '\n', '}', '\n\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'list', 'adis', 'pon', 'ibil', 'ita', ';', '\n', 'import', '▁mod', 'uli', '.', 'dis', 'pon', 'ibil', 'ita', ';', '\n', 'import', '▁mod', 'uli', '.', 'list', 'acom', 'mission', 'amenti', ';', '\n', 'import', '▁mod', 'uli', '.', 'commission', 'amento', ';', '\n\n\n', 'public', '▁class', '▁masc', 'her', 'adis', 'pon', 'ibil', 'ita', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ind', 'ietro', ',', '▁visual', 'izza', ';', '\n', '▁text', 'field', '▁testo', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁label', '3,', '▁label', '5,', '▁label', '1;', '\n', '▁panel', '▁panel', '[]', ';', '\n', '▁check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁check', 'box', '[]', '▁check', 'boxes', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁list', '▁list', 'a', '_', 'disp', ';', '\n', '▁frame', '▁padre', ';', '\n', '▁cost', 'anti', '▁cost', ';', '\n', '▁int', '▁anno', '_', 'cor', 'r', ',', '▁anno', '_', 'pro', 'x', ';', '\n', '▁string', '▁ag', 'enzia', ';', '\n', '▁', '\n', '▁list', 'adis', 'pon', 'ibil', 'ita', '▁l', ';', '\n\n', '▁public', '▁masc', 'her', 'adis', 'pon', 'ibil', 'ita', '(', 'frame', '▁parent', ',', '▁string', '▁nome', '_', 'ag', ')', '\n', '▁{', '\n', '▁super', '(""', 'dis', 'pon', 'ibil', 'ita', '▁delle', '▁stan', 'ze', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁ag', 'enzia', '▁=', '▁new', '▁string', '(', 'n', 'ome', '_', 'ag', ');', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁pack', '();', '\n', '▁init', '();', '\n', '▁this', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ind', 'ietro', '▁=', '▁new', '▁button', '(""', '▁ind', 'ietro', '▁""', ');', '\n', '▁//', 'ann', 'ulla', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n', '▁visual', 'izza', '▁=', '▁new', '▁button', '(""', 'visual', 'izza', '▁dis', 'pon', 'ibil', 'ita', '"");', '\n', '▁visual', 'izza', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁//', 'con', 'fer', 'ma', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'se', 'lez', 'ion', 'are', '▁il', '▁tipo', '▁di', '▁ricer', 'ca', '▁che', '▁si', '▁desider', 'a', '▁eff', 'ettu', 'are', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', ':', '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁stanza', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁numero', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'boxes', '▁=', '▁new', '▁check', 'box', '[', '2', '];', '\n', '▁check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁ricer', 'ca', '▁per', '▁stanza', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n', '▁check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁ricer', 'ca', '▁su', '▁tutte', '▁le', '▁stan', 'ze', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\n\n', '▁//', 'cre', 'o', '▁il', '▁text', 'field', '▁e', '▁lo', '▁ren', 'do', '▁non', '▁edit', 'ab', 'ili', '\n', '▁testo', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁testo', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁una', '▁list', 'a', '\n', '▁list', 'a', '_', 'disp', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n\n', '▁panel', '=', 'new', '▁panel', '[', '5', '];', '\n', '▁for', '(', 'int', '▁i', '=0;', 'i', '<', 'panel', '.', 'length', ';', '++', 'i', ')', '\n', '▁{', '\n', '▁panel', '[', 'i', ']', '=', 'new', '▁panel', '();', '\n', '▁panel', '[', 'i', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁}', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁sin', 'istra', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[0', '],', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[1', '],', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ricer', 'ca', '▁per', '▁stanza', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁et', 'iche', 'tta', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁testo', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁puls', 'anti', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[0', '],', '▁ind', 'ietro', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[0', '],', '▁visual', 'izza', ',', '▁3,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁list', '_', 'so', 'ggi', 'orn', 'anti', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁et', 'iche', 'tta', '2,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁list', 'a', '_', 'disp', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁1.0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[1', '],', '▁0,', '▁0,', '▁5,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '2', '],', '▁0,', '▁4,', '▁5,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[0', '],', '▁0,', '▁6,', '▁5,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '4', '],', '▁0,', '▁7,', '▁5,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁cost', '▁=', '▁new', '▁cost', 'anti', '();', '\n', '▁anno', '_', 'cor', 'r', '▁=', '▁cost', '.', 'get', 'ann', 'oc', 'orr', '();', '\n', '▁anno', '_', 'pro', 'x', '▁=', '▁cost', '.', 'get', 'ann', 'op', 'rox', '();', '\n', '▁', '\n', '▁check', 'boxes', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁{', '\n', '▁testo', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t\t', 'visual', 'izza', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', 'if', '▁(', 'lista', '_', 'disp', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'lista', '_', 'disp', '.', 'remove', 'all', '();', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'boxes', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁{', '\n', '▁testo', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'test', 'o', '.', 's', 'ette', 'xt', '("""");', '\n\t\t\t\t', 'visual', 'izza', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', 'if', '▁(', 'lista', '_', 'disp', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'lista', '_', 'disp', '.', 'remove', 'all', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁visual', 'izza', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '▁=', '▁new', '▁dis', 'pon', 'ibil', 'ita', '();', '\n\t\t\t', 'string', '▁str', '▁=', '▁new', '▁string', '("""");', '\n\t\t\t', '//', 'tram', 'uto', '▁tempor', 'ane', 'amente', '▁tutti', '▁i', '▁commission', 'amenti', '▁di', '▁una', '▁cert', 'a', '▁ag', 'enzia', '▁', '\n\t\t\t', '//', 'in', '▁dis', 'pon', 'ibil', 'ita', '\n\t\t\n\t\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁l', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t\t', 'if', '▁(!', 'agen', 'zia', '.', 'equals', '(""', '""))', '\n\t\t\t', '{', '\n\t\t\t\t', 'list', 'acom', 'mission', 'amenti', '▁l', '_', 'comm', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'commission', 'amenti', '(', 'agen', 'zia', ');', '\t\t\n\t\t\t\t', 'commission', 'amento', '▁comm', ';', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁l', '_', 'comm', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'comm', '▁=', '▁l', '_', 'comm', '.', 'get', 'commission', 'amento', '(', 'i', ');', '\n\t\t\t\t\t', 'disp', '▁=', '▁ut', 'ils', '.', 'get', 'disp', 'of', 'room', '(', 'l', '_', 'disp', ',', 'comm', '.', 'get', 'num', 'stan', 'za', '(),', 'true', ');', '\t\t\n\t\t\t\t\t', 'disp', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'comm', '.', 'get', 'in', 'izi', 'oc', 'omm', '(),', 'comm', '.', 'get', 'fin', 'ec', 'omm', '(),', 'flag', '.', 'dis', 'pon', 'ib', 'ile', ',', '▁flag', '.', 'commission', 'ata', ');', '\n\t\t\t\t\t', 'l', '_', 'disp', '.', 'add', 'dis', 'pon', 'ibil', 'ita', '(', 'disp', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'str', '▁=', '▁new', '▁string', '(""', '▁---', '▁commission', 'i', '▁""+', 'agen', 'zia', ');', '\n\t\t\t', '}', '\n\t\t\t', 'if', '▁(', 'l', '_', 'disp', '.', 'length', '()', '▁>', '▁0)', '\n\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '(""', 'tab', 'ella', '▁delle', '▁dis', 'pon', 'ibil', 'ita', '\'""', '+', 'str', ');', '\n\t\t\t', 'if', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', 'show', 'disp', 'of', 'room', '(', 'l', '_', 'disp', ',', 'test', 'o', '.', 'get', 'text', '());', '\n\t\t\t', 'else', '\n\t\t\t\t', 'show', 'disp', 'of', 'hotel', '(', 'l', '_', 'disp', ');', '\t\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ind', 'ietro', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁}', '\n', '▁', '\n\t', 'void', '▁show', 'disp', 'of', 'room', '(', 'list', 'adis', 'pon', 'ibil', 'ita', '▁l', ',', '▁string', '▁room', ')', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', ';', '\n\t\t', 'string', '▁aus', ';', '\n\t\t\n\t\t', 'if', '▁(', 'room', '.', 'equals', '(""', '""))', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'ins', 'er', 'ire', '▁il', '▁numero', '▁della', '▁stanza', '▁per', '▁la', '▁ricer', 'ca', '▁delle', '▁sue', '▁dis', 'po', 'ibil', 'ita', '"");', '\n\t\t', 'else', '\n\t\t', '{', '\t\n\t\t\t', 'disp', '▁=', '▁ut', 'ils', '.', 'get', 'disp', 'of', 'room', '(', 'l', ',', '▁room', ',', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'disp', '▁==', '▁null', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'la', '▁stanza', '▁ins', 'er', 'ita', '▁e', ""'"", '▁ines', 'ist', 'ente', '!', '"");', '\n\t\t\t\t', 'if', '▁(', 'lista', '_', 'disp', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'lista', '_', 'disp', '.', 'remove', 'all', '();', '\n\t\t\t', '}', '\t\n\t\t\t', 'else', '\n\t\t\t', '{', '\n\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '("""");', '\n\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '(""', 'dis', 'pon', 'ibil', 'ita', ""'"", '▁stanza', '▁n', '.', '▁""+', 'room', '+""', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'cor', 'r', ');', '\n\t\t\t\t', 'aus', '▁=', '▁new', '▁string', '(', 'utils', '.', 'scan', 'vector', 'ford', 'isp', '(', 'disp', '.', 'get', 'disp', 'ann', 'oc', 'orr', '(),', '▁anno', '_', 'cor', 'r', ',', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'stag', 'ann', 'oc', 'orr', '())', ');', '\n\t\t\t\t', 'if', '▁(', 'aus', '.', 'equals', '(""', '""))', '\n\t\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '(""', 'ness', 'una', '▁dis', 'pon', 'ibil', 'ita', ""'"", '"");', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '(', 'aus', ');', '\n\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '("""");', '\n\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '(""', 'dis', 'pon', 'ibil', 'ita', ""'"", '▁stanza', '▁n', '.', '▁""+', 'room', '+""', '▁per', '▁l', ""'"", 'anno', '▁""+', 'anno', '_', 'pro', 'x', ');', '\n\t\t\t\t', 'aus', '▁=', '▁new', '▁string', '(', 'utils', '.', 'scan', 'vector', 'ford', 'isp', '(', 'disp', '.', 'get', 'disp', 'ann', 'op', 'rox', '(),', '▁anno', '_', 'pro', 'x', ',', '▁(', 'princip', 'ale', '.', 'config', ').', 'get', 'stag', 'ann', 'op', 'rox', '())', ');', '\n\t\t\t\t', 'if', '▁(', 'aus', '.', 'equals', '(""', '""))', '\n\t\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '(""', 'ness', 'una', '▁dis', 'pon', 'ibil', 'ita', ""'"", '"");', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'lista', '_', 'disp', '.', 'add', 'item', '(', 'aus', ');', '\n\t\t\t', '}', '\t\t\t\t\n\t\t', '}', '\t\n\t', '}', '\n\t\n\t', 'void', '▁show', 'disp', 'of', 'hotel', '(', 'list', 'adis', 'pon', 'ibil', 'ita', '▁l', ')', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'if', '▁(', 'l', '.', 'length', '()', '▁==', '▁0)', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', 'ness', 'una', '▁stanza', '▁trov', 'ata', '!', '"");', '\n\t\t', 'else', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁l', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t', 'show', 'disp', 'of', 'room', '(', 'l', ',', '▁(', 'l', '.', 'get', 'dis', 'pon', 'ibil', 'ita', '(', 'i', ')).', 'get', 'num', 'stan', 'za', '());', '\n\t', '}', '▁', '\n', '}', '\n\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli lista disponibilita import moduli disponibilita import moduli lista commissionamenti import moduli commissionamento public class maschera disponibilita extend frame button indietro visualizza text field testo label etichetta etichetta etichetta label label label panel panel checkbox group checkbox group checkbox checkbox grid bag layout gridbag new grid bag layout list lista disp frame padr costanti cost int anno corr anno prox string agenzia lista disponibilita public maschera disponibilita frame parent string nome super disponibilita dell stanz padr parent agenzia new string nome padr set enabl fals setup panel pack init set visibl true void setup panel set font configurazion sistema font base creo pulsanti indietro new button indietro annulla set font new font courier font plain visualizza new button visualizza disponibilita visualizza set enabl fals conferma set font new font courier font plain creo etichett etichetta new label selezionar tipo ricerca che desidera effettuar etichetta set font configurazion sistema font titolo etichetta new label risultato della ricerca etichetta set font configurazion sistema font titolo etichetta new label ricerca per stanza etichetta set font configurazion sistema font titolo label new label stanza numero creo checkbox esclusion checkbox group new checkbox group checkbox new checkbox checkbox new checkbox ricerca per stanza checkbox group fals checkbox new checkbox ricerca tutt stanz checkbox group fals creo text field rendo non editabili testo new text field testo set edit fals creo una lista lista_disp new list fals panel new panel int panel length ;++ panel new panel (); panel set layout gridbag creo pannello alto sinistra util constrain panel etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest creo pannello ricerca per stanza util constrain panel etichetta3 grid bag constraint none grid bag constraint northwest util constrain panel label1 grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest creo pannello dei pulsanti util constrain panel indietro grid bag constraint none grid bag constraint east util constrain panel visualizza grid bag constraint none grid bag constraint west creo pannello contenent list_soggiornanti util constrain panel etichetta2 grid bag constraint none grid bag constraint northwest util constrain panel lista_disp grid bag constraint grid bag constraint northwest attacco pannelli frame set layout gridbag util constrain panel grid bag constraint horizont grid bag constraint northwest util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel grid bag constraint horizont grid bag constraint southeast util constrain panel grid bag constraint horizont grid bag constraint west public void init cost new costanti (); anno_corr cost get anno corr (); anno_prox cost get anno prox (); checkbox add item listen new item listen public void item state chang item event testo set edit true visualizza set enabl true lista_disp get item count lista_disp remov (); }); checkbox add item listen new item listen public void item state chang item event testo set edit fals testo set text (""""); visualizza set enabl true lista_disp get item count lista_disp remov (); }); visualizza add action listen new action listen public void action perform action event disponibilita disp new disponibilita (); string str new string (""""); tramuto temporaneament tutti commissionamenti una certa agenzia disponibilita lista disponibilita l_disp principal elenco disponibilita (); agenzia equal ("""")) lista commissionamenti l_comm principal found commissionamenti agenzia commissionamento comm int l_comm length (); ++) comm l_comm get commissionamento disp util get disp room l_disp comm get num stanza (), true disp set disponibilita comm get inizio comm (), comm get fine comm (), flag disponibil flag commissionata l_disp add disponibilita disp str new string --- commissioni agenzia l_disp length lista_disp add item tabella dell disponibilita str checkbox get state ()) show disp room l_disp testo get text ()); els show disp hotel l_disp }); indietro add action listen new action listen public void action perform action event dispos (); padr set enabl true }); void show disp room lista disponibilita string room frame msg disponibilita disp string aus room equal ("""")) msg new messag dialog inserir numero della stanza per ricerca dell sue dispoibilita ""); els disp util get disp room room fals disp null msg new messag dialog stanza inserita inesistent !""); lista_disp get item count lista_disp remov (); els lista_disp add item (""""); lista_disp add item disponibilita stanza room per anno anno_corr aus new string util scan vector disp disp get disp anno corr (), anno_corr principal config get stag anno corr ())); aus equal ("""")) lista_disp add item nessuna disponibilita ""); els lista_disp add item aus lista_disp add item (""""); lista_disp add item disponibilita stanza room per anno anno_prox aus new string util scan vector disp disp get disp anno prox (), anno_prox principal config get stag anno prox ())); aus equal ("""")) lista_disp add item nessuna disponibilita ""); els lista_disp add item aus void show disp hotel lista disponibilita frame msg length msg new avviso dialog nessuna stanza trovata !""); els int length (); ++) show disp room get disponibilita )). get num stanza ());"
65~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraCalcoloConto.java~MascheraCalcoloConto.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import java.util.Date;
import common.utility.*;
import common.def.*;
import moduli.*;

public class MascheraCalcoloConto extends Frame
{
   	Button Annulla, Visualizza;
   	TextField testo[];
   	Label etichetta1, etichetta2, etichetta3, etichetta4, etichetta5, stanza,
         stanza1, nome, cognome, stanza2;
   	Panel panel[];
   	CheckboxGroup checkbox_group;
   	Checkbox[] checkboxes;
   	GridBagLayout gridbag =new GridBagLayout();

   	// per la gerarchia
	Frame padre;
	MascheraVisualizzazioneConto visual;
	
	// variabili locali
	Soggiornante sogg_x_conto_sing;
	String L_st[];
	Date date_fine[]; // questo array e' necessario per la chiusura della comitiva
						// infatti per poter ripristinare le disponibilita della
						// stanza correttamente ho bisogno delle date di fine corrette
	Date date_inizio[];
	Date data_fine_magg;
	Date fine_sogg_anticipato;
   	int tipo_conto;
   	boolean qualcuno_tramite_agenzia;
   	boolean qualcuno_senza_agenzia;
   	
   	public MascheraCalcoloConto(Frame parent)
   	{
      super(""Calcolo del Conto"");
      padre = parent;
      padre.setEnabled(false);
      setupPanels();
      init();
      pack();
   }

   void setupPanels()
   {
	  this.setFont(ConfigurazioneSistema.font_base);
      //Creo i pulsanti
      Annulla = new Button(""   Annulla   "");
      //Annulla.setFont(new Font(""Courier"", Font.PLAIN, 12));
      Visualizza = new Button(""   Calcola   "");
      //Visualizza.setFont(new Font(""Courier"", Font.PLAIN, 12));
	  Visualizza.setEnabled(false);
      
      //Creo le etichette
      etichetta1 = new Label(""Selezionare il tipo di conto che si desidera calcolare:"");
      etichetta1.setFont(ConfigurazioneSistema.font_titolo);
      etichetta2 = new Label(""Conto su una stanza:"");
      etichetta2.setFont(ConfigurazioneSistema.font_titolo);
      etichetta3 = new Label(""Conto su un cliente:"");
      etichetta3.setFont(ConfigurazioneSistema.font_titolo);
      etichetta4 = new Label(""Conto su piu' stanze:"");
      etichetta4.setFont(ConfigurazioneSistema.font_titolo);
      stanza = new Label(""Stanza numero"");
      cognome = new Label(""Cognome"");
      nome = new Label(""Nome"");
      stanza1 = new Label(""Stanza"");
      stanza2 = new Label(""Stanze Numero"");

      //Creo i TextField e li rendo non editabili
      testo=new TextField[6];
      testo[0] = new TextField("""", 4);
      testo[1] = new TextField("""", 20);
      testo[2] = new TextField("""", 20);
      testo[3] = new TextField("""", 4);
      testo[4] = new TextField("""", 30);
      testo[5] = new TextField("""",10);
      for(int i=0;i<6;++i)
      	testo[i].setEditable(false);
       

      //Creo un Checkbox ad esclusione
      checkbox_group = new CheckboxGroup();
      checkboxes = new Checkbox[4];
      checkboxes[0] = new Checkbox("" Conto su una stanza"",checkbox_group, false);
      checkboxes[1] = new Checkbox("" Conto su un cliente"",checkbox_group, false);
      checkboxes[2] = new Checkbox("" Conto su piu'stanze"",checkbox_group, false);
	  checkboxes[3] = new Checkbox("" Partenza anticipata"", false);	
      panel=new Panel[5];
      for(int i=0;i<5;++i)
         {
            panel[i]=new Panel();
            panel[i].setLayout(gridbag);
         }
      //Creo il pannello in alto a sinistra
      Utils.constrain(panel[1], etichetta1, 0, 0, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0); 
      Utils.constrain(panel[1], checkboxes[0], 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0); 
      Utils.constrain(panel[1], checkboxes[1], 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
      Utils.constrain(panel[1], checkboxes[2], 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
      Utils.constrain(panel[1], checkboxes[3], 0, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
      Utils.constrain(panel[1], testo[5], 1, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);                  
            
      //Creo il pannello in alto a destra
      Utils.constrain(panel[0], Annulla, 0, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.3, 0.0, 20, 0, 5, 20);
      Utils.constrain(panel[0], Visualizza, 0, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.3, 0.0, 5, 0, 0, 20);
      

      //Creo il pannello conto su una stanza 
      Utils.constrain(panel[2], etichetta2, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[2], stanza, 0, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[2], testo[0], 1, 1, 1, 1, GridBagConstraints.NONE,
                      GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);

      //Creo il pannello conto su un cliente
      Utils.constrain(panel[3], etichetta3, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[3], cognome, 0, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[3], testo[1], 1, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel[3], nome, 0, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.SOUTHWEST, 0.0, 0.0, 20, 5, 0, 20);
      Utils.constrain(panel[3], testo[2], 1, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.SOUTHWEST, 1.0, 0.0, 20, 0, 0, 0);
      Utils.constrain(panel[3], stanza1, 4, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[3], testo[3], 5, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);

      //Creo il pannello conto su piu' stanze
      Utils.constrain(panel[4], etichetta4, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[4], stanza2, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[4], testo[4], 1, 1, 1, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 5); 
            
      //Attacco i pannelli al frame
      this.setLayout(gridbag);
      Utils.constrain(this, panel[1], 0, 0, 6, 4, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[0], 6, 0, 1, 4, GridBagConstraints.BOTH,
                        GridBagConstraints.SOUTHEAST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[2], 0, 4, 7, 2, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[3], 0, 6, 7, 3,GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
      Utils.constrain(this,panel[4], 0, 9, 7, 2,GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
   }

  	public void init()
   	{
      	checkboxes[0].addItemListener(new ItemListener()   
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
           	 	if(checkboxes[0].getState())
            	{
               		tipo_conto = 1;
               		testo[0].setEditable(true);
               		Visualizza.setEnabled(true);
               		for(int i=1;i<5;++i)
               		{    
                   		testo[i].setEditable(false);
        				testo[i].setText("""");
        			}     	 
            	}
         	}
      	});
                      
      	checkboxes[1].addItemListener(new ItemListener()   
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
            	if(checkboxes[1].getState())
            	{
               		tipo_conto = 2;
               		Visualizza.setEnabled(true);
               		for(int i=1;i<4;++i)
                  		testo[i].setEditable(true);
               		testo[0].setEditable(false);
               		testo[0].setText("""");
              		testo[4].setEditable(false);
             		testo[4].setText("""");
             	}
         	}
      	});

      	checkboxes[2].addItemListener(new ItemListener()
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
            	if(checkboxes[2].getState())
            	{
               		tipo_conto = 3;
               		Visualizza.setEnabled(true);
               		testo[4].setEditable(true);
               		for(int i=0;i<4;++i)
                  	{	
                  		testo[i].setEditable(false);
            			testo[i].setText("""");
            		}
            	}
         	}
      	});
      	
      	checkboxes[3].addItemListener(new ItemListener()
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
               	if (!checkboxes[3].getState())
               	{
               		testo[5].setEditable(false);
         			testo[5].setText("""");
         		}
         		else
         		{
         			testo[5].setEditable(true);
         			testo[5].setText(DateUtils.parseDate(DateUtils.giveStringOfDate(new Date())));
         		}
         	}
      	});

		Annulla.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				dispose();
				padre.setEnabled(true);
			}
		});
       
       	Visualizza.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				startVisualizza();
         	}
       	});
	}       

	void startVisualizza()
	{
   		if (!errori())
   		{	
	  		this.setEnabled(false);
   			if (checkboxes[0].getState())
				startContoStanza();
   			else
   			{
   				if (checkboxes[1].getState())
   				{
   					startContoSingolo();
   				}
   				else	
   		       		startContoComitiva();
   		    }
   			displayConto();
     	}
	}
	
  	void displayConto()
  	{
  		visual = new MascheraVisualizzazioneConto(testo[0].getText(),testo[1].getText(),
  									testo[2].getText(),testo[3].getText(),testo[4].getText(),tipo_conto);
  		visual.setVisible(true);
  		visual.conto = this;
  	}
  	     
	boolean problemiStanza(String stanza)
	{	
		Frame msg;
		ListaSoggiornanti L_sogg;
		
		if ((stanza).equals("""") )
		{	
			msg = new AvvisoDialog(this, "" Inserire il numero di stanza "");
			return true;
		}
		else
			if ((Principale.db).readStanza(stanza) == null )
			{
				msg = new MessageDialog(this, "" La stanza ""+stanza+"" e' inesistente! "");
				return true;
			}
			else
			{
				L_sogg = (Principale.db).foundSoggiornanti(stanza, false);
				if (L_sogg == null)
				{	
					msg = new MessageDialog(this, "" Problemi con il database! "");
					return true;	
				}
				else
					if (L_sogg.length() == 0)
					{
						msg = new MessageDialog(this, "" La stanza ""+stanza+"" non e' attualmente occupata "");
						return true;	
					}	
			}	
		return false;
	}

	//	controlla che nella lista non vi siano stanze ripetute piu' volte
	int chkDouble()
	{
		for(int i = 0; i<L_st.length; i++)
			for(int j = 0; j<L_st.length; j++)
				if ( (!L_st[i].equals("""")) && (!L_st[j].equals("""")) && (i!=j) 
					&& (L_st[i].equals(L_st[j]))  )
					return j;
		return -1;			  
	}

	Date[] tornaDateFineMagg(String elenco[])
	{
		Date data_fine_stanza = null;
		Date fine_sogg = null;
		Date date_fine_loc[] = new Date[elenco.length];
		
		for (int i = 0; i < elenco.length; i++)
		{
			ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(elenco[i], false);
			if (L_sogg != null)
			{
				data_fine_stanza = new Date(0, 0, 1);
				for (int j = 1; j <= L_sogg.length(); j++)
				{
					fine_sogg = L_sogg.getSoggiornante(j).getFineSogg();
					if ( Utils.data1MaggioreData2( fine_sogg, data_fine_stanza ) )
						data_fine_stanza = new Date(fine_sogg.getYear(), fine_sogg.getMonth(), fine_sogg.getDate());
				}
				date_fine_loc[i] = data_fine_stanza;
			}
			else
				return null;
		}
		return date_fine_loc;
	}
	
	Date[] tornaDateInizioMin(String elenco[])
	{
		Date data_inizio_stanza = null;
		Date inizio_sogg = null;
		Date date_inizio_loc[] = new Date[elenco.length];
		
		for (int i = 0; i < elenco.length; i++)
		{
			ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(elenco[i], false);
			if (L_sogg != null)
			{
				data_inizio_stanza = new Date(3000, 0, 1);
				for (int j = 1; j <= L_sogg.length(); j++)
				{
					inizio_sogg = L_sogg.getSoggiornante(j).getInizioSogg();
					if ( Utils.data1MinoreData2( inizio_sogg, data_inizio_stanza ) )
						data_inizio_stanza = new Date(inizio_sogg.getYear(), inizio_sogg.getMonth(), inizio_sogg.getDate());
				}
				date_inizio_loc[i] = data_inizio_stanza;
			}
			else
				return null;
		}
		return date_inizio_loc;
	}
	
	boolean aggiornamentoFlagsEffettuato(String elenco[])
	{
		qualcuno_tramite_agenzia = false;
		qualcuno_senza_agenzia = false;
		Prenotazione pren;
		
		for (int i = 0; i<elenco.length; i++)
		{
			ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(elenco[i], false);
			if (L_sogg != null)
			{
				for (int j = 1; j <= L_sogg.length(); j++)
				{
					pren = (Principale.db).readPrenotazione((L_sogg.getSoggiornante(j)).getIdPrenotazione());
					if (pren == null)
						return false;
					else
					{
						if (pren.getTramiteAgenzia() == Const.SI)
							qualcuno_tramite_agenzia = qualcuno_tramite_agenzia || true;
						else
							qualcuno_senza_agenzia = qualcuno_tramite_agenzia || true;
					}
				}
			}
			else
				return false;
		}
		return true;
	}
	
	boolean errori()
	{
		Frame msg;
		Soggiornante sogg = new Soggiornante();

		if (checkboxes[0].getState())
		{
			if (problemiStanza(testo[0].getText()))
				return true;
			L_st = new String[1];
			L_st[0] = new String(testo[0].getText());
		}
		else
			if (checkboxes[1].getState())
			{
				L_st = new String[1];
				L_st[0] = new String(testo[3].getText());
				sogg = (Principale.db).foundSoggiornante(testo[3].getText(),testo[2].getText(),testo[1].getText());
				if (sogg == null)
				{
					msg = new AvvisoDialog(this, "" Nessun soggiornante presente nella stanza ""+testo[3].getText()+ "" risponde al nominativo inserito! "");
					return true;
				}
				ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(testo[3].getText(), false);
				if (L_sogg == null)
				{
					msg = new MessageDialog(this, "" Problemi con il database! "");
					return true;
				} 
				if (sogg.getPagato() == Const.SI)
				{
					msg = new AvvisoDialog(this, "" Il soggiornante selezionato o ha gia' pagato o se ne e' gia' andato! "");
					return true;
				}
				else
				{
					// procedo con il verificare se il cliente e' l'ultimo rimasto
					ListaSoggiornanti sogg_no_pagato = new ListaSoggiornanti();
					for (int i=1; i<=L_sogg.length(); i++)
						if (L_sogg.getSoggiornante(i).getPagato() == Const.NO)
							sogg_no_pagato.addSoggiornante(L_sogg.getSoggiornante(i));
					if (sogg_no_pagato.length() == 1)
					{
						msg = new AvvisoDialog(this, "" Il soggiornante e' l'ultimo rimasto. Scegliere 'conto per stanza'! "");
						return true;
					}
					sogg_x_conto_sing = sogg;
				}
			}
			else		
				if (checkboxes[2].getState())
				{
					L_st = Utils.parseStanze(testo[4].getText());
					if (L_st == null)
					{	
						msg = new MessageDialog(this, "" Errore nell'elenco delle stanze. Inserire le stanze nell'elenco nel modo seguente: 101,102,103,..."");
						return true;					
					}
					else
					{
						Stanza room;
						for (int i = 0; i < L_st.length; i++)
							if  (problemiStanza(L_st[i]))
								return true;
						int res = chkDouble();
						if ( res != -1)
						{
							msg = new MessageDialog(this, "" Errore nell'elenco delle stanze. La stanza ""+L_st[res]+"" e presente piu' volte nell'elenco! "");
							return true;
						}	
					}
				}
		if (checkboxes[0].getState() || checkboxes[2].getState())
		{
			date_fine = tornaDateFineMagg(L_st);
			date_inizio = tornaDateInizioMin(L_st);
		}
		else
		{
			Prenotazione pren = (Principale.db).readPrenotazione(sogg.getIdPrenotazione());
			if (pren != null)
			{
				
				date_fine = new Date[1];
				date_inizio = new Date[1];
				date_fine[0] = sogg.getFineSogg();
				date_inizio[0] = sogg.getInizioSogg();
			}
			else
				date_fine = null;
		}
		if (date_fine == null || date_inizio == null)
		{
			msg = new MessageDialog(this, "" Problemi con il database! "");
			return true;
		}
		// la variabile data_fine contiene le date di fine corrette

		data_fine_magg = new Date(0, 0, 1);
		for (int i=0; i<date_fine.length; i++)
			if (Utils.data1MaggioreData2(date_fine[i], data_fine_magg))
				data_fine_magg = date_fine[i];
		// ora la variabile data_fine_magg contiene la data di fine maggiore
		
		if (!aggiornamentoFlagsEffettuato(L_st))
		{
			msg = new MessageDialog(this, "" Problemi con il database! "");
			return true;
		}
 		// da ora in poi le flags per l'agenzia contengono valori significativi

		// questo if deve essere messo prima di quello che segue
		if (qualcuno_tramite_agenzia && qualcuno_senza_agenzia)
		{
			msg = new MessageDialog(this, "" L'elenco delle stanze include stanze commissionate e non! Procedere al calcolo separato. "");
			return true;
		}
		// L'if che segue deve essere posto dopo a quello che precede
		if (checkboxes[2].getState() && qualcuno_tramite_agenzia)
		{
			msg = new MessageDialog(this, "" Il conto comitiva non e' possibile per le agenzie! "");
			return true;
		}

		// se arrivo qui significa che si puo' fare il conto normale,
		// rimane da verificare se si desidera fare una partenza anticipata
		// e in tal caso verificare che la data inserita sia corretta!
		if ( (checkboxes[3].getState()) && (DateUtils.dataCorretta(testo[5].getText())) )
		{	
			Date data = DateUtils.convertDate(testo[5].getText());
			Date data_oggi = new Date();
			// controllo che la data di partenza anticipata abbia senso:
			// 1) controllo che il cliente abbia soggiornato almento un giorno
			for (int i=0; i<date_inizio.length; i++)
				if (Utils.data1MaggioreData2(date_inizio[i], DateUtils.giornoPrimaDi(data)))
				{
					msg = new MessageDialog(this, "" I clienti devono soggiornare almeno un giorno prima di partire! "");
					return true;
				}
			// 2) controllo che la partenza anticipata non sia prima di oggi
			if (Utils.data1MinoreData2(data, data_oggi))
			{
				msg = new AvvisoDialog(this, "" La data non puo' essere precedente a quella odierna! "");
				testo[5].setText(DateUtils.parseDate(DateUtils.giveStringOfDate(data_oggi)));
				return true;
			}
			else
				// 3)  controllo che il fine soggiorno anticipato (ossia il giorno prima della
				//     partenza anticipata) non sia dopo il fine soggiorno effettivo
				for (int i=0; i<date_fine.length; i++)
					if (Utils.data1MaggioreData2(data, date_fine[i]))
					{
						msg = new AvvisoDialog(this, "" Non si tratta di una partenza anticipata per la stanza ""+L_st[i]+"" con tale data! "");
						testo[5].setText(DateUtils.parseDate(DateUtils.giveStringOfDate(data_oggi)));
						return true;
					}
			fine_sogg_anticipato = DateUtils.giornoPrimaDi(data);
		}
		else
		{
			if  ( (checkboxes[3].getState()) && !DateUtils.dataCorretta(testo[5].getText()))
			{	
				msg = new MessageDialog(this, "" La data di partenza anticipata e' errata! "");
				return true;
			}
			else
			{
				// il checkboxes[3] non e' attivo
				fine_sogg_anticipato = data_fine_magg;
				if (qualcuno_tramite_agenzia && checkboxes[1].getState())
				{	
					msg = new MessageDialog(this, "" Il cliente e' in una stanza di agenzia! Se deve andarsene scegliere 'partenza anticipata'. "");
					return true;
				}
			}
		}
		return false;
	} // errori
	
	void startContoStanza()
	{
		Frame msg;
		
		if (!qualcuno_tramite_agenzia)
		{
			if (checkboxes[3].getState())
				CalcoloConto.calcolaContoStanza(testo[0].getText(), 1, false, fine_sogg_anticipato);
			else
				CalcoloConto.calcolaContoStanza(testo[0].getText(), 1, false, null);
		}
		else
		{	
			CalcoloConto.calcolaContoStanzaAgenzia(testo[0].getText());
		}		
	}

	void startContoSingolo()
	{
		if (qualcuno_tramite_agenzia)
		{
			Frame msg;
			Date fine_effettiva;
			if (checkboxes[3].getState())
				fine_effettiva = fine_sogg_anticipato;
			else
				fine_effettiva = data_fine_magg;
			
   			if ( Utils.data1MinoreData2(fine_effettiva, new Date()) )
				msg = new AskChiudiSingoloConAgenzia(this);
			else
				msg = new MessageDialog(this, "" La data e' posteriore ad oggi: non e' possibile chiudere! "");
   			return;
   		}
   		else
			if ( (checkboxes[3].getState()) )
				CalcoloConto.calcolaContoSingolo(sogg_x_conto_sing, fine_sogg_anticipato);
			else
				CalcoloConto.calcolaContoSingolo(sogg_x_conto_sing, null);
	}
	
	void startContoComitiva()
	{
		if ( (checkboxes[3].getState()) )
			CalcoloConto.calcolaContoComitiva(L_st, fine_sogg_anticipato);
		else
			CalcoloConto.calcolaContoComitiva(L_st, null);
	}
	
	void startChiudiSingoloConAgenzia()
	{
		if (checkboxes[3].getState())
		{
			Date new_data = DateUtils.convertDate(testo[5].getText());
			new_data = DateUtils.giornoPrimaDi(new_data);
			(Principale.db).anticipaFineSogg(sogg_x_conto_sing.getNumStanza(),
									sogg_x_conto_sing.getIdSoggiornante(),
									new_data);
		}
		(Principale.db).reversePagato(sogg_x_conto_sing.getNumStanza(),
									  sogg_x_conto_sing.getIdSoggiornante());
		for (int i=0; i<testo.length-1; i++)
			testo[i].setText("""");
	}
}"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁', '\t', 'but', 'ton', '▁ann', 'ull', 'a', ',', '▁visual', 'iz', 'za', ';', '\n', '▁', '\t', 'text', 'field', '▁test', 'o', '[', ']', ';', '\n', '▁', '\t', 'l', 'ab', 'el', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁et', 'ic', 'he', 'tt', 'a', '5,', '▁stan', 'za', ',', '\n', '▁stan', 'za', '1,', '▁n', 'ome', ',', '▁co', 'gn', 'ome', ',', '▁stan', 'za', '2', ';', '\n', '▁', '\t', 'pan', 'el', '▁pan', 'el', '[', ']', ';', '\n', '▁', '\t', 'che', 'ck', 'box', 'gro', 'up', '▁check', 'box', '_', 'gro', 'up', ';', '\n', '▁', '\t', 'che', 'ck', 'box', '[', ']', '▁check', 'box', 'es', ';', '\n', '▁', '\t', 'gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\n', '▁', '\t', '//', '▁per', '▁la', '▁ger', 'arch', 'ia', '\n\t', 'fr', 'ame', '▁pad', 're', ';', '\n\t', 'm', 'asc', 'her', 'av', 'is', 'ual', 'iz', 'z', 'az', 'ion', 'ec', 'onto', '▁visual', ';', '\n\t\n\t', '//', '▁vari', 'ab', 'ili', '▁local', 'i', '\n\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', ';', '\n\t', 'str', 'ing', '▁l', '_', 'st', '[', ']', ';', '\n\t', 'd', 'ate', '▁date', '_', 'f', 'ine', '[', ']', ';', '▁/', '/', '▁quest', 'o', '▁arr', 'ay', '▁e', ""'"", '▁necess', 'ario', '▁per', '▁la', '▁ch', 'ius', 'ura', '▁d', 'ella', '▁com', 'it', 'iva', '\n\t\t\t\t\t\t', '//', '▁inf', 'att', 'i', '▁per', '▁pot', 'er', '▁r', 'ip', 'rist', 'in', 'are', '▁le', '▁dis', 'pon', 'ib', 'il', 'ita', '▁d', 'ella', '\n\t\t\t\t\t\t', '//', '▁stan', 'za', '▁cor', 'ret', 't', 'ament', 'e', '▁ho', '▁b', 'is', 'ogn', 'o', '▁del', 'le', '▁date', '▁di', '▁fine', '▁cor', 'ret', 'te', '\n\t', 'd', 'ate', '▁date', '_', 'in', 'iz', 'io', '[', ']', ';', '\n\t', 'd', 'ate', '▁data', '_', 'f', 'ine', '_', 'm', 'ag', 'g', ';', '\n\t', 'd', 'ate', '▁fine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', ';', '\n', '▁', '\t', 'int', '▁tip', 'o', '_', 'c', 'onto', ';', '\n', '▁', '\t', 'bo', 'ole', 'an', '▁qual', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', ';', '\n', '▁', '\t', 'bo', 'ole', 'an', '▁qual', 'c', 'un', 'o', '_', 'sen', 'za', '_', 'agen', 'z', 'ia', ';', '\n', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁m', 'asc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '(', 'fr', 'ame', '▁paren', 't', ')', '\n', '▁', '\t', '{', '\n', '▁super', '(', '""', 'cal', 'col', 'o', '▁del', '▁cont', 'o', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ann', 'ull', 'a', '▁""', ');', '\n', '▁/', '/', 'ann', 'ull', 'a', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ')', ');', '\n', '▁visual', 'iz', 'za', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁cal', 'col', 'a', '▁""', ');', '\n', '▁/', '/', 'vis', 'ual', 'iz', 'za', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ')', ');', '\n\t', '▁visual', 'iz', 'za', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'se', 'le', 'z', 'ion', 'are', '▁il', '▁tip', 'o', '▁di', '▁cont', 'o', '▁che', '▁si', '▁des', 'ider', 'a', '▁cal', 'col', 'are', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2', '▁=', '▁new', '▁label', '(', '""', 'c', 'onto', '▁su', '▁un', 'a', '▁stan', 'za', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3', '▁=', '▁new', '▁label', '(', '""', 'c', 'onto', '▁su', '▁un', '▁cl', 'ient', 'e', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '4', '▁=', '▁new', '▁label', '(', '""', 'c', 'onto', '▁su', '▁p', 'i', 'u', ""'"", '▁stan', 'ze', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '4.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁stan', 'za', '▁=', '▁new', '▁label', '(', '""', 'stan', 'za', '▁num', 'ero', '"")', ';', '\n', '▁co', 'gn', 'ome', '▁=', '▁new', '▁label', '(', '""', 'c', 'ogn', 'ome', '"")', ';', '\n', '▁n', 'ome', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '"")', ';', '\n', '▁stan', 'za', '1', '▁=', '▁new', '▁label', '(', '""', 'stan', 'za', '"")', ';', '\n', '▁stan', 'za', '2', '▁=', '▁new', '▁label', '(', '""', 'stan', 'ze', '▁num', 'ero', '"")', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁test', 'o', '=', 'new', '▁text', 'field', '[', '6', ']', ';', '\n', '▁test', 'o', '[', '0', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁test', 'o', '[', '1', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '2', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '3', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁test', 'o', '[', '4', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁3', '0)', ';', '\n', '▁test', 'o', '[', '5', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '1', '0)', ';', '\n', '▁for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', '6', ';', '+', '+', 'i', ')', '\n', '▁', '\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'gro', 'up', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '4', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁cont', 'o', '▁su', '▁un', 'a', '▁stan', 'za', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁cont', 'o', '▁su', '▁un', '▁cl', 'ient', 'e', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁cont', 'o', '▁su', '▁p', 'i', 'u', ""'"", 'stan', 'ze', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', '▁fal', 'se', ');', '\n\t', '▁check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁part', 'en', 'za', '▁ant', 'icip', 'ata', '"",', '▁fal', 'se', ');', '\t\n', '▁pan', 'el', '=', 'new', '▁pan', 'el', '[', '5', ']', ';', '\n', '▁for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', '5', ';', '+', '+', 'i', ')', '\n', '▁{', '\n', '▁pan', 'el', '[', 'i', ']', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '[', 'i', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁}', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁a', '▁sin', 'ist', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '0', ']', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '1', ']', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '2', ']', ',', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '3', ']', ',', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁test', 'o', '[', '5', ']', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁a', '▁dest', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', ']', ',', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁20,', '▁', '0,', '▁5,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', ']', ',', '▁visual', 'iz', 'za', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁5,', '▁', '0,', '▁', '0,', '▁20', ');', '\n', '▁', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁cont', 'o', '▁su', '▁un', 'a', '▁stan', 'za', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁stan', 'za', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁test', 'o', '[', '0', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁cont', 'o', '▁su', '▁un', '▁cl', 'ient', 'e', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁co', 'gn', 'ome', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁test', 'o', '[', '1', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁n', 'ome', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁test', 'o', '[', '2', ']', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁20,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁stan', 'za', '1,', '▁4,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁test', 'o', '[', '3', ']', ',', '▁5,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁cont', 'o', '▁su', '▁p', 'i', 'u', ""'"", '▁stan', 'ze', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁stan', 'za', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁test', 'o', '[', '4', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁5', ');', '▁', '\n', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '1', ']', ',', '▁', '0,', '▁', '0,', '▁6,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '0', ']', ',', '▁6,', '▁', '0,', '▁1,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'so', 'ut', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '2', ']', ',', '▁', '0,', '▁4,', '▁7,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '3', ']', ',', '▁', '0,', '▁6,', '▁7,', '▁3,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '[', '4', ']', ',', '▁', '0,', '▁9,', '▁7,', '▁2,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', '▁', '\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 't', 'ip', 'o', '_', 'c', 'onto', '▁=', '▁1', ';', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '0', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '5', ';', '+', '+', 'i', ')', '\n', '▁', '\t\t', '{', '▁', '\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁', '\t\t\t', '}', '▁', '\t', '▁', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 't', 'ip', 'o', '_', 'c', 'onto', '▁=', '▁2', ';', '\n', '▁', '\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '4', ';', '+', '+', 'i', ')', '\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '0', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '0', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '4', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '4', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n', '▁', '\t', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 't', 'ip', 'o', '_', 'c', 'onto', '▁=', '▁3', ';', '\n', '▁', '\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '4', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', '4', ';', '+', '+', 'i', ')', '\n', '▁', '\t', '{', '\t\n', '▁', '\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', '!', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 't', 'est', 'o', '[', '5', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t\t', 't', 'est', 'o', '[', '5', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁', '\t\t', '}', '\n', '▁', '\t\t', 'el', 'se', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 't', 'est', 'o', '[', '5', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t\t\t', 't', 'est', 'o', '[', '5', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'new', '▁date', '(', ')', ')', ')', ');', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n\t\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'vis', 'ual', 'iz', 'za', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'vis', 'ual', 'iz', 'za', '(', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\t', '}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'vis', 'ual', 'iz', 'za', '(', ')', '\n\t', '{', '\n', '▁', '\t\t', 'if', '▁(', '!', 'er', 'ror', 'i', '(', ')', ')', '\n', '▁', '\t\t', '{', '\t\n\t', '▁', '\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'st', 'art', 'cont', 'ost', 'an', 'za', '(', ');', '\n', '▁', '\t\t\t', 'el', 'se', '\n', '▁', '\t\t\t', '{', '\n', '▁', '\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁', '\t\t\t\t', '{', '\n', '▁', '\t\t\t\t\t', 'st', 'art', 'cont', 'os', 'ing', 'olo', '(', ');', '\n', '▁', '\t\t\t\t', '}', '\n', '▁', '\t\t\t\t', 'el', 'se', '\t\n', '▁', '\t\t', '▁', '\t\t', 'st', 'art', 'cont', 'oc', 'om', 'it', 'iva', '(', ');', '\n', '▁', '\t\t', '▁}', '\n', '▁', '\t\t\t', 'dis', 'play', 'c', 'onto', '(', ');', '\n', '▁', '\t', '}', '\n\t', '}', '\n\t\n', '▁', '\t', 'v', 'oid', '▁display', 'c', 'onto', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'vis', 'ual', '▁=', '▁new', '▁m', 'asc', 'her', 'av', 'is', 'ual', 'iz', 'z', 'az', 'ion', 'ec', 'onto', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', '),', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', '),', '\n', '▁', '\t\t\t\t\t\t\t\t\t', 't', 'est', 'o', '[', '2', ']', '.', 'get', 'text', '(', '),', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', '),', 't', 'est', 'o', '[', '4', ']', '.', 'get', 'text', '(', '),', 't', 'ip', 'o', '_', 'c', 'onto', ');', '\n', '▁', '\t\t', 'vis', 'ual', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁', '\t\t', 'vis', 'ual', '.', 'c', 'onto', '▁=', '▁this', ';', '\n', '▁', '\t', '}', '\n', '▁', '\t', '▁', '\n\t', 'bo', 'ole', 'an', '▁problem', 'istan', 'za', '(', 'str', 'ing', '▁stan', 'za', ')', '\n\t', '{', '\t\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '(', 'stan', 'za', ').', 'equ', 'als', '(', '""', '"")', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁di', '▁stan', 'za', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'stan', 'za', ')', '▁=', '=', '▁n', 'ull', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stan', 'za', '▁""', '+', 'stan', 'za', '+', '""', '▁e', ""'"", '▁in', 'es', 'ist', 'ent', 'e', '!', '▁""', ');', '\n\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'stan', 'za', ',', '▁fal', 'se', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ')', '▁=', '=', '▁', '0)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stan', 'za', '▁""', '+', 'stan', 'za', '+', '""', '▁non', '▁e', ""'"", '▁att', 'ual', 'ment', 'e', '▁occup', 'ata', '▁""', ');', '\n\t\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\t\n\t\t\t\t\t', '}', '\t\n\t\t\t', '}', '\t\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n\n\t', '//', '\t', 'cont', 'roll', 'a', '▁che', '▁n', 'ella', '▁list', 'a', '▁non', '▁vi', '▁s', 'iano', '▁stan', 'ze', '▁r', 'ip', 'et', 'ute', '▁p', 'i', 'u', ""'"", '▁vol', 'te', '\n\t', 'int', '▁ch', 'k', 'do', 'uble', '(', ')', '\n\t', '{', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'l', '_', 'st', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t', 'for', '(', 'int', '▁j', '▁=', '▁0', ';', '▁j', '<', 'l', '_', 'st', '.', 'l', 'ength', ';', '▁j', '+', '+', ')', '\n\t\t\t\t', 'if', '▁(', '▁(', '!', 'l', '_', 'st', '[', 'i', ']', '.', 'equ', 'als', '(', '""', '"")', ')', '▁&', '&', '▁(', '!', 'l', '_', 'st', '[', 'j', ']', '.', 'equ', 'als', '(', '""', '"")', ')', '▁&', '&', '▁(', 'i', '!', '=', 'j', ')', '▁', '\n\t\t\t\t\t', '&', '&', '▁(', 'l', '_', 'st', '[', 'i', ']', '.', 'equ', 'als', '(', 'l', '_', 'st', '[', 'j', ']', ')', ')', '▁)', '\n\t\t\t\t\t', 'ret', 'urn', '▁j', ';', '\n\t\t', 'ret', 'urn', '▁-', '1', ';', '\t\t\t', '▁', '\n\t', '}', '\n\n\t', 'd', 'ate', '[', ']', '▁t', 'orn', 'ad', 'ate', 'fin', 'em', 'ag', 'g', '(', 'str', 'ing', '▁el', 'en', 'co', '[', ']', ')', '\n\t', '{', '\n\t\t', 'd', 'ate', '▁data', '_', 'f', 'ine', '_', 'stan', 'za', '▁=', '▁n', 'ull', ';', '\n\t\t', 'd', 'ate', '▁fine', '_', 'so', 'g', 'g', '▁=', '▁n', 'ull', ';', '\n\t\t', 'd', 'ate', '▁date', '_', 'f', 'ine', '_', 'l', 'oc', '[', ']', '▁=', '▁new', '▁date', '[', 'el', 'en', 'co', '.', 'l', 'ength', ']', ';', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁', '<', '▁el', 'en', 'co', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'el', 'en', 'co', '[', 'i', ']', ',', '▁fal', 'se', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'd', 'ata', '_', 'f', 'ine', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', '0,', '▁', '0,', '▁1', ');', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1', ';', '▁j', '▁', '<', '=', '▁l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ');', '▁j', '+', '+', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'f', 'ine', '_', 'so', 'g', 'g', '▁=', '▁l', '_', 'so', 'g', 'g', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'j', ').', 'get', 'f', 'ines', 'og', 'g', '(', ');', '\n\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'd', 'ata', '1', 'm', 'ag', 'g', 'ior', 'ed', 'ata', '2', '(', '▁fine', '_', 'so', 'g', 'g', ',', '▁data', '_', 'f', 'ine', '_', 'stan', 'za', '▁)', '▁)', '\n\t\t\t\t\t\t', 'd', 'ata', '_', 'f', 'ine', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', 'f', 'ine', '_', 'so', 'g', 'g', '.', 'get', 'year', '(', '),', '▁fine', '_', 'so', 'g', 'g', '.', 'get', 'mon', 'th', '(', '),', '▁fine', '_', 'so', 'g', 'g', '.', 'get', 'd', 'ate', '(', ')', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'd', 'ate', '_', 'f', 'ine', '_', 'l', 'oc', '[', 'i', ']', '▁=', '▁data', '_', 'f', 'ine', '_', 'stan', 'za', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ret', 'urn', '▁n', 'ull', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁date', '_', 'f', 'ine', '_', 'l', 'oc', ';', '\n\t', '}', '\n\t\n\t', 'd', 'ate', '[', ']', '▁t', 'orn', 'ad', 'ate', 'in', 'iz', 'i', 'omin', '(', 'str', 'ing', '▁el', 'en', 'co', '[', ']', ')', '\n\t', '{', '\n\t\t', 'd', 'ate', '▁data', '_', 'in', 'iz', 'io', '_', 'stan', 'za', '▁=', '▁n', 'ull', ';', '\n\t\t', 'd', 'ate', '▁in', 'iz', 'io', '_', 'so', 'g', 'g', '▁=', '▁n', 'ull', ';', '\n\t\t', 'd', 'ate', '▁date', '_', 'in', 'iz', 'io', '_', 'l', 'oc', '[', ']', '▁=', '▁new', '▁date', '[', 'el', 'en', 'co', '.', 'l', 'ength', ']', ';', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁', '<', '▁el', 'en', 'co', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'el', 'en', 'co', '[', 'i', ']', ',', '▁fal', 'se', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'd', 'ata', '_', 'in', 'iz', 'io', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', '3', '00', '0,', '▁', '0,', '▁1', ');', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1', ';', '▁j', '▁', '<', '=', '▁l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ');', '▁j', '+', '+', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'iz', 'io', '_', 'so', 'g', 'g', '▁=', '▁l', '_', 'so', 'g', 'g', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'j', ').', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ');', '\n\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'd', 'ata', '1', 'min', 'ored', 'ata', '2', '(', '▁in', 'iz', 'io', '_', 'so', 'g', 'g', ',', '▁data', '_', 'in', 'iz', 'io', '_', 'stan', 'za', '▁)', '▁)', '\n\t\t\t\t\t\t', 'd', 'ata', '_', 'in', 'iz', 'io', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', 'in', 'iz', 'io', '_', 'so', 'g', 'g', '.', 'get', 'year', '(', '),', '▁in', 'iz', 'io', '_', 'so', 'g', 'g', '.', 'get', 'mon', 'th', '(', '),', '▁in', 'iz', 'io', '_', 'so', 'g', 'g', '.', 'get', 'd', 'ate', '(', ')', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'd', 'ate', '_', 'in', 'iz', 'io', '_', 'l', 'oc', '[', 'i', ']', '▁=', '▁data', '_', 'in', 'iz', 'io', '_', 'stan', 'za', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ret', 'urn', '▁n', 'ull', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁date', '_', 'in', 'iz', 'io', '_', 'l', 'oc', ';', '\n\t', '}', '\n\t\n\t', 'bo', 'ole', 'an', '▁ag', 'gi', 'orn', 'ament', 'o', 'fl', 'ag', 'se', 'ff', 'ett', 'u', 'ato', '(', 'str', 'ing', '▁el', 'en', 'co', '[', ']', ')', '\n\t', '{', '\n\t\t', 'qu', 'al', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', '▁=', '▁fal', 'se', ';', '\n\t\t', 'qu', 'al', 'c', 'un', 'o', '_', 'sen', 'za', '_', 'agen', 'z', 'ia', '▁=', '▁fal', 'se', ';', '\n\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ';', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'el', 'en', 'co', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'el', 'en', 'co', '[', 'i', ']', ',', '▁fal', 'se', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1', ';', '▁j', '▁', '<', '=', '▁l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ');', '▁j', '+', '+', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', 'ren', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '(', 'l', '_', 'so', 'g', 'g', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'j', ')', ').', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t\t\t\t', 'if', '▁(', 'p', 'ren', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'p', 'ren', '.', 'get', 'tr', 'am', 'ite', 'agen', 'z', 'ia', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n\t\t\t\t\t\t\t', 'qu', 'al', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', '▁=', '▁qual', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', '▁||', '▁true', ';', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'qu', 'al', 'c', 'un', 'o', '_', 'sen', 'za', '_', 'agen', 'z', 'ia', '▁=', '▁qual', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', '▁||', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁true', ';', '\n\t', '}', '\n\t\n\t', 'bo', 'ole', 'an', '▁er', 'ror', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', '▁=', '▁new', '▁s', 'og', 'gi', 'orn', 'ante', '(', ');', '\n\n\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'pro', 'ble', 'm', 'istan', 'za', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', ')', ')', ')', '\n\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t', 'l', '_', 'st', '▁=', '▁new', '▁string', '[', '1', ']', ';', '\n\t\t\t', 'l', '_', 'st', '[', '0', ']', '▁=', '▁new', '▁string', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'l', '_', 'st', '▁=', '▁new', '▁string', '[', '1', ']', ';', '\n\t\t\t\t', 'l', '_', 'st', '[', '0', ']', '▁=', '▁new', '▁string', '(', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t\t', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ante', '(', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', '),', 't', 'est', 'o', '[', '2', ']', '.', 'get', 'text', '(', '),', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t\t', 'if', '▁(', 'so', 'g', 'g', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁n', 'ess', 'un', '▁s', 'og', 'gi', 'orn', 'ante', '▁present', 'e', '▁n', 'ella', '▁stan', 'za', '▁""', '+', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', ')', '+', '▁""', '▁r', 'is', 'p', 'ond', 'e', '▁al', '▁nomin', 'at', 'iv', 'o', '▁ins', 'er', 'ito', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 't', 'est', 'o', '[', '3', ']', '.', 'get', 'text', '(', '),', '▁fal', 'se', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '▁', '\n\t\t\t\t', 'if', '▁(', 'so', 'g', 'g', '.', 'get', 'p', 'ag', 'ato', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁s', 'og', 'gi', 'orn', 'ante', '▁se', 'le', 'z', 'ion', 'ato', '▁o', '▁ha', '▁g', 'ia', ""'"", '▁p', 'ag', 'ato', '▁o', '▁se', '▁ne', '▁e', ""'"", '▁g', 'ia', ""'"", '▁and', 'ato', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', '//', '▁proced', 'o', '▁con', '▁il', '▁ver', 'ific', 'are', '▁se', '▁il', '▁cl', 'ient', 'e', '▁e', ""'"", '▁l', ""'"", 'ult', 'im', 'o', '▁r', 'im', 'ast', 'o', '\n\t\t\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁s', 'og', 'g', '_', 'no', '_', 'p', 'ag', 'ato', '▁=', '▁new', '▁list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '(', ');', '\n\t\t\t\t\t', 'for', '▁(', 'int', '▁i', '=', '1', ';', '▁i', '<', '=', 'l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'i', ').', 'get', 'p', 'ag', 'ato', '(', ')', '▁=', '=', '▁const', '.', 'no', ')', '\n\t\t\t\t\t\t\t', 'so', 'g', 'g', '_', 'no', '_', 'p', 'ag', 'ato', '.', 'ad', 'd', 'so', 'g', 'gi', 'orn', 'ante', '(', 'l', '_', 'so', 'g', 'g', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'i', ')', ');', '\n\t\t\t\t\t', 'if', '▁(', 'so', 'g', 'g', '_', 'no', '_', 'p', 'ag', 'ato', '.', 'l', 'ength', '(', ')', '▁=', '=', '▁1', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁s', 'og', 'gi', 'orn', 'ante', '▁e', ""'"", '▁l', ""'"", 'ult', 'im', 'o', '▁r', 'im', 'ast', 'o', '.', '▁s', 'ce', 'g', 'li', 'ere', ""▁'"", 'c', 'onto', '▁per', '▁stan', 'za', ""'"", '!', '▁""', ');', '\n\t\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '▁=', '▁s', 'og', 'g', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\t\t\n\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'l', '_', 'st', '▁=', '▁ut', 'ils', '.', 'p', 'ars', 'est', 'an', 'ze', '(', 't', 'est', 'o', '[', '4', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t\t\t', 'if', '▁(', 'l', '_', 'st', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁er', 'r', 'ore', '▁n', 'ell', ""'"", 'el', 'en', 'co', '▁del', 'le', '▁stan', 'ze', '.', '▁ins', 'er', 'ire', '▁le', '▁stan', 'ze', '▁n', 'ell', ""'"", 'el', 'en', 'co', '▁nel', '▁mod', 'o', '▁se', 'gu', 'ent', 'e', ':', '▁10', '1,', '10', '2,', '10', '3,', '..', '.""', ');', '\n\t\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\t\t\t\t\t\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'za', '▁room', ';', '\n\t\t\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁', '<', '▁l', '_', 'st', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t\t\t\t\t', 'if', '▁(', 'pro', 'ble', 'm', 'istan', 'za', '(', 'l', '_', 'st', '[', 'i', ']', ')', ')', '\n\t\t\t\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t\t\t', 'int', '▁res', '▁=', '▁ch', 'k', 'do', 'uble', '(', ');', '\n\t\t\t\t\t\t', 'if', '▁(', '▁res', '▁!', '=', '▁-', '1)', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁er', 'r', 'ore', '▁n', 'ell', ""'"", 'el', 'en', 'co', '▁del', 'le', '▁stan', 'ze', '.', '▁la', '▁stan', 'za', '▁""', '+', 'l', '_', 'st', '[', 'res', ']', '+', '""', '▁e', '▁present', 'e', '▁p', 'i', 'u', ""'"", '▁vol', 'te', '▁n', 'ell', ""'"", 'el', 'en', 'co', '!', '▁""', ');', '\n\t\t\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t\t\t', '}', '\t\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', '▁||', '▁check', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'd', 'ate', '_', 'f', 'ine', '▁=', '▁t', 'orn', 'ad', 'ate', 'fin', 'em', 'ag', 'g', '(', 'l', '_', 'st', ');', '\n\t\t\t', 'd', 'ate', '_', 'in', 'iz', 'io', '▁=', '▁t', 'orn', 'ad', 'ate', 'in', 'iz', 'i', 'omin', '(', 'l', '_', 'st', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'so', 'g', 'g', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t\t', 'if', '▁(', 'p', 'ren', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\n\t\t\t\t\n\t\t\t\t', 'd', 'ate', '_', 'f', 'ine', '▁=', '▁new', '▁date', '[', '1', ']', ';', '\n\t\t\t\t', 'd', 'ate', '_', 'in', 'iz', 'io', '▁=', '▁new', '▁date', '[', '1', ']', ';', '\n\t\t\t\t', 'd', 'ate', '_', 'f', 'ine', '[', '0', ']', '▁=', '▁s', 'og', 'g', '.', 'get', 'f', 'ines', 'og', 'g', '(', ');', '\n\t\t\t\t', 'd', 'ate', '_', 'in', 'iz', 'io', '[', '0', ']', '▁=', '▁s', 'og', 'g', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'd', 'ate', '_', 'f', 'ine', '▁=', '▁n', 'ull', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'd', 'ate', '_', 'f', 'ine', '▁=', '=', '▁n', 'ull', '▁||', '▁date', '_', 'in', 'iz', 'io', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', '//', '▁la', '▁vari', 'ab', 'ile', '▁data', '_', 'f', 'ine', '▁cont', 'i', 'ene', '▁le', '▁date', '▁di', '▁fine', '▁cor', 'ret', 'te', '\n\n\t\t', 'd', 'ata', '_', 'f', 'ine', '_', 'm', 'ag', 'g', '▁=', '▁new', '▁date', '(', '0,', '▁', '0,', '▁1', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'd', 'ate', '_', 'f', 'ine', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'd', 'ata', '1', 'm', 'ag', 'g', 'ior', 'ed', 'ata', '2', '(', 'd', 'ate', '_', 'f', 'ine', '[', 'i', ']', ',', '▁data', '_', 'f', 'ine', '_', 'm', 'ag', 'g', ')', ')', '\n\t\t\t\t', 'd', 'ata', '_', 'f', 'ine', '_', 'm', 'ag', 'g', '▁=', '▁date', '_', 'f', 'ine', '[', 'i', ']', ';', '\n\t\t', '//', '▁or', 'a', '▁la', '▁vari', 'ab', 'ile', '▁data', '_', 'f', 'ine', '_', 'm', 'ag', 'g', '▁cont', 'i', 'ene', '▁la', '▁data', '▁di', '▁fine', '▁mag', 'gi', 'ore', '\n\t\t\n\t\t', 'if', '▁(', '!', 'ag', 'gi', 'orn', 'ament', 'o', 'fl', 'ag', 'se', 'ff', 'ett', 'u', 'ato', '(', 'l', '_', 'st', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n', '▁', '\t\t', '//', '▁da', '▁or', 'a', '▁in', '▁po', 'i', '▁le', '▁flag', 's', '▁per', '▁l', ""'"", 'agen', 'z', 'ia', '▁cont', 'eng', 'on', 'o', '▁val', 'ori', '▁sign', 'ific', 'at', 'iv', 'i', '\n\n\t\t', '//', '▁quest', 'o', '▁if', '▁de', 've', '▁ess', 'ere', '▁mes', 'so', '▁prim', 'a', '▁di', '▁qu', 'ello', '▁che', '▁seg', 'ue', '\n\t\t', 'if', '▁(', 'qu', 'al', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', '▁&', '&', '▁qual', 'c', 'un', 'o', '_', 'sen', 'za', '_', 'agen', 'z', 'ia', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'el', 'en', 'co', '▁del', 'le', '▁stan', 'ze', '▁include', '▁stan', 'ze', '▁commission', 'ate', '▁e', '▁non', '!', '▁proced', 'ere', '▁al', '▁cal', 'col', 'o', '▁separ', 'ato', '.', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', '//', '▁l', ""'"", 'if', '▁che', '▁seg', 'ue', '▁de', 've', '▁ess', 'ere', '▁post', 'o', '▁d', 'op', 'o', '▁a', '▁qu', 'ello', '▁che', '▁preced', 'e', '\n\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', '▁&', '&', '▁qual', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cont', 'o', '▁com', 'it', 'iva', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁per', '▁le', '▁ag', 'enz', 'ie', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\n\t\t', '//', '▁se', '▁arr', 'iv', 'o', '▁qu', 'i', '▁sign', 'ific', 'a', '▁che', '▁si', '▁pu', 'o', ""'"", '▁f', 'are', '▁il', '▁cont', 'o', '▁norm', 'ale', ',', '\n\t\t', '//', '▁r', 'im', 'ane', '▁da', '▁ver', 'ific', 'are', '▁se', '▁si', '▁des', 'ider', 'a', '▁f', 'are', '▁un', 'a', '▁part', 'en', 'za', '▁ant', 'icip', 'ata', '\n\t\t', '//', '▁e', '▁in', '▁tal', '▁cas', 'o', '▁ver', 'ific', 'are', '▁che', '▁la', '▁data', '▁ins', 'er', 'ita', '▁s', 'ia', '▁cor', 'ret', 'ta', '!', '\n\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '▁&', '&', '▁(', 'd', 'ate', 'ut', 'ils', '.', 'd', 'at', 'ac', 'or', 'ret', 'ta', '(', 't', 'est', 'o', '[', '5', ']', '.', 'get', 'text', '(', ')', ')', ')', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'd', 'ate', '▁data', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 't', 'est', 'o', '[', '5', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'd', 'ate', '▁data', '_', 'og', 'gi', '▁=', '▁new', '▁date', '(', ');', '\n\t\t\t', '//', '▁controll', 'o', '▁che', '▁la', '▁data', '▁di', '▁part', 'en', 'za', '▁ant', 'icip', 'ata', '▁abb', 'ia', '▁sen', 'so', ':', '\n\t\t\t', '//', '▁1', ')', '▁controll', 'o', '▁che', '▁il', '▁cl', 'ient', 'e', '▁abb', 'ia', '▁s', 'og', 'gi', 'orn', 'ato', '▁al', 'ment', 'o', '▁un', '▁gi', 'orn', 'o', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'd', 'ate', '_', 'in', 'iz', 'io', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'd', 'ata', '1', 'm', 'ag', 'g', 'ior', 'ed', 'ata', '2', '(', 'd', 'ate', '_', 'in', 'iz', 'io', '[', 'i', ']', ',', '▁date', 'ut', 'ils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'd', 'ata', ')', ')', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁i', '▁cl', 'ient', 'i', '▁dev', 'on', 'o', '▁s', 'og', 'gi', 'orn', 'are', '▁al', 'men', 'o', '▁un', '▁gi', 'orn', 'o', '▁prim', 'a', '▁di', '▁part', 'ire', '!', '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '//', '▁2', ')', '▁controll', 'o', '▁che', '▁la', '▁part', 'en', 'za', '▁ant', 'icip', 'ata', '▁non', '▁s', 'ia', '▁prim', 'a', '▁di', '▁og', 'gi', '\n\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'd', 'ata', '1', 'min', 'ored', 'ata', '2', '(', 'd', 'ata', ',', '▁data', '_', 'og', 'gi', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁preced', 'ent', 'e', '▁a', '▁qu', 'ella', '▁od', 'ier', 'na', '!', '▁""', ');', '\n\t\t\t\t', 't', 'est', 'o', '[', '5', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'd', 'ata', '_', 'og', 'gi', ')', ')', ');', '\n\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', '//', '▁3', ')', '▁controll', 'o', '▁che', '▁il', '▁fine', '▁s', 'og', 'gi', 'orn', 'o', '▁ant', 'icip', 'ato', '▁(', 'oss', 'ia', '▁il', '▁gi', 'orn', 'o', '▁prim', 'a', '▁d', 'ella', '\n\t\t\t\t', '//', '▁part', 'en', 'za', '▁ant', 'icip', 'ata', ')', '▁non', '▁s', 'ia', '▁d', 'op', 'o', '▁il', '▁fine', '▁s', 'og', 'gi', 'orn', 'o', '▁eff', 'ett', 'iv', 'o', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 'd', 'ate', '_', 'f', 'ine', '.', 'l', 'ength', ';', '▁i', '+', '+', ')', '\n\t\t\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'd', 'ata', '1', 'm', 'ag', 'g', 'ior', 'ed', 'ata', '2', '(', 'd', 'ata', ',', '▁date', '_', 'f', 'ine', '[', 'i', ']', ')', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁non', '▁si', '▁tr', 'att', 'a', '▁di', '▁un', 'a', '▁part', 'en', 'za', '▁ant', 'icip', 'ata', '▁per', '▁la', '▁stan', 'za', '▁""', '+', 'l', '_', 'st', '[', 'i', ']', '+', '""', '▁con', '▁t', 'ale', '▁data', '!', '▁""', ');', '\n\t\t\t\t\t\t', 't', 'est', 'o', '[', '5', ']', '.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'd', 'ata', '_', 'og', 'gi', ')', ')', ');', '\n\t\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t', 'f', 'ine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', '▁=', '▁date', 'ut', 'ils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'd', 'ata', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '▁&', '&', '▁!', 'd', 'ate', 'ut', 'ils', '.', 'd', 'at', 'ac', 'or', 'ret', 'ta', '(', 't', 'est', 'o', '[', '5', ']', '.', 'get', 'text', '(', ')', ')', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁part', 'en', 'za', '▁ant', 'icip', 'ata', '▁e', ""'"", '▁er', 'r', 'ata', '!', '▁""', ');', '\n\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', '//', '▁il', '▁check', 'box', 'es', '[', '3', ']', '▁non', '▁e', ""'"", '▁att', 'iv', 'o', '\n\t\t\t\t', 'f', 'ine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', '▁=', '▁data', '_', 'f', 'ine', '_', 'm', 'ag', 'g', ';', '\n\t\t\t\t', 'if', '▁(', 'qu', 'al', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', '▁&', '&', '▁check', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cl', 'ient', 'e', '▁e', ""'"", '▁in', '▁un', 'a', '▁stan', 'za', '▁di', '▁ag', 'enz', 'ia', '!', '▁se', '▁de', 've', '▁and', 'ars', 'ene', '▁s', 'ce', 'g', 'li', 'ere', ""▁'"", 'part', 'en', 'za', '▁ant', 'icip', 'ata', ""'."", '▁""', ');', '\n\t\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '▁/', '/', '▁er', 'ror', 'i', '\n\t\n\t', 'v', 'oid', '▁start', 'cont', 'ost', 'an', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '!', 'qu', 'al', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ost', 'an', 'za', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', '),', '▁1,', '▁fal', 'se', ',', '▁fine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ost', 'an', 'za', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', '),', '▁1,', '▁fal', 'se', ',', '▁n', 'ull', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\t\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ost', 'an', 'za', 'agen', 'z', 'ia', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t', '}', '\t\t\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'cont', 'os', 'ing', 'olo', '(', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', 'qu', 'al', 'c', 'un', 'o', '_', 'tr', 'am', 'ite', '_', 'agen', 'z', 'ia', ')', '\n\t\t', '{', '\n\t\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\t', 'd', 'ate', '▁fine', '_', 'eff', 'ett', 'iva', ';', '\n\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'f', 'ine', '_', 'eff', 'ett', 'iva', '▁=', '▁fine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', ';', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'f', 'ine', '_', 'eff', 'ett', 'iva', '▁=', '▁data', '_', 'f', 'ine', '_', 'm', 'ag', 'g', ';', '\n\t\t\t\n', '▁', '\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'd', 'ata', '1', 'min', 'ored', 'ata', '2', '(', 'f', 'ine', '_', 'eff', 'ett', 'iva', ',', '▁new', '▁date', '(', ')', ')', '▁)', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁as', 'k', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'z', 'ia', '(', 'this', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁e', ""'"", '▁post', 'er', 'i', 'ore', '▁ad', '▁og', 'gi', ':', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁chi', 'ud', 'ere', '!', '▁""', ');', '\n', '▁', '\t\t\t', 'ret', 'urn', ';', '\n', '▁', '\t\t', '}', '\n', '▁', '\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '▁)', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'os', 'ing', 'olo', '(', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', ',', '▁fine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'os', 'ing', 'olo', '(', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', ',', '▁n', 'ull', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'cont', 'oc', 'om', 'it', 'iva', '(', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '▁)', '\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'oc', 'om', 'it', 'iva', '(', 'l', '_', 'st', ',', '▁fine', '_', 'so', 'g', 'g', '_', 'ant', 'icip', 'ato', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'oc', 'om', 'it', 'iva', '(', 'l', '_', 'st', ',', '▁n', 'ull', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'z', 'ia', '(', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'd', 'ate', '▁new', '_', 'd', 'ata', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 't', 'est', 'o', '[', '5', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'new', '_', 'd', 'ata', '▁=', '▁date', 'ut', 'ils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'new', '_', 'd', 'ata', ');', '\n\t\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ant', 'icip', 'af', 'ines', 'og', 'g', '(', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '\n\t\t\t\t\t\t\t\t\t', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', '),', '\n\t\t\t\t\t\t\t\t\t', 'new', '_', 'd', 'ata', ');', '\n\t\t', '}', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 're', 'vers', 'ep', 'ag', 'ato', '(', 'so', 'g', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '\n\t\t\t\t\t\t\t\t\t', '▁s', 'og', 'g', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', ')', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=', '0', ';', '▁i', '<', 't', 'est', 'o', '.', 'l', 'ength', '-1', ';', '▁i', '+', '+', ')', '\n\t\t\t', 't', 'est', 'o', '[', 'i', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'but', 'ton', '▁ann', 'ulla', ',', '▁visual', 'iz', 'za', ';', '\n', '▁', '\t', 'text', 'field', '▁test', 'o', '[]', ';', '\n', '▁', '\t', 'l', 'abel', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', '4,', '▁et', 'iche', 'tta', '5,', '▁stan', 'za', ',', '\n', '▁stan', 'za', '1,', '▁n', 'ome', ',', '▁cogn', 'ome', ',', '▁stan', 'za', '2', ';', '\n', '▁', '\t', 'pan', 'el', '▁panel', '[]', ';', '\n', '▁', '\t', 'check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁', '\t', 'check', 'box', '[]', '▁check', 'box', 'es', ';', '\n', '▁', '\t', 'grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n\n', '▁', '\t', '//', '▁per', '▁la', '▁ger', 'arch', 'ia', '\n\t', 'frame', '▁pad', 're', ';', '\n\t', 'm', 'asc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '▁visual', ';', '\n\t\n\t', '//', '▁vari', 'ab', 'ili', '▁local', 'i', '\n\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', '_', 'x', '_', 'c', 'onto', '_', 'sing', ';', '\n\t', 'string', '▁l', '_', 'st', '[]', ';', '\n\t', 'date', '▁date', '_', 'f', 'ine', '[]', ';', '▁//', '▁quest', 'o', '▁array', '▁e', ""'"", '▁necess', 'ario', '▁per', '▁la', '▁ch', 'ius', 'ura', '▁della', '▁com', 'it', 'iva', '\n\t\t\t\t\t\t', '//', '▁inf', 'atti', '▁per', '▁pot', 'er', '▁rip', 'rist', 'in', 'are', '▁le', '▁dis', 'pon', 'ib', 'il', 'ita', '▁della', '\n\t\t\t\t\t\t', '//', '▁stan', 'za', '▁cor', 'rett', 'ament', 'e', '▁ho', '▁bis', 'ogn', 'o', '▁delle', '▁date', '▁di', '▁fine', '▁cor', 'ret', 'te', '\n\t', 'date', '▁date', '_', 'in', 'izio', '[]', ';', '\n\t', 'date', '▁data', '_', 'f', 'ine', '_', 'mag', 'g', ';', '\n\t', 'date', '▁fine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', ';', '\n', '▁', '\t', 'int', '▁tip', 'o', '_', 'c', 'onto', ';', '\n', '▁', '\t', 'bo', 'olean', '▁qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', ';', '\n', '▁', '\t', 'bo', 'olean', '▁qual', 'c', 'uno', '_', 'sen', 'za', '_', 'agen', 'zia', ';', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁masc', 'her', 'ac', 'al', 'col', 'oc', 'onto', '(', 'frame', '▁parent', ')', '\n', '▁', '\t', '{', '\n', '▁super', '(""', 'cal', 'colo', '▁del', '▁cont', 'o', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁//', 'ann', 'ulla', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n', '▁visual', 'iz', 'za', '▁=', '▁new', '▁button', '(""', '▁cal', 'cola', '▁""', ');', '\n', '▁//', 'vis', 'ual', 'iz', 'za', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n\t', '▁visual', 'iz', 'za', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'se', 'lez', 'ion', 'are', '▁il', '▁tip', 'o', '▁di', '▁cont', 'o', '▁che', '▁si', '▁des', 'ider', 'a', '▁cal', 'col', 'are', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'c', 'onto', '▁su', '▁una', '▁stan', 'za', ':', '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'c', 'onto', '▁su', '▁un', '▁client', 'e', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '4', '▁=', '▁new', '▁label', '(""', 'c', 'onto', '▁su', '▁pi', 'u', ""'"", '▁stan', 'ze', ':', '"");', '\n', '▁et', 'iche', 'tta', '4.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁stan', 'za', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁num', 'ero', '"");', '\n', '▁cogn', 'ome', '▁=', '▁new', '▁label', '(""', 'c', 'ogn', 'ome', '"");', '\n', '▁n', 'ome', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁stan', 'za', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '"");', '\n', '▁stan', 'za', '2', '▁=', '▁new', '▁label', '(""', 'stan', 'ze', '▁num', 'ero', '"");', '\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁edit', 'ab', 'ili', '\n', '▁test', 'o', '=', 'new', '▁text', 'field', '[', '6', ']', ';', '\n', '▁test', 'o', '[', '0', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁test', 'o', '[', '1]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '2', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '[', '3', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁test', 'o', '[', '4', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '0)', ';', '\n', '▁test', 'o', '[', '5', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n', '▁for', '(', 'int', '▁i', '=0', ';', 'i', '<', '6', ';', '++', 'i', ')', '\n', '▁', '\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '4', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁cont', 'o', '▁su', '▁una', '▁stan', 'za', '"",', 'check', 'box', '_', 'group', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁cont', 'o', '▁su', '▁un', '▁client', 'e', '"",', 'check', 'box', '_', 'group', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁cont', 'o', '▁su', '▁pi', 'u', ""'"", 'stan', 'ze', '"",', 'check', 'box', '_', 'group', ',', '▁false', ');', '\n\t', '▁check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁part', 'enza', '▁anticip', 'ata', '"",', '▁false', ');', '\t\n', '▁panel', '=', 'new', '▁panel', '[', '5', ']', ';', '\n', '▁for', '(', 'int', '▁i', '=0', ';', 'i', '<', '5', ';', '++', 'i', ')', '\n', '▁{', '\n', '▁panel', '[', 'i', ']', '=', 'new', '▁panel', '();', '\n', '▁panel', '[', 'i', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁}', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁sin', 'ist', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '0', '],', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '1', '],', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '2', '],', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '3', '],', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁test', 'o', '[', '5', '],', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁dest', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', '],', '▁ann', 'ulla', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁20,', '▁', '0,', '▁5,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', '],', '▁visual', 'iz', 'za', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁5,', '▁', '0,', '▁', '0,', '▁20', ');', '\n', '▁', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'o', '▁su', '▁una', '▁stan', 'za', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁et', 'iche', 'tta', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁stan', 'za', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁test', 'o', '[', '0', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'o', '▁su', '▁un', '▁client', 'e', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁et', 'iche', 'tta', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁cogn', 'ome', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁test', 'o', '[', '1', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁n', 'ome', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁test', 'o', '[', '2', '],', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.', '0,', '▁0.', '0,', '▁20,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁stan', 'za', '1,', '▁4,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁test', 'o', '[', '3', '],', '▁5,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'o', '▁su', '▁pi', 'u', ""'"", '▁stan', 'ze', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁et', 'iche', 'tta', '4,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁stan', 'za', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁test', 'o', '[', '4', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '1', '],', '▁', '0,', '▁', '0,', '▁6,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '0', '],', '▁6,', '▁', '0,', '▁1,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '2', '],', '▁', '0,', '▁4,', '▁7,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '3', '],', '▁', '0,', '▁6,', '▁7,', '▁3,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '[', '4', '],', '▁', '0,', '▁9,', '▁7,', '▁2,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'check', 'box', 'es', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', '▁', '\t', 'if', '(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'tip', 'o', '_', 'c', 'onto', '▁=', '▁1', ';', '\n', '▁', '\t\t', 'test', 'o', '[', '0', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '5', ';', '++', 'i', ')', '\n', '▁', '\t\t', '{', '▁', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t\t\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁', '\t\t\t', '}', '▁', '\t', '▁', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'check', 'box', 'es', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'tip', 'o', '_', 'c', 'onto', '▁=', '▁2', ';', '\n', '▁', '\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '4', ';', '++', 'i', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '0', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁', '\t\t', 'test', 'o', '[', '4', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '4', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n', '▁', '\t', 'check', 'box', 'es', '[', '2', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'tip', 'o', '_', 'c', 'onto', '▁=', '▁3', ';', '\n', '▁', '\t\t', 'vis', 'ual', 'iz', 'za', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '4', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=0', ';', 'i', '<', '4', ';', '++', 'i', ')', '\n', '▁', '\t', '{', '\t\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'check', 'box', 'es', '[', '3', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(', '!', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'test', 'o', '[', '5', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁', '\t\t', '}', '\n', '▁', '\t\t', 'el', 'se', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'test', 'o', '[', '5', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'new', '▁date', '()', '))', ');', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'vis', 'ual', 'iz', 'za', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'vis', 'ual', 'iz', 'za', '();', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\t', '}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'vis', 'ual', 'iz', 'za', '()', '\n\t', '{', '\n', '▁', '\t\t', 'if', '▁(', '!', 'error', 'i', '())', '\n', '▁', '\t\t', '{', '\t\n\t', '▁', '\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', 'start', 'cont', 'ostan', 'za', '();', '\n', '▁', '\t\t\t', 'el', 'se', '\n', '▁', '\t\t\t', '{', '\n', '▁', '\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n', '▁', '\t\t\t\t', '{', '\n', '▁', '\t\t\t\t\t', 'start', 'cont', 'osing', 'olo', '();', '\n', '▁', '\t\t\t\t', '}', '\n', '▁', '\t\t\t\t', 'el', 'se', '\t\n', '▁', '\t\t', '▁', '\t\t', 'start', 'cont', 'oc', 'om', 'it', 'iva', '();', '\n', '▁', '\t\t', '▁}', '\n', '▁', '\t\t\t', 'dis', 'play', 'c', 'onto', '();', '\n', '▁', '\t', '}', '\n\t', '}', '\n\t\n', '▁', '\t', 'v', 'oid', '▁display', 'c', 'onto', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'vis', 'ual', '▁=', '▁new', '▁masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '(', '),', 'test', 'o', '[', '1', '].', 'get', 'text', '(', '),', '\n', '▁', '\t\t\t\t\t\t\t\t\t', 'test', 'o', '[', '2', '].', 'get', 'text', '(', '),', 'test', 'o', '[', '3', '].', 'get', 'text', '(', '),', 'test', 'o', '[', '4', '].', 'get', 'text', '(', '),', 'tip', 'o', '_', 'c', 'onto', ');', '\n', '▁', '\t\t', 'vis', 'ual', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁', '\t\t', 'vis', 'ual', '.', 'c', 'onto', '▁=', '▁this', ';', '\n', '▁', '\t', '}', '\n', '▁', '\t', '▁', '\n\t', 'bo', 'olean', '▁problem', 'istan', 'za', '(', 'string', '▁stan', 'za', ')', '\n\t', '{', '\t\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', ';', '\n\t\t\n\t\t', 'if', '▁(', '(', 'stan', 'za', ').', 'equ', 'als', '(""', '"")', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁ins', 'er', 'ire', '▁il', '▁num', 'ero', '▁di', '▁stan', 'za', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', ')', '▁==', '▁null', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stan', 'za', '▁""', '+', 'stan', 'za', '+', '""', '▁e', ""'"", '▁in', 'es', 'ist', 'ente', '!', '▁""', ');', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'stan', 'za', ',', '▁false', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁==', '▁null', ')', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\t\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '.', 'length', '()', '▁==', '▁', '0)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stan', 'za', '▁""', '+', 'stan', 'za', '+', '""', '▁non', '▁e', ""'"", '▁att', 'ual', 'ment', 'e', '▁occup', 'ata', '▁""', ');', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\t\n\t\t\t\t\t', '}', '\t\n\t\t\t', '}', '\t\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n\t', '//', '\t', 'controll', 'a', '▁che', '▁n', 'ella', '▁list', 'a', '▁non', '▁vi', '▁s', 'iano', '▁stan', 'ze', '▁rip', 'et', 'ute', '▁pi', 'u', ""'"", '▁vol', 'te', '\n\t', 'int', '▁ch', 'k', 'double', '()', '\n\t', '{', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'l', '_', 'st', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t', 'for', '(', 'int', '▁j', '▁=', '▁0', ';', '▁j', '<', 'l', '_', 'st', '.', 'length', ';', '▁j', '++', ')', '\n\t\t\t\t', 'if', '▁(', '▁(', '!', 'l', '_', 'st', '[', 'i', '].', 'equ', 'als', '(""', '"")', ')', '▁&', '&', '▁(', '!', 'l', '_', 'st', '[', 'j', '].', 'equ', 'als', '(""', '"")', ')', '▁&', '&', '▁(', 'i', '!', '=', 'j', ')', '▁', '\n\t\t\t\t\t', '&', '&', '▁(', 'l', '_', 'st', '[', 'i', '].', 'equ', 'als', '(', 'l', '_', 'st', '[', 'j', ']', '))', '▁)', '\n\t\t\t\t\t', 'return', '▁j', ';', '\n\t\t', 'return', '▁-', '1', ';', '\t\t\t', '▁', '\n\t', '}', '\n\n\t', 'date', '[]', '▁torn', 'ad', 'ate', 'fin', 'em', 'agg', '(', 'string', '▁el', 'en', 'co', '[', '])', '\n\t', '{', '\n\t\t', 'date', '▁data', '_', 'f', 'ine', '_', 'stan', 'za', '▁=', '▁null', ';', '\n\t\t', 'date', '▁fine', '_', 'so', 'gg', '▁=', '▁null', ';', '\n\t\t', 'date', '▁date', '_', 'f', 'ine', '_', 'loc', '[]', '▁=', '▁new', '▁date', '[', 'el', 'en', 'co', '.', 'length', ']', ';', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁<', '▁el', 'en', 'co', '.', 'length', ';', '▁i', '++', ')', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'el', 'en', 'co', '[', 'i', '],', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'data', '_', 'f', 'ine', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', '0,', '▁', '0,', '▁1', ');', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1', ';', '▁j', '▁<', '=', '▁l', '_', 'so', 'gg', '.', 'length', '();', '▁j', '++', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'f', 'ine', '_', 'so', 'gg', '▁=', '▁l', '_', 'so', 'gg', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'j', ').', 'get', 'f', 'ines', 'ogg', '();', '\n\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'mag', 'g', 'ior', 'ed', 'ata', '2', '(', '▁fine', '_', 'so', 'gg', ',', '▁data', '_', 'f', 'ine', '_', 'stan', 'za', '▁)', '▁)', '\n\t\t\t\t\t\t', 'data', '_', 'f', 'ine', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', 'f', 'ine', '_', 'so', 'gg', '.', 'get', 'year', '(', '),', '▁fine', '_', 'so', 'gg', '.', 'get', 'month', '(', '),', '▁fine', '_', 'so', 'gg', '.', 'get', 'date', '());', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'date', '_', 'f', 'ine', '_', 'loc', '[', 'i', ']', '▁=', '▁data', '_', 'f', 'ine', '_', 'stan', 'za', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'return', '▁null', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁date', '_', 'f', 'ine', '_', 'loc', ';', '\n\t', '}', '\n\t\n\t', 'date', '[]', '▁torn', 'ad', 'ate', 'in', 'iz', 'i', 'omin', '(', 'string', '▁el', 'en', 'co', '[', '])', '\n\t', '{', '\n\t\t', 'date', '▁data', '_', 'in', 'izio', '_', 'stan', 'za', '▁=', '▁null', ';', '\n\t\t', 'date', '▁in', 'izio', '_', 'so', 'gg', '▁=', '▁null', ';', '\n\t\t', 'date', '▁date', '_', 'in', 'izio', '_', 'loc', '[]', '▁=', '▁new', '▁date', '[', 'el', 'en', 'co', '.', 'length', ']', ';', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁<', '▁el', 'en', 'co', '.', 'length', ';', '▁i', '++', ')', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'el', 'en', 'co', '[', 'i', '],', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'data', '_', 'in', 'izio', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', '3', '000,', '▁', '0,', '▁1', ');', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1', ';', '▁j', '▁<', '=', '▁l', '_', 'so', 'gg', '.', 'length', '();', '▁j', '++', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'izio', '_', 'so', 'gg', '▁=', '▁l', '_', 'so', 'gg', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'j', ').', 'get', 'in', 'iz', 'ios', 'ogg', '();', '\n\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2', '(', '▁in', 'izio', '_', 'so', 'gg', ',', '▁data', '_', 'in', 'izio', '_', 'stan', 'za', '▁)', '▁)', '\n\t\t\t\t\t\t', 'data', '_', 'in', 'izio', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', 'in', 'izio', '_', 'so', 'gg', '.', 'get', 'year', '(', '),', '▁in', 'izio', '_', 'so', 'gg', '.', 'get', 'month', '(', '),', '▁in', 'izio', '_', 'so', 'gg', '.', 'get', 'date', '());', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'date', '_', 'in', 'izio', '_', 'loc', '[', 'i', ']', '▁=', '▁data', '_', 'in', 'izio', '_', 'stan', 'za', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'return', '▁null', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁date', '_', 'in', 'izio', '_', 'loc', ';', '\n\t', '}', '\n\t\n\t', 'bo', 'olean', '▁ag', 'gi', 'orn', 'amento', 'flag', 'se', 'ff', 'ett', 'u', 'ato', '(', 'string', '▁el', 'en', 'co', '[', '])', '\n\t', '{', '\n\t\t', 'qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', '▁=', '▁false', ';', '\n\t\t', 'qual', 'c', 'uno', '_', 'sen', 'za', '_', 'agen', 'zia', '▁=', '▁false', ';', '\n\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', ';', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '<', 'el', 'en', 'co', '.', 'length', ';', '▁i', '++', ')', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'el', 'en', 'co', '[', 'i', '],', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1', ';', '▁j', '▁<', '=', '▁l', '_', 'so', 'gg', '.', 'length', '();', '▁j', '++', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', 'ren', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'p', 'ren', 'ot', 'azione', '(', '(', 'l', '_', 'so', 'gg', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'j', ')', ').', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t\t\t\t', 'if', '▁(', 'p', 'ren', '▁==', '▁null', ')', '\n\t\t\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'p', 'ren', '.', 'get', 'tr', 'am', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t\t\t\t\t', 'qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', '▁=', '▁qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', '▁||', '▁true', ';', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'qual', 'c', 'uno', '_', 'sen', 'za', '_', 'agen', 'zia', '▁=', '▁qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', '▁||', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\n\t', '}', '\n\t\n\t', 'bo', 'olean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁new', '▁s', 'og', 'gi', 'orn', 'ante', '();', '\n\n\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'pro', 'ble', 'm', 'istan', 'za', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '()', '))', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', 'l', '_', 'st', '▁=', '▁new', '▁string', '[', '1]', ';', '\n\t\t\t', 'l', '_', 'st', '[', '0', ']', '▁=', '▁new', '▁string', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '());', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'l', '_', 'st', '▁=', '▁new', '▁string', '[', '1]', ';', '\n\t\t\t\t', 'l', '_', 'st', '[', '0', ']', '▁=', '▁new', '▁string', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '());', '\n\t\t\t\t', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'ante', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '(', '),', 'test', 'o', '[', '2', '].', 'get', 'text', '(', '),', 'test', 'o', '[', '1', '].', 'get', 'text', '());', '\n\t\t\t\t', 'if', '▁(', 'so', 'gg', '▁==', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁ness', 'un', '▁s', 'og', 'gi', 'orn', 'ante', '▁present', 'e', '▁n', 'ella', '▁stan', 'za', '▁""', '+', 'test', 'o', '[', '3', '].', 'get', 'text', '()', '+', '▁""', '▁ris', 'p', 'onde', '▁al', '▁nomin', 'at', 'ivo', '▁ins', 'er', 'ito', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '(', '),', '▁false', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁==', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '▁', '\n\t\t\t\t', 'if', '▁(', 'so', 'gg', '.', 'get', 'p', 'ag', 'ato', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁s', 'og', 'gi', 'orn', 'ante', '▁se', 'lez', 'ion', 'ato', '▁o', '▁ha', '▁g', 'ia', ""'"", '▁pag', 'ato', '▁o', '▁se', '▁ne', '▁e', ""'"", '▁g', 'ia', ""'"", '▁and', 'ato', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', '//', '▁proced', 'o', '▁con', '▁il', '▁ver', 'ific', 'are', '▁se', '▁il', '▁client', 'e', '▁e', ""'"", '▁l', ""'"", 'ult', 'imo', '▁rim', 'ast', 'o', '\n\t\t\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁s', 'ogg', '_', 'no', '_', 'p', 'ag', 'ato', '▁=', '▁new', '▁list', 'as', 'og', 'gi', 'orn', 'anti', '();', '\n\t\t\t\t\t', 'for', '▁(', 'int', '▁i', '=1', ';', '▁i', '<', '=', 'l', '_', 'so', 'gg', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'i', ').', 'get', 'p', 'ag', 'ato', '()', '▁==', '▁const', '.', 'no', ')', '\n\t\t\t\t\t\t\t', 'so', 'gg', '_', 'no', '_', 'p', 'ag', 'ato', '.', 'add', 'so', 'g', 'gi', 'orn', 'ante', '(', 'l', '_', 'so', 'gg', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'i', ')', ');', '\n\t\t\t\t\t', 'if', '▁(', 'so', 'gg', '_', 'no', '_', 'p', 'ag', 'ato', '.', 'length', '()', '▁==', '▁1)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁s', 'og', 'gi', 'orn', 'ante', '▁e', ""'"", '▁l', ""'"", 'ult', 'imo', '▁rim', 'ast', 'o', '.', '▁s', 'ce', 'g', 'li', 'ere', ""▁'"", 'c', 'onto', '▁per', '▁stan', 'za', ""'"", '!', '▁""', ');', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '▁=', '▁s', 'ogg', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\t\t\n\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'l', '_', 'st', '▁=', '▁ut', 'ils', '.', 'p', 'ars', 'estan', 'ze', '(', 'test', 'o', '[', '4', '].', 'get', 'text', '());', '\n\t\t\t\t\t', 'if', '▁(', 'l', '_', 'st', '▁==', '▁null', ')', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁err', 'ore', '▁nell', ""'"", 'el', 'en', 'co', '▁delle', '▁stan', 'ze', '.', '▁ins', 'er', 'ire', '▁le', '▁stan', 'ze', '▁nell', ""'"", 'el', 'en', 'co', '▁nel', '▁mod', 'o', '▁se', 'gu', 'ente', ':', '▁10', '1,', '10', '2,', '10', '3,', '...""', ');', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\t\t\t\t\t\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'za', '▁room', ';', '\n\t\t\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0', ';', '▁i', '▁<', '▁l', '_', 'st', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t\t\t\t\t', 'if', '▁(', 'pro', 'ble', 'm', 'istan', 'za', '(', 'l', '_', 'st', '[', 'i', ']', '))', '\n\t\t\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t\t', 'int', '▁res', '▁=', '▁ch', 'k', 'double', '();', '\n\t\t\t\t\t\t', 'if', '▁(', '▁res', '▁!=', '▁-', '1)', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁err', 'ore', '▁nell', ""'"", 'el', 'en', 'co', '▁delle', '▁stan', 'ze', '.', '▁la', '▁stan', 'za', '▁""', '+', 'l', '_', 'st', '[', 'res', ']', '+', '""', '▁e', '▁present', 'e', '▁pi', 'u', ""'"", '▁vol', 'te', '▁nell', ""'"", 'el', 'en', 'co', '!', '▁""', ');', '\n\t\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t\t', '}', '\t\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '()', '▁||', '▁check', 'box', 'es', '[', '2', '].', 'get', 'state', '())', '\n\t\t', '{', '\n\t\t\t', 'date', '_', 'f', 'ine', '▁=', '▁torn', 'ad', 'ate', 'fin', 'em', 'agg', '(', 'l', '_', 'st', ');', '\n\t\t\t', 'date', '_', 'in', 'izio', '▁=', '▁torn', 'ad', 'ate', 'in', 'iz', 'i', 'omin', '(', 'l', '_', 'st', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'p', 'ren', 'ot', 'azione', '(', 'so', 'gg', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t\t', 'if', '▁(', 'p', 'ren', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t\n\t\t\t\t', 'date', '_', 'f', 'ine', '▁=', '▁new', '▁date', '[', '1]', ';', '\n\t\t\t\t', 'date', '_', 'in', 'izio', '▁=', '▁new', '▁date', '[', '1]', ';', '\n\t\t\t\t', 'date', '_', 'f', 'ine', '[', '0', ']', '▁=', '▁s', 'ogg', '.', 'get', 'f', 'ines', 'ogg', '();', '\n\t\t\t\t', 'date', '_', 'in', 'izio', '[', '0', ']', '▁=', '▁s', 'ogg', '.', 'get', 'in', 'iz', 'ios', 'ogg', '();', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'date', '_', 'f', 'ine', '▁=', '▁null', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'date', '_', 'f', 'ine', '▁==', '▁null', '▁||', '▁date', '_', 'in', 'izio', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', '//', '▁la', '▁vari', 'ab', 'ile', '▁data', '_', 'f', 'ine', '▁cont', 'i', 'ene', '▁le', '▁date', '▁di', '▁fine', '▁cor', 'ret', 'te', '\n\n\t\t', 'data', '_', 'f', 'ine', '_', 'mag', 'g', '▁=', '▁new', '▁date', '(', '0,', '▁', '0,', '▁1', ');', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'date', '_', 'f', 'ine', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'data', '1', 'mag', 'g', 'ior', 'ed', 'ata', '2', '(', 'date', '_', 'f', 'ine', '[', 'i', '],', '▁data', '_', 'f', 'ine', '_', 'mag', 'g', '))', '\n\t\t\t\t', 'data', '_', 'f', 'ine', '_', 'mag', 'g', '▁=', '▁date', '_', 'f', 'ine', '[', 'i', ']', ';', '\n\t\t', '//', '▁or', 'a', '▁la', '▁vari', 'ab', 'ile', '▁data', '_', 'f', 'ine', '_', 'mag', 'g', '▁cont', 'i', 'ene', '▁la', '▁data', '▁di', '▁fine', '▁mag', 'gi', 'ore', '\n\t\t\n\t\t', 'if', '▁(', '!', 'aggi', 'orn', 'amento', 'flag', 'se', 'ff', 'ett', 'u', 'ato', '(', 'l', '_', 'st', '))', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n', '▁', '\t\t', '//', '▁da', '▁or', 'a', '▁in', '▁po', 'i', '▁le', '▁flags', '▁per', '▁l', ""'"", 'agen', 'zia', '▁cont', 'eng', 'ono', '▁val', 'ori', '▁sign', 'ific', 'ativ', 'i', '\n\n\t\t', '//', '▁quest', 'o', '▁if', '▁de', 've', '▁ess', 'ere', '▁mes', 'so', '▁prima', '▁di', '▁qu', 'ello', '▁che', '▁seg', 'ue', '\n\t\t', 'if', '▁(', 'qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', '▁&', '&', '▁qual', 'c', 'uno', '_', 'sen', 'za', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'el', 'en', 'co', '▁delle', '▁stan', 'ze', '▁include', '▁stan', 'ze', '▁commission', 'ate', '▁e', '▁non', '!', '▁proced', 'ere', '▁al', '▁cal', 'colo', '▁separ', 'ato', '.', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', '//', '▁l', ""'"", 'if', '▁che', '▁seg', 'ue', '▁de', 've', '▁ess', 'ere', '▁post', 'o', '▁dop', 'o', '▁a', '▁qu', 'ello', '▁che', '▁preced', 'e', '\n\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '()', '▁&', '&', '▁qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cont', 'o', '▁com', 'it', 'iva', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁per', '▁le', '▁ag', 'enzie', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\n\t\t', '//', '▁se', '▁arr', 'ivo', '▁qui', '▁sign', 'ific', 'a', '▁che', '▁si', '▁pu', 'o', ""'"", '▁fare', '▁il', '▁cont', 'o', '▁norm', 'ale', ',', '\n\t\t', '//', '▁rim', 'ane', '▁da', '▁ver', 'ific', 'are', '▁se', '▁si', '▁des', 'ider', 'a', '▁fare', '▁una', '▁part', 'enza', '▁anticip', 'ata', '\n\t\t', '//', '▁e', '▁in', '▁tal', '▁cas', 'o', '▁ver', 'ific', 'are', '▁che', '▁la', '▁data', '▁ins', 'er', 'ita', '▁s', 'ia', '▁cor', 'ret', 'ta', '!', '\n\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '▁&', '&', '▁(', 'date', 'ut', 'ils', '.', 'dat', 'ac', 'or', 'ret', 'ta', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '()', '))', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'date', '▁data', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '());', '\n\t\t\t', 'date', '▁data', '_', 'og', 'gi', '▁=', '▁new', '▁date', '();', '\n\t\t\t', '//', '▁controll', 'o', '▁che', '▁la', '▁data', '▁di', '▁part', 'enza', '▁anticip', 'ata', '▁abb', 'ia', '▁sen', 'so', ':', '\n\t\t\t', '//', '▁1)', '▁controll', 'o', '▁che', '▁il', '▁client', 'e', '▁abb', 'ia', '▁s', 'og', 'gi', 'orn', 'ato', '▁al', 'ment', 'o', '▁un', '▁gi', 'orno', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'date', '_', 'in', 'izio', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'data', '1', 'mag', 'g', 'ior', 'ed', 'ata', '2', '(', 'date', '_', 'in', 'izio', '[', 'i', '],', '▁date', 'ut', 'ils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'data', '))', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁i', '▁client', 'i', '▁devon', 'o', '▁s', 'og', 'gi', 'orn', 'are', '▁al', 'men', 'o', '▁un', '▁gi', 'orno', '▁prima', '▁di', '▁part', 'ire', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '//', '▁2)', '▁controll', 'o', '▁che', '▁la', '▁part', 'enza', '▁anticip', 'ata', '▁non', '▁s', 'ia', '▁prima', '▁di', '▁og', 'gi', '\n\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2', '(', 'data', ',', '▁data', '_', 'og', 'gi', '))', '\n\t\t\t', '{', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁preced', 'ente', '▁a', '▁qu', 'ella', '▁od', 'ier', 'na', '!', '▁""', ');', '\n\t\t\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'data', '_', 'og', 'gi', '))', ');', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', '//', '▁3)', '▁controll', 'o', '▁che', '▁il', '▁fine', '▁s', 'og', 'gi', 'orno', '▁anticip', 'ato', '▁(', 'oss', 'ia', '▁il', '▁gi', 'orno', '▁prima', '▁della', '\n\t\t\t\t', '//', '▁part', 'enza', '▁anticip', 'ata', ')', '▁non', '▁s', 'ia', '▁dop', 'o', '▁il', '▁fine', '▁s', 'og', 'gi', 'orno', '▁eff', 'ett', 'ivo', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'date', '_', 'f', 'ine', '.', 'length', ';', '▁i', '++', ')', '\n\t\t\t\t\t', 'if', '▁(', 'ut', 'ils', '.', 'data', '1', 'mag', 'g', 'ior', 'ed', 'ata', '2', '(', 'data', ',', '▁date', '_', 'f', 'ine', '[', 'i', ']', '))', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁non', '▁si', '▁tr', 'atta', '▁di', '▁una', '▁part', 'enza', '▁anticip', 'ata', '▁per', '▁la', '▁stan', 'za', '▁""', '+', 'l', '_', 'st', '[', 'i', ']', '+', '""', '▁con', '▁tale', '▁data', '!', '▁""', ');', '\n\t\t\t\t\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'data', '_', 'og', 'gi', '))', ');', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t', 'f', 'ine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', '▁=', '▁date', 'ut', 'ils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'data', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '▁&', '&', '▁!', 'date', 'ut', 'ils', '.', 'dat', 'ac', 'or', 'ret', 'ta', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '()', '))', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁part', 'enza', '▁anticip', 'ata', '▁e', ""'"", '▁err', 'ata', '!', '▁""', ');', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', '//', '▁il', '▁check', 'box', 'es', '[', '3', ']', '▁non', '▁e', ""'"", '▁att', 'ivo', '\n\t\t\t\t', 'f', 'ine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', '▁=', '▁data', '_', 'f', 'ine', '_', 'mag', 'g', ';', '\n\t\t\t\t', 'if', '▁(', 'qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', '▁&', '&', '▁check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁client', 'e', '▁e', ""'"", '▁in', '▁una', '▁stan', 'za', '▁di', '▁ag', 'enz', 'ia', '!', '▁se', '▁de', 've', '▁and', 'ars', 'ene', '▁s', 'ce', 'g', 'li', 'ere', ""▁'"", 'part', 'enza', '▁anticip', 'ata', ""'."", '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '▁//', '▁error', 'i', '\n\t\n\t', 'v', 'oid', '▁start', 'cont', 'ostan', 'za', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '!', 'qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ostan', 'za', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '(', '),', '▁1,', '▁false', ',', '▁fine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ostan', 'za', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '(', '),', '▁1,', '▁false', ',', '▁null', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\t\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ostan', 'za', 'agen', 'zia', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '());', '\n\t\t', '}', '\t\t\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'cont', 'osing', 'olo', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'qual', 'c', 'uno', '_', 'tr', 'am', 'ite', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\t', 'date', '▁fine', '_', 'eff', 'ett', 'iva', ';', '\n\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t\t', 'f', 'ine', '_', 'eff', 'ett', 'iva', '▁=', '▁fine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', ';', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'f', 'ine', '_', 'eff', 'ett', 'iva', '▁=', '▁data', '_', 'f', 'ine', '_', 'mag', 'g', ';', '\n\t\t\t\n', '▁', '\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2', '(', 'f', 'ine', '_', 'eff', 'ett', 'iva', ',', '▁new', '▁date', '())', '▁)', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁ask', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'zia', '(', 'this', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁e', ""'"", '▁post', 'eri', 'ore', '▁ad', '▁og', 'gi', ':', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁chi', 'ud', 'ere', '!', '▁""', ');', '\n', '▁', '\t\t\t', 'return', ';', '\n', '▁', '\t\t', '}', '\n', '▁', '\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '▁)', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'osing', 'olo', '(', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', ',', '▁fine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'osing', 'olo', '(', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', ',', '▁null', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'cont', 'oc', 'om', 'it', 'iva', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '▁)', '\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'oc', 'om', 'it', 'iva', '(', 'l', '_', 'st', ',', '▁fine', '_', 'so', 'gg', '_', 'ant', 'icip', 'ato', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'oc', 'om', 'it', 'iva', '(', 'l', '_', 'st', ',', '▁null', ');', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'chi', 'ud', 'ising', 'ol', 'oc', 'on', 'agen', 'zia', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '())', '\n\t\t', '{', '\n\t\t\t', 'date', '▁new', '_', 'data', '▁=', '▁date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '());', '\n\t\t\t', 'new', '_', 'data', '▁=', '▁date', 'ut', 'ils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'new', '_', 'data', ');', '\n\t\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'ant', 'icip', 'af', 'ines', 'ogg', '(', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'num', 'stan', 'za', '(', '),', '\n\t\t\t\t\t\t\t\t\t', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', '),', '\n\t\t\t\t\t\t\t\t\t', 'new', '_', 'data', ');', '\n\t\t', '}', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 're', 'vers', 'ep', 'ag', 'ato', '(', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'num', 'stan', 'za', '(', '),', '\n\t\t\t\t\t\t\t\t\t', '▁s', 'ogg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'id', 'so', 'g', 'gi', 'orn', 'ante', '());', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0', ';', '▁i', '<', 'test', 'o', '.', 'length', '-1', ';', '▁i', '++', ')', '\n\t\t\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '(""', '"");', '\n\t', '}', '\n', '}']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'acal', 'col', 'oc', 'onto', '▁extends', '▁frame', '\n', '{', '\n', '▁', '\t', 'button', '▁ann', 'ulla', ',', '▁visual', 'izza', ';', '\n', '▁', '\t', 'text', 'field', '▁testo', '[]', ';', '\n', '▁', '\t', 'label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', '4,', '▁et', 'iche', 'tta', '5,', '▁stanza', ',', '\n', '▁stanza', '1,', '▁nome', ',', '▁cogn', 'ome', ',', '▁stanza', '2;', '\n', '▁', '\t', 'panel', '▁panel', '[]', ';', '\n', '▁', '\t', 'check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁', '\t', 'check', 'box', '[]', '▁check', 'boxes', ';', '\n', '▁', '\t', 'grid', 'bag', 'layout', '▁grid', 'bag', '▁=', 'new', '▁grid', 'bag', 'layout', '();', '\n\n', '▁', '\t', '//', '▁per', '▁la', '▁ger', 'arch', 'ia', '\n\t', 'frame', '▁padre', ';', '\n\t', 'masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '▁visual', ';', '\n\t\n\t', '//', '▁vari', 'ab', 'ili', '▁local', 'i', '\n\t', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', '_', 'x', '_', 'c', 'onto', '_', 'sing', ';', '\n\t', 'string', '▁l', '_', 'st', '[]', ';', '\n\t', 'date', '▁date', '_', 'fine', '[]', ';', '▁//', '▁quest', 'o', '▁array', '▁e', ""'"", '▁necess', 'ario', '▁per', '▁la', '▁ch', 'ius', 'ura', '▁della', '▁comit', 'iva', '\n\t\t\t\t\t\t', '//', '▁inf', 'atti', '▁per', '▁pot', 'er', '▁rip', 'rist', 'in', 'are', '▁le', '▁dis', 'pon', 'ibil', 'ita', '▁della', '\n\t\t\t\t\t\t', '//', '▁stanza', '▁cor', 'rett', 'amente', '▁ho', '▁bis', 'ogno', '▁delle', '▁date', '▁di', '▁fine', '▁cor', 'rette', '\n\t', 'date', '▁date', '_', 'in', 'izio', '[]', ';', '\n\t', 'date', '▁data', '_', 'fine', '_', 'mag', 'g', ';', '\n\t', 'date', '▁fine', '_', 'so', 'gg', '_', 'anticip', 'ato', ';', '\n', '▁', '\t', 'int', '▁tipo', '_', 'c', 'onto', ';', '\n', '▁', '\t', 'boolean', '▁qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', ';', '\n', '▁', '\t', 'boolean', '▁qual', 'c', 'uno', '_', 'sen', 'za', '_', 'agen', 'zia', ';', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁masc', 'her', 'acal', 'col', 'oc', 'onto', '(', 'frame', '▁parent', ')', '\n', '▁', '\t', '{', '\n', '▁super', '(""', 'cal', 'colo', '▁del', '▁cont', 'o', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁ann', 'ulla', '▁""', ');', '\n', '▁//', 'ann', 'ulla', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n', '▁visual', 'izza', '▁=', '▁new', '▁button', '(""', '▁cal', 'cola', '▁""', ');', '\n', '▁//', 'visual', 'izza', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n\t', '▁visual', 'izza', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'se', 'lez', 'ion', 'are', '▁il', '▁tipo', '▁di', '▁cont', 'o', '▁che', '▁si', '▁desider', 'a', '▁cal', 'col', 'are', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'c', 'onto', '▁su', '▁una', '▁stanza', ':', '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'c', 'onto', '▁su', '▁un', '▁client', 'e', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '4', '▁=', '▁new', '▁label', '(""', 'c', 'onto', '▁su', '▁pi', 'u', ""'"", '▁stan', 'ze', ':', '"");', '\n', '▁et', 'iche', 'tta', '4.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁stanza', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁numero', '"");', '\n', '▁cogn', 'ome', '▁=', '▁new', '▁label', '(""', 'cogn', 'ome', '"");', '\n', '▁nome', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁stanza', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '"");', '\n', '▁stanza', '2', '▁=', '▁new', '▁label', '(""', 'stan', 'ze', '▁numero', '"");', '\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁edit', 'ab', 'ili', '\n', '▁testo', '=', 'new', '▁text', 'field', '[', '6', '];', '\n', '▁testo', '[0]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁testo', '[1]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '[', '2]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '[', '3]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁testo', '[', '4]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '0);', '\n', '▁testo', '[', '5]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '10)', ';', '\n', '▁for', '(', 'int', '▁i', '=0;', 'i', '<', '6;', '++', 'i', ')', '\n', '▁', '\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'boxes', '▁=', '▁new', '▁check', 'box', '[', '4', '];', '\n', '▁check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁cont', 'o', '▁su', '▁una', '▁stanza', '"",', 'check', 'box', '_', 'group', ',', '▁false', ');', '\n', '▁check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁cont', 'o', '▁su', '▁un', '▁client', 'e', '"",', 'check', 'box', '_', 'group', ',', '▁false', ');', '\n', '▁check', 'boxes', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', '▁cont', 'o', '▁su', '▁pi', 'u', ""'"", 'stan', 'ze', '"",', 'check', 'box', '_', 'group', ',', '▁false', ');', '\n\t', '▁check', 'boxes', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', '▁part', 'enza', '▁anticip', 'ata', '"",', '▁false', ');', '\t\n', '▁panel', '=', 'new', '▁panel', '[', '5', '];', '\n', '▁for', '(', 'int', '▁i', '=0;', 'i', '<', '5;', '++', 'i', ')', '\n', '▁{', '\n', '▁panel', '[', 'i', ']', '=', 'new', '▁panel', '();', '\n', '▁panel', '[', 'i', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁}', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁sin', 'istra', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[0', '],', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[1', '],', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[', '2', '],', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[', '3', '],', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁testo', '[', '5', '],', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁dest', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[0', '],', '▁ann', 'ulla', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁20,', '▁0,', '▁5,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[0', '],', '▁visual', 'izza', ',', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '3,', '▁0.', '0,', '▁5,', '▁0,', '▁0,', '▁20', ');', '\n', '▁', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'o', '▁su', '▁una', '▁stanza', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁et', 'iche', 'tta', '2,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁stanza', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁testo', '[0', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'o', '▁su', '▁un', '▁client', 'e', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁et', 'iche', 'tta', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁cogn', 'ome', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁testo', '[1', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁nome', ',', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁testo', '[', '2', '],', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.0,', '▁0.', '0,', '▁20,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁stanza', '1,', '▁4,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁testo', '[', '3', '],', '▁5,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'o', '▁su', '▁pi', 'u', ""'"", '▁stan', 'ze', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁et', 'iche', 'tta', '4,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁stanza', '2,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁testo', '[', '4', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[1', '],', '▁0,', '▁0,', '▁6,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[0', '],', '▁6,', '▁0,', '▁1,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '2', '],', '▁0,', '▁4,', '▁7,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '3', '],', '▁0,', '▁6,', '▁7,', '▁3,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '[', '4', '],', '▁0,', '▁9,', '▁7,', '▁2,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'check', 'boxes', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', '▁', '\t', 'if', '(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'tip', 'o', '_', 'c', 'onto', '▁=', '▁1;', '\n', '▁', '\t\t', 'test', 'o', '[0', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t\t', 'visual', 'izza', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '5;', '++', 'i', ')', '\n', '▁', '\t\t', '{', '▁', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t\t\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '("""");', '\n', '▁', '\t\t\t', '}', '▁', '\t', '▁', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'check', 'boxes', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'tip', 'o', '_', 'c', 'onto', '▁=', '▁2;', '\n', '▁', '\t\t', 'visual', 'izza', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=1', ';', 'i', '<', '4;', '++', 'i', ')', '\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t\t', 'test', 'o', '[0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t', 'test', 'o', '[0', '].', 's', 'ette', 'xt', '("""");', '\n', '▁', '\t\t', 'test', 'o', '[', '4', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '4', '].', 's', 'ette', 'xt', '("""");', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n', '▁', '\t', 'check', 'boxes', '[', '2', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'tip', 'o', '_', 'c', 'onto', '▁=', '▁3;', '\n', '▁', '\t\t', 'visual', 'izza', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁', '\t\t', 'test', 'o', '[', '4', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t\t', 'for', '(', 'int', '▁i', '=0;', 'i', '<', '4;', '++', 'i', ')', '\n', '▁', '\t', '{', '\t\n', '▁', '\t\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '("""");', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\t\n', '▁', '\t', 'check', 'boxes', '[', '3', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'if', '▁(!', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'test', 'o', '[', '5', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '("""");', '\n', '▁', '\t\t', '}', '\n', '▁', '\t\t', 'else', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'test', 'o', '[', '5', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'new', '▁date', '()))', ');', '\n', '▁', '\t\t', '}', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\n\t\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'visual', 'izza', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'visual', 'izza', '();', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n\t', '}', '▁', '\n\n\t', 'void', '▁start', 'visual', 'izza', '()', '\n\t', '{', '\n', '▁', '\t\t', 'if', '▁(!', 'error', 'i', '())', '\n', '▁', '\t\t', '{', '\t\n\t', '▁', '\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t\t\t', 'if', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', 'start', 'cont', 'ostan', 'za', '();', '\n', '▁', '\t\t\t', 'else', '\n', '▁', '\t\t\t', '{', '\n', '▁', '\t\t\t\t', 'if', '▁(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n', '▁', '\t\t\t\t', '{', '\n', '▁', '\t\t\t\t\t', 'start', 'cont', 'osing', 'olo', '();', '\n', '▁', '\t\t\t\t', '}', '\n', '▁', '\t\t\t\t', 'else', '\t\n', '▁', '\t\t', '▁', '\t\t', 'start', 'cont', 'ocom', 'it', 'iva', '();', '\n', '▁', '\t\t', '▁}', '\n', '▁', '\t\t\t', 'display', 'c', 'onto', '();', '\n', '▁', '\t', '}', '\n\t', '}', '\n\t\n', '▁', '\t', 'void', '▁display', 'c', 'onto', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'visual', '▁=', '▁new', '▁masc', 'her', 'avis', 'ual', 'izz', 'az', 'ion', 'ec', 'onto', '(', 'test', 'o', '[0', '].', 'get', 'text', '(),', 'test', 'o', '[1', '].', 'get', 'text', '(),', '\n', '▁', '\t\t\t\t\t\t\t\t\t', 'test', 'o', '[', '2', '].', 'get', 'text', '(),', 'test', 'o', '[', '3', '].', 'get', 'text', '(),', 'test', 'o', '[', '4', '].', 'get', 'text', '(),', 'tip', 'o', '_', 'c', 'onto', ');', '\n', '▁', '\t\t', 'visual', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁', '\t\t', 'visual', '.', 'c', 'onto', '▁=', '▁this', ';', '\n', '▁', '\t', '}', '\n', '▁', '\t', '▁', '\n\t', 'boolean', '▁problem', 'istan', 'za', '(', 'string', '▁stanza', ')', '\n\t', '{', '\t\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', ';', '\n\t\t\n\t\t', 'if', '▁((', 'stan', 'za', ').', 'equals', '(""', '"")', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁ins', 'er', 'ire', '▁il', '▁numero', '▁di', '▁stanza', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'if', '▁((', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'stan', 'za', ')', '▁==', '▁null', '▁)', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stanza', '▁""+', 'stan', 'za', '+""', '▁e', ""'"", '▁ines', 'ist', 'ente', '!', '▁""', ');', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t', '{', '\n\t\t\t\t', 'l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'stan', 'za', ',', '▁false', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁==', '▁null', ')', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\t\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '.', 'length', '()', '▁==', '▁0)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁stanza', '▁""+', 'stan', 'za', '+""', '▁non', '▁e', ""'"", '▁att', 'ual', 'mente', '▁occup', 'ata', '▁""', ');', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\t\n\t\t\t\t\t', '}', '\t\n\t\t\t', '}', '\t\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n\t', '//', '\t', 'controll', 'a', '▁che', '▁nella', '▁list', 'a', '▁non', '▁vi', '▁s', 'iano', '▁stan', 'ze', '▁rip', 'et', 'ute', '▁pi', 'u', ""'"", '▁vol', 'te', '\n\t', 'int', '▁ch', 'k', 'double', '()', '\n\t', '{', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁0;', '▁i', '<', 'l', '_', 'st', '.', 'length', ';', '▁i', '++)', '\n\t\t\t', 'for', '(', 'int', '▁j', '▁=', '▁0;', '▁j', '<', 'l', '_', 'st', '.', 'length', ';', '▁j', '++)', '\n\t\t\t\t', 'if', '▁(', '▁(!', 'l', '_', 'st', '[', 'i', '].', 'equals', '(""', '""))', '▁&&', '▁(!', 'l', '_', 'st', '[', 'j', '].', 'equals', '(""', '""))', '▁&&', '▁(', 'i', '!', '=', 'j', ')', '▁', '\n\t\t\t\t\t', '&', '&', '▁(', 'l', '_', 'st', '[', 'i', '].', 'equals', '(', 'l', '_', 'st', '[', 'j', ']', '))', '▁)', '\n\t\t\t\t\t', 'return', '▁j', ';', '\n\t\t', 'return', '▁-', '1;', '\t\t\t', '▁', '\n\t', '}', '\n\n\t', 'date', '[]', '▁torn', 'ad', 'ate', 'fin', 'em', 'agg', '(', 'string', '▁elenco', '[', '])', '\n\t', '{', '\n\t\t', 'date', '▁data', '_', 'fine', '_', 'stan', 'za', '▁=', '▁null', ';', '\n\t\t', 'date', '▁fine', '_', 'so', 'gg', '▁=', '▁null', ';', '\n\t\t', 'date', '▁date', '_', 'fine', '_', 'loc', '[]', '▁=', '▁new', '▁date', '[', 'elen', 'co', '.', 'length', '];', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁elenco', '.', 'length', ';', '▁i', '++)', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'elen', 'co', '[', 'i', '],', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'data', '_', 'fine', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(0,', '▁0,', '▁1);', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1;', '▁j', '▁<', '=', '▁l', '_', 'so', 'gg', '.', 'length', '();', '▁j', '++)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'fine', '_', 'so', 'gg', '▁=', '▁l', '_', 'so', 'gg', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(', 'j', ').', 'get', 'f', 'ines', 'ogg', '();', '\n\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'mag', 'gior', 'ed', 'ata', '2(', '▁fine', '_', 'so', 'gg', ',', '▁data', '_', 'fine', '_', 'stan', 'za', '▁)', '▁)', '\n\t\t\t\t\t\t', 'data', '_', 'fine', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', 'fine', '_', 'so', 'gg', '.', 'get', 'year', '(),', '▁fine', '_', 'so', 'gg', '.', 'get', 'month', '(),', '▁fine', '_', 'so', 'gg', '.', 'get', 'date', '());', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'date', '_', 'fine', '_', 'loc', '[', 'i', ']', '▁=', '▁data', '_', 'fine', '_', 'stan', 'za', ';', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'return', '▁null', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁date', '_', 'fine', '_', 'loc', ';', '\n\t', '}', '\n\t\n\t', 'date', '[]', '▁torn', 'ad', 'ate', 'in', 'izi', 'omin', '(', 'string', '▁elenco', '[', '])', '\n\t', '{', '\n\t\t', 'date', '▁data', '_', 'in', 'izio', '_', 'stan', 'za', '▁=', '▁null', ';', '\n\t\t', 'date', '▁in', 'izio', '_', 'so', 'gg', '▁=', '▁null', ';', '\n\t\t', 'date', '▁date', '_', 'in', 'izio', '_', 'loc', '[]', '▁=', '▁new', '▁date', '[', 'elen', 'co', '.', 'length', '];', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁elenco', '.', 'length', ';', '▁i', '++)', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'elen', 'co', '[', 'i', '],', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'data', '_', 'in', 'izio', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(3', '000,', '▁0,', '▁1);', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1;', '▁j', '▁<', '=', '▁l', '_', 'so', 'gg', '.', 'length', '();', '▁j', '++)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'in', 'izio', '_', 'so', 'gg', '▁=', '▁l', '_', 'so', 'gg', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(', 'j', ').', 'get', 'in', 'iz', 'ios', 'ogg', '();', '\n\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2(', '▁in', 'izio', '_', 'so', 'gg', ',', '▁data', '_', 'in', 'izio', '_', 'stan', 'za', '▁)', '▁)', '\n\t\t\t\t\t\t', 'data', '_', 'in', 'izio', '_', 'stan', 'za', '▁=', '▁new', '▁date', '(', 'in', 'izio', '_', 'so', 'gg', '.', 'get', 'year', '(),', '▁in', 'izio', '_', 'so', 'gg', '.', 'get', 'month', '(),', '▁in', 'izio', '_', 'so', 'gg', '.', 'get', 'date', '());', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'date', '_', 'in', 'izio', '_', 'loc', '[', 'i', ']', '▁=', '▁data', '_', 'in', 'izio', '_', 'stan', 'za', ';', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'return', '▁null', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁date', '_', 'in', 'izio', '_', 'loc', ';', '\n\t', '}', '\n\t\n\t', 'boolean', '▁ag', 'gi', 'orn', 'amento', 'flag', 'se', 'ff', 'ettu', 'ato', '(', 'string', '▁elenco', '[', '])', '\n\t', '{', '\n\t\t', 'qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', '▁=', '▁false', ';', '\n\t\t', 'qual', 'c', 'uno', '_', 'sen', 'za', '_', 'agen', 'zia', '▁=', '▁false', ';', '\n\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', ';', '\n\t\t\n\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '<', 'elen', 'co', '.', 'length', ';', '▁i', '++)', '\n\t\t', '{', '\n\t\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'elen', 'co', '[', 'i', '],', '▁false', ');', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'for', '▁(', 'int', '▁j', '▁=', '▁1;', '▁j', '▁<', '=', '▁l', '_', 'so', 'gg', '.', 'length', '();', '▁j', '++)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', 'ren', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'p', 'ren', 'ot', 'azione', '((', 'l', '_', 'so', 'gg', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(', 'j', ')).', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t\t\t\t', 'if', '▁(', 'p', 'ren', '▁==', '▁null', ')', '\n\t\t\t\t\t\t', 'return', '▁false', ';', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'p', 'ren', '.', 'get', 'tram', 'ite', 'agen', 'zia', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t\t\t\t\t', 'qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', '▁=', '▁qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', '▁||', '▁true', ';', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t\t', 'qual', 'c', 'uno', '_', 'sen', 'za', '_', 'agen', 'zia', '▁=', '▁qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', '▁||', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'return', '▁false', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁true', ';', '\n\t', '}', '\n\t\n\t', 'boolean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁new', '▁sog', 'gi', 'orn', 'ante', '();', '\n\n\t\t', 'if', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'problem', 'istan', 'za', '(', 'test', 'o', '[0', '].', 'get', 'text', '()))', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', 'l', '_', 'st', '▁=', '▁new', '▁string', '[1]', ';', '\n\t\t\t', 'l', '_', 'st', '[0]', '▁=', '▁new', '▁string', '(', 'test', 'o', '[0', '].', 'get', 'text', '());', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'if', '▁(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'l', '_', 'st', '▁=', '▁new', '▁string', '[1]', ';', '\n\t\t\t\t', 'l', '_', 'st', '[0]', '▁=', '▁new', '▁string', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '());', '\n\t\t\t\t', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'ante', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '(),', 'test', 'o', '[', '2', '].', 'get', 'text', '(),', 'test', 'o', '[1', '].', 'get', 'text', '());', '\n\t\t\t\t', 'if', '▁(', 'so', 'gg', '▁==', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁ness', 'un', '▁sog', 'gi', 'orn', 'ante', '▁present', 'e', '▁nella', '▁stanza', '▁""+', 'test', 'o', '[', '3', '].', 'get', 'text', '()', '+', '▁""', '▁ris', 'p', 'onde', '▁al', '▁nomin', 'ativo', '▁ins', 'er', 'ito', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'test', 'o', '[', '3', '].', 'get', 'text', '(),', '▁false', ');', '\n\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁==', '▁null', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '▁', '\n\t\t\t\t', 'if', '▁(', 'so', 'gg', '.', 'get', 'pag', 'ato', '()', '▁==', '▁const', '.', 'si', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁il', '▁sog', 'gi', 'orn', 'ante', '▁se', 'lez', 'ion', 'ato', '▁o', '▁ha', '▁gia', ""'"", '▁pag', 'ato', '▁o', '▁se', '▁ne', '▁e', ""'"", '▁gia', ""'"", '▁and', 'ato', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', '//', '▁proced', 'o', '▁con', '▁il', '▁ver', 'ific', 'are', '▁se', '▁il', '▁client', 'e', '▁e', ""'"", '▁l', ""'"", 'ult', 'imo', '▁rim', 'asto', '\n\t\t\t\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁s', 'ogg', '_', 'no', '_', 'pag', 'ato', '▁=', '▁new', '▁list', 'as', 'oggi', 'orn', 'anti', '();', '\n\t\t\t\t\t', 'for', '▁(', 'int', '▁i', '=1', ';', '▁i', '<', '=', 'l', '_', 'so', 'gg', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(', 'i', ').', 'get', 'pag', 'ato', '()', '▁==', '▁const', '.', 'no', ')', '\n\t\t\t\t\t\t\t', 'so', 'gg', '_', 'no', '_', 'pag', 'ato', '.', 'add', 'so', 'ggi', 'orn', 'ante', '(', 'l', '_', 'so', 'gg', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(', 'i', '));', '\n\t\t\t\t\t', 'if', '▁(', 'so', 'gg', '_', 'no', '_', 'pag', 'ato', '.', 'length', '()', '▁==', '▁1)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁il', '▁sog', 'gi', 'orn', 'ante', '▁e', ""'"", '▁l', ""'"", 'ult', 'imo', '▁rim', 'asto', '.', '▁sce', 'gli', 'ere', ""▁'"", 'c', 'onto', '▁per', '▁stanza', ""'"", '!', '▁""', ');', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '▁=', '▁s', 'ogg', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\t\t\n\t\t\t\t', 'if', '▁(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'l', '_', 'st', '▁=', '▁ut', 'ils', '.', 'pars', 'estan', 'ze', '(', 'test', 'o', '[', '4', '].', 'get', 'text', '());', '\n\t\t\t\t\t', 'if', '▁(', 'l', '_', 'st', '▁==', '▁null', ')', '\n\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁err', 'ore', '▁nell', ""'"", 'elen', 'co', '▁delle', '▁stan', 'ze', '.', '▁ins', 'er', 'ire', '▁le', '▁stan', 'ze', '▁nell', ""'"", 'elen', 'co', '▁nel', '▁modo', '▁segu', 'ente', ':', '▁101,', '10', '2,', '10', '3,', '...""', ');', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\t\t\t\t\t\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'stan', 'za', '▁room', ';', '\n\t\t\t\t\t\t', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁l', '_', 'st', '.', 'length', ';', '▁i', '++)', '\n\t\t\t\t\t\t\t', 'if', '▁(', 'problem', 'istan', 'za', '(', 'l', '_', 'st', '[', 'i', ']', '))', '\n\t\t\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t\t', 'int', '▁res', '▁=', '▁ch', 'k', 'double', '();', '\n\t\t\t\t\t\t', 'if', '▁(', '▁res', '▁!=', '▁-', '1)', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁err', 'ore', '▁nell', ""'"", 'elen', 'co', '▁delle', '▁stan', 'ze', '.', '▁la', '▁stanza', '▁""+', 'l', '_', 'st', '[', 'res', ']', '+""', '▁e', '▁present', 'e', '▁pi', 'u', ""'"", '▁vol', 'te', '▁nell', ""'"", 'elen', 'co', '!', '▁""', ');', '\n\t\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t\t', '}', '\t\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t', 'if', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '()', '▁||', '▁check', 'boxes', '[', '2', '].', 'get', 'state', '())', '\n\t\t', '{', '\n\t\t\t', 'date', '_', 'fine', '▁=', '▁torn', 'ad', 'ate', 'fin', 'em', 'agg', '(', 'l', '_', 'st', ');', '\n\t\t\t', 'date', '_', 'in', 'izio', '▁=', '▁torn', 'ad', 'ate', 'in', 'izi', 'omin', '(', 'l', '_', 'st', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'p', 'ren', 'ot', 'azione', '▁pren', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'p', 'ren', 'ot', 'azione', '(', 'so', 'gg', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t\t', 'if', '▁(', 'p', 'ren', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t\n\t\t\t\t', 'date', '_', 'fine', '▁=', '▁new', '▁date', '[1]', ';', '\n\t\t\t\t', 'date', '_', 'in', 'izio', '▁=', '▁new', '▁date', '[1]', ';', '\n\t\t\t\t', 'date', '_', 'fine', '[0]', '▁=', '▁s', 'ogg', '.', 'get', 'f', 'ines', 'ogg', '();', '\n\t\t\t\t', 'date', '_', 'in', 'izio', '[0]', '▁=', '▁s', 'ogg', '.', 'get', 'in', 'iz', 'ios', 'ogg', '();', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'date', '_', 'fine', '▁=', '▁null', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', 'date', '_', 'fine', '▁==', '▁null', '▁||', '▁date', '_', 'in', 'izio', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', '//', '▁la', '▁vari', 'abile', '▁data', '_', 'fine', '▁conti', 'ene', '▁le', '▁date', '▁di', '▁fine', '▁cor', 'rette', '\n\n\t\t', 'data', '_', 'fine', '_', 'mag', 'g', '▁=', '▁new', '▁date', '(0,', '▁0,', '▁1);', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'date', '_', 'fine', '.', 'length', ';', '▁i', '++)', '\n\t\t\t', 'if', '▁(', 'utils', '.', 'data', '1', 'mag', 'gior', 'ed', 'ata', '2(', 'date', '_', 'fine', '[', 'i', '],', '▁data', '_', 'fine', '_', 'mag', 'g', '))', '\n\t\t\t\t', 'data', '_', 'fine', '_', 'mag', 'g', '▁=', '▁date', '_', 'fine', '[', 'i', '];', '\n\t\t', '//', '▁ora', '▁la', '▁vari', 'abile', '▁data', '_', 'fine', '_', 'mag', 'g', '▁conti', 'ene', '▁la', '▁data', '▁di', '▁fine', '▁maggiore', '\n\t\t\n\t\t', 'if', '▁(!', 'aggi', 'orn', 'amento', 'flag', 'se', 'ff', 'ettu', 'ato', '(', 'l', '_', 'st', '))', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n', '▁', '\t\t', '//', '▁da', '▁ora', '▁in', '▁po', 'i', '▁le', '▁flags', '▁per', '▁l', ""'"", 'agen', 'zia', '▁cont', 'eng', 'ono', '▁val', 'ori', '▁sign', 'ific', 'ativ', 'i', '\n\n\t\t', '//', '▁quest', 'o', '▁if', '▁de', 've', '▁ess', 'ere', '▁mes', 'so', '▁prima', '▁di', '▁qu', 'ello', '▁che', '▁segue', '\n\t\t', 'if', '▁(', 'qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', '▁&&', '▁qual', 'c', 'uno', '_', 'sen', 'za', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'elen', 'co', '▁delle', '▁stan', 'ze', '▁include', '▁stan', 'ze', '▁commission', 'ate', '▁e', '▁non', '!', '▁proced', 'ere', '▁al', '▁cal', 'colo', '▁separ', 'ato', '.', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', '//', '▁l', ""'"", 'if', '▁che', '▁segue', '▁de', 've', '▁ess', 'ere', '▁post', 'o', '▁dop', 'o', '▁a', '▁qu', 'ello', '▁che', '▁precede', '\n\t\t', 'if', '▁(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '()', '▁&&', '▁qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cont', 'o', '▁comit', 'iva', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁per', '▁le', '▁ag', 'enzie', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\n\t\t', '//', '▁se', '▁arr', 'ivo', '▁qui', '▁sign', 'ific', 'a', '▁che', '▁si', '▁pu', 'o', ""'"", '▁fare', '▁il', '▁cont', 'o', '▁normale', ',', '\n\t\t', '//', '▁rim', 'ane', '▁da', '▁ver', 'ific', 'are', '▁se', '▁si', '▁desider', 'a', '▁fare', '▁una', '▁part', 'enza', '▁anticip', 'ata', '\n\t\t', '//', '▁e', '▁in', '▁tal', '▁cas', 'o', '▁ver', 'ific', 'are', '▁che', '▁la', '▁data', '▁ins', 'er', 'ita', '▁sia', '▁cor', 'retta', '!', '\n\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '▁&&', '▁(', 'date', 'utils', '.', 'dat', 'acor', 'retta', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '()))', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'date', '▁data', '▁=', '▁date', 'utils', '.', 'convert', 'date', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '());', '\n\t\t\t', 'date', '▁data', '_', 'oggi', '▁=', '▁new', '▁date', '();', '\n\t\t\t', '//', '▁controll', 'o', '▁che', '▁la', '▁data', '▁di', '▁part', 'enza', '▁anticip', 'ata', '▁abb', 'ia', '▁sen', 'so', ':', '\n\t\t\t', '//', '▁1)', '▁controll', 'o', '▁che', '▁il', '▁client', 'e', '▁abb', 'ia', '▁sog', 'gi', 'orn', 'ato', '▁al', 'mento', '▁un', '▁giorno', '\n\t\t\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'date', '_', 'in', 'izio', '.', 'length', ';', '▁i', '++)', '\n\t\t\t\t', 'if', '▁(', 'utils', '.', 'data', '1', 'mag', 'gior', 'ed', 'ata', '2(', 'date', '_', 'in', 'izio', '[', 'i', '],', '▁date', 'utils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'data', ')))', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁i', '▁client', 'i', '▁devon', 'o', '▁sog', 'gi', 'orn', 'are', '▁al', 'men', 'o', '▁un', '▁giorno', '▁prima', '▁di', '▁part', 'ire', '!', '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '//', '▁2)', '▁controll', 'o', '▁che', '▁la', '▁part', 'enza', '▁anticip', 'ata', '▁non', '▁sia', '▁prima', '▁di', '▁oggi', '\n\t\t\t', 'if', '▁(', 'utils', '.', 'data', '1', 'min', 'ored', 'ata', '2(', 'data', ',', '▁data', '_', 'oggi', '))', '\n\t\t\t', '{', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁non', '▁pu', 'o', ""'"", '▁ess', 'ere', '▁preced', 'ente', '▁a', '▁qu', 'ella', '▁od', 'ierna', '!', '▁""', ');', '\n\t\t\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'data', '_', 'oggi', '))', ');', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', '//', '▁3)', '▁controll', 'o', '▁che', '▁il', '▁fine', '▁sog', 'gi', 'orno', '▁anticip', 'ato', '▁(', 'oss', 'ia', '▁il', '▁giorno', '▁prima', '▁della', '\n\t\t\t\t', '//', '▁part', 'enza', '▁anticip', 'ata', ')', '▁non', '▁sia', '▁dop', 'o', '▁il', '▁fine', '▁sog', 'gi', 'orno', '▁eff', 'ett', 'ivo', '\n\t\t\t\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'date', '_', 'fine', '.', 'length', ';', '▁i', '++)', '\n\t\t\t\t\t', 'if', '▁(', 'utils', '.', 'data', '1', 'mag', 'gior', 'ed', 'ata', '2(', 'data', ',', '▁date', '_', 'fine', '[', 'i', ']', '))', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁non', '▁si', '▁tr', 'atta', '▁di', '▁una', '▁part', 'enza', '▁anticip', 'ata', '▁per', '▁la', '▁stanza', '▁""+', 'l', '_', 'st', '[', 'i', ']', '+""', '▁con', '▁tale', '▁data', '!', '▁""', ');', '\n\t\t\t\t\t\t', 'test', 'o', '[', '5', '].', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'data', '_', 'oggi', '))', ');', '\n\t\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t', 'fine', '_', 'so', 'gg', '_', 'anticip', 'ato', '▁=', '▁date', 'utils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'data', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '▁&&', '▁!', 'date', 'utils', '.', 'dat', 'acor', 'retta', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '()))', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁di', '▁part', 'enza', '▁anticip', 'ata', '▁e', ""'"", '▁errata', '!', '▁""', ');', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t', '{', '\n\t\t\t\t', '//', '▁il', '▁check', 'boxes', '[', '3]', '▁non', '▁e', ""'"", '▁att', 'ivo', '\n\t\t\t\t', 'fine', '_', 'so', 'gg', '_', 'anticip', 'ato', '▁=', '▁data', '_', 'fine', '_', 'mag', 'g', ';', '\n\t\t\t\t', 'if', '▁(', 'qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', '▁&&', '▁check', 'boxes', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', '{', '\t\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁client', 'e', '▁e', ""'"", '▁in', '▁una', '▁stanza', '▁di', '▁ag', 'enzia', '!', '▁se', '▁de', 've', '▁and', 'ars', 'ene', '▁sce', 'gli', 'ere', ""▁'"", 'part', 'enza', '▁anticip', 'ata', ""'."", '▁""', ');', '\n\t\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '▁//', '▁error', 'i', '\n\t\n\t', 'void', '▁start', 'cont', 'ostan', 'za', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(!', 'qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ostan', 'za', '(', 'test', 'o', '[0', '].', 'get', 'text', '(),', '▁1,', '▁false', ',', '▁fine', '_', 'so', 'gg', '_', 'anticip', 'ato', ');', '\n\t\t\t', 'else', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ostan', 'za', '(', 'test', 'o', '[0', '].', 'get', 'text', '(),', '▁1,', '▁false', ',', '▁null', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '\t\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ostan', 'za', 'agen', 'zia', '(', 'test', 'o', '[0', '].', 'get', 'text', '());', '\n\t\t', '}', '\t\t\n\t', '}', '\n\n\t', 'void', '▁start', 'cont', 'osing', 'olo', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'qual', 'c', 'uno', '_', 'tram', 'ite', '_', 'agen', 'zia', ')', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁msg', ';', '\n\t\t\t', 'date', '▁fine', '_', 'eff', 'ett', 'iva', ';', '\n\t\t\t', 'if', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '\n\t\t\t\t', 'fine', '_', 'eff', 'ett', 'iva', '▁=', '▁fine', '_', 'so', 'gg', '_', 'anticip', 'ato', ';', '\n\t\t\t', 'else', '\n\t\t\t\t', 'fine', '_', 'eff', 'ett', 'iva', '▁=', '▁data', '_', 'fine', '_', 'mag', 'g', ';', '\n\t\t\t\n', '▁', '\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2(', 'fine', '_', 'eff', 'ett', 'iva', ',', '▁new', '▁date', '())', '▁)', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁ask', 'chi', 'ud', 'ising', 'ol', 'ocon', 'agen', 'zia', '(', 'this', ');', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁data', '▁e', ""'"", '▁post', 'eri', 'ore', '▁ad', '▁oggi', ':', '▁non', '▁e', ""'"", '▁poss', 'ib', 'ile', '▁chi', 'ud', 'ere', '!', '▁""', ');', '\n', '▁', '\t\t\t', 'return', ';', '\n', '▁', '\t\t', '}', '\n', '▁', '\t\t', 'else', '\n\t\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '▁)', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'osing', 'olo', '(', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', ',', '▁fine', '_', 'so', 'gg', '_', 'anticip', 'ato', ');', '\n\t\t\t', 'else', '\n\t\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'osing', 'olo', '(', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', ',', '▁null', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'cont', 'ocom', 'it', 'iva', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '▁)', '\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ocom', 'it', 'iva', '(', 'l', '_', 'st', ',', '▁fine', '_', 'so', 'gg', '_', 'anticip', 'ato', ');', '\n\t\t', 'else', '\n\t\t\t', 'cal', 'col', 'oc', 'onto', '.', 'cal', 'col', 'ac', 'ont', 'ocom', 'it', 'iva', '(', 'l', '_', 'st', ',', '▁null', ');', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'chi', 'ud', 'ising', 'ol', 'ocon', 'agen', 'zia', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '())', '\n\t\t', '{', '\n\t\t\t', 'date', '▁new', '_', 'data', '▁=', '▁date', 'utils', '.', 'convert', 'date', '(', 'test', 'o', '[', '5', '].', 'get', 'text', '());', '\n\t\t\t', 'new', '_', 'data', '▁=', '▁date', 'utils', '.', 'gi', 'orn', 'op', 'rim', 'adi', '(', 'new', '_', 'data', ');', '\n\t\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'anticip', 'af', 'ines', 'ogg', '(', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'num', 'stan', 'za', '(),', '\n\t\t\t\t\t\t\t\t\t', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'getid', 'so', 'ggi', 'orn', 'ante', '(),', '\n\t\t\t\t\t\t\t\t\t', 'new', '_', 'data', ');', '\n\t\t', '}', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'revers', 'ep', 'ag', 'ato', '(', 'so', 'gg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'get', 'num', 'stan', 'za', '(),', '\n\t\t\t\t\t\t\t\t\t', '▁s', 'ogg', '_', 'x', '_', 'c', 'onto', '_', 'sing', '.', 'getid', 'so', 'ggi', 'orn', 'ante', '());', '\n\t\t', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'test', 'o', '.', 'length', '-1;', '▁i', '++)', '\n\t\t\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '("""");', '\n\t', '}', '\n', '}']"~"packag interfacc import java awt import java awt event import java util date import common util import common def import moduli public class maschera calcolo conto extend frame button annulla visualizza text field testo label etichetta etichetta etichetta etichetta etichetta stanza stanza nome cognom stanza panel panel checkbox group checkbox group checkbox checkbox grid bag layout gridbag new grid bag layout per gerarchia frame padr maschera visualizzazion conto visual variabili locali soggiornant sogg conto sing string date date fine questo array necessario per chiusura della comitiva infatti per poter ripristinar disponibilita della stanza correttament bisogno dell date fine corrett date date inizio date data fine magg date fine sogg anticipato int tipo conto boolean qualcuno tramit agenzia boolean qualcuno senza agenzia public maschera calcolo conto frame parent super calcolo del conto padr parent padr set enabl fals setup panel init pack void setup panel set font configurazion sistema font base creo pulsanti annulla new button annulla annulla set font new font courier font plain visualizza new button calcola visualizza set font new font courier font plain visualizza set enabl fals creo etichett etichetta new label selezionar tipo conto che desidera calcolar etichetta set font configurazion sistema font titolo etichetta new label conto una stanza etichetta set font configurazion sistema font titolo etichetta new label conto client etichetta set font configurazion sistema font titolo etichetta new label conto piu stanz etichetta set font configurazion sistema font titolo stanza new label stanza numero cognom new label cognom nome new label nome ""); stanza1 new label stanza ""); stanza2 new label stanz numero ""); creo text field rendo non editabili testo new text field testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", testo new text field ("""", int ;++ testo set edit fals creo checkbox esclusion checkbox_group new checkbox group (); checkbox new checkbox checkbox new checkbox conto una stanza checkbox_group fals checkbox new checkbox conto client checkbox_group fals checkbox new checkbox conto piu stanz checkbox_group fals checkbox new checkbox partenza anticipata fals panel new panel int ;++ panel new panel (); panel set layout gridbag creo pannello alto sinistra util constrain panel etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest creo pannello alto destra util constrain panel annulla grid bag constraint none grid bag constraint northwest util constrain panel visualizza grid bag constraint none grid bag constraint northwest creo pannello conto una stanza util constrain panel etichetta2 grid bag constraint none grid bag constraint northwest util constrain panel stanza grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest creo pannello conto client util constrain panel etichetta3 grid bag constraint none grid bag constraint northwest util constrain panel cognom grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest util constrain panel nome grid bag constraint none grid bag constraint southwest util constrain panel testo grid bag constraint none grid bag constraint southwest util constrain panel stanza1 grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest creo pannello conto piu stanz util constrain panel etichetta4 grid bag constraint none grid bag constraint northwest util constrain panel stanza2 grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint horizont grid bag constraint northwest attacco pannelli frame set layout gridbag util constrain panel grid bag constraint horizont grid bag constraint northwest util constrain panel grid bag constraint grid bag constraint southeast util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel grid bag constraint horizont grid bag constraint west public void init checkbox add item listen new item listen public void item state chang item event checkbox get state ()) tipo_conto testo set edit true visualizza set enabl true int ;++ testo set edit fals testo set text (""""); }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) tipo_conto visualizza set enabl true int ;++ testo set edit true testo set edit fals testo set text (""""); testo set edit fals testo set text (""""); }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) tipo_conto visualizza set enabl true testo set edit true int ;++ testo set edit fals testo set text (""""); }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) testo set edit fals testo set text (""""); els testo set edit true testo set text date util pars date date util give string date new date ()))); }); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); visualizza add action listen new action listen public void action perform action event start visualizza (); }); void start visualizza errori ()) set enabl fals checkbox get state ()) start conto stanza (); els checkbox get state ()) start conto singolo (); els start conto comitiva (); display conto (); void display conto visual new maschera visualizzazion conto testo get text (), testo get text (), testo get text (), testo get text (), testo get text (), tipo_conto visual set visibl true visual conto boolean problemi stanza string stanza frame msg lista soggiornanti l_sogg stanza equal ("""") msg new avviso dialog inserir numero stanza ""); return true els principal read stanza stanza null msg new messag dialog stanza stanza inesistent ""); return true els l_sogg principal found soggiornanti stanza fals l_sogg null msg new messag dialog problemi con databas ""); return true els l_sogg length msg new messag dialog stanza stanza non attualment occupata ""); return true return fals controlla che nella lista non siano stanz ripetut piu volt int chk doubl int l_st length ++) int l_st length ++) l_st equal ("""")) l_st equal ("""")) l_st equal l_st ])) return return date torna date fine magg string elenco []) date data_fine_stanza null date fine_sogg null date date_fine_loc new date elenco length int elenco length ++) lista soggiornanti l_sogg principal found soggiornanti elenco fals l_sogg null data_fine_stanza new date int l_sogg length (); ++) fine_sogg l_sogg get soggiornant get fine sogg (); util data1maggior data2 fine_sogg data_fine_stanza data_fine_stanza new date fine_sogg get year (), fine_sogg get month (), fine_sogg get date ()); date_fine_loc data_fine_stanza els return null return date_fine_loc date torna date inizio min string elenco []) date data_inizio_stanza null date inizio_sogg null date date_inizio_loc new date elenco length int elenco length ++) lista soggiornanti l_sogg principal found soggiornanti elenco fals l_sogg null data_inizio_stanza new date 3000 int l_sogg length (); ++) inizio_sogg l_sogg get soggiornant get inizio sogg (); util data1minor data2 inizio_sogg data_inizio_stanza data_inizio_stanza new date inizio_sogg get year (), inizio_sogg get month (), inizio_sogg get date ()); date_inizio_loc data_inizio_stanza els return null return date_inizio_loc boolean aggiornamento flag effettuato string elenco []) fals fals prenotazion pren int elenco length ++) lista soggiornanti l_sogg principal found soggiornanti elenco fals l_sogg null int l_sogg length (); ++) pren principal read prenotazion l_sogg get soggiornant )). get prenotazion ()); pren null return fals els pren get tramit agenzia const true els true els return fals return true boolean errori frame msg soggiornant sogg new soggiornant (); checkbox get state ()) problemi stanza testo get text ())) return true l_st new string l_st new string testo get text ()); els checkbox get state ()) l_st new string l_st new string testo get text ()); sogg principal found soggiornant testo get text (), testo get text (), testo get text ()); sogg null msg new avviso dialog nessun soggiornant present nella stanza testo get text ()+ rispond nominativo inserito ""); return true lista soggiornanti l_sogg principal found soggiornanti testo get text (), fals l_sogg null msg new messag dialog problemi con databas ""); return true sogg get pagato const msg new avviso dialog soggiornant selezionato gia pagato gia andato ""); return true els procedo con verificar client ultimo rimasto lista soggiornanti sogg_no_pagato new lista soggiornanti (); int l_sogg length (); ++) l_sogg get soggiornant get pagato const sogg_no_pagato add soggiornant l_sogg get soggiornant )); sogg_no_pagato length msg new avviso dialog soggiornant ultimo rimasto sceglier conto per stanza ""); return true sogg_x_conto_s sogg els checkbox get state ()) l_st util pars stanz testo get text ()); l_st null msg new messag dialog error nell elenco dell stanz inserir stanz nell elenco nel modo seguent 101 102 103 ,...""); return true els stanza room int l_st length ++) problemi stanza l_st ])) return true int res chk doubl (); res msg new messag dialog error nell elenco dell stanz stanza l_st res ]+"" present piu volt nell elenco ""); return true checkbox get state checkbox get state ()) date_fin torna date fine magg l_st date_inizio torna date inizio min l_st els prenotazion pren principal read prenotazion sogg get prenotazion ()); pren null date_fin new date date_inizio new date date_fin sogg get fine sogg (); date_inizio sogg get inizio sogg (); els date_fin null date_fin null date_inizio null msg new messag dialog problemi con databas ""); return true variabil data_fin contien date fine corrett data_fine_magg new date int date_fin length ++) util data1maggior data2 date_fin data_fine_magg data_fine_magg date_fin ora variabil data_fine_magg contien data fine maggior aggiornamento flag effettuato l_st msg new messag dialog problemi con databas ""); return true ora poi flag per agenzia contengono valori significativi questo deve esser messo prima quello che segu msg new messag dialog elenco dell stanz includ stanz commission non proceder calcolo separato ""); return true che segu deve esser posto dopo quello che preced checkbox get state msg new messag dialog conto comitiva non possibil per agenzi ""); return true arrivo qui significa che puo fare conto normal riman verificar desidera fare una partenza anticipata tal caso verificar che data inserita sia corretta checkbox get state ()) date util data corretta testo get text ())) date data date util convert date testo get text ()); date data_oggi new date (); controllo che data partenza anticipata abbia senso controllo che client abbia soggiornato almento giorno int date_inizio length ++) util data1maggior data2 date_inizio date util giorno prima data ))) msg new messag dialog clienti devono soggiornar almeno giorno prima partir ""); return true controllo che partenza anticipata non sia prima oggi util data1minor data2 data data_oggi msg new avviso dialog data non puo esser precedent quella odierna ""); testo set text date util pars date date util give string date data_oggi ))); return true els controllo che fine soggiorno anticipato ossia giorno prima della partenza anticipata non sia dopo fine soggiorno effettivo int date_fin length ++) util data1maggior data2 data date_fin ])) msg new avviso dialog non tratta una partenza anticipata per stanza l_st ]+"" con tale data ""); testo set text date util pars date date util give string date data_oggi ))); return true fine_sogg_anticipato date util giorno prima data els checkbox get state ()) date util data corretta testo get text ())) msg new messag dialog data partenza anticipata errata ""); return true els checkbox non attivo fine_sogg_anticipato data_fine_magg checkbox get state ()) msg new messag dialog client una stanza agenzia deve andarsen sceglier partenza anticipata ""); return true return fals errori void start conto stanza frame msg checkbox get state ()) calcolo conto calcola conto stanza testo get text (), fals fine_sogg_anticipato els calcolo conto calcola conto stanza testo get text (), fals null els calcolo conto calcola conto stanza agenzia testo get text ()); void start conto singolo frame msg date fine_effettiva checkbox get state ()) fine_effettiva fine_sogg_anticipato els fine_effettiva data_fine_magg util data1minor data2 fine_effettiva new date ()) msg new ask chiudi singolo con agenzia els msg new messag dialog data posterior oggi non possibil chiuder ""); return els checkbox get state ()) calcolo conto calcola conto singolo sogg_x_conto_s fine_sogg_anticipato els calcolo conto calcola conto singolo sogg_x_conto_s null void start conto comitiva checkbox get state ()) calcolo conto calcola conto comitiva l_st fine_sogg_anticipato els calcolo conto calcola conto comitiva l_st null void start chiudi singolo con agenzia checkbox get state ()) date new_data date util convert date testo get text ()); new_data date util giorno prima new_data principal anticipa fine sogg sogg_x_conto_s get num stanza (), sogg_x_conto_s get soggiornant (), new_data principal revers pagato sogg_x_conto_s get num stanza (), sogg_x_conto_s get soggiornant ()); int testo length ++) testo set text ("""");"
66~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/RicercaPrenotazione.java~RicercaPrenotazione.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class RicercaPrenotazione extends Frame 
{  
	Prenotazione prenotazione;
    
    //Dichiarazioni di variabili
    Panel panel1, panel2, panel3, panel4; 
    Label  etichetta1, label1, label2, label3, label4;
    List lista;
    Button  Annulla, Cerca, Scegli, Aggiungi;
    TextField t_nome, t_cognome;
    Checkbox chbx1, chbx2, chbx3;
    CheckboxGroup filtri;
    GridBagLayout gridbag = new GridBagLayout();
	Frame padre = new Frame();
  	ListaPrenotazioni L, L_visual;
  	Frame figlio;  
    int to_call;
 	boolean first_time = true;   
    
    public RicercaPrenotazione(String titolo,int k)
    {
        super(titolo);
        to_call = k;
        setupPanels();
        init();
        pack(); 
    }
                     
        void setupPanels()
        {  
			this.setFont(ConfigurazioneSistema.font_base);
            
            //Creo dei pulsanti e ne disabilito due  
            Annulla = new Button("" Fine "");
            Cerca = new Button("" Cerca "");
            Scegli = new Button("" Scegli "");
			Aggiungi = new Button("" Aggiungi a stanza "");
            Scegli.setEnabled(false);
            Aggiungi.setEnabled(false);
            Cerca.setEnabled(true);
            //Creo le etichette
            etichetta1 = new Label (""Inserire il nominativo della prenotazione"");
            etichetta1.setFont(ConfigurazioneSistema.font_titolo);
            label1 = new Label(""Cognome"");
            label2 = new Label(""Nome"");
			label3 = new Label(""Risultato della ricerca"");
			label3.setFont(ConfigurazioneSistema.font_titolo);
			label4 = new Label(""Cercare le prenotazioni reletive a:"");
			label4.setFont(ConfigurazioneSistema.font_titolo);
            
            //Creo i TextField e ne rendo  alcuni non editabili
            t_nome = new TextField("""", 20);
            t_cognome = new TextField("""", 20);
            
            //creo il pannello con i filtri per la ricerca
			filtri = new CheckboxGroup();
			chbx1 = new Checkbox("" Arrivi odierni"",filtri, true);
			chbx2 = new Checkbox("" Soggiornanti attuali"",filtri, false);
			chbx3 = new Checkbox("" Prenotazioni future"", filtri,false);            
			
            //Creo il pannello in alto per inserimento dei dati del cliente
            panel1 = new Panel();
            panel1.setLayout(gridbag);
            Utils.constrain(panel1, etichetta1, 0, 0, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);
            Utils.constrain(panel1, t_cognome,1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel1, label2, 2, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);
            Utils.constrain(panel1, t_nome, 3, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);            
            Utils.constrain(panel1, label4, 0, 2, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel1, chbx1, 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);
			if (to_call != 2 && to_call != 1)
            	Utils.constrain(panel1, chbx2, 0, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
            if (to_call != 3)
	            Utils.constrain(panel1, chbx3, 0, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);
           
            //Creo il pannello in basso con due pulsanti                  
            panel2 = new Panel();
            panel2.setLayout(gridbag);
            Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel2, Cerca, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             
            Utils.constrain(panel2, Scegli, 2, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);
            if (to_call ==3)
            Utils.constrain(panel2, Aggiungi, 3, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);                                     
            
            
            
            //Creo il pannello con la lista dei risultati della ricerca
            lista = new List(10,false);
            lista.setFont(ConfigurazioneSistema.font_allineato);
            panel3 = new Panel();
            panel3.setLayout(gridbag);
            Utils.constrain(panel3, label3, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel3, lista, 0, 1, 4, 3, GridBagConstraints.BOTH,
                        GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);             
            
            
            //Attacco i pannelli al frame
            this.setLayout(gridbag);
            Utils.constrain(this, panel1, 0, 1, 4, 6, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(this, panel2, 0, 14, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5); 
        	Utils.constrain(this, panel3, 0, 15, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
        	panel3.setVisible(false);
        	pack();
        
        }

    public void init()
    {
		lista.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		prenotazione = L_visual.getPrenotazione((lista.getSelectedIndexes())[0]+1);
				switch (to_call)
				{
					case 1: startModifica(prenotazione); break;
					case 2: startCancella(prenotazione); break;	
					case 3: 
						if (!chbx2.getState())
							startInsSoggiornante(prenotazione);
						else
							startAggiungi();
						break;
					case 4: startVediPrenotazione(prenotazione); break;
				}
			}
      	});
     
	    Scegli.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		if (!noSelection())
         		{
         			prenotazione = L_visual.getPrenotazione((lista.getSelectedIndexes())[0]+1);
					switch (to_call)
					{
						case 1: startModifica(prenotazione); break;
						case 2: startCancella(prenotazione); break;	
						case 3: startInsSoggiornante(prenotazione); break;
						case 4: startVediPrenotazione(prenotazione); break;
					}
				}
			}
		});
        
		Aggiungi.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				startAggiungi();
			}
    	});
		
		t_nome.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				creaLista(0);
			}			      	
		});
	
		t_cognome.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				creaLista(0);
			}			      	
		});	

    	Cerca.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				creaLista(0);
			}	
      	});
      
	  	Annulla.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				dispose();
				padre.setEnabled(true);
			}
      	});    	

    	chbx1.addItemListener(new ItemListener()   
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
				if (!first_time)
         			creaLista(0);
         	}
      	});
                      
      	chbx2.addItemListener(new ItemListener()   
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
				if (!first_time)
         			creaLista(0);
         	}
      	});
      
      	chbx3.addItemListener(new ItemListener()   
      	{
         	public void itemStateChanged(ItemEvent e)
         	{
				if (!first_time)
         			creaLista(0);	
        	}
      	});
    } 

	void startAggiungi()
	{
   		if (!noSelection())
   		{
   			this.setEnabled(false);
   			prenotazione = L_visual.getPrenotazione((lista.getSelectedIndexes())[0]+1);
			startAddSoggiornante(prenotazione);
		}
	}
	
	void startModifica(Prenotazione pren)
	{
		this.setEnabled(false);
		Stanza stanza = (Principale.db).readStanza(pren.getNumStanza());
		ModificaPrenotazione modify = new ModificaPrenotazione(pren, stanza, this);
		modify.setVisible(true);
		modify.padre = this;
		notifyRoomBlocked(pren, modify, null);	
	}

	void startCancella(Prenotazione pren)
	{
		this.setEnabled(false);
		Stanza stanza = (Principale.db).readStanza(pren.getNumStanza());
		CancellaPrenotazione cancel = new CancellaPrenotazione(pren, stanza, this);
		cancel.setVisible(true);
		cancel.padre = this;	
	}
	
	void startVediPrenotazione(Prenotazione pren)
	{
		this.setEnabled(false);
		Stanza stanza = (Principale.db).readStanza(pren.getNumStanza());
		VediPrenotazione visual = new VediPrenotazione(pren, stanza, this);
		visual.setVisible(true);
		visual.padre = this;	
		notifyRoomBlocked(pren, null, visual);	
	}	
	
	void startInsSoggiornante(Prenotazione pren)
	{
		Disponibilita disp;
		Frame msg;
		
		disp = (Principale.db).readDisponibilita(pren.getNumStanza());
		if	(disp == null)
			msg =  new MessageDialog(this,"" Inconsistenze sul database! "");
		else
		{
			if ( disp.getStatusGiorno(DateUtils.dataTogiorni(pren.getInizioSogg()),Const.ANNO_CORRENTE) == Flag.BLOCCATA )
				msg = new AvvisoDialog(this,"" La stanza ""+pren.getNumStanza()+"" non e' assegnata a tale prenotazione. Modificare la prenotazione. "");
			else
				figlio = new InserisciSoggiornante(this, pren);
		}
	}

	
	void notifyRoomBlocked(Prenotazione pren, ModificaPrenotazione father1, VediPrenotazione father2)
	{
		char flag; 
		Frame msg;
		ListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();
		if (elenco_disp == null)
		{
			msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return;
		}
		Disponibilita disp = Utils.getDispOfRoom(elenco_disp, pren.getNumStanza(), false);
		Costanti cost = new Costanti();
		if ( (((pren.getInizioSogg()).getYear())+1900 ) == cost.getAnnoCorr())
			flag = Const.ANNO_CORRENTE;
		else
			flag = Const.ANNO_PROSSIMO;	
		if (father2 == null)
			if (disp.getStatusGiorno(DateUtils.dataTogiorni(pren.getInizioSogg()), flag) == Flag.BLOCCATA)
    			msg = new AvvisoDialog(father1,"" ATTENZIONE: per questa prenotazione non e' ancora stata assegnata la stanza!!"");
    		else
				(father1.Assegna).setEnabled(false);
		else
			if (disp.getStatusGiorno(DateUtils.dataTogiorni(pren.getInizioSogg()), flag) == Flag.BLOCCATA)
    			msg = new AvvisoDialog(father2,"" ATTENZIONE: per questa prenotazione non e' ancora stata assegnata la stanza!!"");
    		else
				(father2.Assegna).setEnabled(false);			
	}
	
	public void creaLista(int back)
	{
		Frame msg;
		Prenotazione p;		
		Date today = new Date();
		L_visual = new ListaPrenotazioni();
		L = (Principale.db).foundPrenotazioni(t_cognome.getText(), t_nome.getText());
		if (L != null)
		{
			if (!L.isEmpty())
			{
				if (lista.getItemCount() > 0)
					lista.removeAll();
				for(int i = 1; i <= L.length(); i++)
				{
					p = L.getPrenotazione(i); 
					ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(p.getIdPrenotazione());
					if (chbx3.getState())	
					{
						if ( Utils.data1MaggioreData2( p.getInizioSogg(), today ) )
						{
							lista.addItem(p.toString());
							L_visual.addPrenotazione(p);
						}
					}
					else
					{
						if (chbx1.getState())
						{
							if (L_sogg.isEmpty())
							{
								if (((p.getInizioSogg()).getDate() == today.getDate())
									&& ((p.getInizioSogg()).getMonth() == today.getMonth())
									&& ((p.getInizioSogg()).getYear() == today.getYear()) )
								{	
									lista.addItem(p.toString());			
									L_visual.addPrenotazione(p);
								}
							}
						}
						else
						{	
							if ( !( Utils.data1MaggioreData2( p.getInizioSogg(), today ) ) && 
								!( Utils.data1MinoreData2( p.getFineSogg(), today) ) )
							{
								//controllo che sia un soggiornante gia registrato
								if (!L_sogg.isEmpty())
								{	
									lista.addItem(p.toString());				
									L_visual.addPrenotazione(p);
								}
							}
						}	
					}
				}					
				if (lista.getItemCount() == 0)
				{
					if (back == 0)
						msg = new AvvisoDialog(this, "" Nessuna prenotazione trovata! "");
					Scegli.setEnabled(false);
					Aggiungi.setEnabled(false);
					panel3.setVisible(false);
					pack();
					if (to_call == 3)
						Aggiungi.setEnabled(false);
				}
				else
				{
					if (chbx1.getState())
					{
						Aggiungi.setEnabled(false);
		       			Scegli.setEnabled(true);
					}
					if (chbx2.getState())
					{
		       			Aggiungi.setEnabled(true);
						if (to_call == 3)
		       				Scegli.setEnabled(false);
    			   		else
			       			Scegli.setEnabled(true);
					}
					if (chbx3.getState())
					{
						Scegli.setEnabled(true);
					}
					panel3.setVisible(true);
					pack();
				}			
				if (first_time)
					first_time = false;
			}
			else
			{
				if (back == 0)
					msg = new AvvisoDialog(this, "" Prenotazione non trovata! "");
				else
				{
					if (back == 1)
					{
						if (lista.getItemCount() > 0)
							lista.removeAll();
						panel3.setVisible(false);
						pack();
					}
				}
			}
		}
		else
			msg = new MessageDialog(this, "" Problemi con il database! "");
	}			

	boolean noSelection()
	{
		Frame msg;
		if (lista.getSelectedIndex() == -1)
		{
			msg = new AvvisoDialog(this,"" Selezionare una prenotazione dalla lista e ripremere il tasto"");
			return true;
		}	
		return false;
	}

	void startAddSoggiornante(Prenotazione pren)
	{
		ListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(pren.getIdPrenotazione());
		if (L_sogg != null)
			if (L_sogg.length() > 0)
			{	
				Soggiornante sogg = L_sogg.getSoggiornante(1);
				Stanza room = (Principale.db).readStanza(sogg.getNumStanza());
				if ( (room.getPostiLetto() > L_sogg.length()) ||
	       			( (room.getPostiLetto() == L_sogg.length()) && (room.getDispLettoAgg() == Const.SI) ) )
		 			figlio = new AggiungiSoggiornante(this, pren, room, L_sogg.length());
				else
					figlio = new AvvisoDialog(this,"" Nessun posto disponibile nella stanza n. ""+room.getNumStanza());
			}
			else
				figlio = new AvvisoDialog(this,"" La prenotazione non e' adempiuta. Premere 'Scegli' per gestire l'arrivo clienti"");
		else
			figlio = new MessageDialog(this,"" Problemi con il database!"");
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁ext', 'ends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', 'ot', 'az', 'ion', 'e', ';', '\n', '▁', '\n', '▁/', '/', 'd', 'ich', 'i', 'ar', 'az', 'ion', 'i', '▁di', '▁vari', 'ab', 'ili', '\n', '▁pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3,', '▁pan', 'el', '4', ';', '▁', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁cer', 'ca', ',', '▁s', 'ce', 'g', 'li', ',', '▁ag', 'gi', 'ung', 'i', ';', '\n', '▁text', 'field', '▁t', '_', 'n', 'ome', ',', '▁t', '_', 'c', 'ogn', 'ome', ';', '\n', '▁check', 'box', '▁ch', 'b', 'x', '1,', '▁ch', 'b', 'x', '2,', '▁ch', 'b', 'x', '3', ';', '\n', '▁check', 'box', 'gro', 'up', '▁fil', 't', 'ri', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'fr', 'ame', '▁pad', 're', '▁=', '▁new', '▁frame', '(', ');', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'az', 'ion', 'i', '▁l', ',', '▁l', '_', 'vis', 'ual', ';', '\n', '▁', '\t', 'fr', 'ame', '▁fig', 'l', 'io', ';', '▁', '\n', '▁int', '▁to', '_', 'c', 'all', ';', '\n', '▁', '\t', 'bo', 'ole', 'an', '▁first', '_', 'time', '▁=', '▁true', ';', '▁', '\n', '▁', '\n', '▁public', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', 'str', 'ing', '▁tit', 'olo', ',', 'int', '▁k', ')', '\n', '▁{', '\n', '▁super', '(', 't', 'it', 'olo', ');', '\n', '▁to', '_', 'c', 'all', '▁=', '▁k', ';', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁de', 'i', '▁p', 'uls', 'ant', 'i', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁cer', 'ca', '▁""', ');', '\n', '▁s', 'ce', 'g', 'li', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁s', 'ce', 'g', 'li', '▁""', ');', '\n\t\t\t', 'ag', 'gi', 'ung', 'i', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁ag', 'gi', 'ung', 'i', '▁a', '▁stan', 'za', '▁""', ');', '\n', '▁s', 'ce', 'g', 'li', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁cer', 'ca', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁il', '▁nomin', 'at', 'iv', 'o', '▁d', 'ella', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'c', 'ogn', 'ome', '"")', ';', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '"")', ';', '\n\t\t\t', 'l', 'ab', 'el', '3', '▁=', '▁new', '▁label', '(', '""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', '"")', ';', '\n\t\t\t', 'l', 'ab', 'el', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\t\t\t', 'l', 'ab', 'el', '4', '▁=', '▁new', '▁label', '(', '""', 'cer', 'c', 'are', '▁le', '▁p', 'ren', 'ot', 'az', 'ion', 'i', '▁rele', 't', 'ive', '▁a', ':', '"")', ';', '\n\t\t\t', 'l', 'ab', 'el', '4.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁al', 'c', 'un', 'i', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁t', '_', 'n', 'ome', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁t', '_', 'c', 'ogn', 'ome', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁con', '▁i', '▁fil', 't', 'ri', '▁per', '▁la', '▁ric', 'er', 'ca', '\n\t\t\t', 'f', 'ilt', 'ri', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n\t\t\t', 'ch', 'b', 'x', '1', '▁=', '▁new', '▁check', 'box', '(', '""', '▁arr', 'iv', 'i', '▁od', 'ier', 'ni', '"",', 'f', 'ilt', 'ri', ',', '▁true', ');', '\n\t\t\t', 'ch', 'b', 'x', '2', '▁=', '▁new', '▁check', 'box', '(', '""', '▁s', 'og', 'gi', 'orn', 'ant', 'i', '▁att', 'ual', 'i', '"",', 'f', 'ilt', 'ri', ',', '▁fal', 'se', ');', '\n\t\t\t', 'ch', 'b', 'x', '3', '▁=', '▁new', '▁check', 'box', '(', '""', '▁p', 'ren', 'ot', 'az', 'ion', 'i', '▁future', '"",', '▁fil', 't', 'ri', ',', 'f', 'al', 'se', ');', '▁', '\n\t\t\t\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁per', '▁ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁t', '_', 'c', 'ogn', 'ome', ',', '1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁t', '_', 'n', 'ome', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '4,', '▁', '0,', '▁2,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁ch', 'b', 'x', '1,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t\t', 'if', '▁(', 'to', '_', 'c', 'all', '▁!', '=', '▁2', '▁&', '&', '▁to', '_', 'c', 'all', '▁!', '=', '▁1', ')', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁ch', 'b', 'x', '2,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'to', '_', 'c', 'all', '▁!', '=', '▁3', ')', '\n\t', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁ch', 'b', 'x', '3,', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁cer', 'ca', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁s', 'ce', 'g', 'li', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'to', '_', 'c', 'all', '▁=', '=', '3)', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ag', 'gi', 'ung', 'i', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁con', '▁la', '▁list', 'a', '▁de', 'i', '▁r', 'is', 'ult', 'ati', '▁d', 'ella', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '1', '0,', 'f', 'al', 'se', ');', '\n', '▁list', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁1,', '▁4,', '▁6,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁15,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n\t\t', 'list', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁=', '▁l', '_', 'vis', 'ual', '.', 'get', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'sw', 'itch', '▁(', 'to', '_', 'c', 'all', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'c', 'ase', '▁1:', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '▁break', ';', '\n\t\t\t\t\t', 'c', 'ase', '▁2:', '▁start', 'c', 'anc', 'ella', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '▁break', ';', '\t\n\t\t\t\t\t', 'c', 'ase', '▁3:', '▁', '\n\t\t\t\t\t\t', 'if', '▁(', '!', 'ch', 'b', 'x', '2.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t\t\t\t', 'st', 'art', 'ins', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'st', 'art', 'ag', 'gi', 'ung', 'i', '(', ');', '\n\t\t\t\t\t\t', 'break', ';', '\n\t\t\t\t\t', 'c', 'ase', '▁4:', '▁start', 'ved', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '▁break', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t', '▁s', 'ce', 'g', 'li', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'if', '▁(', '!', 'n', 'ose', 'lect', 'ion', '(', ')', ')', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁=', '▁l', '_', 'vis', 'ual', '.', 'get', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t\t', 'sw', 'itch', '▁(', 'to', '_', 'c', 'all', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'c', 'ase', '▁1:', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '▁break', ';', '\n\t\t\t\t\t\t', 'c', 'ase', '▁2:', '▁start', 'c', 'anc', 'ella', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '▁break', ';', '\t\n\t\t\t\t\t\t', 'c', 'ase', '▁3:', '▁start', 'ins', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '▁break', ';', '\n\t\t\t\t\t\t', 'c', 'ase', '▁4:', '▁start', 'ved', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '▁break', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 'ag', 'gi', 'ung', 'i', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'ag', 'gi', 'ung', 'i', '(', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n\t\t\n\t\t', 't', '_', 'n', 'ome', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\n\t\t', 't', '_', 'c', 'ogn', 'ome', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\t\n\n', '▁', '\t', 'cer', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t', '▁', '\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n\n', '▁', '\t', 'ch', 'b', 'x', '1.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ch', 'b', 'x', '2.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ch', 'b', 'x', '3.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\t\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'ag', 'gi', 'ung', 'i', '(', ')', '\n\t', '{', '\n', '▁', '\t\t', 'if', '▁(', '!', 'n', 'ose', 'lect', 'ion', '(', ')', ')', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁=', '▁l', '_', 'vis', 'ual', '.', 'get', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t', 'st', 'art', 'ad', 'd', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 'mod', 'ific', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁mod', 'ify', '▁=', '▁new', '▁mod', 'ific', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', ',', '▁stan', 'za', ',', '▁this', ');', '\n\t\t', 'mod', 'ify', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'mod', 'ify', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\n\t\t', 'not', 'ify', 'ro', 'omb', 'lock', 'ed', '(', 'p', 'ren', ',', '▁mod', 'ify', ',', '▁n', 'ull', ');', '\t\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'c', 'anc', 'ella', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 'c', 'anc', 'ell', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁can', 'cel', '▁=', '▁new', '▁canc', 'ell', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', ',', '▁stan', 'za', ',', '▁this', ');', '\n\t\t', 'c', 'anc', 'el', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'c', 'anc', 'el', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'ved', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 'ved', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '▁visual', '▁=', '▁new', '▁v', 'ed', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', ',', '▁stan', 'za', ',', '▁this', ');', '\n\t\t', 'vis', 'ual', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'vis', 'ual', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\t\n\t\t', 'not', 'ify', 'ro', 'omb', 'lock', 'ed', '(', 'p', 'ren', ',', '▁n', 'ull', ',', '▁visual', ');', '\t\n\t', '}', '\t\n\t\n\t', 'v', 'oid', '▁start', 'ins', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', ';', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 'if', '\t', '(', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁inc', 'ons', 'ist', 'en', 'ze', '▁s', 'ul', '▁database', '!', '▁""', ');', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁disp', '.', 'get', 'st', 'atus', 'gi', 'orn', 'o', '(', 'd', 'ate', 'ut', 'ils', '.', 'd', 'at', 'at', 'og', 'i', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', '),', 'con', 'st', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ')', '▁=', '=', '▁flag', '.', 'bl', 'oc', 'c', 'ata', '▁)', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stan', 'za', '▁""', '+', 'p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', '+', '""', '▁non', '▁e', ""'"", '▁as', 'se', 'gn', 'ata', '▁a', '▁t', 'ale', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', '▁mod', 'ific', 'are', '▁la', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '.', '▁""', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁ins', 'er', 'isc', 'is', 'og', 'gi', 'orn', 'ante', '(', 'this', ',', '▁p', 'ren', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t\n\t', 'v', 'oid', '▁not', 'ify', 'ro', 'omb', 'lock', 'ed', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ',', '▁mod', 'ific', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁father', '1,', '▁v', 'ed', 'ip', 'ren', 'ot', 'az', 'ion', 'e', '▁father', '2)', '\n\t', '{', '\n\t\t', 'char', '▁flag', ';', '▁', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁fal', 'se', ');', '\n\t\t', 'c', 'ost', 'ant', 'i', '▁cost', '▁=', '▁new', '▁cost', 'ant', 'i', '(', ');', '\n\t\t', 'if', '▁(', '▁(', '(', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ').', 'get', 'year', '(', ')', ')', '+', '19', '00', '▁)', '▁=', '=', '▁cost', '.', 'get', 'ann', 'oc', 'or', 'r', '(', ')', ')', '\n\t\t\t', 'fl', 'ag', '▁=', '▁const', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'fl', 'ag', '▁=', '▁const', '.', 'ann', 'o', '_', 'p', 'ross', 'im', 'o', ';', '\t\n\t\t', 'if', '▁(', 'father', '2', '▁=', '=', '▁n', 'ull', ')', '\n\t\t\t', 'if', '▁(', 'dis', 'p', '.', 'get', 'st', 'atus', 'gi', 'orn', 'o', '(', 'd', 'ate', 'ut', 'ils', '.', 'd', 'at', 'at', 'og', 'i', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', '),', '▁flag', ')', '▁=', '=', '▁flag', '.', 'bl', 'oc', 'c', 'ata', ')', '\n', '▁', '\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'father', '1,', '""', '▁att', 'enz', 'ion', 'e', ':', '▁per', '▁quest', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁non', '▁e', ""'"", '▁anc', 'ora', '▁st', 'ata', '▁as', 'se', 'gn', 'ata', '▁la', '▁stan', 'za', '!', '!', '"")', ';', '\n', '▁', '\t\t', 'el', 'se', '\n\t\t\t\t', '(', 'father', '1.', 'as', 'se', 'g', 'na', ').', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'dis', 'p', '.', 'get', 'st', 'atus', 'gi', 'orn', 'o', '(', 'd', 'ate', 'ut', 'ils', '.', 'd', 'at', 'at', 'og', 'i', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', '),', '▁flag', ')', '▁=', '=', '▁flag', '.', 'bl', 'oc', 'c', 'ata', ')', '\n', '▁', '\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'father', '2,', '""', '▁att', 'enz', 'ion', 'e', ':', '▁per', '▁quest', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁non', '▁e', ""'"", '▁anc', 'ora', '▁st', 'ata', '▁as', 'se', 'gn', 'ata', '▁la', '▁stan', 'za', '!', '!', '"")', ';', '\n', '▁', '\t\t', 'el', 'se', '\n\t\t\t\t', '(', 'father', '2.', 'as', 'se', 'g', 'na', ').', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\t\t\t\n\t', '}', '\n\t\n\t', 'publ', 'ic', '▁vo', 'id', '▁cre', 'al', 'ista', '(', 'int', '▁back', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ';', '\t\t\n\t\t', 'd', 'ate', '▁today', '▁=', '▁new', '▁date', '(', ');', '\n\t\t', 'l', '_', 'vis', 'ual', '▁=', '▁new', '▁list', 'ap', 'ren', 'ot', 'az', 'ion', 'i', '(', ');', '\n\t\t', 'l', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'p', 'ren', 'ot', 'az', 'ion', 'i', '(', 't', '_', 'c', 'ogn', 'ome', '.', 'get', 'text', '(', '),', '▁t', '_', 'n', 'ome', '.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', 'l', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁l', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', '▁=', '▁l', '.', 'get', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'i', ');', '▁', '\n\t\t\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '3.', 'get', 'state', '(', ')', ')', '\t\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'd', 'ata', '1', 'm', 'ag', 'g', 'ior', 'ed', 'ata', '2', '(', '▁p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁today', '▁)', '▁)', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', 'p', '.', 't', 'ost', 'ring', '(', ')', ');', '\n\t\t\t\t\t\t\t', 'l', '_', 'vis', 'ual', '.', 'ad', 'd', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '1.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', 'if', '▁(', '(', '(', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ').', 'get', 'd', 'ate', '(', ')', '▁=', '=', '▁today', '.', 'get', 'd', 'ate', '(', ')', ')', '\n\t\t\t\t\t\t\t\t\t', '&', '&', '▁(', '(', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ').', 'get', 'mon', 'th', '(', ')', '▁=', '=', '▁today', '.', 'get', 'mon', 'th', '(', ')', ')', '\n\t\t\t\t\t\t\t\t\t', '&', '&', '▁(', '(', 'p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ').', 'get', 'year', '(', ')', '▁=', '=', '▁today', '.', 'get', 'year', '(', ')', ')', '▁)', '\n\t\t\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', 'p', '.', 't', 'ost', 'ring', '(', ')', ');', '\t\t\t\n\t\t\t\t\t\t\t\t\t', 'l', '_', 'vis', 'ual', '.', 'ad', 'd', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t', 'if', '▁(', '▁!', '(', '▁ut', 'ils', '.', 'd', 'ata', '1', 'm', 'ag', 'g', 'ior', 'ed', 'ata', '2', '(', '▁p', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁today', '▁)', '▁)', '▁&', '&', '▁', '\n\t\t\t\t\t\t\t\t', '!', '(', '▁ut', 'ils', '.', 'd', 'ata', '1', 'min', 'ored', 'ata', '2', '(', '▁p', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁today', ')', '▁)', '▁)', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', '//', 'cont', 'roll', 'o', '▁che', '▁s', 'ia', '▁un', '▁s', 'og', 'gi', 'orn', 'ante', '▁g', 'ia', '▁reg', 'istr', 'ato', '\n\t\t\t\t\t\t\t\t', 'if', '▁(', '!', 'l', '_', 'so', 'g', 'g', '.', 'is', 'empt', 'y', '(', ')', ')', '\n\t\t\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', 'p', '.', 't', 'ost', 'ring', '(', ')', ');', '\t\t\t\t\n\t\t\t\t\t\t\t\t\t', 'l', '_', 'vis', 'ual', '.', 'ad', 'd', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\t\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\t\t\t\t\t\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁=', '=', '▁', '0)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'back', '▁=', '=', '▁', '0)', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁n', 'ess', 'una', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁tro', 'v', 'ata', '!', '▁""', ');', '\n\t\t\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t\t', 'p', 'ack', '(', ');', '\n\t\t\t\t\t', 'if', '▁(', 'to', '_', 'c', 'all', '▁=', '=', '▁3', ')', '\n\t\t\t\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '1.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', '▁', '\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '2.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t\t', '{', '\n\t\t', '▁', '\t\t\t', 'ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t\t', 'if', '▁(', 'to', '_', 'c', 'all', '▁=', '=', '▁3', ')', '\n\t\t', '▁', '\t\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\t\t', '▁', '\t\t', 'el', 'se', '\n\t\t\t', '▁', '\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '3.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t\t\t\t', 'p', 'ack', '(', ');', '\n\t\t\t\t', '}', '\t\t\t\n\t\t\t\t', 'if', '▁(', 'first', '_', 'time', ')', '\n\t\t\t\t\t', 'first', '_', 'time', '▁=', '▁fal', 'se', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'back', '▁=', '=', '▁', '0)', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁non', '▁tro', 'v', 'ata', '!', '▁""', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'back', '▁=', '=', '▁1', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t\t\t', 'p', 'ack', '(', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t', '}', '\t\t\t\n\n\t', 'bo', 'ole', 'an', '▁n', 'ose', 'lect', 'ion', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁=', '=', '▁-', '1)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁se', 'le', 'z', 'ion', 'are', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁dall', 'a', '▁list', 'a', '▁e', '▁r', 'ip', 'rem', 'ere', '▁il', '▁t', 'ast', 'o', '"")', ';', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\t\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'ad', 'd', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ')', '\n\t', '{', '\n\t\t', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁l', '_', 'so', 'g', 'g', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 'p', 'ren', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', '▁=', '▁l', '_', 'so', 'g', 'g', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', '1)', ';', '\n\t\t\t\t', 'stan', 'za', '▁room', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'so', 'g', 'g', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t\t\t', 'if', '▁(', '▁(', 'room', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', ')', '▁', '>', '▁l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ')', ')', '▁||', '\n\t', '▁', '\t\t\t', '(', '▁(', 'room', '.', 'get', 'p', 'ost', 'il', 'et', 'to', '(', ')', '▁=', '=', '▁l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ')', ')', '▁&', '&', '▁(', 'room', '.', 'get', 'dis', 'p', 'let', 'to', 'ag', 'g', '(', ')', '▁=', '=', '▁const', '.', 'si', ')', '▁)', '▁)', '\n\t\t', '▁', '\t\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '(', 'this', ',', '▁p', 'ren', ',', '▁room', ',', '▁l', '_', 'so', 'g', 'g', '.', 'l', 'ength', '(', ')', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁n', 'ess', 'un', '▁post', 'o', '▁dis', 'pon', 'ib', 'ile', '▁n', 'ella', '▁stan', 'za', '▁n', '.', '▁""', '+', 'room', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁la', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁non', '▁e', ""'"", '▁ad', 'em', 'p', 'i', 'ut', 'a', '.', '▁prem', 'ere', ""▁'"", 's', 'ce', 'g', 'li', ""'"", '▁per', '▁g', 'est', 'ire', '▁l', ""'"", 'ar', 'r', 'iv', 'o', '▁cl', 'ient', 'i', '"")', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '"")', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'az', 'ioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4', ';', '▁', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁cer', 'ca', ',', '▁s', 'ce', 'g', 'li', ',', '▁ag', 'gi', 'ung', 'i', ';', '\n', '▁text', 'field', '▁t', '_', 'n', 'ome', ',', '▁t', '_', 'c', 'ogn', 'ome', ';', '\n', '▁check', 'box', '▁ch', 'b', 'x', '1,', '▁ch', 'b', 'x', '2,', '▁ch', 'b', 'x', '3', ';', '\n', '▁check', 'box', 'group', '▁fil', 'tri', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'frame', '▁pad', 're', '▁=', '▁new', '▁frame', '();', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'az', 'ioni', '▁l', ',', '▁l', '_', 'vis', 'ual', ';', '\n', '▁', '\t', 'frame', '▁fig', 'lio', ';', '▁', '\n', '▁int', '▁to', '_', 'call', ';', '\n', '▁', '\t', 'bo', 'olean', '▁first', '_', 'time', '▁=', '▁true', ';', '▁', '\n', '▁', '\n', '▁public', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(', 'string', '▁tit', 'olo', ',', 'int', '▁k', ')', '\n', '▁{', '\n', '▁super', '(', 'tit', 'olo', ');', '\n', '▁to', '_', 'call', '▁=', '▁k', ';', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁dei', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n', '▁s', 'ce', 'g', 'li', '▁=', '▁new', '▁button', '(""', '▁s', 'ce', 'g', 'li', '▁""', ');', '\n\t\t\t', 'aggi', 'ung', 'i', '▁=', '▁new', '▁button', '(""', '▁ag', 'gi', 'ung', 'i', '▁a', '▁stan', 'za', '▁""', ');', '\n', '▁s', 'ce', 'g', 'li', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁ag', 'gi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁cer', 'ca', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁il', '▁nomin', 'at', 'ivo', '▁della', '▁pren', 'ot', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'c', 'ogn', 'ome', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n\t\t\t', 'l', 'abel', '3', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', '"");', '\n\t\t\t', 'l', 'abel', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t\t', 'l', 'abel', '4', '▁=', '▁new', '▁label', '(""', 'cer', 'care', '▁le', '▁pren', 'ot', 'az', 'ioni', '▁rele', 't', 'ive', '▁a', ':', '"");', '\n\t\t\t', 'l', 'abel', '4.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁t', '_', 'n', 'ome', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁t', '_', 'c', 'ogn', 'ome', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁i', '▁fil', 'tri', '▁per', '▁la', '▁ric', 'er', 'ca', '\n\t\t\t', 'f', 'ilt', 'ri', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t\t', 'ch', 'b', 'x', '1', '▁=', '▁new', '▁check', 'box', '(""', '▁arr', 'iv', 'i', '▁od', 'ier', 'ni', '"",', 'f', 'ilt', 'ri', ',', '▁true', ');', '\n\t\t\t', 'ch', 'b', 'x', '2', '▁=', '▁new', '▁check', 'box', '(""', '▁s', 'og', 'gi', 'orn', 'anti', '▁att', 'ual', 'i', '"",', 'f', 'ilt', 'ri', ',', '▁false', ');', '\n\t\t\t', 'ch', 'b', 'x', '3', '▁=', '▁new', '▁check', 'box', '(""', '▁pren', 'ot', 'az', 'ioni', '▁future', '"",', '▁fil', 'tri', ',', 'false', ');', '▁', '\n\t\t\t\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁per', '▁ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁t', '_', 'c', 'ogn', 'ome', ',', '1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁t', '_', 'n', 'ome', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '4,', '▁', '0,', '▁2,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁ch', 'b', 'x', '1,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t\t', 'if', '▁(', 'to', '_', 'call', '▁!=', '▁2', '▁&', '&', '▁to', '_', 'call', '▁!=', '▁1)', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁ch', 'b', 'x', '2,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'to', '_', 'call', '▁!=', '▁3)', '\n\t', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁ch', 'b', 'x', '3,', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁cer', 'ca', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁s', 'ce', 'g', 'li', ',', '▁2,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'to', '_', 'call', '▁==', '3)', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ag', 'gi', 'ung', 'i', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '10,', 'false', ');', '\n', '▁list', 'a', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁1,', '▁4,', '▁6,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'false', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'list', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'vis', 'ual', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'sw', 'itch', '▁(', 'to', '_', 'call', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'case', '▁1:', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t\t', 'case', '▁2:', '▁start', 'canc', 'ella', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\t\n\t\t\t\t\t', 'case', '▁3:', '▁', '\n\t\t\t\t\t\t', 'if', '▁(', '!', 'ch', 'b', 'x', '2.', 'get', 'state', '())', '\n\t\t\t\t\t\t\t', 'start', 'ins', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', ');', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t\t', 'start', 'aggi', 'ung', 'i', '();', '\n\t\t\t\t\t\t', 'break', ';', '\n\t\t\t\t\t', 'case', '▁4:', '▁start', 'ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t', '▁s', 'ce', 'g', 'li', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'if', '▁(', '!', 'n', 'ose', 'lection', '())', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'vis', 'ual', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t\t', 'sw', 'itch', '▁(', 'to', '_', 'call', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'case', '▁1:', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t\t\t', 'case', '▁2:', '▁start', 'canc', 'ella', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\t\n\t\t\t\t\t\t', 'case', '▁3:', '▁start', 'ins', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t\t\t', 'case', '▁4:', '▁start', 'ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 'aggi', 'ung', 'i', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'aggi', 'ung', 'i', '();', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n\t\t\n\t\t', 't', '_', 'n', 'ome', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\n\t\t', 't', '_', 'c', 'ogn', 'ome', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\t\n\n', '▁', '\t', 'cer', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n\n', '▁', '\t', 'ch', 'b', 'x', '1.', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ch', 'b', 'x', '2.', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'ch', 'b', 'x', '3.', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(', '!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0)', ';', '\t\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'aggi', 'ung', 'i', '()', '\n\t', '{', '\n', '▁', '\t\t', 'if', '▁(', '!', 'n', 'ose', 'lection', '())', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'vis', 'ual', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t', 'start', 'add', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'mod', 'ific', 'ap', 'ren', 'ot', 'azione', '▁modify', '▁=', '▁new', '▁mod', 'ific', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', ',', '▁stan', 'za', ',', '▁this', ');', '\n\t\t', 'mod', 'ify', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'mod', 'ify', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'not', 'ify', 'ro', 'omb', 'lock', 'ed', '(', 'p', 'ren', ',', '▁modify', ',', '▁null', ');', '\t\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'canc', 'ella', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'canc', 'ell', 'ap', 'ren', 'ot', 'azione', '▁cancel', '▁=', '▁new', '▁canc', 'ell', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', ',', '▁stan', 'za', ',', '▁this', ');', '\n\t\t', 'canc', 'el', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'canc', 'el', '.', 'pad', 're', '▁=', '▁this', ';', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'ved', 'ip', 'ren', 'ot', 'azione', '▁visual', '▁=', '▁new', '▁ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', ',', '▁stan', 'za', ',', '▁this', ');', '\n\t\t', 'vis', 'ual', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'vis', 'ual', '.', 'pad', 're', '▁=', '▁this', ';', '\t\n\t\t', 'not', 'ify', 'ro', 'omb', 'lock', 'ed', '(', 'p', 'ren', ',', '▁null', ',', '▁visual', ');', '\t\n\t', '}', '\t\n\t\n\t', 'v', 'oid', '▁start', 'ins', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', ';', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'if', '\t', '(', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁incons', 'ist', 'en', 'ze', '▁sul', '▁database', '!', '▁""', ');', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁disp', '.', 'get', 'st', 'atus', 'gi', 'orno', '(', 'date', 'ut', 'ils', '.', 'dat', 'at', 'og', 'i', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', '),', 'const', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ')', '▁==', '▁flag', '.', 'bl', 'occ', 'ata', '▁)', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁la', '▁stan', 'za', '▁""', '+', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '()', '+', '""', '▁non', '▁e', ""'"", '▁as', 'se', 'gn', 'ata', '▁a', '▁tale', '▁pren', 'ot', 'azione', '.', '▁mod', 'ific', 'are', '▁la', '▁pren', 'ot', 'azione', '.', '▁""', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁ins', 'er', 'isc', 'is', 'og', 'gi', 'orn', 'ante', '(', 'this', ',', '▁pren', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t\n\t', 'v', 'oid', '▁not', 'ify', 'ro', 'omb', 'lock', 'ed', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁mod', 'ific', 'ap', 'ren', 'ot', 'azione', '▁father', '1,', '▁ved', 'ip', 'ren', 'ot', 'azione', '▁father', '2)', '\n\t', '{', '\n\t\t', 'char', '▁flag', ';', '▁', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁pren', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁false', ');', '\n\t\t', 'cost', 'anti', '▁cost', '▁=', '▁new', '▁cost', 'anti', '();', '\n\t\t', 'if', '▁(', '▁(', '(', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', ').', 'get', 'year', '())', '+', '19', '00', '▁)', '▁==', '▁cost', '.', 'get', 'ann', 'oc', 'or', 'r', '())', '\n\t\t\t', 'flag', '▁=', '▁const', '.', 'ann', 'o', '_', 'cor', 'ren', 'te', ';', '\n\t\t', 'el', 'se', '\n\t\t\t', 'flag', '▁=', '▁const', '.', 'ann', 'o', '_', 'p', 'ross', 'imo', ';', '\t\n\t\t', 'if', '▁(', 'father', '2', '▁==', '▁null', ')', '\n\t\t\t', 'if', '▁(', 'dis', 'p', '.', 'get', 'st', 'atus', 'gi', 'orno', '(', 'date', 'ut', 'ils', '.', 'dat', 'at', 'og', 'i', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', '),', '▁flag', ')', '▁==', '▁flag', '.', 'bl', 'occ', 'ata', ')', '\n', '▁', '\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'father', '1,', '""', '▁att', 'enz', 'ione', ':', '▁per', '▁quest', 'a', '▁pren', 'ot', 'azione', '▁non', '▁e', ""'"", '▁anc', 'ora', '▁st', 'ata', '▁as', 'se', 'gn', 'ata', '▁la', '▁stan', 'za', '!!', '"");', '\n', '▁', '\t\t', 'el', 'se', '\n\t\t\t\t', '(', 'father', '1.', 'asse', 'g', 'na', ').', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'dis', 'p', '.', 'get', 'st', 'atus', 'gi', 'orno', '(', 'date', 'ut', 'ils', '.', 'dat', 'at', 'og', 'i', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', '),', '▁flag', ')', '▁==', '▁flag', '.', 'bl', 'occ', 'ata', ')', '\n', '▁', '\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'father', '2,', '""', '▁att', 'enz', 'ione', ':', '▁per', '▁quest', 'a', '▁pren', 'ot', 'azione', '▁non', '▁e', ""'"", '▁anc', 'ora', '▁st', 'ata', '▁as', 'se', 'gn', 'ata', '▁la', '▁stan', 'za', '!!', '"");', '\n', '▁', '\t\t', 'el', 'se', '\n\t\t\t\t', '(', 'father', '2.', 'asse', 'g', 'na', ').', 'set', 'en', 'abled', '(', 'false', ');', '\t\t\t\n\t', '}', '\n\t\n\t', 'public', '▁void', '▁cre', 'al', 'ista', '(', 'int', '▁back', ')', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t\t\n\t\t', 'date', '▁today', '▁=', '▁new', '▁date', '();', '\n\t\t', 'l', '_', 'vis', 'ual', '▁=', '▁new', '▁list', 'ap', 'ren', 'ot', 'az', 'ioni', '();', '\n\t\t', 'l', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'p', 'ren', 'ot', 'az', 'ioni', '(', 't', '_', 'c', 'ogn', 'ome', '.', 'get', 'text', '(', '),', '▁t', '_', 'n', 'ome', '.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '!', 'l', '.', 'is', 'empt', 'y', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁l', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', '▁=', '▁l', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', 'i', ');', '▁', '\n\t\t\t\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'p', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '3.', 'get', 'state', '())', '\t\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'mag', 'g', 'ior', 'ed', 'ata', '2', '(', '▁p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁today', '▁)', '▁)', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(', 'p', '.', 't', 'ost', 'ring', '());', '\n\t\t\t\t\t\t\t', 'l', '_', 'vis', 'ual', '.', 'add', 'p', 'ren', 'ot', 'azione', '(', 'p', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '1.', 'get', 'state', '())', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '.', 'is', 'empt', 'y', '())', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', 'if', '▁(', '(', '(', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', ').', 'get', 'date', '()', '▁==', '▁today', '.', 'get', 'date', '())', '\n\t\t\t\t\t\t\t\t\t', '&', '&', '▁(', '(', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', ').', 'get', 'month', '()', '▁==', '▁today', '.', 'get', 'month', '())', '\n\t\t\t\t\t\t\t\t\t', '&', '&', '▁(', '(', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', ').', 'get', 'year', '()', '▁==', '▁today', '.', 'get', 'year', '())', '▁)', '\n\t\t\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(', 'p', '.', 't', 'ost', 'ring', '());', '\t\t\t\n\t\t\t\t\t\t\t\t\t', 'l', '_', 'vis', 'ual', '.', 'add', 'p', 'ren', 'ot', 'azione', '(', 'p', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t', 'if', '▁(', '▁!', '(', '▁ut', 'ils', '.', 'data', '1', 'mag', 'g', 'ior', 'ed', 'ata', '2', '(', '▁p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁today', '▁)', '▁)', '▁&', '&', '▁', '\n\t\t\t\t\t\t\t\t', '!', '(', '▁ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2', '(', '▁p', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁today', ')', '▁)', '▁)', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', '//', 'controll', 'o', '▁che', '▁s', 'ia', '▁un', '▁s', 'og', 'gi', 'orn', 'ante', '▁g', 'ia', '▁registr', 'ato', '\n\t\t\t\t\t\t\t\t', 'if', '▁(', '!', 'l', '_', 'so', 'gg', '.', 'is', 'empt', 'y', '())', '\n\t\t\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(', 'p', '.', 't', 'ost', 'ring', '());', '\t\t\t\t\n\t\t\t\t\t\t\t\t\t', 'l', '_', 'vis', 'ual', '.', 'add', 'p', 'ren', 'ot', 'azione', '(', 'p', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\t\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\t\t\t\t\t\n\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁==', '▁', '0)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'back', '▁==', '▁', '0)', '\n\t\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁ness', 'una', '▁pren', 'ot', 'azione', '▁tro', 'v', 'ata', '!', '▁""', ');', '\n\t\t\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t\t\t\t\t', 'pack', '();', '\n\t\t\t\t\t', 'if', '▁(', 'to', '_', 'call', '▁==', '▁3)', '\n\t\t\t\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '1.', 'get', 'state', '())', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', '▁', '\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '2.', 'get', 'state', '())', '\n\t\t\t\t\t', '{', '\n\t\t', '▁', '\t\t\t', 'aggi', 'ung', 'i', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t\t\t', 'if', '▁(', 'to', '_', 'call', '▁==', '▁3)', '\n\t\t', '▁', '\t\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t\t\t', '▁', '\t\t', 'el', 'se', '\n\t\t\t', '▁', '\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(', 'ch', 'b', 'x', '3.', 'get', 'state', '())', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 's', 'ce', 'g', 'li', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t\t\t\t', 'pack', '();', '\n\t\t\t\t', '}', '\t\t\t\n\t\t\t\t', 'if', '▁(', 'first', '_', 'time', ')', '\n\t\t\t\t\t', 'first', '_', 'time', '▁=', '▁false', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'back', '▁==', '▁', '0)', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', '▁pren', 'ot', 'azione', '▁non', '▁tro', 'v', 'ata', '!', '▁""', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'back', '▁==', '▁1)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t\t\t\t', 'pan', 'el', '3.', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t\t\t\t\t\t', 'pack', '();', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t', '}', '\t\t\t\n\n\t', 'bo', 'olean', '▁nose', 'lection', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', '()', '▁==', '▁-', '1)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁se', 'lez', 'ion', 'are', '▁una', '▁pren', 'ot', 'azione', '▁dall', 'a', '▁list', 'a', '▁e', '▁rip', 'rem', 'ere', '▁il', '▁tast', 'o', '"");', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\t\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁start', 'add', 'so', 'g', 'gi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'list', 'as', 'og', 'gi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'p', 'ren', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '.', 'length', '()', '▁>', '▁', '0)', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁l', '_', 'so', 'gg', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(1)', ';', '\n\t\t\t\t', 'stan', 'za', '▁room', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'so', 'gg', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t\t', 'if', '▁(', '▁(', 'room', '.', 'get', 'post', 'il', 'etto', '()', '▁>', '▁l', '_', 'so', 'gg', '.', 'length', '())', '▁||', '\n\t', '▁', '\t\t\t', '(', '▁(', 'room', '.', 'get', 'post', 'il', 'etto', '()', '▁==', '▁l', '_', 'so', 'gg', '.', 'length', '())', '▁&', '&', '▁(', 'room', '.', 'get', 'dis', 'p', 'let', 'to', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '▁)', '▁)', '\n\t\t', '▁', '\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁ag', 'gi', 'ung', 'is', 'og', 'gi', 'orn', 'ante', '(', 'this', ',', '▁pren', ',', '▁room', ',', '▁l', '_', 'so', 'gg', '.', 'length', '());', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁ness', 'un', '▁post', 'o', '▁dis', 'pon', 'ib', 'ile', '▁n', 'ella', '▁stan', 'za', '▁n', '.', '▁""', '+', 'room', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁la', '▁pren', 'ot', 'azione', '▁non', '▁e', ""'"", '▁ad', 'em', 'pi', 'uta', '.', '▁prem', 'ere', ""▁'"", 's', 'ce', 'g', 'li', ""'"", '▁per', '▁gest', 'ire', '▁l', ""'"", 'arr', 'ivo', '▁client', 'i', '"");', '\n\t\t', 'el', 'se', '\n\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁extends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'azioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3,', '▁panel', '4;', '▁', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4;', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁cer', 'ca', ',', '▁sce', 'gli', ',', '▁ag', 'gi', 'ungi', ';', '\n', '▁text', 'field', '▁t', '_', 'n', 'ome', ',', '▁t', '_', 'cogn', 'ome', ';', '\n', '▁check', 'box', '▁ch', 'b', 'x', '1,', '▁ch', 'b', 'x', '2,', '▁ch', 'b', 'x', '3;', '\n', '▁check', 'box', 'group', '▁fil', 'tri', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'frame', '▁padre', '▁=', '▁new', '▁frame', '();', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'azioni', '▁l', ',', '▁l', '_', 'visual', ';', '\n', '▁', '\t', 'frame', '▁fig', 'lio', ';', '▁', '\n', '▁int', '▁to', '_', 'call', ';', '\n', '▁', '\t', 'boolean', '▁first', '_', 'time', '▁=', '▁true', ';', '▁', '\n', '▁', '\n', '▁public', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(', 'string', '▁tit', 'olo', ',', 'int', '▁k', ')', '\n', '▁{', '\n', '▁super', '(', 'tit', 'olo', ');', '\n', '▁to', '_', 'call', '▁=', '▁k', ';', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁dei', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁cer', 'ca', '▁=', '▁new', '▁button', '(""', '▁cer', 'ca', '▁""', ');', '\n', '▁sce', 'gli', '▁=', '▁new', '▁button', '(""', '▁sce', 'gli', '▁""', ');', '\n\t\t\t', 'aggi', 'ungi', '▁=', '▁new', '▁button', '(""', '▁ag', 'gi', 'ungi', '▁a', '▁stanza', '▁""', ');', '\n', '▁sce', 'gli', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁ag', 'gi', 'ungi', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁cer', 'ca', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '▁(""', 'ins', 'er', 'ire', '▁il', '▁nomin', 'ativo', '▁della', '▁pren', 'ot', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'cogn', 'ome', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n\t\t\t', 'label', '3', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', '"");', '\n\t\t\t', 'label', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\t\t\t', 'label', '4', '▁=', '▁new', '▁label', '(""', 'cer', 'care', '▁le', '▁pren', 'ot', 'azioni', '▁rele', 't', 'ive', '▁a', ':', '"");', '\n\t\t\t', 'label', '4.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁ne', '▁ren', 'do', '▁alc', 'uni', '▁non', '▁edit', 'ab', 'ili', '\n', '▁t', '_', 'n', 'ome', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁t', '_', 'cogn', 'ome', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁i', '▁fil', 'tri', '▁per', '▁la', '▁ricer', 'ca', '\n\t\t\t', 'filt', 'ri', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n\t\t\t', 'chb', 'x', '1', '▁=', '▁new', '▁check', 'box', '(""', '▁arr', 'ivi', '▁odier', 'ni', '"",', 'filt', 'ri', ',', '▁true', ');', '\n\t\t\t', 'chb', 'x', '2', '▁=', '▁new', '▁check', 'box', '(""', '▁sog', 'gi', 'orn', 'anti', '▁att', 'ual', 'i', '"",', 'filt', 'ri', ',', '▁false', ');', '\n\t\t\t', 'chb', 'x', '3', '▁=', '▁new', '▁check', 'box', '(""', '▁pren', 'ot', 'azioni', '▁future', '"",', '▁fil', 'tri', ',', 'false', ');', '▁', '\n\t\t\t\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁per', '▁ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁t', '_', 'cogn', 'ome', ',', '1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '2,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁t', '_', 'n', 'ome', ',', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '4,', '▁0,', '▁2,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁ch', 'b', 'x', '1,', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\t\t\t', 'if', '▁(', 'to', '_', 'call', '▁!=', '▁2', '▁&&', '▁to', '_', 'call', '▁!=', '▁1)', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'panel', '1,', '▁ch', 'b', 'x', '2,', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'to', '_', 'call', '▁!=', '▁3)', '\n\t', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁ch', 'b', 'x', '3,', '▁0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '5,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁cer', 'ca', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁sce', 'gli', ',', '▁2,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁if', '▁(', 'to', '_', 'call', '▁==', '3)', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ag', 'gi', 'ungi', ',', '▁3,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ricer', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '10,', 'false', ');', '\n', '▁list', 'a', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁label', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁list', 'a', ',', '▁0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.0,', '▁3.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁1,', '▁4,', '▁6,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁14,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'utils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'panel', '3.', 'set', 'visible', '(', 'false', ');', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'lista', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'visual', '.', 'get', 'p', 'ren', 'ot', 'azione', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t\t', 'switch', '▁(', 'to', '_', 'call', ')', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'case', '▁1:', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t\t', 'case', '▁2:', '▁start', 'canc', 'ella', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\t\n\t\t\t\t\t', 'case', '▁3:', '▁', '\n\t\t\t\t\t\t', 'if', '▁(!', 'chb', 'x', '2.', 'get', 'state', '())', '\n\t\t\t\t\t\t\t', 'start', 'ins', 'so', 'ggi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', ');', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t\t', 'start', 'aggi', 'ungi', '();', '\n\t\t\t\t\t\t', 'break', ';', '\n\t\t\t\t\t', 'case', '▁4:', '▁start', 'ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t', '▁sce', 'gli', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'if', '▁(!', 'nose', 'lection', '())', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'visual', '.', 'get', 'p', 'ren', 'ot', 'azione', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t\t\t', 'switch', '▁(', 'to', '_', 'call', ')', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'case', '▁1:', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t\t\t', 'case', '▁2:', '▁start', 'canc', 'ella', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\t\n\t\t\t\t\t\t', 'case', '▁3:', '▁start', 'ins', 'so', 'ggi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t\t\t', 'case', '▁4:', '▁start', 'ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', ');', '▁break', ';', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n', '▁', '\n\t\t', 'aggi', 'ungi', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'aggi', 'ungi', '();', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n\t\t\n\t\t', 't', '_', 'n', 'ome', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0);', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\n\t\t', 't', '_', 'cogn', 'ome', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0);', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\t\n\n', '▁', '\t', 'cer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', '0);', '\n\t\t\t', '}', '\t\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t', '▁', '\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n\n', '▁', '\t', 'chb', 'x', '1.', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0);', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'chb', 'x', '2.', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0);', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', 'chb', 'x', '3.', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'if', '▁(!', 'first', '_', 'time', ')', '\n', '▁', '\t\t\t', 'c', 'real', 'ista', '(', '0);', '\t\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁}', '▁', '\n\n\t', 'void', '▁start', 'aggi', 'ungi', '()', '\n\t', '{', '\n', '▁', '\t\t', 'if', '▁(!', 'nose', 'lection', '())', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'visual', '.', 'get', 'p', 'ren', 'ot', 'azione', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t', 'start', 'add', 'so', 'ggi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', ');', '\n\t\t', '}', '\n\t', '}', '\n\t\n\t', 'void', '▁start', 'mod', 'ific', 'a', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'stan', 'za', '▁stanza', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'mod', 'ific', 'ap', 'ren', 'ot', 'azione', '▁modify', '▁=', '▁new', '▁mod', 'ific', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', ',', '▁stanza', ',', '▁this', ');', '\n\t\t', 'mod', 'ify', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'mod', 'ify', '.', 'pad', 're', '▁=', '▁this', ';', '\n\t\t', 'not', 'ify', 'ro', 'omb', 'locked', '(', 'p', 'ren', ',', '▁modify', ',', '▁null', ');', '\t\n\t', '}', '\n\n\t', 'void', '▁start', 'canc', 'ella', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'stan', 'za', '▁stanza', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'canc', 'ell', 'ap', 'ren', 'ot', 'azione', '▁cancel', '▁=', '▁new', '▁canc', 'ell', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', ',', '▁stanza', ',', '▁this', ');', '\n\t\t', 'canc', 'el', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'canc', 'el', '.', 'pad', 're', '▁=', '▁this', ';', '\t\n\t', '}', '\n\t\n\t', 'void', '▁start', 'ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'stan', 'za', '▁stanza', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'ved', 'ip', 'ren', 'ot', 'azione', '▁visual', '▁=', '▁new', '▁ved', 'ip', 'ren', 'ot', 'azione', '(', 'p', 'ren', ',', '▁stanza', ',', '▁this', ');', '\n\t\t', 'visual', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'visual', '.', 'pad', 're', '▁=', '▁this', ';', '\t\n\t\t', 'not', 'ify', 'ro', 'omb', 'locked', '(', 'p', 'ren', ',', '▁null', ',', '▁visual', ');', '\t\n\t', '}', '\t\n\t\n\t', 'void', '▁start', 'ins', 'so', 'ggi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', ';', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'dis', 'pon', 'ibil', 'ita', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'if', '\t', '(', 'disp', '▁==', '▁null', ')', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁inconsist', 'en', 'ze', '▁sul', '▁database', '!', '▁""', ');', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁disp', '.', 'get', 'status', 'gi', 'orno', '(', 'date', 'utils', '.', 'dat', 'at', 'ogi', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()),', 'const', '.', 'anno', '_', 'cor', 'rente', ')', '▁==', '▁flag', '.', 'bl', 'occ', 'ata', '▁)', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', '▁la', '▁stanza', '▁""+', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '()', '+""', '▁non', '▁e', ""'"", '▁as', 'se', 'gn', 'ata', '▁a', '▁tale', '▁pren', 'ot', 'azione', '.', '▁mod', 'ific', 'are', '▁la', '▁pren', 'ot', 'azione', '.', '▁""', ');', '\n\t\t\t', 'else', '\n\t\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁ins', 'er', 'isc', 'is', 'oggi', 'orn', 'ante', '(', 'this', ',', '▁pren', ');', '\n\t\t', '}', '\n\t', '}', '\n\n\t\n\t', 'void', '▁notify', 'ro', 'omb', 'locked', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁mod', 'ific', 'ap', 'ren', 'ot', 'azione', '▁father', '1,', '▁ved', 'ip', 'ren', 'ot', 'azione', '▁father', '2)', '\n\t', '{', '\n\t\t', 'char', '▁flag', ';', '▁', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁elenco', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁(', 'elen', 'co', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '▁=', '▁ut', 'ils', '.', 'get', 'disp', 'of', 'room', '(', 'elen', 'co', '_', 'disp', ',', '▁pren', '.', 'get', 'num', 'stan', 'za', '(),', '▁false', ');', '\n\t\t', 'cost', 'anti', '▁cost', '▁=', '▁new', '▁cost', 'anti', '();', '\n\t\t', 'if', '▁(', '▁((', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', ').', 'get', 'year', '())', '+', '19', '00', '▁)', '▁==', '▁cost', '.', 'get', 'ann', 'oc', 'orr', '())', '\n\t\t\t', 'flag', '▁=', '▁const', '.', 'anno', '_', 'cor', 'rente', ';', '\n\t\t', 'else', '\n\t\t\t', 'flag', '▁=', '▁const', '.', 'anno', '_', 'p', 'ross', 'imo', ';', '\t\n\t\t', 'if', '▁(', 'father', '2', '▁==', '▁null', ')', '\n\t\t\t', 'if', '▁(', 'disp', '.', 'get', 'status', 'gi', 'orno', '(', 'date', 'utils', '.', 'dat', 'at', 'ogi', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()),', '▁flag', ')', '▁==', '▁flag', '.', 'bl', 'occ', 'ata', ')', '\n', '▁', '\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'father', '1,', '""', '▁att', 'enz', 'ione', ':', '▁per', '▁quest', 'a', '▁pren', 'ot', 'azione', '▁non', '▁e', ""'"", '▁anc', 'ora', '▁st', 'ata', '▁as', 'se', 'gn', 'ata', '▁la', '▁stanza', '!!', '"");', '\n', '▁', '\t\t', 'else', '\n\t\t\t\t', '(', 'father', '1.', 'asse', 'gna', ').', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'else', '\n\t\t\t', 'if', '▁(', 'disp', '.', 'get', 'status', 'gi', 'orno', '(', 'date', 'utils', '.', 'dat', 'at', 'ogi', 'orn', 'i', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()),', '▁flag', ')', '▁==', '▁flag', '.', 'bl', 'occ', 'ata', ')', '\n', '▁', '\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'father', '2,', '""', '▁att', 'enz', 'ione', ':', '▁per', '▁quest', 'a', '▁pren', 'ot', 'azione', '▁non', '▁e', ""'"", '▁anc', 'ora', '▁st', 'ata', '▁as', 'se', 'gn', 'ata', '▁la', '▁stanza', '!!', '"");', '\n', '▁', '\t\t', 'else', '\n\t\t\t\t', '(', 'father', '2.', 'asse', 'gna', ').', 'set', 'enabled', '(', 'false', ');', '\t\t\t\n\t', '}', '\n\t\n\t', 'public', '▁void', '▁cre', 'al', 'ista', '(', 'int', '▁back', ')', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'p', 'ren', 'ot', 'azione', '▁p', ';', '\t\t\n\t\t', 'date', '▁today', '▁=', '▁new', '▁date', '();', '\n\t\t', 'l', '_', 'visual', '▁=', '▁new', '▁list', 'ap', 'ren', 'ot', 'azioni', '();', '\n\t\t', 'l', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'p', 'ren', 'ot', 'azioni', '(', 't', '_', 'cogn', 'ome', '.', 'get', 'text', '(),', '▁t', '_', 'n', 'ome', '.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', 'l', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(!', 'l', '.', 'isempty', '())', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'lista', '.', 'remove', 'all', '();', '\n\t\t\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1;', '▁i', '▁<', '=', '▁l', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'p', '▁=', '▁l', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', 'i', ');', '▁', '\n\t\t\t\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'p', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t\t\t\t', 'if', '▁(', 'chb', 'x', '3.', 'get', 'state', '())', '\t\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', '▁ut', 'ils', '.', 'data', '1', 'mag', 'gior', 'ed', 'ata', '2(', '▁p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁today', '▁)', '▁)', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'lista', '.', 'add', 'item', '(', 'p', '.', 'tostring', '());', '\n\t\t\t\t\t\t\t', 'l', '_', 'visual', '.', 'add', 'p', 'ren', 'ot', 'azione', '(', 'p', ');', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'else', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'chb', 'x', '1.', 'get', 'state', '())', '\n\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '.', 'isempty', '())', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', 'if', '▁((', '(', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', ').', 'get', 'date', '()', '▁==', '▁today', '.', 'get', 'date', '())', '\n\t\t\t\t\t\t\t\t\t', '&', '&', '▁((', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', ').', 'get', 'month', '()', '▁==', '▁today', '.', 'get', 'month', '())', '\n\t\t\t\t\t\t\t\t\t', '&', '&', '▁((', 'p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', ').', 'get', 'year', '()', '▁==', '▁today', '.', 'get', 'year', '())', '▁)', '\n\t\t\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t\t\t', 'lista', '.', 'add', 'item', '(', 'p', '.', 'tostring', '());', '\t\t\t\n\t\t\t\t\t\t\t\t\t', 'l', '_', 'visual', '.', 'add', 'p', 'ren', 'ot', 'azione', '(', 'p', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', 'else', '\n\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t', 'if', '▁(', '▁!', '(', '▁ut', 'ils', '.', 'data', '1', 'mag', 'gior', 'ed', 'ata', '2(', '▁p', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁today', '▁)', '▁)', '▁&&', '▁', '\n\t\t\t\t\t\t\t\t', '!', '(', '▁ut', 'ils', '.', 'data', '1', 'min', 'ored', 'ata', '2(', '▁p', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁today', ')', '▁)', '▁)', '\n\t\t\t\t\t\t\t', '{', '\n\t\t\t\t\t\t\t\t', '//', 'controll', 'o', '▁che', '▁sia', '▁un', '▁sog', 'gi', 'orn', 'ante', '▁gia', '▁registr', 'ato', '\n\t\t\t\t\t\t\t\t', 'if', '▁(!', 'l', '_', 'so', 'gg', '.', 'isempty', '())', '\n\t\t\t\t\t\t\t\t', '{', '\t\n\t\t\t\t\t\t\t\t\t', 'lista', '.', 'add', 'item', '(', 'p', '.', 'tostring', '());', '\t\t\t\t\n\t\t\t\t\t\t\t\t\t', 'l', '_', 'visual', '.', 'add', 'p', 'ren', 'ot', 'azione', '(', 'p', ');', '\n\t\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t\t', '}', '\n\t\t\t\t\t\t', '}', '\t\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\t\t\t\t\t\n\t\t\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁==', '▁0)', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'back', '▁==', '▁0)', '\n\t\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁ness', 'una', '▁pren', 'ot', 'azione', '▁trov', 'ata', '!', '▁""', ');', '\n\t\t\t\t\t', 's', 'ce', 'gli', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\t\t', 'panel', '3.', 'set', 'visible', '(', 'false', ');', '\n\t\t\t\t\t', 'pack', '();', '\n\t\t\t\t\t', 'if', '▁(', 'to', '_', 'call', '▁==', '▁3)', '\n\t\t\t\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'else', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'chb', 'x', '1.', 'get', 'state', '())', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', '▁', '\t\t\t', 's', 'ce', 'gli', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(', 'chb', 'x', '2.', 'get', 'state', '())', '\n\t\t\t\t\t', '{', '\n\t\t', '▁', '\t\t\t', 'aggi', 'ungi', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t\t\t', 'if', '▁(', 'to', '_', 'call', '▁==', '▁3)', '\n\t\t', '▁', '\t\t\t\t', 's', 'ce', 'gli', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t\t\t', '▁', '\t\t', 'else', '\n\t\t\t', '▁', '\t\t\t', 's', 'ce', 'gli', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'if', '▁(', 'chb', 'x', '3.', 'get', 'state', '())', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 's', 'ce', 'gli', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t\t', '}', '\n\t\t\t\t\t', 'panel', '3.', 'set', 'visible', '(', 'true', ');', '\n\t\t\t\t\t', 'pack', '();', '\n\t\t\t\t', '}', '\t\t\t\n\t\t\t\t', 'if', '▁(', 'first', '_', 'time', ')', '\n\t\t\t\t\t', 'first', '_', 'time', '▁=', '▁false', ';', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'back', '▁==', '▁0)', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', '▁pren', 'ot', 'azione', '▁non', '▁trov', 'ata', '!', '▁""', ');', '\n\t\t\t\t', 'else', '\n\t\t\t\t', '{', '\n\t\t\t\t\t', 'if', '▁(', 'back', '▁==', '▁1)', '\n\t\t\t\t\t', '{', '\n\t\t\t\t\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t\t\t', 'lista', '.', 'remove', 'all', '();', '\n\t\t\t\t\t\t', 'panel', '3.', 'set', 'visible', '(', 'false', ');', '\n\t\t\t\t\t\t', 'pack', '();', '\n\t\t\t\t\t', '}', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '▁""', ');', '\n\t', '}', '\t\t\t\n\n\t', 'boolean', '▁nose', 'lection', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'if', '▁(', 'lista', '.', 'get', 'selected', 'index', '()', '▁==', '▁-', '1)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', '▁se', 'lez', 'ion', 'are', '▁una', '▁pren', 'ot', 'azione', '▁dalla', '▁list', 'a', '▁e', '▁rip', 'rem', 'ere', '▁il', '▁tast', 'o', '"");', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\t\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n\t', 'void', '▁start', 'add', 'so', 'ggi', 'orn', 'ante', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'list', 'as', 'oggi', 'orn', 'anti', '▁l', '_', 'so', 'gg', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'p', 'ren', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '▁!=', '▁null', ')', '\n\t\t\t', 'if', '▁(', 'l', '_', 'so', 'gg', '.', 'length', '()', '▁>', '▁0)', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁l', '_', 'so', 'gg', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(1)', ';', '\n\t\t\t\t', 'stan', 'za', '▁room', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'so', 'gg', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t\t', 'if', '▁(', '▁(', 'room', '.', 'get', 'post', 'il', 'etto', '()', '▁>', '▁l', '_', 'so', 'gg', '.', 'length', '())', '▁||', '\n\t', '▁', '\t\t\t', '(', '▁(', 'room', '.', 'get', 'post', 'il', 'etto', '()', '▁==', '▁l', '_', 'so', 'gg', '.', 'length', '())', '▁&&', '▁(', 'room', '.', 'get', 'disp', 'letto', 'agg', '()', '▁==', '▁const', '.', 'si', ')', '▁)', '▁)', '\n\t\t', '▁', '\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁ag', 'gi', 'ung', 'is', 'oggi', 'orn', 'ante', '(', 'this', ',', '▁pren', ',', '▁room', ',', '▁l', '_', 'so', 'gg', '.', 'length', '());', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', '▁ness', 'un', '▁post', 'o', '▁dis', 'pon', 'ib', 'ile', '▁nella', '▁stanza', '▁n', '.', '▁""+', 'room', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', '▁la', '▁pren', 'ot', 'azione', '▁non', '▁e', ""'"", '▁adem', 'pi', 'uta', '.', '▁prem', 'ere', ""▁'"", 's', 'ce', 'gli', ""'"", '▁per', '▁gest', 'ire', '▁l', ""'"", 'arr', 'ivo', '▁client', 'i', '"");', '\n\t\t', 'else', '\n\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁proble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class ricerca prenotazion extend frame prenotazion prenotazion dichiarazioni variabili panel panel panel panel panel label etichetta label label label label list lista button annulla cerca sceg aggiungi text field nome cognom checkbox chbx chbx chbx checkbox group filtri grid bag layout gridbag new grid bag layout frame padr new frame lista prenotazioni visual frame figlio int call boolean first time true public ricerca prenotazion string titolo int super titolo call setup panel init pack void setup panel set font configurazion sistema font base creo dei pulsanti disabilito due annulla new button fine cerca new button cerca sceg new button sceg aggiungi new button aggiungi stanza sceg set enabl fals aggiungi set enabl fals cerca set enabl true creo etichett etichetta new label inserir nominativo della prenotazion etichetta set font configurazion sistema font titolo label new label cognom label new label nome label new label risultato della ricerca label set font configurazion sistema font titolo label new label cercar prenotazioni relet label set font configurazion sistema font titolo creo text field rendo alcuni non editabili nome new text field cognom new text field creo pannello con filtri per ricerca filtri new checkbox group chbx new checkbox arrivi odierni filtri true chbx new checkbox soggiornanti attuali filtri fals chbx new checkbox prenotazioni futur filtri fals creo pannello alto per inserimento dei dati del client panel1 new panel (); panel1 set layout gridbag util constrain panel1 etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel1 label1 grid bag constraint none grid bag constraint northwest util constrain panel1 t_cognom grid bag constraint none grid bag constraint northwest util constrain panel1 label2 grid bag constraint none grid bag constraint northwest util constrain panel1 t_nome grid bag constraint none grid bag constraint northwest util constrain panel1 label4 grid bag constraint none grid bag constraint northwest util constrain panel1 chbx1 grid bag constraint none grid bag constraint northwest to_cal to_cal util constrain panel1 chbx2 grid bag constraint none grid bag constraint northwest to_cal util constrain panel1 chbx3 grid bag constraint none grid bag constraint northwest creo pannello basso con due pulsanti panel2 new panel (); panel2 set layout gridbag util constrain panel2 annulla grid bag constraint none grid bag constraint center util constrain panel2 cerca grid bag constraint none grid bag constraint center util constrain panel2 sceg grid bag constraint none grid bag constraint center to_cal util constrain panel2 aggiungi grid bag constraint none grid bag constraint center creo pannello con lista dei risultati della ricerca lista new list fals lista set font configurazion sistema font_allineato panel3 new panel (); panel3 set layout gridbag util constrain panel3 label3 grid bag constraint none grid bag constraint west util constrain panel3 lista grid bag constraint grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint center util constrain panel3 grid bag constraint horizont grid bag constraint west panel3 set visibl fals pack (); public void init lista add action listen new action listen public void action perform action event prenotazion l_visual get prenotazion lista get select index ())[ switch to_cal case start modifica prenotazion break case start cancella prenotazion break case chbx2 get state ()) start soggiornant prenotazion els start aggiungi (); break case start vedi prenotazion prenotazion break }); sceg add action listen new action listen public void action perform action event select ()) prenotazion l_visual get prenotazion lista get select index ())[ switch to_cal case start modifica prenotazion break case start cancella prenotazion break case start soggiornant prenotazion break case start vedi prenotazion prenotazion break }); aggiungi add action listen new action listen public void action perform action event start aggiungi (); }); t_nome add action listen new action listen public void action perform action event crea lista }); t_cognom add action listen new action listen public void action perform action event crea lista }); cerca add action listen new action listen public void action perform action event crea lista }); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); chbx1 add item listen new item listen public void item state chang item event first_tim crea lista }); chbx2 add item listen new item listen public void item state chang item event first_tim crea lista }); chbx3 add item listen new item listen public void item state chang item event first_tim crea lista }); void start aggiungi select ()) set enabl fals prenotazion l_visual get prenotazion lista get select index ())[ start add soggiornant prenotazion void start modifica prenotazion pren set enabl fals stanza stanza principal read stanza pren get num stanza ()); modifica prenotazion modifi new modifica prenotazion pren stanza modifi set visibl true modifi padr notifi room block pren modifi null void start cancella prenotazion pren set enabl fals stanza stanza principal read stanza pren get num stanza ()); cancella prenotazion cancel new cancella prenotazion pren stanza cancel set visibl true cancel padr void start vedi prenotazion prenotazion pren set enabl fals stanza stanza principal read stanza pren get num stanza ()); vedi prenotazion visual new vedi prenotazion pren stanza visual set visibl true visual padr notifi room block pren null visual void start soggiornant prenotazion pren disponibilita disp frame msg disp principal read disponibilita pren get num stanza ()); disp null msg new messag dialog inconsistenz sul databas ""); els disp get status giorno date util data togiorni pren get inizio sogg ()), const anno_corrent flag bloccata msg new avviso dialog stanza pren get num stanza ()+"" non assegnata tale prenotazion modificar prenotazion ""); els figlio new inserisci soggiornant pren void notifi room block prenotazion pren modifica prenotazion father1 vedi prenotazion father2 char flag frame msg lista disponibilita elenco_disp principal elenco disponibilita (); elenco_disp null msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return disponibilita disp util get disp room elenco_disp pren get num stanza (), fals costanti cost new costanti (); ((( pren get inizio sogg ()). get year ())+ 1900 cost get anno corr ()) flag const anno_corrent els flag const anno_prossimo father2 null disp get status giorno date util data togiorni pren get inizio sogg ()), flag flag bloccata msg new avviso dialog father1 attenzion per questa prenotazion non ancora stata assegnata stanza !!""); els father1 assegna set enabl fals els disp get status giorno date util data togiorni pren get inizio sogg ()), flag flag bloccata msg new avviso dialog father2 attenzion per questa prenotazion non ancora stata assegnata stanza !!""); els father2 assegna set enabl fals public void crea lista int back frame msg prenotazion date today new date (); l_visual new lista prenotazioni (); principal found prenotazioni t_cognom get text (), t_nome get text ()); null empti ()) lista get item count lista remov (); int length (); ++) get prenotazion lista soggiornanti l_sogg principal found soggiornanti get prenotazion ()); chbx3 get state ()) util data1maggior data2 get inizio sogg (), today lista add item string ()); l_visual add prenotazion els chbx1 get state ()) l_sogg empti ()) ((( get inizio sogg ()). get date today get date ()) get inizio sogg ()). get month today get month ()) get inizio sogg ()). get year today get year ()) lista add item string ()); l_visual add prenotazion els util data1maggior data2 get inizio sogg (), today util data1minor data2 get fine sogg (), today controllo che sia soggiornant gia registrato l_sogg empti ()) lista add item string ()); l_visual add prenotazion lista get item count back msg new avviso dialog nessuna prenotazion trovata ""); sceg set enabl fals aggiungi set enabl fals panel3 set visibl fals pack (); to_cal aggiungi set enabl fals els chbx1 get state ()) aggiungi set enabl fals sceg set enabl true chbx2 get state ()) aggiungi set enabl true to_cal sceg set enabl fals els sceg set enabl true chbx3 get state ()) sceg set enabl true panel3 set visibl true pack (); first_tim first_tim fals els back msg new avviso dialog prenotazion non trovata ""); els back lista get item count lista remov (); panel3 set visibl fals pack (); els msg new messag dialog problemi con databas ""); boolean select frame msg lista get select index msg new avviso dialog selezionar una prenotazion dalla lista ripremer tasto ""); return true return fals void start add soggiornant prenotazion pren lista soggiornanti l_sogg principal found soggiornanti pren get prenotazion ()); l_sogg null l_sogg length soggiornant sogg l_sogg get soggiornant stanza room principal read stanza sogg get num stanza ()); room get posti letto l_sogg length ()) room get posti letto l_sogg length ()) room get disp letto agg const figlio new aggiungi soggiornant pren room l_sogg length ()); els figlio new avviso dialog nessun posto disponibil nella stanza room get num stanza ()); els figlio new avviso dialog prenotazion non adempiuta premer sceg per gestir arrivo clienti ""); els figlio new messag dialog problemi con databas !"");"
67~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/VediStanza.java~VediStanza.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;

public class VediStanza extends DescrittoreStanze
{
	public VediStanza()
	{
		super(""Visualizzazione dei dati delle stanze"", ""Cerca"",4);
		init();
	}

	public void init()
	{
		testo1.setEditable(true);
		testo2.setEditable(false);
		testo3.setEditable(false);
		testo4.setEditable(false);
		mycheckboxes.setEnabled(false);

		
		
		Azione.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startCerca();
			}
		});
		
		testo1.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				startCerca();
			}
		});
	} // init
	
	void startCerca()
	{
		MessageDialog msg;
		
		Stanza room;
		if ((room = (Principale.db).readStanza(testo1.getText())) != null)
		{
			writeDatiStanza(room);
			Azione.setEnabled(true);
		}
		else
			msg = new MessageDialog(this, ""Stanza inesistente!"");
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁v', 'ed', 'istan', 'za', '▁ext', 'ends', '▁desc', 'rit', 'tor', 'est', 'an', 'ze', '\n', '{', '\n\t', 'publ', 'ic', '▁v', 'ed', 'istan', 'za', '(', ')', '\n\t', '{', '\n\t\t', 'sup', 'er', '(', '""', 'vis', 'ual', 'iz', 'z', 'az', 'ion', 'e', '▁de', 'i', '▁d', 'ati', '▁del', 'le', '▁stan', 'ze', '"",', '▁""', 'cer', 'ca', '"",', '4)', ';', '\n\t\t', 'in', 'it', '(', ');', '\n\t', '}', '\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t', 't', 'est', 'o', '2.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '3.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 't', 'est', 'o', '4.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t', 'my', 'che', 'ck', 'box', 'es', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\n\t\t\n\t\t\n\t\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'cer', 'ca', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 't', 'est', 'o', '1.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'st', 'art', 'cer', 'ca', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁/', '/', '▁init', '\n\t\n\t', 'v', 'oid', '▁start', 'cer', 'ca', '(', ')', '\n\t', '{', '\n\t\t', 'm', 'ess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁(', '(', 'room', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 't', 'est', 'o', '1.', 'get', 'text', '(', ')', ')', ')', '▁!', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁in', 'es', 'ist', 'ent', 'e', '!', '"")', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁ved', 'istan', 'za', '▁extends', '▁desc', 'rit', 'tor', 'estan', 'ze', '\n', '{', '\n\t', 'public', '▁ved', 'istan', 'za', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'vis', 'ual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁delle', '▁stan', 'ze', '"",', '▁""', 'cer', 'ca', '"",', '4)', ';', '\n\t\t', 'init', '();', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'my', 'check', 'box', 'es', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\n\t\t\n\t\t\n\t\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'cer', 'ca', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 'test', 'o', '1.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'cer', 'ca', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\t\n\t', 'v', 'oid', '▁start', 'cer', 'ca', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁(', '(', 'room', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '()', '))', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁in', 'es', 'ist', 'ente', '!', '"");', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁ved', 'istan', 'za', '▁extends', '▁desc', 'rit', 'tor', 'estan', 'ze', '\n', '{', '\n\t', 'public', '▁ved', 'istan', 'za', '()', '\n\t', '{', '\n\t\t', 'super', '(""', 'visual', 'izz', 'azione', '▁dei', '▁d', 'ati', '▁delle', '▁stan', 'ze', '"",', '▁""', 'cer', 'ca', '"",', '4);', '\n\t\t', 'init', '();', '\n\t', '}', '\n\n\t', 'public', '▁void', '▁init', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t', 'test', 'o', '2.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '3.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'test', 'o', '4.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t', 'my', 'check', 'boxes', '.', 'set', 'enabled', '(', 'false', ');', '\n\n\t\t\n\t\t\n\t\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'cer', 'ca', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t\t\n\t\t', 'test', 'o', '1.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'start', 'cer', 'ca', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\n\t', '}', '▁//', '▁init', '\n\t\n\t', 'void', '▁start', 'cer', 'ca', '()', '\n\t', '{', '\n\t\t', 'mess', 'aged', 'ial', 'og', '▁msg', ';', '\n\t\t\n\t\t', 'stan', 'za', '▁room', ';', '\n\t\t', 'if', '▁((', 'room', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'test', 'o', '1.', 'get', 'text', '()))', '▁!=', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'writ', 'ed', 'at', 'istan', 'za', '(', 'room', ');', '\n\t\t\t', 'azione', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'stan', 'za', '▁ines', 'ist', 'ente', '!', '"");', '\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import moduli public class vedi stanza extend descrittor stanz public vedi stanza super visualizzazion dei dati dell stanz cerca init public void init testo set edit true testo set edit fals testo set edit fals testo set edit fals mycheckbox set enabl fals azion add action listen new action listen public void action perform action event start cerca testo add action listen new action listen public void action perform action event start cerca init void start cerca messag dialog msg stanza room room principal read stanza testo get text null write dati stanza room azion set enabl true els msg new messag dialog stanza inesistent
68~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraRicercaSoggiornante.java~MascheraRicercaSoggiornante.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.ListaSoggiornanti;

public class MascheraRicercaSoggiornante extends Frame
{
   Button Annulla, Conferma;
   TextField testo[];
   Label etichetta1, etichetta2, etichetta3, etichetta4, etichetta5, label1, label2,
         label3, label5;
   Panel panel[];
   CheckboxGroup checkbox_group;
   Checkbox[] checkboxes;
   GridBagLayout gridbag = new GridBagLayout();
   List list_soggiornanti;
   Frame padre, figlio;
   
   // la seguente variabile serve per tenere in memoria la lista dei clienti
   // cercati nello storico
   ListaSoggiornanti elenco_soggiornanti;
   	
   public MascheraRicercaSoggiornante(Frame parent)
   {
      super(""Ricerca soggiornante"");
      padre = parent;
      padre.setEnabled(false);
      setupPanels();
      pack();
      init();
      this.setVisible(true);
   }

   void setupPanels()
   {
	  this.setFont(ConfigurazioneSistema.font_base);
      //Creo i pulsanti
      Annulla = new Button(""Annulla "");
      //Annulla.setFont(new Font(""Courier"", Font.PLAIN, 12));
      Conferma = new Button(""Conferma"");
      Conferma.setEnabled(false);
      //Conferma.setFont(new Font(""Courier"", Font.PLAIN, 12));

      //Creo le etichette
      etichetta1 = new Label(""Selezionare il tipo di ricerca che si desidera effettuare:"");
      etichetta1.setFont(ConfigurazioneSistema.font_titolo);
      etichetta2 = new Label(""Risultato della ricerca:"");
      etichetta2.setFont(ConfigurazioneSistema.font_titolo);
      etichetta3 = new Label(""Ricerca per stanza:"");
      etichetta3.setFont(ConfigurazioneSistema.font_titolo);
      etichetta4 = new Label(""Ricerca per nome:"");
      etichetta4.setFont(ConfigurazioneSistema.font_titolo);
      label1 = new Label(""Stanza numero"");
      label2 = new Label(""Cognome"");
      label3 = new Label(""Nome"");

      //Creo un Checkbox ad esclusione
      checkbox_group = new CheckboxGroup();
      checkboxes = new Checkbox[2];
      checkboxes[0] = new Checkbox(""Ricerca per stanza"",checkbox_group,false);
      checkboxes[1] = new Checkbox(""Ricerca per nome"",checkbox_group,false);


      //Creo i TextField e li rendo non editabili
      testo = new TextField[3];
      testo[0] = new TextField("""", 6);
      testo[1] = new TextField("""", 25);
      testo[2] = new TextField("""", 25);
      for(int i=0;i<testo.length;++i)
	      testo[i].setEditable(false);

      //creo una TextArea
      list_soggiornanti = new List(10, false);
      list_soggiornanti.setFont(ConfigurazioneSistema.font_allineato);

      panel=new Panel[5];
      for(int i=0;i<panel.length;++i)
      {
         panel[i]=new Panel();
         panel[i].setLayout(gridbag);
      }
      //Creo il pannello in alto a sinistra
      Utils.constrain(panel[1], etichetta1, 0, 0, 3, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0); 
      Utils.constrain(panel[1], checkboxes[0], 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0); 
      Utils.constrain(panel[1], checkboxes[1], 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);
            
      //Creo il pannello ricerca per stanza
      Utils.constrain(panel[2], etichetta3, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[2], label1, 0, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[2], testo[0], 1, 1, 1, 1, GridBagConstraints.NONE,
                      GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);

      //Creo il pannello ricerca per nome e cognome
      Utils.constrain(panel[3], etichetta4, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[3], label2, 0, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);
      Utils.constrain(panel[3], testo[1], 1, 1, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);
      Utils.constrain(panel[3], label3, 0, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.SOUTHWEST, 0.0, 0.0, 20, 5, 0, 20);
      Utils.constrain(panel[3], testo[2], 1, 2, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.SOUTHWEST, 1.0, 0.0, 20, 0, 0, 0);

      //Creo il pannello dei pulsanti
      Utils.constrain(panel[0], Annulla, 1, 0, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.EAST, 0.3, 0.0, 10, 0, 10, 5);
      Utils.constrain(panel[0], Conferma, 3, 0, 1, 1, GridBagConstraints.NONE,
                         GridBagConstraints.WEST, 0.3, 0.0, 10, 5, 10, 0);

      //Creo il pannello contenente la list_soggiornanti 
      Utils.constrain(panel[4], etichetta2, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);
      Utils.constrain(panel[4], list_soggiornanti, 0, 1, 1, 1, GridBagConstraints.BOTH,
                         GridBagConstraints.NORTHWEST, 1.0, 1.0, 0, 5, 0, 20);

      //Attacco i pannelli al frame
      this.setLayout(gridbag);
      Utils.constrain(this, panel[1], 0, 0, 5, 4, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[2], 0, 4, 5, 2, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[3], 0, 6, 5, 3,GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[0], 0, 11, 5, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.SOUTHEAST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this, panel[4], 0, 12, 5, 7, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);
   }

   public void init()
   {
      checkboxes[0].addItemListener(new ItemListener()   
      {
         public void itemStateChanged(ItemEvent e)
         {
            if(checkboxes[0].getState())
            {
             	if (list_soggiornanti.getItemCount() > 0)
					list_soggiornanti.removeAll();   
                testo[0].setEditable(true);
                for(int i=1;i<testo.length;++i)
                {  
                	testo[i].setText("""");
                   	testo[i].setEditable(false);
				}
				Conferma.setEnabled(true);
             }
         }
      });
                      
      checkboxes[1].addItemListener(new ItemListener()   
      {
         public void itemStateChanged(ItemEvent e)
         {
            if(checkboxes[1].getState())
            {
                if (list_soggiornanti.getItemCount() > 0)
					list_soggiornanti.removeAll();
                for(int i=1;i<3;++i)
                   testo[i].setEditable(true);
                testo[0].setText("""");
                testo[0].setEditable(false);
				Conferma.setEnabled(true);
             }
         }
      });

      Conferma.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
			startConferma();
         }
       });

      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            padre.setEnabled(true);
          }
       });
       
  		list_soggiornanti.addActionListener(new ActionListener()
      	{	
         	public void actionPerformed(ActionEvent e)
         	{
				startVediSogg();
          	}
       	});   
   }
   
   void startConferma()
   {
		int i;
		Frame msg;
				
		if (!errori())
		{
			if(checkboxes[0].getState())
				elenco_soggiornanti = (Principale.db).foundSoggiornanti(testo[0].getText(),true);
			else if(checkboxes[1].getState())
				elenco_soggiornanti = (Principale.db).foundSoggiornanti(testo[1].getText(), testo[2].getText());
			else
				elenco_soggiornanti = new ListaSoggiornanti();
			if (elenco_soggiornanti != null)
			{
				if (list_soggiornanti.getItemCount() > 0)
					list_soggiornanti.removeAll();
				for (i = 1; i <= elenco_soggiornanti.length(); i++)
					list_soggiornanti.addItem((elenco_soggiornanti.getSoggiornante(i)).toString());
				if (list_soggiornanti.getItemCount() == 0)
					msg = new AvvisoDialog(this, ""Trovata nessuna corrispondenza!"");
			}
			else
				msg = new MessageDialog(this, ""Problemi con il database!"");
		}
		else
			msg = new MessageDialog(this, ""Errore nei parametri!"");
   }
   
   boolean errori()
   {
		if(checkboxes[0].getState())
			return ( (testo[0].getText()).length() > 4 );
		else if(checkboxes[1].getState())
			return( (testo[1].getText()).length() > 20 || (testo[2].getText()).length() > 20 );
		else
			return true;
   }

	void startVediSogg()
	{
		if ( (elenco_soggiornanti != null) && (elenco_soggiornanti.length()>0) )		
			figlio = new VediSoggiornante(this, 
			elenco_soggiornanti.getSoggiornante(list_soggiornanti.getSelectedIndex()+1));
			
	}
}

"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'list', 'as', 'og', 'gi', 'orn', 'ant', 'i', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'ar', 'ic', 'erc', 'as', 'og', 'gi', 'orn', 'ante', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁con', 'fer', 'ma', ';', '\n', '▁text', 'field', '▁test', 'o', '[', ']', ';', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁et', 'ic', 'he', 'tt', 'a', '5,', '▁label', '1,', '▁label', '2,', '\n', '▁label', '3,', '▁label', '5', ';', '\n', '▁pan', 'el', '▁pan', 'el', '[', ']', ';', '\n', '▁check', 'box', 'gro', 'up', '▁check', 'box', '_', 'gro', 'up', ';', '\n', '▁check', 'box', '[', ']', '▁check', 'box', 'es', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁list', '▁list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', ';', '\n', '▁frame', '▁pad', 're', ',', '▁fig', 'l', 'io', ';', '\n', '▁', '\n', '▁/', '/', '▁la', '▁se', 'gu', 'ent', 'e', '▁vari', 'ab', 'ile', '▁serve', '▁per', '▁ten', 'ere', '▁in', '▁mem', 'oria', '▁la', '▁list', 'a', '▁de', 'i', '▁cl', 'ient', 'i', '\n', '▁/', '/', '▁cer', 'c', 'ati', '▁n', 'ello', '▁stor', 'ico', '\n', '▁list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '▁el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', ';', '\n', '▁', '\t\n', '▁public', '▁m', 'asc', 'her', 'ar', 'ic', 'erc', 'as', 'og', 'gi', 'orn', 'ante', '(', 'fr', 'ame', '▁paren', 't', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'ric', 'er', 'ca', '▁s', 'og', 'gi', 'orn', 'ante', '"")', ';', '\n', '▁pad', 're', '▁=', '▁paren', 't', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁init', '(', ');', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁p', 'uls', 'ant', 'i', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '▁""', ');', '\n', '▁/', '/', 'ann', 'ull', 'a', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ')', ');', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', '""', 'con', 'fer', 'ma', '"")', ';', '\n', '▁con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁/', '/', 'con', 'fer', 'ma', '.', 'set', 'f', 'ont', '(', 'new', '▁f', 'ont', '(', '""', 'cour', 'ier', '"",', '▁f', 'ont', '.', 'pl', 'ain', ',', '▁12', ')', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'se', 'le', 'z', 'ion', 'are', '▁il', '▁tip', 'o', '▁di', '▁ric', 'er', 'ca', '▁che', '▁si', '▁des', 'ider', 'a', '▁eff', 'ett', 'u', 'are', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2', '▁=', '▁new', '▁label', '(', '""', 'ris', 'ult', 'ato', '▁d', 'ella', '▁ric', 'er', 'ca', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '2.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3', '▁=', '▁new', '▁label', '(', '""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁et', 'ic', 'he', 'tt', 'a', '4', '▁=', '▁new', '▁label', '(', '""', 'ric', 'er', 'ca', '▁per', '▁n', 'ome', ':', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '4.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'stan', 'za', '▁num', 'ero', '"")', ';', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(', '""', 'c', 'ogn', 'ome', '"")', ';', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '"")', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'gro', 'up', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n', '▁check', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', 'ric', 'er', 'ca', '▁per', '▁n', 'ome', '"",', 'che', 'ck', 'box', '_', 'gro', 'up', ',', 'f', 'al', 'se', ');', '\n\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁ed', 'it', 'ab', 'ili', '\n', '▁test', 'o', '▁=', '▁new', '▁text', 'field', '[', '3', ']', ';', '\n', '▁test', 'o', '[', '0', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁6', ');', '\n', '▁test', 'o', '[', '1', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁2', '5)', ';', '\n', '▁test', 'o', '[', '2', ']', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁2', '5)', ';', '\n', '▁for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', 't', 'est', 'o', '.', 'l', 'ength', ';', '+', '+', 'i', ')', '\n\t', '▁test', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁un', 'a', '▁text', 'are', 'a', '\n', '▁list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '▁=', '▁new', '▁list', '(', '1', '0,', '▁fal', 'se', ');', '\n', '▁list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'all', 'ine', 'ato', ');', '\n\n', '▁pan', 'el', '=', 'new', '▁pan', 'el', '[', '5', ']', ';', '\n', '▁for', '(', 'int', '▁i', '=', '0', ';', 'i', '<', 'pan', 'el', '.', 'l', 'ength', ';', '+', '+', 'i', ')', '\n', '▁{', '\n', '▁pan', 'el', '[', 'i', ']', '=', 'new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '[', 'i', ']', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁}', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁a', '▁sin', 'ist', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '0', ']', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', ']', ',', '▁check', 'box', 'es', '[', '1', ']', ',', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁stan', 'za', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', ']', ',', '▁test', 'o', '[', '0', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁n', 'ome', '▁e', '▁co', 'gn', 'ome', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '4,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁label', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁test', 'o', '[', '1', ']', ',', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁label', '3,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', ']', ',', '▁test', 'o', '[', '2', ']', ',', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁20,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁de', 'i', '▁p', 'uls', 'ant', 'i', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', ']', ',', '▁ann', 'ull', 'a', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁', '0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', ']', ',', '▁con', 'fer', 'ma', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0)', ';', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁cont', 'en', 'ent', 'e', '▁la', '▁list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁et', 'ic', 'he', 'tt', 'a', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', ']', ',', '▁list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '1', ']', ',', '▁', '0,', '▁', '0,', '▁5,', '▁4,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '2', ']', ',', '▁', '0,', '▁4,', '▁5,', '▁2,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '3', ']', ',', '▁', '0,', '▁6,', '▁5,', '▁3,', 'gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '0', ']', ',', '▁', '0,', '▁11,', '▁5,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'so', 'ut', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '[', '4', ']', ',', '▁', '0,', '▁12,', '▁5,', '▁7,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁check', 'box', 'es', '[', '0', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'rem', 'ove', 'all', '(', ');', '▁', '\n', '▁test', 'o', '[', '0', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', 't', 'est', 'o', '.', 'l', 'ength', ';', '+', '+', 'i', ')', '\n', '▁{', '▁', '\n', '▁', '\t', 't', 'est', 'o', '[', 'i', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁', '\t', 't', 'est', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'box', 'es', '[', '1', ']', '.', 'ad', 'd', 'it', 'em', 'list', 'en', 'er', '(', 'new', '▁it', 'em', 'list', 'en', 'er', '(', ')', '▁', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁it', 'em', 'state', 'ch', 'anged', '(', 'it', 'em', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n', '▁{', '\n', '▁if', '▁(', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'rem', 'ove', 'all', '(', ');', '\n', '▁for', '(', 'int', '▁i', '=', '1', ';', 'i', '<', '3', ';', '+', '+', 'i', ')', '\n', '▁test', 'o', '[', 'i', ']', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁test', 'o', '[', '0', ']', '.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n', '▁test', 'o', '[', '0', ']', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁con', 'fer', 'ma', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'st', 'art', 'con', 'fer', 'ma', '(', ');', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\t\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'ved', 'is', 'og', 'g', '(', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁start', 'con', 'fer', 'ma', '(', ')', '\n', '▁{', '\n\t\t', 'int', '▁i', ';', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\t\t\n\t\t', 'if', '▁(', '!', 'er', 'ror', 'i', '(', ')', ')', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', '),', 'tr', 'ue', ');', '\n\t\t\t', 'el', 'se', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'fo', 'und', 'so', 'g', 'gi', 'orn', 'ant', 'i', '(', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', '),', '▁test', 'o', '[', '2', ']', '.', 'get', 'text', '(', ')', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '▁=', '▁new', '▁list', 'as', 'og', 'gi', 'orn', 'ant', 'i', '(', ');', '\n\t\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '▁!', '=', '▁n', 'ull', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁', '>', '▁', '0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t\t\t', 'for', '▁(', 'i', '▁=', '▁1', ';', '▁i', '▁', '<', '=', '▁el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'ad', 'd', 'it', 'em', '(', '(', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'i', ')', ').', 't', 'ost', 'ring', '(', ')', ');', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'get', 'it', 'em', 'count', '(', ')', '▁=', '=', '▁', '0)', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 't', 'ro', 'v', 'ata', '▁n', 'ess', 'una', '▁cor', 'ris', 'p', 'ond', 'en', 'za', '!', '"")', ';', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '!', '"")', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁ne', 'i', '▁param', 'et', 'ri', '!', '"")', ';', '\n', '▁}', '\n', '▁', '\n', '▁bo', 'ole', 'an', '▁er', 'ror', 'i', '(', ')', '\n', '▁{', '\n\t\t', 'if', '(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', 'ret', 'urn', '▁(', '▁(', 't', 'est', 'o', '[', '0', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '>', '▁4', '▁', ');', '\n\t\t', 'el', 'se', '▁if', '(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', ')', '\n\t\t\t', 'ret', 'urn', '(', '▁(', 't', 'est', 'o', '[', '1', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '>', '▁20', '▁||', '▁(', 't', 'est', 'o', '[', '2', ']', '.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '>', '▁20', '▁', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'ved', 'is', 'og', 'g', '(', ')', '\n\t', '{', '\n\t\t', 'if', '▁(', '▁(', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '▁!', '=', '▁n', 'ull', ')', '▁&', '&', '▁(', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'l', 'ength', '(', ')', '>', '0)', '▁)', '\t\t\n\t\t\t', 'f', 'ig', 'l', 'io', '▁=', '▁new', '▁v', 'ed', 'is', 'og', 'gi', 'orn', 'ante', '(', 'this', ',', '▁', '\n\t\t\t', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'list', '_', 'so', 'g', 'gi', 'orn', 'ant', 'i', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '+', '1)', ');', '\n\t\t\t\n\t', '}', '\n', '}', '\n\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'list', 'as', 'og', 'gi', 'orn', 'anti', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'ar', 'ic', 'erc', 'as', 'og', 'gi', 'orn', 'ante', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ann', 'ulla', ',', '▁con', 'fer', 'ma', ';', '\n', '▁text', 'field', '▁test', 'o', '[]', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', '4,', '▁et', 'iche', 'tta', '5,', '▁label', '1,', '▁label', '2,', '\n', '▁label', '3,', '▁label', '5', ';', '\n', '▁panel', '▁panel', '[]', ';', '\n', '▁check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁check', 'box', '[]', '▁check', 'box', 'es', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁list', '▁list', '_', 'so', 'g', 'gi', 'orn', 'anti', ';', '\n', '▁frame', '▁pad', 're', ',', '▁fig', 'lio', ';', '\n', '▁', '\n', '▁//', '▁la', '▁se', 'gu', 'ente', '▁vari', 'ab', 'ile', '▁serve', '▁per', '▁ten', 'ere', '▁in', '▁mem', 'oria', '▁la', '▁list', 'a', '▁dei', '▁client', 'i', '\n', '▁//', '▁cer', 'c', 'ati', '▁n', 'ello', '▁stor', 'ico', '\n', '▁list', 'as', 'og', 'gi', 'orn', 'anti', '▁el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', ';', '\n', '▁', '\t\n', '▁public', '▁masc', 'her', 'ar', 'ic', 'erc', 'as', 'og', 'gi', 'orn', 'ante', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'ric', 'er', 'ca', '▁s', 'og', 'gi', 'orn', 'ante', '"");', '\n', '▁pad', 're', '▁=', '▁parent', ';', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁pack', '();', '\n', '▁init', '();', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '▁""', ');', '\n', '▁//', 'ann', 'ulla', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁//', 'con', 'fer', 'ma', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'se', 'lez', 'ion', 'are', '▁il', '▁tip', 'o', '▁di', '▁ric', 'er', 'ca', '▁che', '▁si', '▁des', 'ider', 'a', '▁eff', 'ett', 'u', 'are', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ric', 'er', 'ca', ':', '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '4', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁n', 'ome', ':', '"");', '\n', '▁et', 'iche', 'tta', '4.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁num', 'ero', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'c', 'ogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '2', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁stan', 'za', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n', '▁check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁n', 'ome', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁edit', 'ab', 'ili', '\n', '▁test', 'o', '▁=', '▁new', '▁text', 'field', '[', '3', ']', ';', '\n', '▁test', 'o', '[', '0', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁6', ');', '\n', '▁test', 'o', '[', '1]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁2', '5)', ';', '\n', '▁test', 'o', '[', '2', ']', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁2', '5)', ';', '\n', '▁for', '(', 'int', '▁i', '=0', ';', 'i', '<', 'test', 'o', '.', 'length', ';', '++', 'i', ')', '\n\t', '▁test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁una', '▁text', 'area', '\n', '▁list', '_', 'so', 'g', 'gi', 'orn', 'anti', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n', '▁list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\n', '▁panel', '=', 'new', '▁panel', '[', '5', ']', ';', '\n', '▁for', '(', 'int', '▁i', '=0', ';', 'i', '<', 'pan', 'el', '.', 'length', ';', '++', 'i', ')', '\n', '▁{', '\n', '▁panel', '[', 'i', ']', '=', 'new', '▁panel', '();', '\n', '▁panel', '[', 'i', '].', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁}', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁sin', 'ist', 'ra', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '0', '],', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '1', '],', '▁check', 'box', 'es', '[', '1', '],', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁', '0)', ';', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁stan', 'za', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁et', 'iche', 'tta', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '2', '],', '▁test', 'o', '[', '0', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ric', 'er', 'ca', '▁per', '▁n', 'ome', '▁e', '▁cogn', 'ome', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁et', 'iche', 'tta', '4,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁label', '2,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁test', 'o', '[', '1', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁label', '3,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁', '0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '3', '],', '▁test', 'o', '[', '2', '],', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.', '0,', '▁0.', '0,', '▁20,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁puls', 'anti', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', '],', '▁ann', 'ulla', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁', '0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '0', '],', '▁con', 'fer', 'ma', ',', '▁3,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0)', ';', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁list', '_', 'so', 'g', 'gi', 'orn', 'anti', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁et', 'iche', 'tta', '2,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁10,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '[', '4', '],', '▁list', '_', 'so', 'g', 'gi', 'orn', 'anti', ',', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁1.', '0,', '▁', '0,', '▁5,', '▁', '0,', '▁20', ');', '\n\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '1', '],', '▁', '0,', '▁', '0,', '▁5,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '2', '],', '▁', '0,', '▁4,', '▁5,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '3', '],', '▁', '0,', '▁6,', '▁5,', '▁3,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '0', '],', '▁', '0,', '▁11,', '▁5,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '[', '4', '],', '▁', '0,', '▁12,', '▁5,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁1.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁check', 'box', 'es', '[', '0', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'rem', 'ove', 'all', '();', '▁', '\n', '▁test', 'o', '[', '0', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁for', '(', 'int', '▁i', '=1', ';', 'i', '<', 'test', 'o', '.', 'length', ';', '++', 'i', ')', '\n', '▁{', '▁', '\n', '▁', '\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁', '\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'box', 'es', '[', '1', '].', 'add', 'it', 'em', 'list', 'ener', '(', 'new', '▁item', 'list', 'ener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'it', 'em', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n', '▁{', '\n', '▁if', '▁(', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'rem', 'ove', 'all', '();', '\n', '▁for', '(', 'int', '▁i', '=1', ';', 'i', '<', '3', ';', '++', 'i', ')', '\n', '▁test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁test', 'o', '[', '0', '].', 's', 'ette', 'xt', '(""', '"");', '\n', '▁test', 'o', '[', '0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁con', 'fer', 'ma', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\t\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'ved', 'is', 'ogg', '();', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁start', 'con', 'fer', 'ma', '()', '\n', '▁{', '\n\t\t', 'int', '▁i', ';', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\t\t\n\t\t', 'if', '▁(', '!', 'error', 'i', '())', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'test', 'o', '[', '0', '].', 'get', 'text', '(', '),', 'true', ');', '\n\t\t\t', 'el', 'se', '▁if', '(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'found', 'so', 'g', 'gi', 'orn', 'anti', '(', 'test', 'o', '[', '1', '].', 'get', 'text', '(', '),', '▁test', 'o', '[', '2', '].', 'get', 'text', '());', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '▁=', '▁new', '▁list', 'as', 'og', 'gi', 'orn', 'anti', '();', '\n\t\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'get', 'it', 'em', 'count', '()', '▁>', '▁', '0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'rem', 'ove', 'all', '();', '\n\t\t\t\t', 'for', '▁(', 'i', '▁=', '▁1', ';', '▁i', '▁<', '=', '▁el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t\t\t', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'add', 'it', 'em', '(', '(', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'i', ')', ').', 't', 'ost', 'ring', '());', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'get', 'it', 'em', 'count', '()', '▁==', '▁', '0)', '\n\t\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',', '▁""', 't', 'rov', 'ata', '▁ness', 'una', '▁cor', 'ris', 'p', 'ond', 'enza', '!', '"");', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁ne', 'i', '▁param', 'et', 'ri', '!', '"");', '\n', '▁}', '\n', '▁', '\n', '▁bo', 'olean', '▁error', 'i', '()', '\n', '▁{', '\n\t\t', 'if', '(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '▁(', '▁(', 'test', 'o', '[', '0', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁4', '▁', ');', '\n\t\t', 'el', 'se', '▁if', '(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '(', '▁(', 'test', 'o', '[', '1', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁20', '▁||', '▁(', 'test', 'o', '[', '2', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁20', '▁', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'return', '▁true', ';', '\n', '▁}', '\n\n\t', 'v', 'oid', '▁start', 'ved', 'is', 'ogg', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', '▁(', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '▁!=', '▁null', ')', '▁&', '&', '▁(', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'length', '()', '>', '0)', '▁)', '\t\t\n\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁ved', 'is', 'og', 'gi', 'orn', 'ante', '(', 'this', ',', '▁', '\n\t\t\t', 'el', 'en', 'co', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'get', 'so', 'g', 'gi', 'orn', 'ante', '(', 'list', '_', 'so', 'g', 'gi', 'orn', 'anti', '.', 'get', 'se', 'lected', 'index', '()', '+', '1)', ');', '\n\t\t\t\n\t', '}', '\n', '}', '\n\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'list', 'as', 'oggi', 'orn', 'anti', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'aric', 'erc', 'as', 'oggi', 'orn', 'ante', '▁extends', '▁frame', '\n', '{', '\n', '▁button', '▁ann', 'ulla', ',', '▁confer', 'ma', ';', '\n', '▁text', 'field', '▁testo', '[]', ';', '\n', '▁label', '▁et', 'iche', 'tta', '1,', '▁et', 'iche', 'tta', '2,', '▁et', 'iche', 'tta', '3,', '▁et', 'iche', 'tta', '4,', '▁et', 'iche', 'tta', '5,', '▁label', '1,', '▁label', '2,', '\n', '▁label', '3,', '▁label', '5;', '\n', '▁panel', '▁panel', '[]', ';', '\n', '▁check', 'box', 'group', '▁check', 'box', '_', 'group', ';', '\n', '▁check', 'box', '[]', '▁check', 'boxes', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n', '▁list', '▁list', '_', 'so', 'ggi', 'orn', 'anti', ';', '\n', '▁frame', '▁padre', ',', '▁fig', 'lio', ';', '\n', '▁', '\n', '▁//', '▁la', '▁segu', 'ente', '▁vari', 'abile', '▁serve', '▁per', '▁ten', 'ere', '▁in', '▁memoria', '▁la', '▁list', 'a', '▁dei', '▁client', 'i', '\n', '▁//', '▁cer', 'c', 'ati', '▁nello', '▁stor', 'ico', '\n', '▁list', 'as', 'oggi', 'orn', 'anti', '▁elenco', '_', 'so', 'ggi', 'orn', 'anti', ';', '\n', '▁', '\t\n', '▁public', '▁masc', 'her', 'aric', 'erc', 'as', 'oggi', 'orn', 'ante', '(', 'frame', '▁parent', ')', '\n', '▁{', '\n', '▁super', '(""', 'ric', 'er', 'ca', '▁sog', 'gi', 'orn', 'ante', '"");', '\n', '▁padre', '▁=', '▁parent', ';', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁pack', '();', '\n', '▁init', '();', '\n', '▁this', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁i', '▁puls', 'anti', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '▁""', ');', '\n', '▁//', 'ann', 'ulla', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n', '▁confer', 'ma', '▁=', '▁new', '▁button', '(""', 'con', 'fer', 'ma', '"");', '\n', '▁confer', 'ma', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁//', 'con', 'fer', 'ma', '.', 'set', 'font', '(', 'new', '▁font', '(""', 'cour', 'ier', '"",', '▁font', '.', 'plain', ',', '▁12)', ');', '\n\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'se', 'lez', 'ion', 'are', '▁il', '▁tipo', '▁di', '▁ricer', 'ca', '▁che', '▁si', '▁desider', 'a', '▁eff', 'ettu', 'are', ':', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '2', '▁=', '▁new', '▁label', '(""', 'ris', 'ult', 'ato', '▁della', '▁ricer', 'ca', ':', '"");', '\n', '▁et', 'iche', 'tta', '2.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '3', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁stanza', ':', '"");', '\n', '▁et', 'iche', 'tta', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁et', 'iche', 'tta', '4', '▁=', '▁new', '▁label', '(""', 'ric', 'er', 'ca', '▁per', '▁nome', ':', '"");', '\n', '▁et', 'iche', 'tta', '4.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁numero', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'cogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n\n', '▁//', 'cre', 'o', '▁un', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁check', 'box', '_', 'group', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'boxes', '▁=', '▁new', '▁check', 'box', '[', '2', '];', '\n', '▁check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁stanza', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n', '▁check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', 'ric', 'er', 'ca', '▁per', '▁nome', '"",', 'check', 'box', '_', 'group', ',', 'false', ');', '\n\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '▁e', '▁li', '▁ren', 'do', '▁non', '▁edit', 'ab', 'ili', '\n', '▁testo', '▁=', '▁new', '▁text', 'field', '[', '3', '];', '\n', '▁testo', '[0]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁6', ');', '\n', '▁testo', '[1]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁2', '5);', '\n', '▁testo', '[', '2]', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁2', '5);', '\n', '▁for', '(', 'int', '▁i', '=0;', 'i', '<', 'test', 'o', '.', 'length', ';', '++', 'i', ')', '\n\t', '▁testo', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\n', '▁//', 'cre', 'o', '▁una', '▁text', 'area', '\n', '▁list', '_', 'so', 'ggi', 'orn', 'anti', '▁=', '▁new', '▁list', '(', '10,', '▁false', ');', '\n', '▁list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'all', 'ine', 'ato', ');', '\n\n', '▁panel', '=', 'new', '▁panel', '[', '5', '];', '\n', '▁for', '(', 'int', '▁i', '=0;', 'i', '<', 'panel', '.', 'length', ';', '++', 'i', ')', '\n', '▁{', '\n', '▁panel', '[', 'i', ']', '=', 'new', '▁panel', '();', '\n', '▁panel', '[', 'i', '].', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁}', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁a', '▁sin', 'istra', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁3,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[0', '],', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[1', '],', '▁check', 'boxes', '[1', '],', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁', '0);', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ricer', 'ca', '▁per', '▁stanza', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁et', 'iche', 'tta', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '2', '],', '▁testo', '[0', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁ricer', 'ca', '▁per', '▁nome', '▁e', '▁cogn', 'ome', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁et', 'iche', 'tta', '4,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁label', '2,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁testo', '[1', '],', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁label', '3,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁0.', '0,', '▁0.', '0,', '▁20,', '▁5,', '▁0,', '▁20', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '3', '],', '▁testo', '[', '2', '],', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southwest', ',', '▁1.0,', '▁0.', '0,', '▁20,', '▁0,', '▁0,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁dei', '▁puls', 'anti', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[0', '],', '▁ann', 'ulla', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁0,', '▁10,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[0', '],', '▁confer', 'ma', ',', '▁3,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0.', '3,', '▁0.', '0,', '▁10,', '▁5,', '▁10,', '▁', '0);', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁cont', 'en', 'ente', '▁la', '▁list', '_', 'so', 'ggi', 'orn', 'anti', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁et', 'iche', 'tta', '2,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁10,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '[', '4', '],', '▁list', '_', 'so', 'ggi', 'orn', 'anti', ',', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁1.0,', '▁0,', '▁5,', '▁0,', '▁20', ');', '\n\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[1', '],', '▁0,', '▁0,', '▁5,', '▁4,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '2', '],', '▁0,', '▁4,', '▁5,', '▁2,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '3', '],', '▁0,', '▁6,', '▁5,', '▁3,', 'grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[0', '],', '▁0,', '▁11,', '▁5,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'southeast', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '[', '4', '],', '▁0,', '▁12,', '▁5,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁1.0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁check', 'boxes', '[0', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n', '▁{', '\n', '▁', '\t', 'if', '▁(', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'remove', 'all', '();', '▁', '\n', '▁testo', '[0', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁for', '(', 'int', '▁i', '=1', ';', 'i', '<', 'test', 'o', '.', 'length', ';', '++', 'i', ')', '\n', '▁{', '▁', '\n', '▁', '\t', 'test', 'o', '[', 'i', '].', 's', 'ette', 'xt', '("""");', '\n', '▁', '\t', 'test', 'o', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', '}', '\n\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁check', 'boxes', '[1', '].', 'add', 'item', 'listener', '(', 'new', '▁item', 'listener', '()', '▁', '\n', '▁{', '\n', '▁public', '▁void', '▁item', 'state', 'changed', '(', 'item', 'event', '▁e', ')', '\n', '▁{', '\n', '▁if', '(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n', '▁{', '\n', '▁if', '▁(', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'remove', 'all', '();', '\n', '▁for', '(', 'int', '▁i', '=1', ';', 'i', '<', '3;', '++', 'i', ')', '\n', '▁testo', '[', 'i', '].', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁testo', '[0', '].', 's', 'ette', 'xt', '("""");', '\n', '▁testo', '[0', '].', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'con', 'fer', 'ma', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁confer', 'ma', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n\t\t\t', 'start', 'con', 'fer', 'ma', '();', '\n', '▁}', '\n', '▁}', ');', '\n\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t\t', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\t\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'ved', 'is', 'ogg', '();', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁start', 'con', 'fer', 'ma', '()', '\n', '▁{', '\n\t\t', 'int', '▁i', ';', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\t\t\n\t\t', 'if', '▁(!', 'error', 'i', '())', '\n\t\t', '{', '\n\t\t\t', 'if', '(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n\t\t\t\t', 'elen', 'co', '_', 'so', 'ggi', 'orn', 'anti', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'test', 'o', '[0', '].', 'get', 'text', '(),', 'true', ');', '\n\t\t\t', 'else', '▁if', '(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n\t\t\t\t', 'elen', 'co', '_', 'so', 'ggi', 'orn', 'anti', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'found', 'so', 'ggi', 'orn', 'anti', '(', 'test', 'o', '[1', '].', 'get', 'text', '(),', '▁testo', '[', '2', '].', 'get', 'text', '());', '\n\t\t\t', 'else', '\n\t\t\t\t', 'elen', 'co', '_', 'so', 'ggi', 'orn', 'anti', '▁=', '▁new', '▁list', 'as', 'oggi', 'orn', 'anti', '();', '\n\t\t\t', 'if', '▁(', 'elen', 'co', '_', 'so', 'ggi', 'orn', 'anti', '▁!=', '▁null', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'get', 'item', 'count', '()', '▁>', '▁0)', '\n\t\t\t\t\t', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'remove', 'all', '();', '\n\t\t\t\t', 'for', '▁(', 'i', '▁=', '▁1;', '▁i', '▁<', '=', '▁elenco', '_', 'so', 'ggi', 'orn', 'anti', '.', 'length', '();', '▁i', '++)', '\n\t\t\t\t\t', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'add', 'item', '((', 'elen', 'co', '_', 'so', 'ggi', 'orn', 'anti', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(', 'i', ')).', 'tostring', '());', '\n\t\t\t\t', 'if', '▁(', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'get', 'item', 'count', '()', '▁==', '▁0)', '\n\t\t\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',', '▁""', 't', 'rov', 'ata', '▁ness', 'una', '▁cor', 'ris', 'pond', 'enza', '!', '"");', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', '!', '"");', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'er', 'r', 'ore', '▁nei', '▁paramet', 'ri', '!', '"");', '\n', '▁}', '\n', '▁', '\n', '▁boolean', '▁error', 'i', '()', '\n', '▁{', '\n\t\t', 'if', '(', 'check', 'boxes', '[0', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '▁(', '▁(', 'test', 'o', '[0', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁4', '▁);', '\n\t\t', 'else', '▁if', '(', 'check', 'boxes', '[1', '].', 'get', 'state', '())', '\n\t\t\t', 'return', '(', '▁(', 'test', 'o', '[1', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁20', '▁||', '▁(', 'test', 'o', '[', '2', '].', 'get', 'text', '()', ').', 'length', '()', '▁>', '▁20', '▁);', '\n\t\t', 'else', '\n\t\t\t', 'return', '▁true', ';', '\n', '▁}', '\n\n\t', 'void', '▁start', 'ved', 'is', 'ogg', '()', '\n\t', '{', '\n\t\t', 'if', '▁(', '▁(', 'elen', 'co', '_', 'so', 'ggi', 'orn', 'anti', '▁!=', '▁null', ')', '▁&&', '▁(', 'elen', 'co', '_', 'so', 'ggi', 'orn', 'anti', '.', 'length', '()', '>', '0)', '▁)', '\t\t\n\t\t\t', 'fig', 'lio', '▁=', '▁new', '▁ved', 'is', 'oggi', 'orn', 'ante', '(', 'this', ',', '▁', '\n\t\t\t', 'elen', 'co', '_', 'so', 'ggi', 'orn', 'anti', '.', 'get', 'so', 'ggi', 'orn', 'ante', '(', 'list', '_', 'so', 'ggi', 'orn', 'anti', '.', 'get', 'selected', 'index', '()', '+1)', ');', '\n\t\t\t\n\t', '}', '\n', '}', '\n\n']"~"packag interfacc import java awt import java awt event import common util import common def import moduli lista soggiornanti public class maschera ricerca soggiornant extend frame button annulla conferma text field testo label etichetta etichetta etichetta etichetta etichetta label label label label panel panel checkbox group checkbox group checkbox checkbox grid bag layout gridbag new grid bag layout list list soggiornanti frame padr figlio seguent variabil serv per tener memoria lista dei clienti cercati nello storico lista soggiornanti elenco soggiornanti public maschera ricerca soggiornant frame parent super ricerca soggiornant padr parent padr set enabl fals setup panel pack init set visibl true void setup panel set font configurazion sistema font base creo pulsanti annulla new button annulla annulla set font new font courier font plain conferma new button conferma conferma set enabl fals conferma set font new font courier font plain creo etichett etichetta new label selezionar tipo ricerca che desidera effettuar etichetta set font configurazion sistema font titolo etichetta new label risultato della ricerca etichetta set font configurazion sistema font titolo etichetta new label ricerca per stanza etichetta set font configurazion sistema font titolo etichetta new label ricerca per nome etichetta set font configurazion sistema font titolo label new label stanza numero label new label cognom label new label nome creo checkbox esclusion checkbox group new checkbox group checkbox new checkbox checkbox new checkbox ricerca per stanza checkbox group fals checkbox new checkbox ricerca per nome checkbox_group fals creo text field rendo non editabili testo new text field testo new text field ("""", testo new text field ("""", testo new text field ("""", int testo length ;++ testo set edit fals creo una text area list_soggiornanti new list fals list_soggiornanti set font configurazion sistema font_allineato panel new panel int panel length ;++ panel new panel (); panel set layout gridbag creo pannello alto sinistra util constrain panel etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest util constrain panel checkbox grid bag constraint none grid bag constraint northwest creo pannello ricerca per stanza util constrain panel etichetta3 grid bag constraint none grid bag constraint northwest util constrain panel label1 grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest creo pannello ricerca per nome cognom util constrain panel etichetta4 grid bag constraint none grid bag constraint northwest util constrain panel label2 grid bag constraint none grid bag constraint northwest util constrain panel testo grid bag constraint none grid bag constraint northwest util constrain panel label3 grid bag constraint none grid bag constraint southwest util constrain panel testo grid bag constraint none grid bag constraint southwest creo pannello dei pulsanti util constrain panel annulla grid bag constraint none grid bag constraint east util constrain panel conferma grid bag constraint none grid bag constraint west creo pannello contenent list_soggiornanti util constrain panel etichetta2 grid bag constraint none grid bag constraint northwest util constrain panel list_soggiornanti grid bag constraint grid bag constraint northwest attacco pannelli frame set layout gridbag util constrain panel grid bag constraint horizont grid bag constraint northwest util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel grid bag constraint horizont grid bag constraint west util constrain panel grid bag constraint horizont grid bag constraint southeast util constrain panel grid bag constraint horizont grid bag constraint west public void init checkbox add item listen new item listen public void item state chang item event checkbox get state ()) list_soggiornanti get item count list_soggiornanti remov (); testo set edit true int testo length ;++ testo set text (""""); testo set edit fals conferma set enabl true }); checkbox add item listen new item listen public void item state chang item event checkbox get state ()) list_soggiornanti get item count list_soggiornanti remov (); int ;++ testo set edit true testo set text (""""); testo set edit fals conferma set enabl true }); conferma add action listen new action listen public void action perform action event start conferma (); }); annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); list_soggiornanti add action listen new action listen public void action perform action event start vedi sogg (); }); void start conferma int frame msg errori ()) checkbox get state ()) elenco_soggiornanti principal found soggiornanti testo get text (), true els checkbox get state ()) elenco_soggiornanti principal found soggiornanti testo get text (), testo get text ()); els elenco_soggiornanti new lista soggiornanti (); elenco_soggiornanti null list_soggiornanti get item count list_soggiornanti remov (); elenco_soggiornanti length (); ++) list_soggiornanti add item elenco_soggiornanti get soggiornant )). string ()); list_soggiornanti get item count msg new avviso dialog trovata nessuna corrispondenza !""); els msg new messag dialog problemi con databas !""); els msg new messag dialog error nei parametri !""); boolean errori checkbox get state ()) return testo get text ()). length els checkbox get state ()) return testo get text ()). length testo get text ()). length els return true void start vedi sogg elenco_soggiornanti null elenco_soggiornanti length ()> figlio new vedi soggiornant elenco_soggiornanti get soggiornant list_soggiornanti get select index ()+ ));"
69~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/MascheraSoggiorno.java~MascheraSoggiorno.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import moduli.*;
import common.utility.*;
import common.def.*;
import java.util.Date;

public class MascheraSoggiorno extends Frame
{
   //Dichiaro gli oggetti che utilizzero' per costruire la finestra
   Label etichetta, etichetta1, label1, label2, label3, label4, label5,
         label6, label7, label8, label9, label10, label11, label12, label13,
         label14, label15, label16;
   TextField testo1, testo2, testo3, testo4, testo5, testo6, testo7, testo8,
             testo9, testo10, testo11, testo12, testo13, testo14;
   Button Annulla, Conferma;
   CheckboxGroup pensione, cliente;
   Checkbox[] checkboxes, checkboxes1;
   Panel panel1, panel2, panel3;
   GridBagLayout gridbag=new GridBagLayout();
   RicercaPrenotazione padre = new RicercaPrenotazione("""",3);
   
   public MascheraSoggiorno(String title, String caption, char pens, char status)
   {
      super(title);
      padre.setEnabled(false);
      setupPanels(caption, pens, status);
      init();
      pack();
      this.setVisible(true);
   }

   void setupPanels(String caption, char pens, char status)
   {
	  this.setFont(ConfigurazioneSistema.font_base);
      //Creo  le etichette
      etichetta=new Label(""Dati del cliente"");
      etichetta.setFont(ConfigurazioneSistema.font_titolo);
      label1 = new Label(""Stanza numero"");
      label2 = new Label(""Cognome"");
      label3 = new Label(""Nome"");
      label4 = new Label(""Luogo di nascita"");
      label5 = new Label(""Data di nascita"");
      label6 = new Label(""Documento di identita'"");
      label7 = new Label(""Numero telefonico"");
      label8 = new Label(""Indirizzo"");
      label9 = new Label(""C.A.P"");
      label10 = new Label(""Comune di residenza"");
      label11 = new Label(""Citta'"");
      label12 = new Label(""Nazione"");
      etichetta1 = new Label(""Dati del soggiorno"");
      etichetta1.setFont(ConfigurazioneSistema.font_titolo);
      label13 = new Label(""Data inizio soggiorno"");
      label14 = new Label(""Data fine soggiorno"");
      label15 = new Label(""Tipo di pensionamento"");
      label15.setFont(ConfigurazioneSistema.font_titolo);
      label16 = new Label(""Status cliente"");
      label16.setFont(ConfigurazioneSistema.font_titolo);

      //Creo i TextField
      testo1 = new TextField("""", 4);
      testo2 = new TextField("""", 20);
      testo3 = new TextField("""", 20);
      testo4 = new TextField("""", 32);
      testo5 = new TextField("""", 10);
      testo6 = new TextField("""", 16);
      testo7 = new TextField("""", 16);
      testo8 = new TextField("""", 52);
      testo9 = new TextField("""", 8);
      testo10 = new TextField("""", 32);
      testo11 = new TextField("""", 20);
      testo12 = new TextField("""", 20);
      testo13 = new TextField("""", 10);
      testo14 = new TextField("""", 10);

      //Creo i bottoni
      Annulla = new Button(""Annulla"");
      Conferma = new Button(caption);

      //Creo i Checkbox ad esclusione
      pensione = new CheckboxGroup();
      checkboxes = new Checkbox[4];
      checkboxes[0] = new Checkbox("" Solo pernottamento"", pensione, false);
      checkboxes[1] = new Checkbox("" Prima colazione"", pensione, false);
      checkboxes[2] = new Checkbox("" Mezza pensione"", pensione, false);
      checkboxes[3] = new Checkbox("" Pensione completa"", pensione, false);
	  switch (pens)
	  {
	  	case Flag.SOLO_PERNOTTAMENTO: 
	  		checkboxes[0] = new Checkbox("" Solo pernottamento"", pensione, true);
	  		break;
	  	case Flag.SOLO_COLAZIONE: 
			checkboxes[1] = new Checkbox("" Prima colazione"", pensione, true);
	  		break;
	  	case Flag.MEZZA_PENSIONE:
			checkboxes[2] = new Checkbox("" Mezza pensione"", pensione, true);
	  		break;
	  	case Flag.PENSIONE_COMPLETA: 
			checkboxes[3] = new Checkbox("" Pensione completa"", pensione, true);
	  		break;
	  }

      cliente = new CheckboxGroup();
      checkboxes1 = new Checkbox[4];
      checkboxes1[0] = new Checkbox("" Neonato (0-2 anni)"", cliente, false);
      checkboxes1[1] = new Checkbox("" Bambino (3-12 anni)"", cliente, false);
      checkboxes1[2] = new Checkbox("" Ragazzo (12-17 anni)"", cliente, false);
      checkboxes1[3] = new Checkbox("" Adulto  (>=18 anni)"", cliente, false);
	  switch (status)
	  {
	  	case Flag.NEONATO: 
		    checkboxes1[0] = new Checkbox("" Neonato (0-2 anni)"", cliente, true);
	  		break;
	  	case Flag.BAMBINO: 
			checkboxes1[1] = new Checkbox("" Bambino (3-12 anni)"", cliente, true);
	  		break;
	  	case Flag.RAGAZZO:
			checkboxes1[2] = new Checkbox("" Ragazzo (12-17 anni)"", cliente, true);
	  		break;
	  	case Flag.ADULTO: 
			checkboxes1[3] = new Checkbox("" Adulto  (>=18 anni)"", cliente, true);
	  		break;
	  }

      //Creo il pannello in alto contenente i dati del cliente
      panel1 = new Panel();
      panel1.setLayout(gridbag);
      Utils.constrain(panel1, etichetta, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, testo1, 1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, label2, 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, testo2, 1, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, label3, 2, 2, 1 ,1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, testo3, 3, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, label4, 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, testo4, 1, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, label5, 2, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, testo5, 3, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, label6, 0, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, testo6, 1, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, label7, 2, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, testo7, 3, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, label8, 0, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, testo8, 1, 5, 4, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, label9, 0, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, testo9, 1, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, label10, 2, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, testo10, 3, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, label11, 0, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, testo11, 1, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); 
      Utils.constrain(panel1, label12, 2, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel1, testo12, 3, 7, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);

      //Creo il pannello centrale con i dati del soggiorno
      panel2 = new Panel();
      panel2.setLayout(gridbag);
      Utils.constrain(panel2, etichetta1, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, label13, 0, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHEAST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, testo13, 1, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, label14, 2, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHEAST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, testo14, 3, 1, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, label15, 0, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, checkboxes[0], 0, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, checkboxes[1], 0, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, checkboxes[2], 0, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, checkboxes[3], 0, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, label16, 1, 2, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, checkboxes1[0], 1, 3, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, checkboxes1[1], 1, 4, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, checkboxes1[2], 1, 5, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel2, checkboxes1[3], 1, 6, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);                  

      //Creo il pannello in basso con due pulsanti
      panel3 = new Panel();
      panel3.setLayout(gridbag);
      Utils.constrain(panel3, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.EAST, 0, 0.0, 5, 5, 5, 5);
      Utils.constrain(panel3, Conferma, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 0, 0.0, 5, 5, 5, 5);

      //Attacco i pannelli al frame
      this.setLayout(gridbag);
      Utils.constrain(this, panel1, 0, 0, 4, 8, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.NORTH, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this,panel2, 0, 8, 4, 7, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);
      Utils.constrain(this,panel3,0, 15, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.SOUTH, 1.0, 0.0, 5, 5, 5, 5);
    }

   public void init()
   {
      Annulla.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            dispose();
            padre.setEnabled(true);
         }
      });
	}
	
	public Soggiornante readDatiSogg(Prenotazione pren, int cont)
	{
		Frame msg;
		String data_inizio,data_fine;
		Date data1, data2;
		Soggiornante sogg = new Soggiornante();
		sogg.setNumStanza(pren.getNumStanza());
		sogg.setCognome(testo2.getText());
		sogg.setNome(testo3.getText());
		sogg.setLuogoNasc(testo4.getText());
		sogg.setDataNasc(DateUtils.convertDate(testo5.getText()));
		sogg.setNumDoc(testo6.getText());
		sogg.setNumTel(testo7.getText());
		sogg.setIndirizzo(testo8.getText());
		sogg.setCap(testo9.getText());
		sogg.setComune(testo10.getText());
		sogg.setCitta(testo11.getText());
		sogg.setNazione(testo12.getText());
        sogg.setInizioSogg(pren.getInizioSogg());
        sogg.setFineSogg(pren.getFineSogg());
        sogg.setIdPrenotazione(pren.getIdPrenotazione());
        sogg.setIdSoggiornante(cont);
        
		if (checkboxes[0].getState() == true)
			sogg.setPensionamento(Flag.SOLO_PERNOTTAMENTO);
		else	
			if (checkboxes[1].getState() == true)
				sogg.setPensionamento(Flag.SOLO_COLAZIONE);
			else
				if (checkboxes[2].getState() == true)
					sogg.setPensionamento(Flag.MEZZA_PENSIONE);
				else
					if (checkboxes[3].getState() == true)
						sogg.setPensionamento(Flag.PENSIONE_COMPLETA);
		
		if (checkboxes1[0].getState() == true)
			sogg.setStatus(Flag.NEONATO);
		else
			if (checkboxes1[1].getState() == true)
				sogg.setStatus(Flag.BAMBINO);
			else
				if (checkboxes1[2].getState() == true)
					sogg.setStatus(Flag.RAGAZZO);
				else
					sogg.setStatus(Flag.ADULTO);	
		return sogg;
	
	}	

	public void writeDatiSogg(Soggiornante sogg)
	{
		testo1.setText(sogg.getNumStanza());
		testo2.setText(sogg.getCognome());
		testo3.setText(sogg.getNome());
		testo4.setText(sogg.getLuogoNasc());
		testo5.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(sogg.getDataNasc())));
		testo6.setText(sogg.getNumDoc());
		testo7.setText(sogg.getNumTel());
		testo8.setText(sogg.getIndirizzo());
		testo9.setText(sogg.getCap());
		testo10.setText(sogg.getComune());
		testo11.setText(sogg.getCitta());
		testo12.setText(sogg.getNazione());
		testo13.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(sogg.getInizioSogg())));
		testo14.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(sogg.getFineSogg())));
	}

	void changeTitle(int parz, int tot)
	{
		this.setTitle(""Inserimento dei dati del soggiornante  (""+parz+""/""+tot+"")"");
	}

	void cleanFields()
	{
		testo2.setText("""");
		testo3.setText("""");
		testo4.setText("""");
		testo5.setText("""");
		testo6.setText("""");
		testo7.setText("""");
		testo8.setText("""");
		testo9.setText("""");
		testo10.setText("""");
		testo11.setText("""");
		testo12.setText("""");
	}	

	void aggiornaDisp(Soggiornante sogg, char tipo)
	{
		Disponibilita disp_da_cambiare = new Disponibilita();
		ListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();
		if (elenco_disp == null)
		{
			Frame msg = new MessageDialog(this, "" Problemi con il database nella lettura delle disponibilita'! "");
			return;
		}
		
		disp_da_cambiare = Utils.getDispOfRoom(elenco_disp, sogg.getNumStanza(), true);
		disp_da_cambiare.setDisponibilita(sogg.getInizioSogg(), sogg.getFineSogg(), tipo, Flag.ASSEGNATA) ;
		(Principale.db).changeDisponibilita( disp_da_cambiare.getNumStanza(), 
											disp_da_cambiare.getDispAnnoCorr(),
											disp_da_cambiare.getDispAnnoProx() );
	}

	boolean errori()
	{
		Frame msg;
		String data_nasc = new String();  
		//Controllo data di nascita
		if ( (testo5.getText().equals("""")) )
		{	
			msg = new AvvisoDialog(this,"" Inserire la data di nascita! "");
			return true;
		}
		else		
			data_nasc = DateUtils.parseDate(testo5.getText());
		if ( data_nasc.equals(Errore.DATA_NON_CORRETTA))
		{	
			msg = new MessageDialog(this,"" Data Nascita Errata! "");
			return true;
		}
		else
		{
			if ( !( DateUtils.isDataRight(data_nasc)) )
			{	
				msg = new MessageDialog(this,""Data Nascita Insensata"");
				return true;
			}
		}
		if ( !((testo2.getText()).length() <= 20) )
		{
			msg = new MessageDialog(this, "" Il cognome deve essere composto da al piu' 20 caratteri! "");
			return true;
		}
		if ( !((testo3.getText()).length() <= 20) )
		{
			msg = new MessageDialog(this, "" Il nome deve essere composto da al piu' 20 caratteri! "");
			return true;
		}
		if ( !((testo4.getText()).length() <= 32) )
		{
			msg = new MessageDialog(this, "" Il luogo di nascita deve essere composto da al piu' 32 caratteri! "");
			return true;
		}
		if ( !((testo6.getText()).length() <= 16) )
		{
			msg = new MessageDialog(this, "" Il documento di identita' deve essere composto da al piu' 16 caratteri! "");
			return true;
		}
		if ( !((testo7.getText()).length() <= 16) )
		{
			msg = new MessageDialog(this, "" Il numero telefonico deve essere composto da al piu' 16 caratteri! "");
			return true;
		}
		if ( !((testo8.getText()).length() <= 32) )
		{
			msg = new MessageDialog(this, "" L'indirizzo deve essere composto da al piu' 32 caratteri! "");
			return true;
		}
		if ( !((testo9.getText()).length() <= 5) )
		{
			msg = new MessageDialog(this, "" Il C.A.P. deve essere composto da al piu' 5 caratteri! "");
			return true;
		}
		if ( !((testo10.getText()).length() <= 32) )
		{
			msg = new MessageDialog(this, "" Il comune deve essere composto da al piu' 32 caratteri! "");
			return true;
		}
		if ( !((testo11.getText()).length() <= 20) )
		{
			msg = new MessageDialog(this, "" La citta deve essere composto da al piu' 20 caratteri! "");
			return true;
		}
		if ( !((testo12.getText()).length() <= 20) )
		{
			msg = new MessageDialog(this, "" La nazione deve essere composto da al piu' 20 caratteri! "");
			return true;
		}
		return false;
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n\n', 'publ', 'ic', '▁class', '▁m', 'asc', 'her', 'as', 'og', 'gi', 'orn', 'o', '▁ext', 'ends', '▁frame', '\n', '{', '\n', '▁/', '/', 'd', 'ich', 'i', 'aro', '▁gl', 'i', '▁og', 'get', 'ti', '▁che', '▁util', 'iz', 'z', 'ero', ""'"", '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁fin', 'est', 'ra', '\n', '▁label', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '\n', '▁label', '6,', '▁label', '7,', '▁label', '8,', '▁label', '9,', '▁label', '1', '0,', '▁label', '1', '1,', '▁label', '1', '2,', '▁label', '1', '3,', '\n', '▁label', '1', '4,', '▁label', '1', '5,', '▁label', '16', ';', '\n', '▁text', 'field', '▁test', 'o', '1,', '▁test', 'o', '2,', '▁test', 'o', '3,', '▁test', 'o', '4,', '▁test', 'o', '5,', '▁test', 'o', '6,', '▁test', 'o', '7,', '▁test', 'o', '8,', '\n', '▁test', 'o', '9,', '▁test', 'o', '1', '0,', '▁test', 'o', '1', '1,', '▁test', 'o', '1', '2,', '▁test', 'o', '1', '3,', '▁test', 'o', '14', ';', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁con', 'fer', 'ma', ';', '\n', '▁check', 'box', 'gro', 'up', '▁p', 'ension', 'e', ',', '▁cl', 'ient', 'e', ';', '\n', '▁check', 'box', '[', ']', '▁check', 'box', 'es', ',', '▁check', 'box', 'es', '1', ';', '\n', '▁pan', 'el', '▁pan', 'el', '1,', '▁pan', 'el', '2,', '▁pan', 'el', '3', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '=', 'new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁pad', 're', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', '""', '"",', '3)', ';', '\n', '▁', '\n', '▁public', '▁m', 'asc', 'her', 'as', 'og', 'gi', 'orn', 'o', '(', 'str', 'ing', '▁title', ',', '▁string', '▁capt', 'ion', ',', '▁char', '▁p', 'ens', ',', '▁char', '▁status', ')', '\n', '▁{', '\n', '▁super', '(', 't', 'it', 'le', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁set', 'up', 'pan', 'els', '(', 'c', 'apt', 'ion', ',', '▁p', 'ens', ',', '▁status', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n', '▁}', '\n\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', 'str', 'ing', '▁capt', 'ion', ',', '▁char', '▁p', 'ens', ',', '▁char', '▁status', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'ic', 'he', 'tt', 'a', '=', 'new', '▁label', '(', '""', 'd', 'ati', '▁del', '▁cl', 'ient', 'e', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(', '""', 'stan', 'za', '▁num', 'ero', '"")', ';', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(', '""', 'c', 'ogn', 'ome', '"")', ';', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(', '""', 'n', 'ome', '"")', ';', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(', '""', 'l', 'u', 'og', 'o', '▁di', '▁n', 'asc', 'ita', '"")', ';', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁di', '▁n', 'asc', 'ita', '"")', ';', '\n', '▁label', '6', '▁=', '▁new', '▁label', '(', '""', 'd', 'oc', 'ument', 'o', '▁di', '▁ident', 'ita', ""'"", '"")', ';', '\n', '▁label', '7', '▁=', '▁new', '▁label', '(', '""', 'n', 'um', 'ero', '▁tele', 'f', 'on', 'ico', '"")', ';', '\n', '▁label', '8', '▁=', '▁new', '▁label', '(', '""', 'ind', 'ir', 'iz', 'zo', '"")', ';', '\n', '▁label', '9', '▁=', '▁new', '▁label', '(', '""', 'c', '.', 'a', '.', 'p', '"")', ';', '\n', '▁label', '10', '▁=', '▁new', '▁label', '(', '""', 'com', 'une', '▁di', '▁res', 'iden', 'za', '"")', ';', '\n', '▁label', '11', '▁=', '▁new', '▁label', '(', '""', 'c', 'itt', 'a', ""'"", '"")', ';', '\n', '▁label', '12', '▁=', '▁new', '▁label', '(', '""', 'n', 'az', 'ion', 'e', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1', '▁=', '▁new', '▁label', '(', '""', 'd', 'ati', '▁del', '▁s', 'og', 'gi', 'orn', 'o', '"")', ';', '\n', '▁et', 'ic', 'he', 'tt', 'a', '1.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '13', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁in', 'iz', 'io', '▁s', 'og', 'gi', 'orn', 'o', '"")', ';', '\n', '▁label', '14', '▁=', '▁new', '▁label', '(', '""', 'd', 'ata', '▁fine', '▁s', 'og', 'gi', 'orn', 'o', '"")', ';', '\n', '▁label', '15', '▁=', '▁new', '▁label', '(', '""', 't', 'ip', 'o', '▁di', '▁p', 'ension', 'ament', 'o', '"")', ';', '\n', '▁label', '1', '5.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁label', '16', '▁=', '▁new', '▁label', '(', '""', 'st', 'atus', '▁cl', 'ient', 'e', '"")', ';', '\n', '▁label', '1', '6.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁text', 'field', '\n', '▁test', 'o', '1', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁4', ');', '\n', '▁test', 'o', '2', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '4', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁3', '2)', ';', '\n', '▁test', 'o', '5', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁10', ');', '\n', '▁test', 'o', '6', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁16', ');', '\n', '▁test', 'o', '7', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁16', ');', '\n', '▁test', 'o', '8', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁5', '2)', ';', '\n', '▁test', 'o', '9', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁8', ');', '\n', '▁test', 'o', '10', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁3', '2)', ';', '\n', '▁test', 'o', '11', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '12', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁20', ');', '\n', '▁test', 'o', '13', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁10', ');', '\n', '▁test', 'o', '14', '▁=', '▁new', '▁text', 'field', '(', '""', '"",', '▁10', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁bot', 'ton', 'i', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', 'ann', 'ull', 'a', '"")', ';', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁but', 'ton', '(', 'c', 'apt', 'ion', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁i', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁p', 'ension', 'e', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '4', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁solo', '▁per', 'n', 'ott', 'ament', 'o', '"",', '▁p', 'ension', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁prim', 'a', '▁col', 'az', 'ion', 'e', '"",', '▁p', 'ension', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁me', 'z', 'za', '▁p', 'ension', 'e', '"",', '▁p', 'ension', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁p', 'ension', 'e', '▁complet', 'a', '"",', '▁p', 'ension', 'e', ',', '▁fal', 'se', ');', '\n\t', '▁sw', 'itch', '▁(', 'p', 'ens', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 's', 'olo', '_', 'per', 'n', 'ott', 'ament', 'o', ':', '▁', '\n\t', '▁', '\t\t', 'che', 'ck', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁solo', '▁per', 'n', 'ott', 'ament', 'o', '"",', '▁p', 'ension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 's', 'olo', '_', 'col', 'az', 'ion', 'e', ':', '▁', '\n\t\t\t', 'che', 'ck', 'box', 'es', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁prim', 'a', '▁col', 'az', 'ion', 'e', '"",', '▁p', 'ension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 'me', 'z', 'za', '_', 'p', 'ension', 'e', ':', '\n\t\t\t', 'che', 'ck', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁me', 'z', 'za', '▁p', 'ension', 'e', '"",', '▁p', 'ension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 'p', 'ension', 'e', '_', 'com', 'p', 'let', 'a', ':', '▁', '\n\t\t\t', 'che', 'ck', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁p', 'ension', 'e', '▁complet', 'a', '"",', '▁p', 'ension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁}', '\n\n', '▁cl', 'ient', 'e', '▁=', '▁new', '▁check', 'box', 'gro', 'up', '(', ');', '\n', '▁check', 'box', 'es', '1', '▁=', '▁new', '▁check', 'box', '[', '4', ']', ';', '\n', '▁check', 'box', 'es', '1', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁ne', 'on', 'ato', '▁(', '0', '-2', '▁ann', 'i', ')', '"",', '▁cl', 'ient', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '1', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁b', 'amb', 'ino', '▁(3', '-1', '2', '▁ann', 'i', ')', '"",', '▁cl', 'ient', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '1', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁r', 'ag', 'azz', 'o', '▁(1', '2', '-1', '7', '▁ann', 'i', ')', '"",', '▁cl', 'ient', 'e', ',', '▁fal', 'se', ');', '\n', '▁check', 'box', 'es', '1', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁adult', 'o', '▁(', '>', '=', '18', '▁ann', 'i', ')', '"",', '▁cl', 'ient', 'e', ',', '▁fal', 'se', ');', '\n\t', '▁sw', 'itch', '▁(', 'st', 'atus', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 'ne', 'on', 'ato', ':', '▁', '\n\t\t', '▁check', 'box', 'es', '1', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁ne', 'on', 'ato', '▁(', '0', '-2', '▁ann', 'i', ')', '"",', '▁cl', 'ient', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 'b', 'amb', 'ino', ':', '▁', '\n\t\t\t', 'che', 'ck', 'box', 'es', '1', '[', '1', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁b', 'amb', 'ino', '▁(3', '-1', '2', '▁ann', 'i', ')', '"",', '▁cl', 'ient', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 'r', 'ag', 'azz', 'o', ':', '\n\t\t\t', 'che', 'ck', 'box', 'es', '1', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁r', 'ag', 'azz', 'o', '▁(1', '2', '-1', '7', '▁ann', 'i', ')', '"",', '▁cl', 'ient', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'c', 'ase', '▁flag', '.', 'ad', 'ult', 'o', ':', '▁', '\n\t\t\t', 'che', 'ck', 'box', 'es', '1', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(', '""', '▁adult', 'o', '▁(', '>', '=', '18', '▁ann', 'i', ')', '"",', '▁cl', 'ient', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁}', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁al', 'to', '▁cont', 'en', 'ent', 'e', '▁i', '▁d', 'ati', '▁del', '▁cl', 'ient', 'e', '\n', '▁pan', 'el', '1', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '1.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'ic', 'he', 'tt', 'a', ',', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1,', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '2,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '2,', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '3,', '▁2,', '▁2,', '▁1', '▁,', '1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '3,', '▁3,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '4,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '4,', '▁1,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '5,', '▁3,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '6,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '6,', '▁1,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '7,', '▁2,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '7,', '▁3,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '8,', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '8,', '▁1,', '▁5,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '9,', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '9,', '▁1,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '0,', '▁2,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '0,', '▁3,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '1,', '▁', '0,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '1,', '▁1,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '2,', '▁2,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '2,', '▁3,', '▁7,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁central', 'e', '▁con', '▁i', '▁d', 'ati', '▁del', '▁s', 'og', 'gi', 'orn', 'o', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'ic', 'he', 'tt', 'a', '1,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁label', '1', '3,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'ort', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁test', 'o', '1', '3,', '▁1,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁label', '1', '4,', '▁2,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'ort', 'heast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁test', 'o', '1', '4,', '▁3,', '▁1,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁label', '1', '5,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '0', ']', ',', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '1', ']', ',', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '2', ']', ',', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '3', ']', ',', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁label', '1', '6,', '▁1,', '▁2,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '1', '[', '0', ']', ',', '▁1,', '▁3,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '1', '[', '1', ']', ',', '▁1,', '▁4,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '1', '[', '2', ']', ',', '▁1,', '▁5,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '1', '[', '3', ']', ',', '▁1,', '▁6,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'east', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁con', 'fer', 'ma', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁8,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'north', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '2,', '▁', '0,', '▁8,', '▁4,', '▁7,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '3,', '0,', '▁15,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'south', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n', '▁ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁{', '\n', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '(', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'publ', 'ic', '▁s', 'og', 'gi', 'orn', 'ante', '▁read', 'd', 'at', 'is', 'og', 'g', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ',', '▁int', '▁cont', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'str', 'ing', '▁data', '_', 'in', 'iz', 'io', ',', 'd', 'ata', '_', 'f', 'ine', ';', '\n\t\t', 'd', 'ate', '▁data', '1,', '▁data', '2', ';', '\n\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', '▁=', '▁new', '▁s', 'og', 'gi', 'orn', 'ante', '(', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'n', 'um', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'c', 'ogn', 'ome', '(', 't', 'est', 'o', '2.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'n', 'ome', '(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'l', 'u', 'og', 'on', 'asc', '(', 't', 'est', 'o', '4.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'd', 'at', 'an', 'asc', '(', 'd', 'ate', 'ut', 'ils', '.', 'con', 'vert', 'd', 'ate', '(', 't', 'est', 'o', '5.', 'get', 'text', '(', ')', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'n', 'um', 'd', 'oc', '(', 't', 'est', 'o', '6.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'n', 'um', 't', 'el', '(', 't', 'est', 'o', '7.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'ind', 'ir', 'iz', 'zo', '(', 't', 'est', 'o', '8.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'c', 'ap', '(', 't', 'est', 'o', '9.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'com', 'une', '(', 't', 'est', 'o', '1', '0.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'c', 'itt', 'a', '(', 't', 'est', 'o', '1', '1.', 'get', 'text', '(', ')', ');', '\n\t\t', 'so', 'g', 'g', '.', 'set', 'n', 'az', 'ion', 'e', '(', 't', 'est', 'o', '1', '2.', 'get', 'text', '(', ')', ');', '\n', '▁s', 'og', 'g', '.', 'set', 'in', 'iz', 'ios', 'og', 'g', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ');', '\n', '▁s', 'og', 'g', '.', 'set', 'f', 'ines', 'og', 'g', '(', 'p', 'ren', '.', 'get', 'f', 'ines', 'og', 'g', '(', ')', ');', '\n', '▁s', 'og', 'g', '.', 'set', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', '.', 'get', 'id', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ')', ');', '\n', '▁s', 'og', 'g', '.', 'set', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', 'cont', ');', '\n', '▁', '\n\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '0', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t', 'so', 'g', 'g', '.', 'set', 'p', 'ension', 'ament', 'o', '(', 'fl', 'ag', '.', 's', 'olo', '_', 'per', 'n', 'ott', 'ament', 'o', ');', '\n\t\t', 'el', 'se', '\t\n\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '1', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t', 'so', 'g', 'g', '.', 'set', 'p', 'ension', 'ament', 'o', '(', 'fl', 'ag', '.', 's', 'olo', '_', 'col', 'az', 'ion', 'e', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '2', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t\t', 'so', 'g', 'g', '.', 'set', 'p', 'ension', 'ament', 'o', '(', 'fl', 'ag', '.', 'me', 'z', 'za', '_', 'p', 'ension', 'e', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '[', '3', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t\t\t', 'so', 'g', 'g', '.', 'set', 'p', 'ension', 'ament', 'o', '(', 'fl', 'ag', '.', 'p', 'ension', 'e', '_', 'com', 'p', 'let', 'a', ');', '\n\t\t\n\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '1', '[', '0', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t', 'so', 'g', 'g', '.', 'set', 'st', 'atus', '(', 'fl', 'ag', '.', 'ne', 'on', 'ato', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '1', '[', '1', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t', 'so', 'g', 'g', '.', 'set', 'st', 'atus', '(', 'fl', 'ag', '.', 'b', 'amb', 'ino', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'if', '▁(', 'che', 'ck', 'box', 'es', '1', '[', '2', ']', '.', 'get', 'state', '(', ')', '▁=', '=', '▁true', ')', '\n\t\t\t\t\t', 'so', 'g', 'g', '.', 'set', 'st', 'atus', '(', 'fl', 'ag', '.', 'r', 'ag', 'azz', 'o', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'so', 'g', 'g', '.', 'set', 'st', 'atus', '(', 'fl', 'ag', '.', 'ad', 'ult', 'o', ');', '\t\n\t\t', 'ret', 'urn', '▁s', 'og', 'g', ';', '\n\t\n\t', '}', '\t\n\n\t', 'publ', 'ic', '▁vo', 'id', '▁writ', 'ed', 'at', 'is', 'og', 'g', '(', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '1.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '2.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'c', 'ogn', 'ome', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '3.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'n', 'ome', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '4.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'l', 'u', 'og', 'on', 'asc', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '5.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'so', 'g', 'g', '.', 'get', 'd', 'at', 'an', 'asc', '(', ')', ')', ')', ');', '\n\t\t', 't', 'est', 'o', '6.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'n', 'um', 'd', 'oc', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '7.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'n', 'um', 't', 'el', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '8.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'ind', 'ir', 'iz', 'zo', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '9.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'c', 'ap', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '0.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'com', 'une', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '1.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'c', 'itt', 'a', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '2.', 's', 'ette', 'xt', '(', 'so', 'g', 'g', '.', 'get', 'n', 'az', 'ion', 'e', '(', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '3.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'so', 'g', 'g', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', ')', ')', ')', ');', '\n\t\t', 't', 'est', 'o', '1', '4.', 's', 'ette', 'xt', '(', 'd', 'ate', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'd', 'ate', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'd', 'ate', '(', 'so', 'g', 'g', '.', 'get', 'f', 'ines', 'og', 'g', '(', ')', ')', ')', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁chang', 'et', 'it', 'le', '(', 'int', '▁par', 'z', ',', '▁int', '▁to', 't', ')', '\n\t', '{', '\n\t\t', 'this', '.', 's', 'ett', 'it', 'le', '(', '""', 'ins', 'er', 'iment', 'o', '▁de', 'i', '▁d', 'ati', '▁del', '▁s', 'og', 'gi', 'orn', 'ante', '▁(""', '+', 'par', 'z', '+', '""', '/', '""', '+', 't', 'ot', '+', '"")', '"")', ';', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁clean', 'field', 's', '(', ')', '\n\t', '{', '\n\t\t', 't', 'est', 'o', '2.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '3.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '4.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '5.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '6.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '7.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '8.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '9.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '1', '0.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '1', '1.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t\t', 't', 'est', 'o', '1', '2.', 's', 'ette', 'xt', '(', '""', '"")', ';', '\n\t', '}', '\t\n\n\t', 'v', 'oid', '▁ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'og', 'g', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '(', ');', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁=', '=', '▁n', 'ull', ')', '\n\t\t', '{', '\n\t\t\t', 'fr', 'ame', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁del', 'le', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁s', 'og', 'g', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁true', ');', '\n\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'so', 'g', 'g', '.', 'get', 'in', 'iz', 'ios', 'og', 'g', '(', '),', '▁s', 'og', 'g', '.', 'get', 'f', 'ines', 'og', 'g', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'as', 'se', 'gn', 'ata', ')', '▁;', '\n\t\t', '(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'ch', 'anged', 'is', 'pon', 'ib', 'il', 'ita', '(', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'n', 'um', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '(', ')', '▁', ');', '\n\t', '}', '\n\n\t', 'bo', 'ole', 'an', '▁er', 'ror', 'i', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'str', 'ing', '▁data', '_', 'n', 'asc', '▁=', '▁new', '▁string', '(', ');', '▁', '\n\t\t', '//', 'cont', 'roll', 'o', '▁data', '▁di', '▁n', 'asc', 'ita', '\n\t\t', 'if', '▁(', '▁(', 't', 'est', 'o', '5.', 'get', 'text', '(', ').', 'equ', 'als', '(', '""', '"")', ')', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁la', '▁data', '▁di', '▁n', 'asc', 'ita', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\t\t\n\t\t\t', 'd', 'ata', '_', 'n', 'asc', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 't', 'est', 'o', '5.', 'get', 'text', '(', ')', ');', '\n\t\t', 'if', '▁(', '▁data', '_', 'n', 'asc', '.', 'equ', 'als', '(', 'er', 'r', 'ore', '.', 'd', 'ata', '_', 'non', '_', 'cor', 'ret', 'ta', ')', ')', '\n\t\t', '{', '\t\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁data', '▁n', 'asc', 'ita', '▁er', 'r', 'ata', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁!', '(', '▁date', 'ut', 'ils', '.', 'is', 'd', 'atar', 'ight', '(', 'd', 'ata', '_', 'n', 'asc', ')', ')', '▁)', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'd', 'ata', '▁n', 'asc', 'ita', '▁ins', 'ens', 'ata', '"")', ';', '\n\t\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '2.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁20', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁co', 'gn', 'ome', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '3.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁20', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁n', 'ome', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '4.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁lu', 'og', 'o', '▁di', '▁n', 'asc', 'ita', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁32', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '6.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁16', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁document', 'o', '▁di', '▁ident', 'ita', ""'"", '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁16', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '7.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁16', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁tele', 'f', 'on', 'ico', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁16', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '8.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁32', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '9.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁5', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁c', '.', 'a', '.', 'p', '.', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁5', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '1', '0.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁com', 'une', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁32', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '1', '1.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁20', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁c', 'itt', 'a', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 't', 'est', 'o', '1', '2.', 'get', 'text', '(', ')', ').', 'l', 'ength', '(', ')', '▁', '<', '=', '▁20', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁naz', 'ion', 'e', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁p', 'i', 'u', ""'"", '▁20', '▁car', 'at', 'ter', 'i', '!', '▁""', ');', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'as', 'og', 'gi', 'orno', '▁extends', '▁frame', '\n', '{', '\n', '▁//', 'd', 'ichi', 'aro', '▁gl', 'i', '▁og', 'get', 'ti', '▁che', '▁util', 'izz', 'ero', ""'"", '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁finest', 'ra', '\n', '▁label', '▁et', 'iche', 'tta', ',', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '\n', '▁label', '6,', '▁label', '7,', '▁label', '8,', '▁label', '9,', '▁label', '10,', '▁label', '1', '1,', '▁label', '1', '2,', '▁label', '1', '3,', '\n', '▁label', '1', '4,', '▁label', '1', '5,', '▁label', '16', ';', '\n', '▁text', 'field', '▁test', 'o', '1,', '▁test', 'o', '2,', '▁test', 'o', '3,', '▁test', 'o', '4,', '▁test', 'o', '5,', '▁test', 'o', '6,', '▁test', 'o', '7,', '▁test', 'o', '8,', '\n', '▁test', 'o', '9,', '▁test', 'o', '10,', '▁test', 'o', '1', '1,', '▁test', 'o', '1', '2,', '▁test', 'o', '1', '3,', '▁test', 'o', '14', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁con', 'fer', 'ma', ';', '\n', '▁check', 'box', 'group', '▁pension', 'e', ',', '▁client', 'e', ';', '\n', '▁check', 'box', '[]', '▁check', 'box', 'es', ',', '▁check', 'box', 'es', '1', ';', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'lay', 'out', '();', '\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁pad', 're', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', '"",', '3)', ';', '\n', '▁', '\n', '▁public', '▁masc', 'her', 'as', 'og', 'gi', 'orno', '(', 'string', '▁title', ',', '▁string', '▁capt', 'ion', ',', '▁char', '▁pens', ',', '▁char', '▁status', ')', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '(', 'capt', 'ion', ',', '▁pens', ',', '▁status', ');', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁this', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '(', 'string', '▁capt', 'ion', ',', '▁char', '▁pens', ',', '▁char', '▁status', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n', '▁et', 'iche', 'tta', '=', 'new', '▁label', '(""', 'd', 'ati', '▁del', '▁client', 'e', '"");', '\n', '▁et', 'iche', 'tta', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁num', 'ero', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'c', 'ogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(""', 'lu', 'ogo', '▁di', '▁n', 'asc', 'ita', '"");', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(""', 'data', '▁di', '▁n', 'asc', 'ita', '"");', '\n', '▁label', '6', '▁=', '▁new', '▁label', '(""', 'document', 'o', '▁di', '▁ident', 'ita', ""'"", '"");', '\n', '▁label', '7', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁tele', 'f', 'on', 'ico', '"");', '\n', '▁label', '8', '▁=', '▁new', '▁label', '(""', 'ind', 'ir', 'iz', 'zo', '"");', '\n', '▁label', '9', '▁=', '▁new', '▁label', '(""', 'c', '.', 'a', '.', 'p', '"");', '\n', '▁label', '10', '▁=', '▁new', '▁label', '(""', 'com', 'une', '▁di', '▁res', 'iden', 'za', '"");', '\n', '▁label', '11', '▁=', '▁new', '▁label', '(""', 'c', 'itta', ""'"", '"");', '\n', '▁label', '12', '▁=', '▁new', '▁label', '(""', 'n', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁del', '▁s', 'og', 'gi', 'orno', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '13', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', '▁s', 'og', 'gi', 'orno', '"");', '\n', '▁label', '14', '▁=', '▁new', '▁label', '(""', 'data', '▁fine', '▁s', 'og', 'gi', 'orno', '"");', '\n', '▁label', '15', '▁=', '▁new', '▁label', '(""', 'tip', 'o', '▁di', '▁pension', 'amento', '"");', '\n', '▁label', '1', '5.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '16', '▁=', '▁new', '▁label', '(""', 'st', 'atus', '▁client', 'e', '"");', '\n', '▁label', '1', '6.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '\n', '▁test', 'o', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁test', 'o', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '4', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '2)', ';', '\n', '▁test', 'o', '5', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10', ');', '\n', '▁test', 'o', '6', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁16', ');', '\n', '▁test', 'o', '7', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁16', ');', '\n', '▁test', 'o', '8', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁5', '2)', ';', '\n', '▁test', 'o', '9', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁8', ');', '\n', '▁test', 'o', '10', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '2)', ';', '\n', '▁test', 'o', '11', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '12', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁test', 'o', '13', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10', ');', '\n', '▁test', 'o', '14', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10', ');', '\n\n', '▁//', 'cre', 'o', '▁i', '▁bot', 'ton', 'i', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n', '▁con', 'fer', 'ma', '▁=', '▁new', '▁button', '(', 'capt', 'ion', ');', '\n\n', '▁//', 'cre', 'o', '▁i', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁pension', 'e', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'box', 'es', '▁=', '▁new', '▁check', 'box', '[', '4', ']', ';', '\n', '▁check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁solo', '▁pern', 'ott', 'amento', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁prima', '▁col', 'azione', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁mez', 'za', '▁pension', 'e', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁pension', 'e', '▁complet', 'a', '"",', '▁pension', 'e', ',', '▁false', ');', '\n\t', '▁switch', '▁(', 'pens', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'case', '▁flag', '.', 's', 'olo', '_', 'per', 'n', 'ott', 'amento', ':', '▁', '\n\t', '▁', '\t\t', 'check', 'box', 'es', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁solo', '▁pern', 'ott', 'amento', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 's', 'olo', '_', 'col', 'azione', ':', '▁', '\n\t\t\t', 'check', 'box', 'es', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁prima', '▁col', 'azione', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'mez', 'za', '_', 'p', 'ension', 'e', ':', '\n\t\t\t', 'check', 'box', 'es', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁mez', 'za', '▁pension', 'e', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'p', 'ension', 'e', '_', 'comp', 'let', 'a', ':', '▁', '\n\t\t\t', 'check', 'box', 'es', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁pension', 'e', '▁complet', 'a', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁}', '\n\n', '▁client', 'e', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'box', 'es', '1', '▁=', '▁new', '▁check', 'box', '[', '4', ']', ';', '\n', '▁check', 'box', 'es', '1', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁neon', 'ato', '▁(0', '-2', '▁ann', 'i', ')"",', '▁client', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '1', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁bamb', 'ino', '▁(3', '-12', '▁ann', 'i', ')"",', '▁client', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '1', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁rag', 'azzo', '▁(12', '-17', '▁ann', 'i', ')"",', '▁client', 'e', ',', '▁false', ');', '\n', '▁check', 'box', 'es', '1', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁adult', 'o', '▁(', '>', '=', '18', '▁ann', 'i', ')"",', '▁client', 'e', ',', '▁false', ');', '\n\t', '▁switch', '▁(', 'st', 'atus', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'ne', 'on', 'ato', ':', '▁', '\n\t\t', '▁check', 'box', 'es', '1', '[', '0', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁neon', 'ato', '▁(0', '-2', '▁ann', 'i', ')"",', '▁client', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'b', 'amb', 'ino', ':', '▁', '\n\t\t\t', 'check', 'box', 'es', '1', '[', '1]', '▁=', '▁new', '▁check', 'box', '(""', '▁bamb', 'ino', '▁(3', '-12', '▁ann', 'i', ')"",', '▁client', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'rag', 'azzo', ':', '\n\t\t\t', 'check', 'box', 'es', '1', '[', '2', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁rag', 'azzo', '▁(12', '-17', '▁ann', 'i', ')"",', '▁client', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'ad', 'ult', 'o', ':', '▁', '\n\t\t\t', 'check', 'box', 'es', '1', '[', '3', ']', '▁=', '▁new', '▁check', 'box', '(""', '▁adult', 'o', '▁(', '>', '=', '18', '▁ann', 'i', ')"",', '▁client', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁}', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁cont', 'en', 'ente', '▁i', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁et', 'iche', 'tta', ',', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '2,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '2,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '3,', '▁2,', '▁2,', '▁1', '▁,', '1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '3,', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '4,', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '4,', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '5,', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '6,', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '6,', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '7,', '▁2,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '7,', '▁3,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '8,', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '8,', '▁1,', '▁5,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '9,', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '9,', '▁1,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '10,', '▁2,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '10,', '▁3,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '1,', '▁', '0,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '1,', '▁1,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁label', '1', '2,', '▁2,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '1,', '▁test', 'o', '1', '2,', '▁3,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁central', 'e', '▁con', '▁i', '▁d', 'ati', '▁del', '▁s', 'og', 'gi', 'orno', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁et', 'iche', 'tta', '1,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁label', '1', '3,', '▁', '0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁test', 'o', '1', '3,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁label', '1', '4,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁test', 'o', '1', '4,', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁label', '1', '5,', '▁', '0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '0', '],', '▁', '0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '1', '],', '▁', '0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '2', '],', '▁', '0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '[', '3', '],', '▁', '0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁label', '1', '6,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '1', '[', '0', '],', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '1', '[', '1', '],', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '1', '[', '2', '],', '▁1,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁check', 'box', 'es', '1', '[', '3', '],', '▁1,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁con', 'fer', 'ma', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '1,', '▁', '0,', '▁', '0,', '▁4,', '▁8,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'north', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '2,', '▁', '0,', '▁8,', '▁4,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', 'pan', 'el', '3,', '0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'south', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dis', 'pose', '();', '\n', '▁pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'public', '▁s', 'og', 'gi', 'orn', 'ante', '▁read', 'dat', 'is', 'ogg', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁int', '▁cont', ')', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'string', '▁data', '_', 'in', 'izio', ',', 'data', '_', 'f', 'ine', ';', '\n\t\t', 'date', '▁data', '1,', '▁data', '2', ';', '\n\t\t', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁new', '▁s', 'og', 'gi', 'orn', 'ante', '();', '\n\t\t', 'so', 'gg', '.', 'set', 'num', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'c', 'ogn', 'ome', '(', 'test', 'o', '2.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'n', 'ome', '(', 'test', 'o', '3.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'lu', 'ogon', 'asc', '(', 'test', 'o', '4.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'dat', 'an', 'asc', '(', 'date', 'ut', 'ils', '.', 'con', 'vert', 'date', '(', 'test', 'o', '5.', 'get', 'text', '())', ');', '\n\t\t', 'so', 'gg', '.', 'set', 'num', 'doc', '(', 'test', 'o', '6.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'num', 'tel', '(', 'test', 'o', '7.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'ind', 'ir', 'iz', 'zo', '(', 'test', 'o', '8.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'cap', '(', 'test', 'o', '9.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'com', 'une', '(', 'test', 'o', '10.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'c', 'itta', '(', 'test', 'o', '11.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'n', 'azione', '(', 'test', 'o', '12.', 'get', 'text', '());', '\n', '▁s', 'ogg', '.', 'set', 'in', 'iz', 'ios', 'ogg', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '());', '\n', '▁s', 'ogg', '.', 'set', 'f', 'ines', 'ogg', '(', 'p', 'ren', '.', 'get', 'f', 'ines', 'ogg', '());', '\n', '▁s', 'ogg', '.', 'set', 'id', 'p', 'ren', 'ot', 'azione', '(', 'p', 'ren', '.', 'get', 'id', 'p', 'ren', 'ot', 'azione', '());', '\n', '▁s', 'ogg', '.', 'set', 'id', 'so', 'g', 'gi', 'orn', 'ante', '(', 'cont', ');', '\n', '▁', '\n\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '0', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t', 'so', 'gg', '.', 'set', 'p', 'ension', 'amento', '(', 'flag', '.', 's', 'olo', '_', 'per', 'n', 'ott', 'amento', ');', '\n\t\t', 'el', 'se', '\t\n\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '1', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t', 'so', 'gg', '.', 'set', 'p', 'ension', 'amento', '(', 'flag', '.', 's', 'olo', '_', 'col', 'azione', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '2', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t', 'so', 'gg', '.', 'set', 'p', 'ension', 'amento', '(', 'flag', '.', 'mez', 'za', '_', 'p', 'ension', 'e', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '[', '3', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t\t', 'so', 'gg', '.', 'set', 'p', 'ension', 'amento', '(', 'flag', '.', 'p', 'ension', 'e', '_', 'comp', 'let', 'a', ');', '\n\t\t\n\t\t', 'if', '▁(', 'check', 'box', 'es', '1', '[', '0', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t', 'so', 'gg', '.', 'set', 'st', 'atus', '(', 'flag', '.', 'ne', 'on', 'ato', ');', '\n\t\t', 'el', 'se', '\n\t\t\t', 'if', '▁(', 'check', 'box', 'es', '1', '[', '1', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t', 'so', 'gg', '.', 'set', 'st', 'atus', '(', 'flag', '.', 'b', 'amb', 'ino', ');', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'if', '▁(', 'check', 'box', 'es', '1', '[', '2', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t', 'so', 'gg', '.', 'set', 'st', 'atus', '(', 'flag', '.', 'rag', 'azzo', ');', '\n\t\t\t\t', 'el', 'se', '\n\t\t\t\t\t', 'so', 'gg', '.', 'set', 'st', 'atus', '(', 'flag', '.', 'ad', 'ult', 'o', ');', '\t\n\t\t', 'return', '▁s', 'ogg', ';', '\n\t\n\t', '}', '\t\n\n\t', 'public', '▁void', '▁writ', 'ed', 'at', 'is', 'ogg', '(', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', ')', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'c', 'ogn', 'ome', '());', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'n', 'ome', '());', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'lu', 'ogon', 'asc', '());', '\n\t\t', 'test', 'o', '5.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'so', 'gg', '.', 'get', 'dat', 'an', 'asc', '()', '))', ');', '\n\t\t', 'test', 'o', '6.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'num', 'doc', '());', '\n\t\t', 'test', 'o', '7.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'num', 'tel', '());', '\n\t\t', 'test', 'o', '8.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'ind', 'ir', 'iz', 'zo', '());', '\n\t\t', 'test', 'o', '9.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'cap', '());', '\n\t\t', 'test', 'o', '10.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'com', 'une', '());', '\n\t\t', 'test', 'o', '11.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'c', 'itta', '());', '\n\t\t', 'test', 'o', '12.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'n', 'azione', '());', '\n\t\t', 'test', 'o', '1', '3.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'so', 'gg', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()', '))', ');', '\n\t\t', 'test', 'o', '1', '4.', 's', 'ette', 'xt', '(', 'date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'date', 'ut', 'ils', '.', 'g', 'iv', 'est', 'ring', 'of', 'date', '(', 'so', 'gg', '.', 'get', 'f', 'ines', 'ogg', '()', '))', ');', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁chang', 'et', 'it', 'le', '(', 'int', '▁par', 'z', ',', '▁int', '▁tot', ')', '\n\t', '{', '\n\t\t', 'this', '.', 's', 'ett', 'it', 'le', '(""', 'ins', 'er', 'iment', 'o', '▁dei', '▁d', 'ati', '▁del', '▁s', 'og', 'gi', 'orn', 'ante', '▁(""', '+', 'par', 'z', '+', '""/""', '+', 'tot', '+', '"")', '"");', '\n\t', '}', '\n\n\t', 'v', 'oid', '▁clean', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '5.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '6.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '7.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '8.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '9.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '10.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '11.', 's', 'ette', 'xt', '(""', '"");', '\n\t\t', 'test', 'o', '12.', 's', 'ette', 'xt', '(""', '"");', '\n\t', '}', '\t\n\n\t', 'v', 'oid', '▁ag', 'gi', 'orn', 'ad', 'isp', '(', 'so', 'g', 'gi', 'orn', 'ante', '▁s', 'ogg', ',', '▁char', '▁tip', 'o', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ib', 'il', 'ita', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'list', 'ad', 'is', 'pon', 'ib', 'il', 'ita', '▁el', 'en', 'co', '_', 'dis', 'p', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'el', 'enc', 'od', 'is', 'pon', 'ib', 'il', 'ita', '();', '\n\t\t', 'if', '▁(', 'el', 'en', 'co', '_', 'dis', 'p', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁n', 'ella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ib', 'il', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'dis', 'p', 'of', 'room', '(', 'el', 'en', 'co', '_', 'dis', 'p', ',', '▁s', 'ogg', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁true', ');', '\n\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ib', 'il', 'ita', '(', 'so', 'gg', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(', '),', '▁s', 'ogg', '.', 'get', 'f', 'ines', 'ogg', '(', '),', '▁tip', 'o', ',', '▁flag', '.', 'asse', 'gn', 'ata', ')', '▁;', '\n\t\t', '(', 'princ', 'ip', 'ale', '.', 'db', ').', 'changed', 'is', 'pon', 'ib', 'il', 'ita', '(', '▁disp', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'num', 'stan', 'za', '(', '),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'oc', 'or', 'r', '(', '),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'dis', 'p', '_', 'da', '_', 'c', 'amb', 'ia', 're', '.', 'get', 'dis', 'p', 'ann', 'op', 'ro', 'x', '()', '▁', ');', '\n\t', '}', '\n\n\t', 'bo', 'olean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'string', '▁data', '_', 'n', 'asc', '▁=', '▁new', '▁string', '();', '▁', '\n\t\t', '//', 'controll', 'o', '▁data', '▁di', '▁n', 'asc', 'ita', '\n\t\t', 'if', '▁(', '▁(', 'test', 'o', '5.', 'get', 'text', '().', 'equ', 'als', '(""', '"")', ')', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁la', '▁data', '▁di', '▁n', 'asc', 'ita', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\t\t\n\t\t\t', 'data', '_', 'n', 'asc', '▁=', '▁date', 'ut', 'ils', '.', 'p', 'ars', 'ed', 'ate', '(', 'test', 'o', '5.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', '▁data', '_', 'n', 'asc', '.', 'equ', 'als', '(', 'er', 'r', 'ore', '.', 'data', '_', 'non', '_', 'cor', 'ret', 'ta', '))', '\n\t\t', '{', '\t\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁data', '▁n', 'asc', 'ita', '▁err', 'ata', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'el', 'se', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁!', '(', '▁date', 'ut', 'ils', '.', 'is', 'd', 'atar', 'ight', '(', 'data', '_', 'n', 'asc', '))', '▁)', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'data', '▁n', 'asc', 'ita', '▁ins', 'ens', 'ata', '"");', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '2.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cogn', 'ome', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '3.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁n', 'ome', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '4.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁lu', 'ogo', '▁di', '▁n', 'asc', 'ita', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '6.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁16', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁document', 'o', '▁di', '▁ident', 'ita', ""'"", '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁16', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '7.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁16', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁num', 'ero', '▁tele', 'f', 'on', 'ico', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁16', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '8.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '9.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁5)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁c', '.', 'a', '.', 'p', '.', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁5', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '10.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁comune', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '11.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁c', 'itta', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '(', '(', 'test', 'o', '12.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁naz', 'ione', '▁de', 've', '▁ess', 'ere', '▁comp', 'ost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n\n', 'public', '▁class', '▁masc', 'her', 'as', 'oggi', 'orno', '▁extends', '▁frame', '\n', '{', '\n', '▁//', 'd', 'ichi', 'aro', '▁gli', '▁og', 'get', 'ti', '▁che', '▁util', 'izz', 'ero', ""'"", '▁per', '▁co', 'str', 'u', 'ire', '▁la', '▁finest', 'ra', '\n', '▁label', '▁et', 'iche', 'tta', ',', '▁et', 'iche', 'tta', '1,', '▁label', '1,', '▁label', '2,', '▁label', '3,', '▁label', '4,', '▁label', '5,', '\n', '▁label', '6,', '▁label', '7,', '▁label', '8,', '▁label', '9,', '▁label', '10,', '▁label', '11,', '▁label', '12,', '▁label', '13,', '\n', '▁label', '14,', '▁label', '15,', '▁label', '16', ';', '\n', '▁text', 'field', '▁testo', '1,', '▁testo', '2,', '▁testo', '3,', '▁testo', '4,', '▁testo', '5,', '▁testo', '6,', '▁testo', '7,', '▁testo', '8,', '\n', '▁testo', '9,', '▁testo', '10,', '▁testo', '11,', '▁testo', '12,', '▁testo', '13,', '▁testo', '14', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁confer', 'ma', ';', '\n', '▁check', 'box', 'group', '▁pension', 'e', ',', '▁client', 'e', ';', '\n', '▁check', 'box', '[]', '▁check', 'boxes', ',', '▁check', 'boxes', '1;', '\n', '▁panel', '▁panel', '1,', '▁panel', '2,', '▁panel', '3;', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '=', 'new', '▁grid', 'bag', 'layout', '();', '\n', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '▁padre', '▁=', '▁new', '▁ric', 'erc', 'ap', 'ren', 'ot', 'azione', '(""', '"",', '3);', '\n', '▁', '\n', '▁public', '▁masc', 'her', 'as', 'oggi', 'orno', '(', 'string', '▁title', ',', '▁string', '▁caption', ',', '▁char', '▁pens', ',', '▁char', '▁status', ')', '\n', '▁{', '\n', '▁super', '(', 'title', ');', '\n', '▁padre', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁setup', 'pan', 'els', '(', 'caption', ',', '▁pens', ',', '▁status', ');', '\n', '▁init', '();', '\n', '▁pack', '();', '\n', '▁this', '.', 'set', 'visible', '(', 'true', ');', '\n', '▁}', '\n\n', '▁void', '▁setup', 'pan', 'els', '(', 'string', '▁caption', ',', '▁char', '▁pens', ',', '▁char', '▁status', ')', '\n', '▁{', '\n\t', '▁this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n', '▁et', 'iche', 'tta', '=', 'new', '▁label', '(""', 'd', 'ati', '▁del', '▁client', 'e', '"");', '\n', '▁et', 'iche', 'tta', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '1', '▁=', '▁new', '▁label', '(""', 'stan', 'za', '▁numero', '"");', '\n', '▁label', '2', '▁=', '▁new', '▁label', '(""', 'cogn', 'ome', '"");', '\n', '▁label', '3', '▁=', '▁new', '▁label', '(""', 'n', 'ome', '"");', '\n', '▁label', '4', '▁=', '▁new', '▁label', '(""', 'lu', 'ogo', '▁di', '▁nasc', 'ita', '"");', '\n', '▁label', '5', '▁=', '▁new', '▁label', '(""', 'data', '▁di', '▁nasc', 'ita', '"");', '\n', '▁label', '6', '▁=', '▁new', '▁label', '(""', 'document', 'o', '▁di', '▁ident', 'ita', ""'"", '"");', '\n', '▁label', '7', '▁=', '▁new', '▁label', '(""', 'num', 'ero', '▁telef', 'on', 'ico', '"");', '\n', '▁label', '8', '▁=', '▁new', '▁label', '(""', 'ind', 'ir', 'iz', 'zo', '"");', '\n', '▁label', '9', '▁=', '▁new', '▁label', '(""', 'c', '.', 'a', '.', 'p', '"");', '\n', '▁label', '10', '▁=', '▁new', '▁label', '(""', 'com', 'une', '▁di', '▁res', 'iden', 'za', '"");', '\n', '▁label', '11', '▁=', '▁new', '▁label', '(""', 'c', 'itta', ""'"", '"");', '\n', '▁label', '12', '▁=', '▁new', '▁label', '(""', 'n', 'azione', '"");', '\n', '▁et', 'iche', 'tta', '1', '▁=', '▁new', '▁label', '(""', 'd', 'ati', '▁del', '▁sog', 'gi', 'orno', '"");', '\n', '▁et', 'iche', 'tta', '1.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '13', '▁=', '▁new', '▁label', '(""', 'data', '▁in', 'izio', '▁sog', 'gi', 'orno', '"");', '\n', '▁label', '14', '▁=', '▁new', '▁label', '(""', 'data', '▁fine', '▁sog', 'gi', 'orno', '"");', '\n', '▁label', '15', '▁=', '▁new', '▁label', '(""', 'tip', 'o', '▁di', '▁pension', 'amento', '"");', '\n', '▁label', '15.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁label', '16', '▁=', '▁new', '▁label', '(""', 'status', '▁client', 'e', '"");', '\n', '▁label', '16.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n\n', '▁//', 'cre', 'o', '▁i', '▁text', 'field', '\n', '▁testo', '1', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁4', ');', '\n', '▁testo', '2', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '3', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '4', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '2);', '\n', '▁testo', '5', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10);', '\n', '▁testo', '6', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁16', ');', '\n', '▁testo', '7', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁16', ');', '\n', '▁testo', '8', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁5', '2);', '\n', '▁testo', '9', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁8', ');', '\n', '▁testo', '10', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁3', '2);', '\n', '▁testo', '11', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '12', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁20', ');', '\n', '▁testo', '13', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10);', '\n', '▁testo', '14', '▁=', '▁new', '▁text', 'field', '(""', '"",', '▁10);', '\n\n', '▁//', 'cre', 'o', '▁i', '▁bot', 'toni', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', 'ann', 'ulla', '"");', '\n', '▁confer', 'ma', '▁=', '▁new', '▁button', '(', 'caption', ');', '\n\n', '▁//', 'cre', 'o', '▁i', '▁check', 'box', '▁ad', '▁es', 'clusion', 'e', '\n', '▁pension', 'e', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'boxes', '▁=', '▁new', '▁check', 'box', '[', '4', '];', '\n', '▁check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁solo', '▁pern', 'ott', 'amento', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁prima', '▁col', 'azione', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', '▁mez', 'za', '▁pension', 'e', '"",', '▁pension', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', '▁pension', 'e', '▁complet', 'a', '"",', '▁pension', 'e', ',', '▁false', ');', '\n\t', '▁switch', '▁(', 'pens', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'solo', '_', 'per', 'nott', 'amento', ':', '▁', '\n\t', '▁', '\t\t', 'check', 'boxes', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁solo', '▁pern', 'ott', 'amento', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'solo', '_', 'col', 'azione', ':', '▁', '\n\t\t\t', 'check', 'boxes', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁prima', '▁col', 'azione', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'mez', 'za', '_', 'pension', 'e', ':', '\n\t\t\t', 'check', 'boxes', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', '▁mez', 'za', '▁pension', 'e', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'pension', 'e', '_', 'comp', 'leta', ':', '▁', '\n\t\t\t', 'check', 'boxes', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', '▁pension', 'e', '▁complet', 'a', '"",', '▁pension', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁}', '\n\n', '▁client', 'e', '▁=', '▁new', '▁check', 'box', 'group', '();', '\n', '▁check', 'boxes', '1', '▁=', '▁new', '▁check', 'box', '[', '4', '];', '\n', '▁check', 'boxes', '1', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁neon', 'ato', '▁(0', '-2', '▁anni', ')"",', '▁client', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '1', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁bambino', '▁(3', '-12', '▁anni', ')"",', '▁client', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '1', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', '▁rag', 'azzo', '▁(12', '-17', '▁anni', ')"",', '▁client', 'e', ',', '▁false', ');', '\n', '▁check', 'boxes', '1', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', '▁adult', 'o', '▁(>', '=', '18', '▁anni', ')"",', '▁client', 'e', ',', '▁false', ');', '\n\t', '▁switch', '▁(', 'status', ')', '\n\t', '▁{', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'neon', 'ato', ':', '▁', '\n\t\t', '▁check', 'boxes', '1', '[0]', '▁=', '▁new', '▁check', 'box', '(""', '▁neon', 'ato', '▁(0', '-2', '▁anni', ')"",', '▁client', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'b', 'amb', 'ino', ':', '▁', '\n\t\t\t', 'check', 'boxes', '1', '[1]', '▁=', '▁new', '▁check', 'box', '(""', '▁bambino', '▁(3', '-12', '▁anni', ')"",', '▁client', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'rag', 'azzo', ':', '\n\t\t\t', 'check', 'boxes', '1', '[', '2]', '▁=', '▁new', '▁check', 'box', '(""', '▁rag', 'azzo', '▁(12', '-17', '▁anni', ')"",', '▁client', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁', '\t', 'case', '▁flag', '.', 'adult', 'o', ':', '▁', '\n\t\t\t', 'check', 'boxes', '1', '[', '3]', '▁=', '▁new', '▁check', 'box', '(""', '▁adult', 'o', '▁(>', '=', '18', '▁anni', ')"",', '▁client', 'e', ',', '▁true', ');', '\n\t', '▁', '\t\t', 'break', ';', '\n\t', '▁}', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁alto', '▁cont', 'en', 'ente', '▁i', '▁d', 'ati', '▁del', '▁client', 'e', '\n', '▁panel', '1', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '1.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁et', 'iche', 'tta', ',', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '1,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '1,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '2,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '2,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '3,', '▁2,', '▁2,', '▁1', '▁,', '1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '3,', '▁3,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '4,', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '4,', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '5,', '▁2,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '5,', '▁3,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '6,', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '6,', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '7,', '▁2,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '7,', '▁3,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '8,', '▁0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '8,', '▁1,', '▁5,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '9,', '▁0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '9,', '▁1,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '10,', '▁2,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '10,', '▁3,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '11,', '▁0,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '11,', '▁1,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁label', '12,', '▁2,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '1,', '▁testo', '12,', '▁3,', '▁7,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁centrale', '▁con', '▁i', '▁d', 'ati', '▁del', '▁sog', 'gi', 'orno', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁et', 'iche', 'tta', '1,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁label', '13,', '▁0,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁testo', '13,', '▁1,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁label', '14,', '▁2,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northeast', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁testo', '14,', '▁3,', '▁1,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁label', '15,', '▁0,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '[0', '],', '▁0,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '[1', '],', '▁0,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '[', '2', '],', '▁0,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '[', '3', '],', '▁0,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁label', '16,', '▁1,', '▁2,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '1', '[0', '],', '▁1,', '▁3,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '1', '[1', '],', '▁1,', '▁4,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '1', '[', '2', '],', '▁1,', '▁5,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁check', 'boxes', '1', '[', '3', '],', '▁1,', '▁6,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'northwest', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'east', ',', '▁0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁confer', 'ma', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '1,', '▁0,', '▁0,', '▁4,', '▁8,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'north', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '2,', '▁0,', '▁8,', '▁4,', '▁7,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', 'panel', '3,', '0,', '▁15,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'south', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n', '▁ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁{', '\n', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁{', '\n', '▁dispose', '();', '\n', '▁padre', '.', 'set', 'enabled', '(', 'true', ');', '\n', '▁}', '\n', '▁}', ');', '\n\t', '}', '\n\t\n\t', 'public', '▁sog', 'gi', 'orn', 'ante', '▁read', 'dat', 'is', 'ogg', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ',', '▁int', '▁cont', ')', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'string', '▁data', '_', 'in', 'izio', ',', 'data', '_', 'fine', ';', '\n\t\t', 'date', '▁data', '1,', '▁data', '2;', '\n\t\t', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', '▁=', '▁new', '▁sog', 'gi', 'orn', 'ante', '();', '\n\t\t', 'so', 'gg', '.', 'set', 'num', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'cogn', 'ome', '(', 'test', 'o', '2.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'n', 'ome', '(', 'test', 'o', '3.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'lu', 'ogon', 'asc', '(', 'test', 'o', '4.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'dat', 'an', 'asc', '(', 'date', 'utils', '.', 'convert', 'date', '(', 'test', 'o', '5.', 'get', 'text', '())', ');', '\n\t\t', 'so', 'gg', '.', 'set', 'num', 'doc', '(', 'test', 'o', '6.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'num', 'tel', '(', 'test', 'o', '7.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'ind', 'ir', 'iz', 'zo', '(', 'test', 'o', '8.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'cap', '(', 'test', 'o', '9.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'com', 'une', '(', 'test', 'o', '10.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'c', 'itta', '(', 'test', 'o', '11.', 'get', 'text', '());', '\n\t\t', 'so', 'gg', '.', 'set', 'n', 'azione', '(', 'test', 'o', '12.', 'get', 'text', '());', '\n', '▁s', 'ogg', '.', 'set', 'in', 'iz', 'ios', 'ogg', '(', 'p', 'ren', '.', 'get', 'in', 'iz', 'ios', 'ogg', '());', '\n', '▁s', 'ogg', '.', 'set', 'f', 'ines', 'ogg', '(', 'p', 'ren', '.', 'get', 'f', 'ines', 'ogg', '());', '\n', '▁s', 'ogg', '.', 'set', 'id', 'p', 'ren', 'ot', 'azione', '(', 'p', 'ren', '.', 'getid', 'p', 'ren', 'ot', 'azione', '());', '\n', '▁s', 'ogg', '.', 'set', 'id', 'so', 'ggi', 'orn', 'ante', '(', 'cont', ');', '\n', '▁', '\n\t\t', 'if', '▁(', 'check', 'boxes', '[0', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t', 'so', 'gg', '.', 'set', 'pension', 'amento', '(', 'flag', '.', 'solo', '_', 'per', 'nott', 'amento', ');', '\n\t\t', 'else', '\t\n\t\t\t', 'if', '▁(', 'check', 'boxes', '[1', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t', 'so', 'gg', '.', 'set', 'pension', 'amento', '(', 'flag', '.', 'solo', '_', 'col', 'azione', ');', '\n\t\t\t', 'else', '\n\t\t\t\t', 'if', '▁(', 'check', 'boxes', '[', '2', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t', 'so', 'gg', '.', 'set', 'pension', 'amento', '(', 'flag', '.', 'mez', 'za', '_', 'pension', 'e', ');', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'if', '▁(', 'check', 'boxes', '[', '3', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t\t', 'so', 'gg', '.', 'set', 'pension', 'amento', '(', 'flag', '.', 'pension', 'e', '_', 'comp', 'leta', ');', '\n\t\t\n\t\t', 'if', '▁(', 'check', 'boxes', '1', '[0', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t', 'so', 'gg', '.', 'set', 'status', '(', 'flag', '.', 'neon', 'ato', ');', '\n\t\t', 'else', '\n\t\t\t', 'if', '▁(', 'check', 'boxes', '1', '[1', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t', 'so', 'gg', '.', 'set', 'status', '(', 'flag', '.', 'b', 'amb', 'ino', ');', '\n\t\t\t', 'else', '\n\t\t\t\t', 'if', '▁(', 'check', 'boxes', '1', '[', '2', '].', 'get', 'state', '()', '▁==', '▁true', ')', '\n\t\t\t\t\t', 'so', 'gg', '.', 'set', 'status', '(', 'flag', '.', 'rag', 'azzo', ');', '\n\t\t\t\t', 'else', '\n\t\t\t\t\t', 'so', 'gg', '.', 'set', 'status', '(', 'flag', '.', 'adult', 'o', ');', '\t\n\t\t', 'return', '▁s', 'ogg', ';', '\n\t\n\t', '}', '\t\n\n\t', 'public', '▁void', '▁writ', 'ed', 'atis', 'ogg', '(', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', ')', '\n\t', '{', '\n\t\t', 'test', 'o', '1.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'cogn', 'ome', '());', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'n', 'ome', '());', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'lu', 'ogon', 'asc', '());', '\n\t\t', 'test', 'o', '5.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'so', 'gg', '.', 'get', 'dat', 'an', 'asc', '()))', ');', '\n\t\t', 'test', 'o', '6.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'num', 'doc', '());', '\n\t\t', 'test', 'o', '7.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'num', 'tel', '());', '\n\t\t', 'test', 'o', '8.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'ind', 'ir', 'iz', 'zo', '());', '\n\t\t', 'test', 'o', '9.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'cap', '());', '\n\t\t', 'test', 'o', '10.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'com', 'une', '());', '\n\t\t', 'test', 'o', '11.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'c', 'itta', '());', '\n\t\t', 'test', 'o', '12.', 's', 'ette', 'xt', '(', 'so', 'gg', '.', 'get', 'n', 'azione', '());', '\n\t\t', 'test', 'o', '13.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'so', 'gg', '.', 'get', 'in', 'iz', 'ios', 'ogg', '()))', ');', '\n\t\t', 'test', 'o', '14.', 's', 'ette', 'xt', '(', 'date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'date', 'utils', '.', 'giv', 'estring', 'of', 'date', '(', 'so', 'gg', '.', 'get', 'f', 'ines', 'ogg', '()))', ');', '\n\t', '}', '\n\n\t', 'void', '▁chang', 'et', 'itle', '(', 'int', '▁par', 'z', ',', '▁int', '▁tot', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'sett', 'itle', '(""', 'ins', 'er', 'imento', '▁dei', '▁d', 'ati', '▁del', '▁sog', 'gi', 'orn', 'ante', '▁(""', '+', 'par', 'z', '+', '""/""', '+', 'tot', '+', '"")', '"");', '\n\t', '}', '\n\n\t', 'void', '▁clean', 'fields', '()', '\n\t', '{', '\n\t\t', 'test', 'o', '2.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '3.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '4.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '5.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '6.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '7.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '8.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '9.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '10.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '11.', 's', 'ette', 'xt', '("""");', '\n\t\t', 'test', 'o', '12.', 's', 'ette', 'xt', '("""");', '\n\t', '}', '\t\n\n\t', 'void', '▁ag', 'gi', 'orn', 'ad', 'isp', '(', 'so', 'ggi', 'orn', 'ante', '▁s', 'ogg', ',', '▁char', '▁tipo', ')', '\n\t', '{', '\n\t\t', 'dis', 'pon', 'ibil', 'ita', '▁disp', '_', 'da', '_', 'camb', 'ia', 're', '▁=', '▁new', '▁dis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'list', 'adis', 'pon', 'ibil', 'ita', '▁elenco', '_', 'disp', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'el', 'enc', 'odis', 'pon', 'ibil', 'ita', '();', '\n\t\t', 'if', '▁(', 'elen', 'co', '_', 'disp', '▁==', '▁null', ')', '\n\t\t', '{', '\n\t\t\t', 'frame', '▁msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁proble', 'mi', '▁con', '▁il', '▁database', '▁nella', '▁lett', 'ura', '▁delle', '▁dis', 'pon', 'ibil', 'ita', ""'"", '!', '▁""', ');', '\n\t\t\t', 'return', ';', '\n\t\t', '}', '\n\t\t\n\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '▁=', '▁ut', 'ils', '.', 'get', 'disp', 'of', 'room', '(', 'elen', 'co', '_', 'disp', ',', '▁s', 'ogg', '.', 'get', 'num', 'stan', 'za', '(),', '▁true', ');', '\n\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'set', 'dis', 'pon', 'ibil', 'ita', '(', 'so', 'gg', '.', 'get', 'in', 'iz', 'ios', 'ogg', '(),', '▁s', 'ogg', '.', 'get', 'f', 'ines', 'ogg', '(),', '▁tipo', ',', '▁flag', '.', 'asse', 'gn', 'ata', ')', '▁;', '\n\t\t', '(', 'princip', 'ale', '.', 'db', ').', 'changed', 'is', 'pon', 'ibil', 'ita', '(', '▁disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'num', 'stan', 'za', '(),', '▁', '\n\t\t\t\t\t\t\t\t\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'disp', 'ann', 'oc', 'orr', '(),', '\n\t\t\t\t\t\t\t\t\t\t\t', 'disp', '_', 'da', '_', 'camb', 'ia', 're', '.', 'get', 'disp', 'ann', 'op', 'rox', '()', '▁);', '\n\t', '}', '\n\n\t', 'boolean', '▁error', 'i', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'string', '▁data', '_', 'n', 'asc', '▁=', '▁new', '▁string', '();', '▁', '\n\t\t', '//', 'controll', 'o', '▁data', '▁di', '▁nasc', 'ita', '\n\t\t', 'if', '▁(', '▁(', 'test', 'o', '5.', 'get', 'text', '().', 'equals', '(""', '""))', '▁)', '\n\t\t', '{', '\t\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', '▁ins', 'er', 'ire', '▁la', '▁data', '▁di', '▁nasc', 'ita', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'else', '\t\t\n\t\t\t', 'data', '_', 'n', 'asc', '▁=', '▁date', 'utils', '.', 'pars', 'ed', 'ate', '(', 'test', 'o', '5.', 'get', 'text', '());', '\n\t\t', 'if', '▁(', '▁data', '_', 'n', 'asc', '.', 'equals', '(', 'er', 'r', 'ore', '.', 'data', '_', 'non', '_', 'cor', 'retta', '))', '\n\t\t', '{', '\t\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', '▁data', '▁nasc', 'ita', '▁errata', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'else', '\n\t\t', '{', '\n\t\t\t', 'if', '▁(', '▁!', '(', '▁date', 'utils', '.', 'isd', 'atar', 'ight', '(', 'data', '_', 'n', 'asc', '))', '▁)', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',""', 'data', '▁nasc', 'ita', '▁ins', 'ens', 'ata', '"");', '\n\t\t\t\t', 'return', '▁true', ';', '\n\t\t\t', '}', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '2.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁cogn', 'ome', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '3.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁nome', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '4.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁lu', 'ogo', '▁di', '▁nasc', 'ita', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '6.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁16)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁document', 'o', '▁di', '▁ident', 'ita', ""'"", '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁16', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '7.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁16)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁numero', '▁telef', 'on', 'ico', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁16', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '8.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁l', ""'"", 'ind', 'ir', 'iz', 'zo', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '9.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁5)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁c', '.', 'a', '.', 'p', '.', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁5', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '10.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁3', '2)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁il', '▁comune', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁32', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '11.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁c', 'itta', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'if', '▁(', '▁!', '((', 'test', 'o', '12.', 'get', 'text', '()', ').', 'length', '()', '▁<', '=', '▁20)', '▁)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', '▁la', '▁naz', 'ione', '▁de', 've', '▁ess', 'ere', '▁compost', 'o', '▁da', '▁al', '▁pi', 'u', ""'"", '▁20', '▁car', 'atter', 'i', '!', '▁""', ');', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n', '}', '\n']"~"packag interfacc import java awt import java awt event import moduli import common util import common def import java util date public class maschera soggiorno extend frame dichiaro gli oggetti che utilizzero per costruir finestra label etichetta etichetta label label label label label label label label label label label label label label label label text field testo testo testo testo testo testo testo testo testo testo testo testo testo testo button annulla conferma checkbox group pension client checkbox checkbox checkbox panel panel panel panel grid bag layout gridbag new grid bag layout ricerca prenotazion padr new ricerca prenotazion public maschera soggiorno string titl string caption char pen char status super titl padr set enabl fals setup panel caption pen status init pack set visibl true void setup panel string caption char pen char status set font configurazion sistema font base creo etichett etichetta new label dati del client etichetta set font configurazion sistema font titolo label new label stanza numero label new label cognom label new label nome label new label luogo nascita label new label data nascita label new label documento identita label new label numero telefonico label new label indirizzo label new label label new label comun residenza label11 new label citta ""); label12 new label nazion ""); etichetta1 new label dati del soggiorno ""); etichetta1 set font configurazion sistema font_titolo label13 new label data inizio soggiorno ""); label14 new label data fine soggiorno ""); label15 new label tipo pensionamento ""); label15 set font configurazion sistema font_titolo label16 new label status client ""); label16 set font configurazion sistema font_titolo creo text field testo1 new text field ("""", testo2 new text field ("""", testo3 new text field ("""", testo4 new text field ("""", testo5 new text field ("""", testo6 new text field ("""", testo7 new text field ("""", testo8 new text field ("""", testo9 new text field ("""", testo10 new text field ("""", testo11 new text field ("""", testo12 new text field ("""", testo13 new text field ("""", testo14 new text field ("""", creo bottoni annulla new button annulla ""); conferma new button caption creo checkbox esclusion pension new checkbox group (); checkbox new checkbox checkbox new checkbox solo pernottamento pension fals checkbox new checkbox prima colazion pension fals checkbox new checkbox mezza pension pension fals checkbox new checkbox pension completa pension fals switch pen case flag solo_pernottamento checkbox new checkbox solo pernottamento pension true break case flag solo_colazion checkbox new checkbox prima colazion pension true break case flag mezza_pension checkbox new checkbox mezza pension pension true break case flag pensione_completa checkbox new checkbox pension completa pension true break client new checkbox group (); checkboxes1 new checkbox checkboxes1 new checkbox neonato anni )"", client fals checkboxes1 new checkbox bambino anni )"", client fals checkboxes1 new checkbox ragazzo anni )"", client fals checkboxes1 new checkbox adulto (>= anni )"", client fals switch status case flag neonato checkboxes1 new checkbox neonato anni )"", client true break case flag bambino checkboxes1 new checkbox bambino anni )"", client true break case flag ragazzo checkboxes1 new checkbox ragazzo anni )"", client true break case flag adulto checkboxes1 new checkbox adulto (>= anni )"", client true break creo pannello alto contenent dati del client panel1 new panel (); panel1 set layout gridbag util constrain panel1 etichetta grid bag constraint none grid bag constraint northwest util constrain panel1 label1 grid bag constraint none grid bag constraint northwest util constrain panel1 testo1 grid bag constraint none grid bag constraint northwest util constrain panel1 label2 grid bag constraint none grid bag constraint northwest util constrain panel1 testo2 grid bag constraint none grid bag constraint northwest util constrain panel1 label3 grid bag constraint none grid bag constraint northwest util constrain panel1 testo3 grid bag constraint none grid bag constraint northwest util constrain panel1 label4 grid bag constraint none grid bag constraint northwest util constrain panel1 testo4 grid bag constraint none grid bag constraint northwest util constrain panel1 label5 grid bag constraint none grid bag constraint northwest util constrain panel1 testo5 grid bag constraint none grid bag constraint northwest util constrain panel1 label6 grid bag constraint none grid bag constraint northwest util constrain panel1 testo6 grid bag constraint none grid bag constraint northwest util constrain panel1 label7 grid bag constraint none grid bag constraint northwest util constrain panel1 testo7 grid bag constraint none grid bag constraint northwest util constrain panel1 label8 grid bag constraint none grid bag constraint northwest util constrain panel1 testo8 grid bag constraint none grid bag constraint northwest util constrain panel1 label9 grid bag constraint none grid bag constraint northwest util constrain panel1 testo9 grid bag constraint none grid bag constraint northwest util constrain panel1 label10 grid bag constraint none grid bag constraint northwest util constrain panel1 testo10 grid bag constraint none grid bag constraint northwest util constrain panel1 label11 grid bag constraint none grid bag constraint northwest util constrain panel1 testo11 grid bag constraint none grid bag constraint northwest util constrain panel1 label12 grid bag constraint none grid bag constraint northwest util constrain panel1 testo12 grid bag constraint none grid bag constraint northwest creo pannello central con dati del soggiorno panel2 new panel (); panel2 set layout gridbag util constrain panel2 etichetta1 grid bag constraint none grid bag constraint northwest util constrain panel2 label13 grid bag constraint none grid bag constraint northeast util constrain panel2 testo13 grid bag constraint none grid bag constraint northwest util constrain panel2 label14 grid bag constraint none grid bag constraint northeast util constrain panel2 testo14 grid bag constraint none grid bag constraint northwest util constrain panel2 label15 grid bag constraint none grid bag constraint northwest util constrain panel2 checkbox grid bag constraint none grid bag constraint northwest util constrain panel2 checkbox grid bag constraint none grid bag constraint northwest util constrain panel2 checkbox grid bag constraint none grid bag constraint northwest util constrain panel2 checkbox grid bag constraint none grid bag constraint northwest util constrain panel2 label16 grid bag constraint none grid bag constraint northwest util constrain panel2 checkboxes1 grid bag constraint none grid bag constraint northwest util constrain panel2 checkboxes1 grid bag constraint none grid bag constraint northwest util constrain panel2 checkboxes1 grid bag constraint none grid bag constraint northwest util constrain panel2 checkboxes1 grid bag constraint none grid bag constraint northwest creo pannello basso con due pulsanti panel3 new panel (); panel3 set layout gridbag util constrain panel3 annulla grid bag constraint none grid bag constraint east util constrain panel3 conferma grid bag constraint none grid bag constraint west attacco pannelli frame set layout gridbag util constrain panel1 grid bag constraint horizont grid bag constraint north util constrain panel2 grid bag constraint horizont grid bag constraint center util constrain panel3 grid bag constraint horizont grid bag constraint south public void init annulla add action listen new action listen public void action perform action event dispos (); padr set enabl true }); public soggiornant read dati sogg prenotazion pren int cont frame msg string data_inizio data_fin date data1 data2 soggiornant sogg new soggiornant (); sogg set num stanza pren get num stanza ()); sogg set cognom testo2 get text ()); sogg set nome testo3 get text ()); sogg set luogo nasc testo4 get text ()); sogg set data nasc date util convert date testo5 get text ())); sogg set num doc testo6 get text ()); sogg set num tel testo7 get text ()); sogg set indirizzo testo8 get text ()); sogg set cap testo9 get text ()); sogg set comun testo10 get text ()); sogg set citta testo11 get text ()); sogg set nazion testo12 get text ()); sogg set inizio sogg pren get inizio sogg ()); sogg set fine sogg pren get fine sogg ()); sogg set prenotazion pren get prenotazion ()); sogg set soggiornant cont checkbox get state true sogg set pensionamento flag solo_pernottamento els checkbox get state true sogg set pensionamento flag solo_colazion els checkbox get state true sogg set pensionamento flag mezza_pension els checkbox get state true sogg set pensionamento flag pensione_completa checkboxes1 get state true sogg set status flag neonato els checkboxes1 get state true sogg set status flag bambino els checkboxes1 get state true sogg set status flag ragazzo els sogg set status flag adulto return sogg public void write dati sogg soggiornant sogg testo1 set text sogg get num stanza ()); testo2 set text sogg get cognom ()); testo3 set text sogg get nome ()); testo4 set text sogg get luogo nasc ()); testo5 set text date util pars date date util give string date sogg get data nasc ()))); testo6 set text sogg get num doc ()); testo7 set text sogg get num tel ()); testo8 set text sogg get indirizzo ()); testo9 set text sogg get cap ()); testo10 set text sogg get comun ()); testo11 set text sogg get citta ()); testo12 set text sogg get nazion ()); testo13 set text date util pars date date util give string date sogg get inizio sogg ()))); testo14 set text date util pars date date util give string date sogg get fine sogg ()))); void chang titl int parz int tot set titl inserimento dei dati del soggiornant (""+ parz +""/""+ tot +"")""); void clean field testo2 set text (""""); testo3 set text (""""); testo4 set text (""""); testo5 set text (""""); testo6 set text (""""); testo7 set text (""""); testo8 set text (""""); testo9 set text (""""); testo10 set text (""""); testo11 set text (""""); testo12 set text (""""); void aggiorna disp soggiornant sogg char tipo disponibilita disp_da_cambiar new disponibilita (); lista disponibilita elenco_disp principal elenco disponibilita (); elenco_disp null frame msg new messag dialog problemi con databas nella lettura dell disponibilita ""); return disp_da_cambiar util get disp room elenco_disp sogg get num stanza (), true disp_da_cambiar set disponibilita sogg get inizio sogg (), sogg get fine sogg (), tipo flag assegnata principal chang disponibilita disp_da_cambiar get num stanza (), disp_da_cambiar get disp anno corr (), disp_da_cambiar get disp anno prox boolean errori frame msg string data_nasc new string (); controllo data nascita testo5 get text (). equal ("""")) msg new avviso dialog inserir data nascita ""); return true els data_nasc date util pars date testo5 get text ()); data_nasc equal error data_non_corretta msg new messag dialog data nascita errata ""); return true els date util data right data_nasc msg new messag dialog data nascita insensata ""); return true !(( testo2 get text ()). length msg new messag dialog cognom deve esser composto piu caratteri ""); return true !(( testo3 get text ()). length msg new messag dialog nome deve esser composto piu caratteri ""); return true !(( testo4 get text ()). length msg new messag dialog luogo nascita deve esser composto piu caratteri ""); return true !(( testo6 get text ()). length msg new messag dialog documento identita deve esser composto piu caratteri ""); return true !(( testo7 get text ()). length msg new messag dialog numero telefonico deve esser composto piu caratteri ""); return true !(( testo8 get text ()). length msg new messag dialog indirizzo deve esser composto piu caratteri ""); return true !(( testo9 get text ()). length msg new messag dialog deve esser composto piu caratteri ""); return true !(( testo10 get text ()). length msg new messag dialog comun deve esser composto piu caratteri ""); return true !(( testo11 get text ()). length msg new messag dialog citta deve esser composto piu caratteri ""); return true !(( testo12 get text ()). length msg new messag dialog nazion deve esser composto piu caratteri ""); return true return fals"
70~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/PrenotazioniScadute.java~PrenotazioniScadute.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import java.util.Date;
import moduli.*;

public class PrenotazioniScadute extends Frame 
{  
	Prenotazione prenotazione;
    
    //Dichiarazioni di variabili
    Panel panel2, panel3; 
    Label  label3;
    List lista;
    Button  Annulla, Scegli;
    GridBagLayout gridbag = new GridBagLayout();
	SubPrenotazione padre = new SubPrenotazione();
  	ListaPrenotazioni L_pren;
  	Frame figlio;  
    int to_call;
 	boolean first_time = true;   
    
    public PrenotazioniScadute (SubPrenotazione p, ListaPrenotazioni L)
    {
        super(""Prenotazioni in scadenza"");
        padre = p;
        L_pren = L;
        setupPanels();
        init();
        pack(); 
    }
                     
        void setupPanels()
        {  
			this.setFont(ConfigurazioneSistema.font_base);
            
            //Creo dei pulsanti e ne disabilito due  
            Annulla = new Button("" Fine "");
            Scegli = new Button("" Visualizza "");
            //Creo le etichette
			label3 = new Label(""Elenco delle prenotazioni non confermate                "");
			label3.setFont(ConfigurazioneSistema.font_titolo);
            
            //Creo il pannello in basso con due pulsanti                  
            panel2 = new Panel();
            panel2.setLayout(gridbag);
            Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(panel2, Scegli, 1, 0, 1, 1, GridBagConstraints.NONE,
                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             
            
            //Creo il pannello con la lista dei risultati della ricerca
            lista = new List(10,false);
            panel3 = new Panel();
            panel3.setLayout(gridbag);
            Utils.constrain(panel3, label3, 0, 0, 2, 1, GridBagConstraints.NONE,
                        GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);
            Utils.constrain(panel3, lista, 0, 1, 4, 3, GridBagConstraints.BOTH,
                        GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);             
            
            
            //Attacco i pannelli al frame
            this.setLayout(gridbag);
            Utils.constrain(this, panel3, 0, 0, 4, 10, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);
            Utils.constrain(this, panel2, 0, 10, 4, 1, GridBagConstraints.HORIZONTAL,
                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); 
        	pack();
        
        }

    public void init()
    {
		if (lista.getItemCount() != 0)
			lista.removeAll();
		for(int i = 1; i<=L_pren.length(); i++)
			lista.addItem((L_pren.getPrenotazione(i)).toString());	
	
	
		lista.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		prenotazione = L_pren.getPrenotazione((lista.getSelectedIndexes())[0]+1);
				startControllaPren(prenotazione);
			}
      	});
     
   	 	Scegli.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		if (!noSelection())
         		{
         			prenotazione = L_pren.getPrenotazione((lista.getSelectedIndexes())[0]+1);
					startControllaPren(prenotazione); 
				}
			}
      });
        
  		Annulla.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
				dispose();
				if ( (SubPrenotazione.ric_stanza == null) && (SubPrenotazione.ric_stanza == null) )
					padre.setEnabled(true);
			}
      	});    	

    } 

	void startControllaPren(Prenotazione pren)
	{
		this.setEnabled(false);
		Stanza stanza = (Principale.db).readStanza(pren.getNumStanza());
		ControllaPrenotazione ctrl = new ControllaPrenotazione(pren, stanza, this);
		ctrl.setVisible(true);
		ctrl.padre = this;	
	}

	boolean noSelection()
	{
		Frame msg;
		if (lista.getSelectedIndex() == -1)
		{
			msg = new AvvisoDialog(this,"" Selezionare una prenotazione dalla lista e ripremere il tasto"");
			return true;
		}	
		return false;
	}

}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'ut', 'il', '.', 'd', 'ate', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n\n', 'publ', 'ic', '▁class', '▁p', 'ren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁ext', 'ends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', 'ot', 'az', 'ion', 'e', ';', '\n', '▁', '\n', '▁/', '/', 'd', 'ich', 'i', 'ar', 'az', 'ion', 'i', '▁di', '▁vari', 'ab', 'ili', '\n', '▁pan', 'el', '▁pan', 'el', '2,', '▁pan', 'el', '3', ';', '▁', '\n', '▁label', '▁label', '3', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁but', 'ton', '▁ann', 'ull', 'a', ',', '▁s', 'ce', 'g', 'li', ';', '\n', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '▁gr', 'id', 'b', 'ag', '▁=', '▁new', '▁gr', 'id', 'b', 'ag', 'l', 'ay', 'out', '(', ');', '\n\t', 'sub', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁pad', 're', '▁=', '▁new', '▁sub', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', ');', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'az', 'ion', 'i', '▁l', '_', 'p', 'ren', ';', '\n', '▁', '\t', 'fr', 'ame', '▁fig', 'l', 'io', ';', '▁', '\n', '▁int', '▁to', '_', 'c', 'all', ';', '\n', '▁', '\t', 'bo', 'ole', 'an', '▁first', '_', 'time', '▁=', '▁true', ';', '▁', '\n', '▁', '\n', '▁public', '▁p', 'ren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁(', 'sub', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', ',', '▁list', 'ap', 'ren', 'ot', 'az', 'ion', 'i', '▁l', ')', '\n', '▁{', '\n', '▁super', '(', '""', 'p', 'ren', 'ot', 'az', 'ion', 'i', '▁in', '▁sc', 'ad', 'en', 'za', '"")', ';', '\n', '▁pad', 're', '▁=', '▁p', ';', '\n', '▁l', '_', 'p', 'ren', '▁=', '▁l', ';', '\n', '▁set', 'up', 'pan', 'els', '(', ');', '\n', '▁init', '(', ');', '\n', '▁pack', '(', ');', '▁', '\n', '▁}', '\n', '▁', '\n', '▁vo', 'id', '▁set', 'up', 'pan', 'els', '(', ')', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 'base', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁de', 'i', '▁p', 'uls', 'ant', 'i', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ull', 'a', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁fine', '▁""', ');', '\n', '▁s', 'ce', 'g', 'li', '▁=', '▁new', '▁but', 'ton', '(', '""', '▁visual', 'iz', 'za', '▁""', ');', '\n', '▁/', '/', 'c', 're', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n\t\t\t', 'l', 'ab', 'el', '3', '▁=', '▁new', '▁label', '(', '""', 'el', 'en', 'co', '▁del', 'le', '▁p', 'ren', 'ot', 'az', 'ion', 'i', '▁non', '▁con', 'fer', 'mate', '▁""', ');', '\n\t\t\t', 'l', 'ab', 'el', '3.', 'set', 'f', 'ont', '(', 'con', 'f', 'ig', 'ur', 'az', 'ion', 'es', 'ist', 'em', 'a', '.', 'f', 'ont', '_', 't', 'it', 'olo', ');', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁in', '▁bas', 'so', '▁con', '▁due', '▁p', 'uls', 'ant', 'i', '▁', '\n', '▁pan', 'el', '2', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '2.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ull', 'a', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁s', 'ce', 'g', 'li', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁/', '/', 'c', 're', 'o', '▁il', '▁p', 'ann', 'ello', '▁con', '▁la', '▁list', 'a', '▁de', 'i', '▁r', 'is', 'ult', 'ati', '▁d', 'ella', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '1', '0,', 'f', 'al', 'se', ');', '\n', '▁pan', 'el', '3', '▁=', '▁new', '▁pan', 'el', '(', ');', '\n', '▁pan', 'el', '3.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'n', 'one', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'b', 'oth', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁/', '/', 'att', 'ac', 'co', '▁i', '▁p', 'ann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'l', 'ay', 'out', '(', 'gr', 'id', 'b', 'ag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '3,', '▁', '0,', '▁', '0,', '▁4,', '▁10,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁pan', 'el', '2,', '▁', '0,', '▁10,', '▁4,', '▁1,', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁gr', 'id', 'b', 'ag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'p', 'ack', '(', ');', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁vo', 'id', '▁init', '(', ')', '\n', '▁{', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '(', ')', '▁!', '=', '▁', '0)', '\n\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '(', ');', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '_', 'p', 'ren', '.', 'l', 'ength', '(', ');', '▁i', '+', '+', ')', '\n\t\t\t', 'list', 'a', '.', 'ad', 'd', 'it', 'em', '(', '(', 'l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', 'i', ')', ').', 't', 'ost', 'ring', '(', ')', ');', '\t\n\t\n\t\n\t\t', 'list', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁=', '▁l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'st', 'art', 'cont', 'roll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', '▁', '\t', 's', 'ce', 'g', 'li', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'if', '▁(', '!', 'n', 'ose', 'lect', 'ion', '(', ')', ')', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁=', '▁l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'az', 'ion', 'e', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t\t', 'st', 'art', 'cont', 'roll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', ');', '▁', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t\t', 'ann', 'ull', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '(', ');', '\n\t\t\t\t', 'if', '▁(', '▁(', 'sub', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'ric', '_', 'stan', 'za', '▁=', '=', '▁n', 'ull', ')', '▁&', '&', '▁(', 'sub', 'p', 'ren', 'ot', 'az', 'ion', 'e', '.', 'ric', '_', 'stan', 'za', '▁=', '=', '▁n', 'ull', ')', '▁)', '\n\t\t\t\t\t', 'p', 'ad', 're', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'cont', 'roll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'az', 'ion', 'e', '▁p', 'ren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'n', 'um', 'stan', 'za', '(', ')', ');', '\n\t\t', 'cont', 'roll', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '▁c', 'tr', 'l', '▁=', '▁new', '▁controll', 'ap', 'ren', 'ot', 'az', 'ion', 'e', '(', 'p', 'ren', ',', '▁stan', 'za', ',', '▁this', ');', '\n\t\t', 'ct', 'r', 'l', '.', 'set', 'vis', 'ible', '(', 'tr', 'ue', ');', '\n\t\t', 'ct', 'r', 'l', '.', 'p', 'ad', 're', '▁=', '▁this', ';', '\t\n\t', '}', '\n\n\t', 'bo', 'ole', 'an', '▁n', 'ose', 'lect', 'ion', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', '(', ')', '▁=', '=', '▁-', '1)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁se', 'le', 'z', 'ion', 'are', '▁un', 'a', '▁p', 'ren', 'ot', 'az', 'ion', 'e', '▁dall', 'a', '▁list', 'a', '▁e', '▁r', 'ip', 'rem', 'ere', '▁il', '▁t', 'ast', 'o', '"")', ';', '\n\t\t\t', 'ret', 'urn', '▁true', ';', '\n\t\t', '}', '\t\n\t\t', 'ret', 'urn', '▁fal', 'se', ';', '\n\t', '}', '\n\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'ut', 'il', '.', 'date', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n\n', 'public', '▁class', '▁pren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁extends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'az', 'ioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '2,', '▁panel', '3', ';', '▁', '\n', '▁label', '▁label', '3', ';', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁s', 'ce', 'g', 'li', ';', '\n', '▁grid', 'bag', 'lay', 'out', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'lay', 'out', '();', '\n\t', 'sub', 'p', 'ren', 'ot', 'azione', '▁pad', 're', '▁=', '▁new', '▁sub', 'p', 'ren', 'ot', 'azione', '();', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'az', 'ioni', '▁l', '_', 'p', 'ren', ';', '\n', '▁', '\t', 'frame', '▁fig', 'lio', ';', '▁', '\n', '▁int', '▁to', '_', 'call', ';', '\n', '▁', '\t', 'bo', 'olean', '▁first', '_', 'time', '▁=', '▁true', ';', '▁', '\n', '▁', '\n', '▁public', '▁pren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁(', 'sub', 'p', 'ren', 'ot', 'azione', '▁p', ',', '▁list', 'ap', 'ren', 'ot', 'az', 'ioni', '▁l', ')', '\n', '▁{', '\n', '▁super', '(""', 'p', 'ren', 'ot', 'az', 'ioni', '▁in', '▁sc', 'ad', 'enza', '"");', '\n', '▁pad', 're', '▁=', '▁p', ';', '\n', '▁l', '_', 'p', 'ren', '▁=', '▁l', ';', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁dei', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁s', 'ce', 'g', 'li', '▁=', '▁new', '▁button', '(""', '▁visual', 'iz', 'za', '▁""', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'het', 'te', '\n\t\t\t', 'l', 'abel', '3', '▁=', '▁new', '▁label', '(""', 'el', 'en', 'co', '▁delle', '▁pren', 'ot', 'az', 'ioni', '▁non', '▁con', 'fer', 'mate', '▁""', ');', '\n\t\t\t', 'l', 'abel', '3.', 'set', 'font', '(', 'con', 'fig', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁ann', 'ulla', ',', '▁', '0,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '2,', '▁s', 'ce', 'g', 'li', ',', '▁1,', '▁', '0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ric', 'er', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '10,', 'false', ');', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁label', '3,', '▁', '0,', '▁', '0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'pan', 'el', '3,', '▁list', 'a', ',', '▁', '0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.', '0,', '▁3.', '0,', '▁', '0,', '▁', '0,', '▁', '0,', '▁', '0)', ';', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'lay', 'out', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '3,', '▁', '0,', '▁', '0,', '▁4,', '▁10,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'str', 'ain', '(', 'this', ',', '▁panel', '2,', '▁', '0,', '▁10,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'hor', 'iz', 'ont', 'al', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'it', 'em', 'count', '()', '▁!=', '▁', '0)', '\n\t\t\t', 'list', 'a', '.', 'rem', 'ove', 'all', '();', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1', ';', '▁i', '<', '=', 'l', '_', 'p', 'ren', '.', 'length', '();', '▁i', '++', ')', '\n\t\t\t', 'list', 'a', '.', 'add', 'it', 'em', '(', '(', 'l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', 'i', ')', ').', 't', 'ost', 'ring', '());', '\t\n\t\n\t\n\t\t', 'list', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'start', 'controll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'azione', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', '▁', '\t', 's', 'ce', 'g', 'li', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'if', '▁(', '!', 'n', 'ose', 'lection', '())', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t\t', 'start', 'controll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'azione', ');', '▁', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t\t', 'ann', 'ulla', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'if', '▁(', '▁(', 'sub', 'p', 'ren', 'ot', 'azione', '.', 'ric', '_', 'stan', 'za', '▁==', '▁null', ')', '▁&', '&', '▁(', 'sub', 'p', 'ren', 'ot', 'azione', '.', 'ric', '_', 'stan', 'za', '▁==', '▁null', ')', '▁)', '\n\t\t\t\t\t', 'pad', 're', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n\n', '▁}', '▁', '\n\n\t', 'v', 'oid', '▁start', 'controll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n\t\t', 'stan', 'za', '▁stan', 'za', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'controll', 'ap', 'ren', 'ot', 'azione', '▁c', 'tr', 'l', '▁=', '▁new', '▁controll', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', ',', '▁stan', 'za', ',', '▁this', ');', '\n\t\t', 'ct', 'rl', '.', 'set', 'vis', 'ible', '(', 'true', ');', '\n\t\t', 'ct', 'rl', '.', 'pad', 're', '▁=', '▁this', ';', '\t\n\t', '}', '\n\n\t', 'bo', 'olean', '▁nose', 'lection', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t', 'if', '▁(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', '()', '▁==', '▁-', '1)', '\n\t\t', '{', '\n\t\t\t', 'ms', 'g', '▁=', '▁new', '▁av', 'vis', 'od', 'ial', 'og', '(', 'this', ',""', '▁se', 'lez', 'ion', 'are', '▁una', '▁pren', 'ot', 'azione', '▁dall', 'a', '▁list', 'a', '▁e', '▁rip', 'rem', 'ere', '▁il', '▁tast', 'o', '"");', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\t\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁java', '.', 'util', '.', 'date', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n\n', 'public', '▁class', '▁pren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁extends', '▁frame', '▁', '\n', '{', '▁', '\n\t', 'p', 'ren', 'ot', 'azione', '▁pren', 'ot', 'azione', ';', '\n', '▁', '\n', '▁//', 'd', 'ichi', 'ar', 'azioni', '▁di', '▁vari', 'ab', 'ili', '\n', '▁panel', '▁panel', '2,', '▁panel', '3;', '▁', '\n', '▁label', '▁label', '3;', '\n', '▁list', '▁list', 'a', ';', '\n', '▁button', '▁ann', 'ulla', ',', '▁sce', 'gli', ';', '\n', '▁grid', 'bag', 'layout', '▁grid', 'bag', '▁=', '▁new', '▁grid', 'bag', 'layout', '();', '\n\t', 'sub', 'p', 'ren', 'ot', 'azione', '▁padre', '▁=', '▁new', '▁sub', 'p', 'ren', 'ot', 'azione', '();', '\n', '▁', '\t', 'list', 'ap', 'ren', 'ot', 'azioni', '▁l', '_', 'p', 'ren', ';', '\n', '▁', '\t', 'frame', '▁fig', 'lio', ';', '▁', '\n', '▁int', '▁to', '_', 'call', ';', '\n', '▁', '\t', 'boolean', '▁first', '_', 'time', '▁=', '▁true', ';', '▁', '\n', '▁', '\n', '▁public', '▁pren', 'ot', 'az', 'ion', 'isc', 'ad', 'ute', '▁(', 'sub', 'p', 'ren', 'ot', 'azione', '▁p', ',', '▁list', 'ap', 'ren', 'ot', 'azioni', '▁l', ')', '\n', '▁{', '\n', '▁super', '(""', 'p', 'ren', 'ot', 'azioni', '▁in', '▁sc', 'ad', 'enza', '"");', '\n', '▁padre', '▁=', '▁p', ';', '\n', '▁l', '_', 'p', 'ren', '▁=', '▁l', ';', '\n', '▁setup', 'pan', 'els', '();', '\n', '▁init', '();', '\n', '▁pack', '();', '▁', '\n', '▁}', '\n', '▁', '\n', '▁void', '▁setup', 'pan', 'els', '()', '\n', '▁{', '▁', '\n\t\t\t', 'this', '.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'base', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁dei', '▁puls', 'anti', '▁e', '▁ne', '▁dis', 'abil', 'ito', '▁due', '▁', '\n', '▁ann', 'ulla', '▁=', '▁new', '▁button', '(""', '▁fine', '▁""', ');', '\n', '▁sce', 'gli', '▁=', '▁new', '▁button', '(""', '▁visual', 'izza', '▁""', ');', '\n', '▁//', 'cre', 'o', '▁le', '▁et', 'ic', 'hette', '\n\t\t\t', 'label', '3', '▁=', '▁new', '▁label', '(""', 'elen', 'co', '▁delle', '▁pren', 'ot', 'azioni', '▁non', '▁confer', 'mate', '▁""', ');', '\n\t\t\t', 'label', '3.', 'set', 'font', '(', 'config', 'ur', 'az', 'iones', 'ist', 'ema', '.', 'font', '_', 'tit', 'olo', ');', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁in', '▁basso', '▁con', '▁due', '▁puls', 'anti', '▁', '\n', '▁panel', '2', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '2.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁ann', 'ulla', ',', '▁0,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '2,', '▁sce', 'gli', ',', '▁1,', '▁0,', '▁1,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁0.', '0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\n', '▁//', 'cre', 'o', '▁il', '▁pann', 'ello', '▁con', '▁la', '▁list', 'a', '▁dei', '▁ris', 'ult', 'ati', '▁della', '▁ricer', 'ca', '\n', '▁list', 'a', '▁=', '▁new', '▁list', '(', '10,', 'false', ');', '\n', '▁panel', '3', '▁=', '▁new', '▁panel', '();', '\n', '▁panel', '3.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁label', '3,', '▁0,', '▁0,', '▁2,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'none', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'panel', '3,', '▁list', 'a', ',', '▁0,', '▁1,', '▁4,', '▁3,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'both', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'center', ',', '▁3.0,', '▁3.0,', '▁0,', '▁0,', '▁0,', '▁', '0);', '▁', '\n', '▁', '\n', '▁', '\n', '▁//', 'att', 'acco', '▁i', '▁pann', 'elli', '▁al', '▁frame', '\n', '▁this', '.', 'set', 'layout', '(', 'grid', 'bag', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '3,', '▁0,', '▁0,', '▁4,', '▁10,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '\n', '▁ut', 'ils', '.', 'con', 'strain', '(', 'this', ',', '▁panel', '2,', '▁0,', '▁10,', '▁4,', '▁1,', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'horizontal', ',', '\n', '▁grid', 'bag', 'con', 'str', 'aints', '.', 'west', ',', '▁1.0,', '▁0.', '0,', '▁5,', '▁5,', '▁5,', '▁5', ');', '▁', '\n', '▁', '\t', 'pack', '();', '\n', '▁', '\n', '▁}', '\n\n', '▁public', '▁void', '▁init', '()', '\n', '▁{', '\n\t\t', 'if', '▁(', 'lista', '.', 'get', 'item', 'count', '()', '▁!=', '▁0)', '\n\t\t\t', 'lista', '.', 'remove', 'all', '();', '\n\t\t', 'for', '(', 'int', '▁i', '▁=', '▁1;', '▁i', '<', '=', 'l', '_', 'p', 'ren', '.', 'length', '();', '▁i', '++)', '\n\t\t\t', 'lista', '.', 'add', 'item', '((', 'l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'azione', '(', 'i', ')).', 'tostring', '());', '\t\n\t\n\t\n\t\t', 'lista', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'azione', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t\t', 'start', 'controll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'azione', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n', '▁', '\t', '▁', '\t', 's', 'ce', 'gli', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'if', '▁(!', 'nose', 'lection', '())', '\n', '▁', '\t\t', '{', '\n', '▁', '\t\t\t', 'p', 'ren', 'ot', 'azione', '▁=', '▁l', '_', 'p', 'ren', '.', 'get', 'p', 'ren', 'ot', 'azione', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t\t\t', 'start', 'controll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'azione', ');', '▁', '\n\t\t\t\t', '}', '\n\t\t\t', '}', '\n', '▁}', ');', '\n', '▁', '\n', '▁', '\t\t', 'ann', 'ulla', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'dis', 'pose', '();', '\n\t\t\t\t', 'if', '▁(', '▁(', 'sub', 'p', 'ren', 'ot', 'azione', '.', 'ric', '_', 'stan', 'za', '▁==', '▁null', ')', '▁&&', '▁(', 'sub', 'p', 'ren', 'ot', 'azione', '.', 'ric', '_', 'stan', 'za', '▁==', '▁null', ')', '▁)', '\n\t\t\t\t\t', 'pad', 're', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t', '}', '\n', '▁', '\t', '}', ');', '▁', '\t\n\n', '▁}', '▁', '\n\n\t', 'void', '▁start', 'controll', 'ap', 'ren', '(', 'p', 'ren', 'ot', 'azione', '▁pren', ')', '\n\t', '{', '\n\t\t', 'this', '.', 'set', 'enabled', '(', 'false', ');', '\n\t\t', 'stan', 'za', '▁stanza', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'read', 'stan', 'za', '(', 'p', 'ren', '.', 'get', 'num', 'stan', 'za', '());', '\n\t\t', 'controll', 'ap', 'ren', 'ot', 'azione', '▁ctr', 'l', '▁=', '▁new', '▁controll', 'ap', 'ren', 'ot', 'azione', '(', 'p', 'ren', ',', '▁stanza', ',', '▁this', ');', '\n\t\t', 'ct', 'rl', '.', 'set', 'visible', '(', 'true', ');', '\n\t\t', 'ct', 'rl', '.', 'pad', 're', '▁=', '▁this', ';', '\t\n\t', '}', '\n\n\t', 'boolean', '▁nose', 'lection', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t', 'if', '▁(', 'lista', '.', 'get', 'selected', 'index', '()', '▁==', '▁-', '1)', '\n\t\t', '{', '\n\t\t\t', 'msg', '▁=', '▁new', '▁av', 'vis', 'odial', 'og', '(', 'this', ',""', '▁se', 'lez', 'ion', 'are', '▁una', '▁pren', 'ot', 'azione', '▁dalla', '▁list', 'a', '▁e', '▁rip', 'rem', 'ere', '▁il', '▁tast', 'o', '"");', '\n\t\t\t', 'return', '▁true', ';', '\n\t\t', '}', '\t\n\t\t', 'return', '▁false', ';', '\n\t', '}', '\n\n', '}', '\n']"~"packag interfacc import java awt import java awt event import common util import common def import java util date import moduli public class prenotazioni scadut extend frame prenotazion prenotazion dichiarazioni variabili panel panel panel label label list lista button annulla sceg grid bag layout gridbag new grid bag layout sub prenotazion padr new sub prenotazion lista prenotazioni pren frame figlio int call boolean first time true public prenotazioni scadut sub prenotazion lista prenotazioni super prenotazioni scadenza padr pren setup panel init pack void setup panel set font configurazion sistema font base creo dei pulsanti disabilito due annulla new button fine sceg new button visualizza creo etichett label new label elenco dell prenotazioni non conferm label set font configurazion sistema font titolo creo pannello basso con due pulsanti panel new panel panel set layout gridbag util constrain panel annulla grid bag constraint none grid bag constraint center util constrain panel sceg grid bag constraint none grid bag constraint center creo pannello con lista dei risultati della ricerca lista new list fals panel new panel panel set layout gridbag util constrain panel label grid bag constraint none grid bag constraint west util constrain panel lista grid bag constraint grid bag constraint center attacco pannelli frame set layout gridbag util constrain panel3 grid bag constraint horizont grid bag constraint west util constrain panel2 grid bag constraint horizont grid bag constraint west pack (); public void init lista get item count lista remov (); int l_pren length (); ++) lista add item l_pren get prenotazion )). string ()); lista add action listen new action listen public void action perform action event prenotazion l_pren get prenotazion lista get select index ())[ start controlla pren prenotazion }); sceg add action listen new action listen public void action perform action event select ()) prenotazion l_pren get prenotazion lista get select index ())[ start controlla pren prenotazion }); annulla add action listen new action listen public void action perform action event dispos (); sub prenotazion ric_stanza null sub prenotazion ric_stanza null padr set enabl true }); void start controlla pren prenotazion pren set enabl fals stanza stanza principal read stanza pren get num stanza ()); controlla prenotazion ctrl new controlla prenotazion pren stanza ctrl set visibl true ctrl padr boolean select frame msg lista get select index msg new avviso dialog selezionar una prenotazion dalla lista ripremer tasto ""); return true return fals"
71~../dvc-ds4se/se-benchmarking/traceability/datasets/formatted/semeru_format/Albergate_semeru_format/source_code/CancellaCommissioni.java~CancellaCommissioni.java~"package interfacce;
import java.awt.*;
import java.awt.event.*;
import common.utility.*;
import common.def.*;
import moduli.*;
import moduli.Commissionamento;

public class CancellaCommissioni extends MascheraCommissioni
{
	Commissionamento commissione;
   	
   	public CancellaCommissioni()
   	{
      	super("""","""",""Cancella dati delle commissioni"",""Cancella"", 3);
      	init();
   	}

 	public void init()
 	{     	
      	nome_agenzia.setEditable(true);
      	num_stanza.setEditable(false);
      	num_tel_agenzia.setEditable(false);
        inizio_comm.setEditable(false);
        fine_comm.setEditable(false);
        scadenza_comm.setEditable(false); 
       	num_stanza.setEditable(false);
       	Azione.setEnabled(false);
      	
		lista.addActionListener(new ActionListener()
      	{
         	public void actionPerformed(ActionEvent e)
         	{
         		commissione = L.getCommissionamento((lista.getSelectedIndexes())[0]+1);
				writeDatiComm(commissione);
				Azione.setEnabled(true);
				panel5.setVisible(false);
				pack();
         	}
      	});
   
		nome_agenzia.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				creaLista();
			}			      	
		});
		
		Cerca.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				creaLista();
			}			      	
		});

	   	Azione.addActionListener(new ActionListener()
   		{
    	    public void actionPerformed(ActionEvent e)
        	{
				startAzione();
			}
		});	
	}
	
	void startAzione()
	{
		Frame msg;
		
		if ( !errori() )
		{
			int j;
			if ( (j = (Principale.db).delCommissionamento(commissione.getIdCommissionamento())) == DataBase.OK)
			{	
				aggiornaDisp(commissione, Flag.DISPONIBILE);
				num_tel_agenzia.setEditable(false);
				scadenza_comm.setEditable(false);
				Azione.setEnabled(false);						
				cleanFields();
				nome_agenzia.setEditable(true);
			}
			else
				msg = new MessageDialog(this, ""Problemi con il database: ""+DataBase.strErrore(j));
		}
	}
}
"~src~"['▁pack', 'age', '▁inter', 'f', 'ac', 'ce', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁j', 'ava', '.', 'aw', 't', '.', 'ev', 'ent', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'ul', 'i', '.', 'com', 'mission', 'ament', 'o', ';', '\n\n', 'publ', 'ic', '▁class', '▁canc', 'ell', 'ac', 'om', 'mission', 'i', '▁ext', 'ends', '▁m', 'asc', 'her', 'ac', 'om', 'mission', 'i', '\n', '{', '\n\t', 'com', 'mission', 'ament', 'o', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'publ', 'ic', '▁canc', 'ell', 'ac', 'om', 'mission', 'i', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'sup', 'er', '(', '""', '"",', '""', '"",', '""', 'c', 'anc', 'ella', '▁d', 'ati', '▁del', 'le', '▁commission', 'i', '"",', '""', 'c', 'anc', 'ella', '"",', '▁3', ');', '\n', '▁', '\t', 'in', 'it', '(', ');', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁init', '(', ')', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁in', 'iz', 'io', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁fine', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '▁', '\n', '▁', '\t', 'n', 'um', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\n', '▁', '\t\n\t\t', 'list', 'a', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'com', 'mission', 'e', '▁=', '▁l', '.', 'get', 'com', 'mission', 'ament', 'o', '(', '(', 'list', 'a', '.', 'get', 'se', 'lect', 'ed', 'ind', 'ex', 'es', '(', ')', ')', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'com', 'mission', 'e', ');', '\n\t\t\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'tr', 'ue', ');', '\n\t\t\t\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'p', 'ack', '(', ');', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n\t\t', '{', '\n\t\t\t', 'publ', 'ic', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '(', ');', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n\t', '▁', '\t', 'az', 'ion', 'e', '.', 'ad', 'd', 'action', 'list', 'en', 'er', '(', 'new', '▁action', 'list', 'en', 'er', '(', ')', '\n', '▁', '\t\t', '{', '\n', '▁', '\t', '▁public', '▁vo', 'id', '▁action', 'per', 'form', 'ed', '(', 'action', 'ev', 'ent', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'st', 'art', 'az', 'ion', 'e', '(', ');', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'az', 'ion', 'e', '(', ')', '\n\t', '{', '\n\t\t', 'fr', 'ame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'er', 'ror', 'i', '(', ')', '▁)', '\n\t\t', '{', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'pr', 'inc', 'ip', 'ale', '.', 'd', 'b', ').', 'd', 'el', 'com', 'mission', 'ament', 'o', '(', 'com', 'mission', 'e', '.', 'get', 'id', 'com', 'mission', 'ament', 'o', '(', ')', ')', ')', '▁=', '=', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'ag', 'gi', 'orn', 'ad', 'is', 'p', '(', 'com', 'mission', 'e', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t\t\t', 'n', 'um', '_', 't', 'el', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'sc', 'ad', 'en', 'za', '_', 'com', 'm', '.', 'set', 'ed', 'itable', '(', 'f', 'al', 'se', ');', '\n\t\t\t\t', 'az', 'ion', 'e', '.', 'set', 'en', 'ab', 'led', '(', 'f', 'al', 'se', ');', '\t\t\t\t\t\t\n\t\t\t\t', 'cle', 'an', 'field', 's', '(', ');', '\n\t\t\t\t', 'n', 'ome', '_', 'agen', 'z', 'ia', '.', 'set', 'ed', 'itable', '(', 'tr', 'ue', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'd', 'at', 'ab', 'ase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', '*', ';', '\n', 'im', 'port', '▁java', '.', 'aw', 't', '.', 'event', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'ut', 'ility', '.', '*', ';', '\n', 'im', 'port', '▁common', '.', 'def', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', '*', ';', '\n', 'im', 'port', '▁mod', 'uli', '.', 'com', 'mission', 'amento', ';', '\n\n', 'public', '▁class', '▁canc', 'ell', 'acom', 'mission', 'i', '▁extends', '▁masc', 'her', 'acom', 'mission', 'i', '\n', '{', '\n\t', 'com', 'mission', 'amento', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁canc', 'ell', 'acom', 'mission', 'i', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', '"",', '""', '"",', '""', 'canc', 'ella', '▁d', 'ati', '▁delle', '▁commission', 'i', '"",', '""', 'canc', 'ella', '"",', '▁3', ');', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁in', 'izio', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁fine', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '▁', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'azione', '.', 'set', 'en', 'abled', '(', 'false', ');', '\n', '▁', '\t\n\t\t', 'list', 'a', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'com', 'mission', 'e', '▁=', '▁l', '.', 'get', 'com', 'mission', 'amento', '(', '(', 'list', 'a', '.', 'get', 'se', 'lected', 'index', 'es', '())', '[', '0', ']', '+', '1)', ';', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'com', 'mission', 'e', ');', '\n\t\t\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'true', ');', '\n\t\t\t\t', 'pan', 'el', '5.', 'set', 'vis', 'ible', '(', 'false', ');', '\n\t\t\t\t', 'pack', '();', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n\t', '▁', '\t', 'azione', '.', 'add', 'action', 'list', 'ener', '(', 'new', '▁action', 'list', 'ener', '()', '\n', '▁', '\t\t', '{', '\n', '▁', '\t', '▁public', '▁void', '▁action', 'per', 'formed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\t\n\t', '}', '\n\t\n\t', 'v', 'oid', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁ms', 'g', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princ', 'ip', 'ale', '.', 'db', ').', 'del', 'com', 'mission', 'amento', '(', 'com', 'mission', 'e', '.', 'get', 'id', 'com', 'mission', 'amento', '()', '))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'aggi', 'orn', 'ad', 'isp', '(', 'com', 'mission', 'e', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t\t\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'azione', '.', 'set', 'en', 'abled', '(', 'false', ');', '\t\t\t\t\t\t\n\t\t\t\t', 'cle', 'an', 'fields', '();', '\n\t\t\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t\t', 'el', 'se', '\n\t\t\t\t', 'ms', 'g', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'pro', 'ble', 'mi', '▁con', '▁il', '▁database', ':', '▁""', '+', 'dat', 'abase', '.', 'str', 'er', 'r', 'ore', '(', 'j', ')', ');', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~"['▁package', '▁inter', 'fac', 'ce', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.*', ';', '\n', 'import', '▁java', '.', 'aw', 't', '.', 'event', '.*', ';', '\n', 'import', '▁common', '.', 'utility', '.*', ';', '\n', 'import', '▁common', '.', 'def', '.*', ';', '\n', 'import', '▁mod', 'uli', '.*', ';', '\n', 'import', '▁mod', 'uli', '.', 'commission', 'amento', ';', '\n\n', 'public', '▁class', '▁canc', 'ell', 'acom', 'mission', 'i', '▁extends', '▁masc', 'her', 'acom', 'mission', 'i', '\n', '{', '\n\t', 'commission', 'amento', '▁commission', 'e', ';', '\n', '▁', '\t\n', '▁', '\t', 'public', '▁canc', 'ell', 'acom', 'mission', 'i', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'super', '(""', '"",""', '"",""', 'canc', 'ella', '▁d', 'ati', '▁delle', '▁commission', 'i', '"",""', 'canc', 'ella', '"",', '▁3', ');', '\n', '▁', '\t', 'init', '();', '\n', '▁', '\t', '}', '\n\n', '▁', '\t', 'public', '▁void', '▁init', '()', '\n', '▁', '\t', '{', '▁', '\t\n', '▁', '\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁in', 'izio', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁fine', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '▁', '\n', '▁', '\t', 'num', '_', 'stan', 'za', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n', '▁', '\t', 'azione', '.', 'set', 'enabled', '(', 'false', ');', '\n', '▁', '\t\n\t\t', 'lista', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t', '{', '\n', '▁', '\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n', '▁', '\t\t', 'commission', 'e', '▁=', '▁l', '.', 'get', 'commission', 'amento', '((', 'lista', '.', 'get', 'selected', 'index', 'es', '())', '[0]', '+', '1);', '\n\t\t\t\t', 'writ', 'ed', 'atic', 'omm', '(', 'commission', 'e', ');', '\n\t\t\t\t', 'azione', '.', 'set', 'enabled', '(', 'true', ');', '\n\t\t\t\t', 'panel', '5.', 'set', 'visible', '(', 'false', ');', '\n\t\t\t\t', 'pack', '();', '\n', '▁', '\t', '}', '\n', '▁', '\t', '}', ');', '\n', '▁', '\n\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\t\t\n\t\t', 'cer', 'ca', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n\t\t', '{', '\n\t\t\t', 'public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n\t\t\t', '{', '\n\t\t\t\t', 'c', 'real', 'ista', '();', '\n\t\t\t', '}', '\t\t\t', '▁', '\t\n\t\t', '}', ');', '\n\n\t', '▁', '\t', 'azione', '.', 'add', 'action', 'listener', '(', 'new', '▁action', 'listener', '()', '\n', '▁', '\t\t', '{', '\n', '▁', '\t', '▁public', '▁void', '▁action', 'performed', '(', 'action', 'event', '▁e', ')', '\n', '▁', '\t', '{', '\n\t\t\t\t', 'start', 'azione', '();', '\n\t\t\t', '}', '\n\t\t', '}', ');', '\t\n\t', '}', '\n\t\n\t', 'void', '▁start', 'azione', '()', '\n\t', '{', '\n\t\t', 'frame', '▁msg', ';', '\n\t\t\n\t\t', 'if', '▁(', '▁!', 'error', 'i', '()', '▁)', '\n\t\t', '{', '\n\t\t\t', 'int', '▁j', ';', '\n\t\t\t', 'if', '▁(', '▁(', 'j', '▁=', '▁(', 'princip', 'ale', '.', 'db', ').', 'del', 'commission', 'amento', '(', 'commission', 'e', '.', 'getid', 'commission', 'amento', '()))', '▁==', '▁database', '.', 'ok', ')', '\n\t\t\t', '{', '\t\n\t\t\t\t', 'aggi', 'orn', 'ad', 'isp', '(', 'commission', 'e', ',', '▁flag', '.', 'dis', 'pon', 'ib', 'ile', ');', '\n\t\t\t\t', 'num', '_', 'tel', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'sc', 'ad', 'enza', '_', 'comm', '.', 'set', 'ed', 'itable', '(', 'false', ');', '\n\t\t\t\t', 'azione', '.', 'set', 'enabled', '(', 'false', ');', '\t\t\t\t\t\t\n\t\t\t\t', 'clean', 'fields', '();', '\n\t\t\t\t', 'n', 'ome', '_', 'agen', 'zia', '.', 'set', 'ed', 'itable', '(', 'true', ');', '\n\t\t\t', '}', '\n\t\t\t', 'else', '\n\t\t\t\t', 'msg', '▁=', '▁new', '▁mess', 'aged', 'ial', 'og', '(', 'this', ',', '▁""', 'proble', 'mi', '▁con', '▁il', '▁database', ':', '▁""+', 'database', '.', 'str', 'er', 'r', 'ore', '(', 'j', '));', '\n\t\t', '}', '\n\t', '}', '\n', '}', '\n']"~packag interfacc import java awt import java awt event import common util import common def import moduli import moduli commissionamento public class cancella commissioni extend maschera commissioni commissionamento commission public cancella commissioni super cancella dati dell commissioni cancella init public void init nome agenzia set edit true num stanza set edit fals num tel agenzia set edit fals inizio comm set edit fals fine comm set edit fals scadenza comm set edit fals num stanza set edit fals azion set enabl fals lista add action listen new action listen public void action perform action event commission get commissionamento lista get select index write dati comm commission azion set enabl true panel set visibl fals pack nome agenzia add action listen new action listen public void action perform action event crea lista cerca add action listen new action listen public void action perform action event crea lista azion add action listen new action listen public void action perform action event start azion void start azion frame msg errori int principal del commissionamento commission get commissionamento data base aggiorna disp commission flag disponibil num tel agenzia set edit fals scadenza comm set edit fals azion set enabl fals clean field nome agenzia set edit true els msg new messag dialog problemi con databas data base str error
