# AUTOGENERATED! DO NOT EDIT! File to edit: dev/8.6_interpretability.prototypes_criticisms.ipynb (unless otherwise specified).

__all__ = ['reshape_vectors', 'Clusterizer', 'KMedoidsClusterizer']

# Cell

import numpy as np
import pandas as pd

from typing import Tuple, List, Optional, Any, Iterable
from abc import ABC, abstractmethod

from pathlib import Path
# ds4se
import ds4se
from ..utils.clusterization import *
from ..utils.visualization import *
from ..mgmnt.prep.files_mgmnt import load_np_vectors

# Cell

def reshape_vectors(vectors):
    result = []
    for v in vectors:
        result.append(v.reshape(500,1).T)
    return np.array(result)

# Cell

class Clusterizer(ABC):
    def __init__(self):
        pass

    @abstractmethod
    def perform_clusterization(self, data_vectors: np.ndarray, dims: Optional[int]=2):
        """
        Perform clusterization on a given dataset

        """
        pass

# Cell

class KMedoidsClusterizer(Clusterizer):
    def __init__(self):
        # TODO
        super().__init__()

    def perform_clusterization(self, data_vectors: np, dims: Optional[int]=2) -> Tuple:
        """
        Perform clusterization using k-medoids
        - First perform dimensionality reduction by means of PCA + t-SNE
        - Finds best k

        :param data_vectors:
        :param dims: Int. indicating the number of dimensions for
                     dim. reduction

        :return: Tuple (reduced data, clusters, medoid ids, k_medoids_instance (pyclustering obj.))
        """
        return perform_clusterize_kmedoids(data_vectors, dims)
