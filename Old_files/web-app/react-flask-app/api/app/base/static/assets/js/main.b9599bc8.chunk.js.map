{"version":3,"sources":["interfaces/InterfaceConsts.js","interfaces/ArtifactInterface.js","ArtifactNavigator/ArtifactPreviewCard.jsx","ArtifactNavigator/ArtifactBrowser.jsx","interfaces/TraceModel.js","interfaces/TraceabilityInterface.js","ArtifactNavigator/ArtifactDetails.jsx","ArtifactNavigator/ArtifactNavigator.jsx","App.js","serviceWorker.js","index.js"],"names":["ARTIFACTS_LOCATION","TM_FILE_LOCATION","artifactContentCache","req","src","tc","getArtifactContent","artifactClass","id","a","fileUrl","fetch","mode","file","text","artifactContent","getAllArtifactInfos","Object","values","artifactMetadataJSON","ArtifactPreviewCard","state","hovered","selected","loading","content","this","props","artifactInfo","type","then","setState","style","maxWidth","display","flexGrow","backgroundColor","padding","borderRadius","borderWidth","borderColor","boxShadow","onMouseEnter","onMouseLeave","onClick","select","flexDirection","margin","color","overflow","React","Component","ArtifactBrowser","artifactInfos","currentArtifactClass","artifactCardRefs","currentlySelectedArtifactIndex","map","createRef","forEach","ref","current","reloadContent","deselect","index","cardHeight","className","height","deselectCurrentlySelectedArtifact","onArtifactSelect","onChange","event","onArtifactDeselect","currentTarget","value","fetchArtifacts","large","leftIcon","getArtifactPreviewCards","TraceModel","model","__model","__sourceNames","Set","__targetNames","keys","sourceName","add","targetName","artifactName","has","getTracesForSource","getTracesForTarget","Error","artifactType","artifactId","traceValue","traces","push","length","tmFileURL","tmFile","fileContent","split","line","lineTokens","parseFloat","traceModel","loadTraceModel","getInstanceFromFile","getTracesForArtifact","ArtifactDetails","traceLinks","codeRef","Prism","highlightElement","getTraceLinks","traceLinksList","sort","b","numRows","columnWidths","name","cellRenderer","linkStatus","justifyContent","icon","getArtifactClassName","getArtifactTitle","whiteSpace","getArtifactComponent","getTraceLinksTable","getDetailsComponent","getNoSelectionComponent","ArtifactNavigator","detailsViewRef","loadArtifact","unloadArtifact","loadSelectedArtifact","require","App","alignItems","marginTop","active","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.b9599bc8.chunk.js","sourcesContent":["export const DATA_LOCATION = 'static/assets/dummy_data';\nexport const PROJECT_KEY = 'libest';\nexport const TM_FILENAME = 'vsm.tm'\n\nexport const ARTIFACTS_LOCATION = `${DATA_LOCATION}/${PROJECT_KEY}/artifacts`;\nexport const TM_FILE_LOCATION = `${DATA_LOCATION}/${PROJECT_KEY}/trace_models/${TM_FILENAME}`;\n\n","import {ARTIFACTS_LOCATION} from './InterfaceConsts';\nimport artifactMetadataJSON from './artifact_infos.json'\n\nlet artifactContentCache = {\n\treq: {},\n\tsrc: {},\n\ttc: {},\n};\n\n\nexport async function getArtifactContent(artifactClass, id) {\n\tif (!(id in artifactContentCache[artifactClass])) {\n\t\tconst fileUrl = `${ARTIFACTS_LOCATION}/${artifactClass}/${id}`;\n\t\tconst file = await fetch(fileUrl, {mode: 'no-cors'});\n\t\tconst artifactContent = await file.text();\n\t\tartifactContentCache[artifactClass][id] = artifactContent;\n\t}\n\treturn artifactContentCache[artifactClass][id];\n}\n\nexport function getArtifactInfo(artifactClass, id) {\n\treturn artifactMetadataJSON[artifactClass][id];\n}\n\nexport function getAllArtifactInfos(artifactClass) {\n\treturn Object.values(artifactMetadataJSON[artifactClass]);\n}\n\nexport function getNumberOfArtifacts(artifactClass) {\n\treturn Object.keys(artifactMetadataJSON[artifactClass]).length\n}\n\nexport function getArtifactClassName(artifactClass) {\n\tswitch(artifactClass) {\n\t\tcase 'req': return \"Requirement\";\n\t\tcase 'src': return \"Source Code\";\n\t\tcase 'tc': return \"Test Case\";\n\t\tdefault: return \"Unknown\";\n\t}\n}","import React from 'react';\nimport { getArtifactContent } from '../interfaces/ArtifactInterface';\n\nexport default class ArtifactPreviewCard extends React.Component {\n\n\tstate = {\n\t\thovered: false,\n\t\tselected: false,\n\t\tloading: true,\n\t\tcontent: null,\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.artifactInfo.type === 'req') {\n\t\t\tgetArtifactContent(this.props.artifactInfo.type, this.props.artifactInfo.id).then((content) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tcontent: content\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\treloadContent() {\n\t\tthis.setState({loading: true});\n\t\tgetArtifactContent(this.props.artifactInfo.type, this.props.artifactInfo.id).then((content) => {\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\tcontent: content\n\t\t\t})\n\t\t});\n\t}\n\n\tonMouseEnter() {\n\t\tthis.setState({hovered: true});\n\t}\n\n\tonMouseLeave() {\n\t\tthis.setState({hovered: false});\n\t}\n\n\tselect() {\n\t\tthis.setState({selected: true});\n\t}\n\n\tdeselect() {\n\t\tthis.setState({selected: false})\n\t}\n\n\ttoggleSelect() {\n\t\tthis.setState((state) => {\n\t\t\treturn {\n\t\t\t\tselected: !state.selected\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div \n\t\t\tstyle={{\n\t\t\t\tmaxWidth: '100%',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tbackgroundColor: this.state.selected ? 'royalblue' : 'white',\n\t\t\t\tpadding: 10,\n\t\t\t\tborderRadius: 10,\n\t\t\t\tborderWidth: 1,\n\t\t\t\tborderColor: 'black',\n\t\t\t\tboxShadow: '0px 0px 10px ' + (this.state.hovered ? 'royalblue' : 'lightgray'), \n\t\t\t}} \n\t\t\tonMouseEnter={() => {this.onMouseEnter()}}\n\t\t\tonMouseLeave={() => {this.onMouseLeave()}}\n\t\t\tonClick={() => {\n\t\t\t\tthis.select();\n\t\t\t\tthis.props.onClick();\n\t\t\t}}\n\t\t\t>\n\t\t\t\t<div style={{flexGrow: 1, display: 'flex', flexDirection: 'column', maxWidth: 'inherit'}}>\n\t\t\t\t\t<h3 style={{padding: 0, margin: 0, color: this.state.selected ? 'white' : 'black'}}>\n\t\t\t\t\t\t{this.props.artifactInfo.id}\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t{this.props.artifactInfo.type === 'req' ?\n\t\t\t\t\t<div style={{flexGrow: 1, overflow: 'hidden'}}>\n\t\t\t\t\t\t<p style={{padding: 0, margin: 0, color: this.state.selected ? 'white' : 'black'}}>\n\t\t\t\t\t\t\t{this.state.loading ? '' : this.state.content}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t: null}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\n}","import './ArtifactBrowser.css';\n\nimport {HTMLSelect, InputGroup} from '@blueprintjs/core';\n\nimport ArtifactPreviewCard from './ArtifactPreviewCard';\nimport React from 'react';\nimport { getAllArtifactInfos } from '../interfaces/ArtifactInterface';\n\nexport default class ArtifactBrowser extends React.Component {\n\n\tstate = {\n\t\tartifactInfos: null,\n\t}\n\n\tcurrentArtifactClass = 'req';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.artifactCardRefs = [];\n\t\tthis.currentlySelectedArtifactIndex = -1;\n\n\t\tconst artifactInfos = getAllArtifactInfos(this.currentArtifactClass);\n\t\tthis.state = {\n\t\t\tartifactInfos: artifactInfos,\n\t\t};\n\n\t\tthis.artifactCardRefs = artifactInfos.map((artifactInfo) => React.createRef());\n\t}\n\n\n\n\tfetchArtifacts(artifactClass) {\n\t\tconst artifactInfos = getAllArtifactInfos(artifactClass);\n\n\t\tthis.artifactCardRefs = artifactInfos.map((artifactInfo) => React.createRef());\n\t\tthis.setState({\n\t\t\tartifactInfos: artifactInfos\n\t\t}, () => {\n\t\t\tthis.artifactCardRefs.forEach((ref) => {\n\t\t\t\tif (ref.current) {\n\t\t\t\t\tref.current.reloadContent()\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t}\n\n\tdeselectCurrentlySelectedArtifact() {\n\t\tif (this.currentlySelectedArtifactIndex !== -1) {\n\t\t\tthis.artifactCardRefs[this.currentlySelectedArtifactIndex].current.deselect();\n\t\t}\n\t\tthis.currentlySelectedArtifactIndex = -1;\n\t}\n\n\tgetArtifactPreviewCards() {\n\t\treturn this.state.artifactInfos.map((artifactInfo, index) => {\n\t\t\tconst cardHeight = artifactInfo.type === 'req' ? '150px' : '65px';\n\t\t\treturn (\n\t\t\t\t<div className=\"artifactPreviewContainer\" style={{height: cardHeight,}}>\n\t\t\t\t\t<ArtifactPreviewCard \n\t\t\t\t\t\tref={this.artifactCardRefs[index]} \n\t\t\t\t\t\tartifactInfo={artifactInfo} \n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.deselectCurrentlySelectedArtifact()\n\t\t\t\t\t\t\tthis.currentlySelectedArtifactIndex = index;\n\t\t\t\t\t\t\tthis.props.onArtifactSelect(artifactInfo, this.currentArtifactClass);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"artifactBrowserContainer\">\n\t\t\t\t<div className=\"artifactBrowser\">\n\t\t\t\t\t<div className=\"artifactClassSelectorContainer\">\n\t\t\t\t\t\t<HTMLSelect onChange={(event) => {\n\t\t\t\t\t\t\tthis.deselectCurrentlySelectedArtifact();\n\t\t\t\t\t\t\tthis.props.onArtifactDeselect();\n\t\t\t\t\t\t\tthis.currentArtifactClass = event.currentTarget.value;\n\t\t\t\t\t\t\tthis.fetchArtifacts(event.currentTarget.value);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<option value=\"req\">Requirements</option>\n\t\t\t\t\t\t\t<option value=\"src\">Source Code</option>\n\t\t\t\t\t\t</HTMLSelect>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"artifactFiltersContainer\">\n\t\t\t\t\t\t<InputGroup large className=\"artifactFilters\" leftIcon={'search'}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"artifactPreviewsContainer\">\n\t\t\t\t\t\t{this.getArtifactPreviewCards()}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{height: 20}}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","\nexport default class TraceModel {\n\n\tconstructor(model) {\n\t\tthis.__model = model\n\t\tthis.__sourceNames = new Set();\n\t\tthis.__targetNames = new Set();\n\n\t\tObject.keys(this.__model).forEach((sourceName) => {\n\t\t\tthis.__sourceNames.add(sourceName)\n\t\t\tObject.keys(this.__model[sourceName]).forEach((targetName) => {\n\t\t\t\tthis.__targetNames.add(targetName);\n\t\t\t})\n\t\t})\n\t}\n\n\tgetTracesForArtifact(artifactName) {\n\t\tif (this.__sourceNames.has(artifactName)) {\n\t\t\treturn this.getTracesForSource(artifactName);\n\t\t}\n\n\t\tif (this.__targetNames.has(artifactName)) {\n\t\t\treturn this.getTracesForTarget(artifactName);\n\t\t}\n\n\t\tthrow new Error(\"Invalid artifact name\");\n\t}\n\n\tgetTracesForSource(sourceName) {\n\t\tif (!this.__sourceNames.has(sourceName)) {\n\t\t\tthrow new Error(\"Invalid source name\");\n\t\t}\n\n\t\treturn Object.keys(this.__model[sourceName]).map((targetName) => {\n\t\t\treturn {\n\t\t\t\tartifactType: \"src\",\n\t\t\t\tartifactId: targetName,\n\t\t\t\ttraceValue: this.__model[sourceName][targetName],\n\t\t\t\t\n\t\t\t}\n\t\t})\n\t}\n\n\tgetTracesForTarget(targetName) {\n\t\tconst traces = [];\n\t\tthis.__sourceNames.forEach((sourceName) => {\n\t\t\tconst value = this.__model[sourceName][targetName];\n\n\t\t\tif (value) {\n\t\t\t\ttraces.push({\n\t\t\t\t\tartifactType: \"req\",\n\t\t\t\t\tartifactId: sourceName,\n\t\t\t\t\ttraceValue: value,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (traces.length === 0) {\n\t\t\tthrow new Error(\"Invalid target name\");\n\t\t}\n\n\t\treturn traces;\n\t}\n\n\tstatic async getInstanceFromFile(tmFileURL) {\n\t\tconst tmFile = await fetch(tmFileURL, {mode: 'no-cors'});\n\t\tconst fileContent = await tmFile.text();\n\n\t\tconst model = {};\n\t\tconst lines = fileContent.split(/\\r?\\n/);\n\n\t\tlines.forEach((line) => {\n\t\t\tconst lineTokens = line.split(' ');\n\t\t\tif (lineTokens[0] === '#') {\n\t\t\t\t// TODO: Parse tm metadata\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sourceName = lineTokens[0];\n\t\t\tconst targetName = lineTokens[1];\n\t\t\tconst traceValue = parseFloat(lineTokens[2]);\n\n\t\t\tif (!(sourceName in model)) {\n\t\t\t\tmodel[sourceName] = {};\n\t\t\t}\n\n\t\t\tmodel[sourceName][targetName] = traceValue;\n\t\t});\n\n\t\treturn new TraceModel(model);\n\t}\n}","import {TM_FILE_LOCATION} from './InterfaceConsts';\nimport TraceModel from './TraceModel';\n\nlet traceModel = null;\n\nasync function loadTraceModel() {\n\ttraceModel = await TraceModel.getInstanceFromFile(TM_FILE_LOCATION);\n}\n\nexport async function getTraceLinks(artifactName) {\n\tif (!traceModel) {\n\t\tawait loadTraceModel();\n\t}\n\n\treturn traceModel.getTracesForArtifact(artifactName);\n\t\n}\n\nexport function getLinkThreshold() {\n\treturn 0.3;\n}","import './ArtifactDetails.css';\nimport 'prismjs/themes/prism.css';\n\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\nimport { getArtifactClassName, getArtifactContent, } from '../interfaces/ArtifactInterface';\nimport { getLinkThreshold, getTraceLinks } from '../interfaces/TraceabilityInterface';\n\nimport { Icon } from '@blueprintjs/core';\nimport Prism from 'prismjs';\nimport React from 'react';\n\nexport default class ArtifactDetails extends React.Component {\n\n\tstate = {\n\t\tartifactInfo: null,\n\t\tartifactContent: null,\n\t\ttraceLinks: null,\n\t}\n\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.codeRef = React.createRef();\n\t}\n\n\tloadArtifact(artifactInfo) {\n\n\t\tthis.setState({\n\t\t\tartifactContent: null,\n\t\t\tartifactInfo: artifactInfo,\n\t\t}, () => {\n\t\t\tgetArtifactContent(artifactInfo.type, artifactInfo.id).then((artifactContent) => {\n\t\t\t\tthis.setState({artifactContent: artifactContent}, () => {\n\t\t\t\t\tif (artifactInfo.type !== \"req\") {\n\t\t\t\t\t\tPrism.highlightElement(this.codeRef.current);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tgetTraceLinks(artifactInfo.id).then((traceLinks) => {\n\t\t\t\tthis.setState({traceLinks: traceLinks});\n\t\t\t})\n\t\t});\n\t}\n\n\tunloadArtifact() {\n\t\tthis.setState({artifactInfo: null, artifactContent: null});\n\t}\n\n\tgetArtifactTitle() {\n\t\treturn this.state.artifactInfo ? this.state.artifactInfo.id : '';\n\t}\n\n\tgetArtifactComponent() {\n\t\tconst content = this.state.artifactContent ? this.state.artifactContent : '';\n\t\tif (this.state.artifactInfo.type === 'req') {\n\t\t\treturn content;\n\t\t} else {\n\t\t\treturn <code ref={this.codeRef} className=\"language-c\" style={{margin: 0}}>\n\t\t\t\t{content}\n\t\t\t</code>\n\t\t}\n\t\t\n\t}\n\n\tgetNoSelectionComponent() {\n\t\treturn (\n\t\t\t<div className=\"noArtifactSelectedContainer\">\n\t\t\t\t<p>Please select a source artifact</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tgetTraceLinksTable() {\n\t\tconst traceLinksList = this.state.traceLinks;\n\t\tif (!traceLinksList) {\n\t\t\treturn null;\n\t\t}\n\n\t\ttraceLinksList.sort((a, b) => {\n\t\t\treturn b.traceValue - a.traceValue;\n\t\t});\n\t\tconst valueCellRenderer = (index) => {\n\t\t\treturn <Cell>{traceLinksList[index].traceValue}</Cell>\n\t\t}\n\n\t\tconst targetNameCellRenderer = (index) => {\n\t\t\treturn <Cell>{traceLinksList[index].artifactId}</Cell>\n\t\t}\n\n\t\tconst linkThreshold = getLinkThreshold();\n\t\tconst linkStatusCellRenderer = (index) => {\n\t\t\tconst linkStatus = traceLinksList[index].traceValue > linkThreshold;\n\t\t\treturn <Cell style={{display: 'flex', justifyContent: 'center'}}>\n\t\t\t\t<Icon icon={linkStatus ? 'link' : 'delete'} color={linkStatus ? 'green' : 'red'}/>\n\t\t\t</Cell>\n\t\t}\n\n\t\tconst artifactTypeCellRenderer = (index) => {\n\t\t\treturn <Cell>\n\t\t\t\t{getArtifactClassName(traceLinksList[index].artifactType)}\n\t\t\t</Cell>\n\t\t}\n\n\t\treturn (\n\t\t<Table \n\t\t\tnumRows={traceLinksList.length}\n\t\t\tcolumnWidths={[80, null, null, null,]}\n\t\t>\n\t\t\t<Column name=\"Link Status\" cellRenderer={linkStatusCellRenderer} />\n\t\t\t<Column name=\"Value\" cellRenderer={valueCellRenderer} />\n\t\t\t<Column name=\"Filename\" cellRenderer={targetNameCellRenderer} />\n\t\t\t<Column name=\"Type\" cellRenderer={artifactTypeCellRenderer} />\n\t\t</Table>\n\t\t);\n\t}\n\n\tgetDetailsComponent() {\n\t\treturn (\n\t\t\t<div className=\"artifactSelectedContainer\">\n\t\t\t\t<div style={{padding: 15}}>\n\t\t\t\t\t\t<h1 style={{margin: 0,}}>{this.getArtifactTitle()}</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"artifactContentContainer\">\n\n\t\t\t\t\t<pre className=\"artifactContent\" \n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twhiteSpace: this.state.artifactInfo.type === 'req' ? 'pre-wrap' : null,\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{this.getArtifactComponent()}\n\t\t\t\t\t</pre>\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"traceLinksTableContainer\">\n\t\t\t\t\t<h2 style={{margin: 0}}>Trace Links</h2>\n\t\t\t\t\t{this.getTraceLinksTable()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"artifactDetailsContainer\">\n\t\t\t\t<div className=\"artifactDetails\">\n\t\t\t\t\t{this.state.artifactInfo ? this.getDetailsComponent() : this.getNoSelectionComponent()}\n\t\t\t\t\t<div style={{height: 20}}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import './ArtifactNavigator.css';\n\nimport ArtifactBrowser from './ArtifactBrowser';\nimport ArtifactDetails from './ArtifactDetails';\nimport React from 'react';\n\nexport default class ArtifactNavigator extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.detailsViewRef = React.createRef();\n\t}\n\n\tloadSelectedArtifact(artifactInfo, artifactClass) {\n\t\tthis.detailsViewRef.current.loadArtifact(artifactInfo, artifactClass);\n\t}\n\n\tunloadArtifact() {\n\t\tthis.detailsViewRef.current.unloadArtifact();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<div className=\"window\">\n\t\t\t<ArtifactBrowser \n\t\t\t\tonArtifactSelect={(artifactInfo, artifactClass) => {\n\t\t\t\t\tthis.loadSelectedArtifact(artifactInfo, artifactClass);\n\t\t\t\t}}\n\t\t\t\tonArtifactDeselect={() => {\n\t\t\t\t\tthis.unloadArtifact();\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<ArtifactDetails ref={this.detailsViewRef}/>\n\t\t</div>\n\t\t);\n\t}\n}","import './App.css';\n\nimport { Button, ButtonGroup } from '@blueprintjs/core';\n\nimport ArtifactNavigator from './ArtifactNavigator/ArtifactNavigator';\nimport React from 'react';\n\nrequire('prismjs/components/prism-c');\nrequire('@blueprintjs/core/lib/css/blueprint.css');\nrequire('@blueprintjs/table/lib/css/table.css');\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\" style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n\t\t\t<ButtonGroup large style={{marginTop: 15}}>\n\t\t\t\t<Button active>Traceability</Button>\n\t\t\t\t<Button>Analysis</Button>\n\t\t\t\t<Button>Link Browser</Button>\n\t\t\t</ButtonGroup>\n\t\t\t<ArtifactNavigator />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}